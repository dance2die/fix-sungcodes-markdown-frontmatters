[
  {
    "title": "PassportJS – Failed to find request token in session",
    "slug": "passportjs--failed-to-find-request-token-in-session-1bm0-temp-slug-1938322",
    "created_at": "2018-01-29T22:30:22.746Z",
    "main_image": null,
    "description": "\n\n...",
    "published": false,
    "published_at": null,
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: PassportJS – Failed to find request token in session\r\npublished: false\r\ncanonical_url: https://www.slightedgecoder.com/2018/01/29/passportjs-failed-find-request-token-session/\r\ndescription: \r\ntags: \r\n---\r\n\r\n\r\n\r\n",
    "canonical_url": "https://www.slightedgecoder.com/2018/01/29/passportjs-failed-find-request-token-session/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": false,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": null,
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "",
    "path": "/dance2die/passportjs--failed-to-find-request-token-in-session-1bm0-temp-slug-1938322",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-01-01T05:00:00.000Z"
  },
  {
    "title": "ASP.NET Core 2 React.js Template with ES6 (not TypeScript)",
    "slug": "aspnet-core-2-reactjs-template-with-es6-not-typescript-f71",
    "created_at": "2018-04-03T00:59:15.594Z",
    "main_image": null,
    "description": "Sick of TypeScript ASP.NET Core 2 React.js template? Say no more.",
    "published": true,
    "published_at": "2018-04-03T00:59:34.160Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI created a Nuget package for \u003ccode\u003edotnet new\u003c/code\u003e template.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"why\" href=\"#why\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Why?\n\u003c/h2\u003e\n\n\u003cp\u003eI don't know why but \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/core/tools/?tabs=netcore2x\"\u003edotnet CLI\u003c/a\u003e has SPA templates for ASP.NET Core 2 React.js that creates a page with TypeScript.\u003c/p\u003e\n\n\u003cp\u003eI see many benefits with TypeScript coming from C# background.\u003cbr\u003e\nBut sometimes it's just an overkill.\u003cbr\u003e\nRefer to these posts (⚠️ warning. Long threads!)\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://discuss.reactjs.org/t/if-typescript-is-so-great-how-come-all-notable-reactjs-projects-use-babel/4887\"\u003eIf TypeScript is so great, how come all notable ReactJS projects use Babel?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.reddit.com/r/reactjs/comments/7yxecm/why_isnt_typescript_used_more_in_the_react/\"\u003eWhy isn't typescript used more in the react community?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAs a newcomer to ASP.NET Core, I just didn't want to deal with TypeScript so I created a new template, \u003ca href=\"https://www.nuget.org/packages/ReactES6.Web/\"\u003eASP.NET Core with React.js with ES6\u003c/a\u003e (with short name \u003ccode\u003ereactes6\u003c/code\u003e).\u003c/p\u003e\n\n\u003cp\u003eI will show you how to install and run the nuget package.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"tldr\" href=\"#tldr\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  TL;DR\n\u003c/h2\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003edotnet new -i ReactES6.Web\u003cbr\u003e\ndotnet new reactes6 -n NewSite.Web\u003cbr\u003e\ncd NewSite.Web\u003cbr\u003e\ndotnet restore \u0026amp;\u0026amp; npm install\u003cbr\u003e\ndotnet run\u003cbr\u003e\ncode .\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"how-to-install-amp-run\" href=\"#how-to-install-amp-run\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  How to Install \u0026amp; Run\n\u003c/h2\u003e\n\n\u003cp\u003eFrom command line,\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003edotnet new \u003cspan class=\"nt\"\u003e-i\u003c/span\u003e ReactES6.Web\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eAnd you will see a new template named \u003ccode\u003eASP.NET Core with React.js with ES6\u003c/code\u003e (with shortname \u003cem\u003ereactes6\u003c/em\u003e) would appear.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003edance2die@CC C:\u003cspan class=\"se\"\u003e\\m\u003c/span\u003eisc\u003cspan class=\"se\"\u003e\\s\u003c/span\u003eources\u003cspan class=\"se\"\u003e\\t\u003c/span\u003ehrowaway\u003cspan class=\"se\"\u003e\\c\u003c/span\u003eoretemplates\u003cspan class=\"se\"\u003e\\f\u003c/span\u003eromnuget                                                                            \n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e dotnet new \u003cspan class=\"nt\"\u003e-i\u003c/span\u003e ReactES6.Web                                                                                                              \nGetting ready...                                                                                                                          \n  ...\n\nTemplates                                         Short Name       Language          Tags                                                 \n\u003cspan class=\"nt\"\u003e--------------------------------------------------------------------------------------------------------\u003c/span\u003e                                  \nConsole Application                               console          \u003cspan class=\"o\"\u003e[\u003c/span\u003eC#], F#, VB      Common/Console                                       \n...      \nASP.NET Core with React.js with ES6               reactes6         \u003cspan class=\"o\"\u003e[\u003c/span\u003eC#]              Web/MVC/SPA                                          \n...                                  \nASP.NET Core with React.js                        react            \u003cspan class=\"o\"\u003e[\u003c/span\u003eC#]              Web/MVC/SPA                                          \nASP.NET Core with React.js and Redux              reactredux       \u003cspan class=\"o\"\u003e[\u003c/span\u003eC#]              Web/MVC/SPA                                          \n...                          \nMVC ViewStart                                     viewstart                          Web/ASP.NET\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eCreate a new website using the template \u003ccode\u003ereactes6\u003c/code\u003e\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003edance2die@CC C:\u003cspan class=\"se\"\u003e\\m\u003c/span\u003eisc\u003cspan class=\"se\"\u003e\\s\u003c/span\u003eources\u003cspan class=\"se\"\u003e\\t\u003c/span\u003ehrowaway\u003cspan class=\"se\"\u003e\\c\u003c/span\u003eoretemplates\u003cspan class=\"se\"\u003e\\f\u003c/span\u003eromnuget\n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e dotnet new reactes6 \u003cspan class=\"nt\"\u003e-n\u003c/span\u003e NewSite.Web\nThe template \u003cspan class=\"s2\"\u003e\"ASP.NET Core with React.js with ES6\"\u003c/span\u003e was created successfully.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eGo to the new website directory\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"nb\"\u003ecd \u003c/span\u003eNewSite.Web\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eThen restore .NET Core packages and install NPM packages\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003edance2die@CC C:\u003cspan class=\"se\"\u003e\\m\u003c/span\u003eisc\u003cspan class=\"se\"\u003e\\s\u003c/span\u003eources\u003cspan class=\"se\"\u003e\\t\u003c/span\u003ehrowaway\u003cspan class=\"se\"\u003e\\c\u003c/span\u003eoretemplates\u003cspan class=\"se\"\u003e\\f\u003c/span\u003eromnuget\u003cspan class=\"se\"\u003e\\N\u003c/span\u003eewSite.Web\n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e dotnet restore \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e npm \u003cspan class=\"nb\"\u003einstall\n  \u003c/span\u003eRestoring packages \u003cspan class=\"k\"\u003efor \u003c/span\u003eC:\u003cspan class=\"se\"\u003e\\m\u003c/span\u003eisc\u003cspan class=\"se\"\u003e\\s\u003c/span\u003eources\u003cspan class=\"se\"\u003e\\t\u003c/span\u003ehrowaway\u003cspan class=\"se\"\u003e\\c\u003c/span\u003eoretemplates\u003cspan class=\"se\"\u003e\\f\u003c/span\u003eromnuget\u003cspan class=\"se\"\u003e\\N\u003c/span\u003eewSite.Web\u003cspan class=\"se\"\u003e\\N\u003c/span\u003eewSite.Web.csproj...\n  Restore completed \u003cspan class=\"k\"\u003ein \u003c/span\u003e140.27 ms \u003cspan class=\"k\"\u003efor \u003c/span\u003eC:\u003cspan class=\"se\"\u003e\\m\u003c/span\u003eisc\u003cspan class=\"se\"\u003e\\s\u003c/span\u003eources\u003cspan class=\"se\"\u003e\\t\u003c/span\u003ehrowaway\u003cspan class=\"se\"\u003e\\c\u003c/span\u003eoretemplates\u003cspan class=\"se\"\u003e\\f\u003c/span\u003eromnuget\u003cspan class=\"se\"\u003e\\N\u003c/span\u003eewSite.Web\u003cspan class=\"se\"\u003e\\N\u003c/span\u003eewSite.Web.csproj.\n  Generating MSBuild file C:\u003cspan class=\"se\"\u003e\\m\u003c/span\u003eisc\u003cspan class=\"se\"\u003e\\s\u003c/span\u003eources\u003cspan class=\"se\"\u003e\\t\u003c/span\u003ehrowaway\u003cspan class=\"se\"\u003e\\c\u003c/span\u003eoretemplates\u003cspan class=\"se\"\u003e\\f\u003c/span\u003eromnuget\u003cspan class=\"se\"\u003e\\N\u003c/span\u003eewSite.Web\u003cspan class=\"se\"\u003e\\o\u003c/span\u003ebj\u003cspan class=\"se\"\u003e\\N\u003c/span\u003eewSite.Web.csproj.nuget.g.props.\n  Generating MSBuild file C:\u003cspan class=\"se\"\u003e\\m\u003c/span\u003eisc\u003cspan class=\"se\"\u003e\\s\u003c/span\u003eources\u003cspan class=\"se\"\u003e\\t\u003c/span\u003ehrowaway\u003cspan class=\"se\"\u003e\\c\u003c/span\u003eoretemplates\u003cspan class=\"se\"\u003e\\f\u003c/span\u003eromnuget\u003cspan class=\"se\"\u003e\\N\u003c/span\u003eewSite.Web\u003cspan class=\"se\"\u003e\\o\u003c/span\u003ebj\u003cspan class=\"se\"\u003e\\N\u003c/span\u003eewSite.Web.csproj.nuget.g.targets.\n  Restore completed \u003cspan class=\"k\"\u003ein \u003c/span\u003e6.11 sec \u003cspan class=\"k\"\u003efor \u003c/span\u003eC:\u003cspan class=\"se\"\u003e\\m\u003c/span\u003eisc\u003cspan class=\"se\"\u003e\\s\u003c/span\u003eources\u003cspan class=\"se\"\u003e\\t\u003c/span\u003ehrowaway\u003cspan class=\"se\"\u003e\\c\u003c/span\u003eoretemplates\u003cspan class=\"se\"\u003e\\f\u003c/span\u003eromnuget\u003cspan class=\"se\"\u003e\\N\u003c/span\u003eewSite.Web\u003cspan class=\"se\"\u003e\\N\u003c/span\u003eewSite.Web.csproj.\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.1.3 \u003cspan class=\"o\"\u003e(\u003c/span\u003enode_modules\u003cspan class=\"se\"\u003e\\f\u003c/span\u003esevents\u003cspan class=\"o\"\u003e)\u003c/span\u003e:\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform \u003cspan class=\"k\"\u003efor \u003c/span\u003efsevents@1.1.3: wanted \u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"os\"\u003c/span\u003e:\u003cspan class=\"s2\"\u003e\"darwin\"\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\"arch\"\u003c/span\u003e:\u003cspan class=\"s2\"\u003e\"any\"\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003ecurrent: \u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"os\"\u003c/span\u003e:\u003cspan class=\"s2\"\u003e\"win32\"\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\"arch\"\u003c/span\u003e:\u003cspan class=\"s2\"\u003e\"x64\"\u003c/span\u003e\u003cspan class=\"o\"\u003e})\u003c/span\u003e\n\nadded 611 packages from 525 contributors \u003cspan class=\"k\"\u003ein \u003c/span\u003e95.097s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eStart the project with \u003ccode\u003edotnet run\u003c/code\u003e.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003edance2die@CC C:\u003cspan class=\"se\"\u003e\\m\u003c/span\u003eisc\u003cspan class=\"se\"\u003e\\s\u003c/span\u003eources\u003cspan class=\"se\"\u003e\\t\u003c/span\u003ehrowaway\u003cspan class=\"se\"\u003e\\c\u003c/span\u003eoretemplates\u003cspan class=\"se\"\u003e\\f\u003c/span\u003eromnuget\u003cspan class=\"se\"\u003e\\N\u003c/span\u003eewSite.Web\n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e dotnet run\nUsing launch settings from C:\u003cspan class=\"se\"\u003e\\m\u003c/span\u003eisc\u003cspan class=\"se\"\u003e\\s\u003c/span\u003eources\u003cspan class=\"se\"\u003e\\t\u003c/span\u003ehrowaway\u003cspan class=\"se\"\u003e\\c\u003c/span\u003eoretemplates\u003cspan class=\"se\"\u003e\\f\u003c/span\u003eromnuget\u003cspan class=\"se\"\u003e\\N\u003c/span\u003eewSite.Web\u003cspan class=\"se\"\u003e\\P\u003c/span\u003eroperties\u003cspan class=\"se\"\u003e\\l\u003c/span\u003eaunchSettings.json...\ninfo: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[0]\n      User profile is available. Using \u003cspan class=\"s1\"\u003e'C:\\Users\\dance2die\\AppData\\Local\\ASP.NET\\DataProtection-Keys'\u003c/span\u003e as key repository and Windows DPAPI to encrypt keys at rest.\nHosting environment: Development\nContent root path: C:\u003cspan class=\"se\"\u003e\\m\u003c/span\u003eisc\u003cspan class=\"se\"\u003e\\s\u003c/span\u003eources\u003cspan class=\"se\"\u003e\\t\u003c/span\u003ehrowaway\u003cspan class=\"se\"\u003e\\c\u003c/span\u003eoretemplates\u003cspan class=\"se\"\u003e\\f\u003c/span\u003eromnuget\u003cspan class=\"se\"\u003e\\N\u003c/span\u003eewSite.Web\nNow listening on: http://localhost:60672\nApplication started. Press Ctrl+C to shut down.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eOpen an editor of your choice (I am using VS Code below).\u003cbr\u003e\nAnd play around with HMR (Hot Module Replacement) like a boss 😎.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--NFfrGPCQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/Rbo51jW.gif\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--NFfrGPCQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/Rbo51jW.gif\" alt=\"HMR demo\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"source-code\" href=\"#source-code\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Source Code\n\u003c/h3\u003e\n\n\u003cp\u003eIt's available on GitHub (\u003ca href=\"https://github.com/dance2die/ReactES6.Web\"\u003edance2die/ReactES6.Web\u003c/a\u003e) with MIT license.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: ASP.NET Core 2 React.js Template with ES6 (not TypeScript)\r\npublished: true\r\ndescription: Sick of TypeScript ASP.NET Core 2 React.js template? Say no more.\r\ntags: dotnet, react, asp.net, template\r\n---\r\n\r\nI created a Nuget package for `dotnet new` template.\r\n\r\n## Why?\r\n\r\nI don't know why but [dotnet CLI](https://docs.microsoft.com/en-us/dotnet/core/tools/?tabs=netcore2x) has SPA templates for ASP.NET Core 2 React.js that creates a page with TypeScript.\r\n\r\nI see many benefits with TypeScript coming from C# background.\r\nBut sometimes it's just an overkill.\r\nRefer to these posts (⚠️ warning. Long threads!)\r\n- [If TypeScript is so great, how come all notable ReactJS projects use Babel?](https://discuss.reactjs.org/t/if-typescript-is-so-great-how-come-all-notable-reactjs-projects-use-babel/4887)\r\n- [Why isn't typescript used more in the react community?](https://www.reddit.com/r/reactjs/comments/7yxecm/why_isnt_typescript_used_more_in_the_react/)\r\n\r\n\r\nAs a newcomer to ASP.NET Core, I just didn't want to deal with TypeScript so I created a new template, [ASP.NET Core with React.js with ES6](https://www.nuget.org/packages/ReactES6.Web/) (with short name `reactes6`).\r\n\r\nI will show you how to install and run the nuget package.\r\n\r\n## TL;DR\r\n\r\n\u003e dotnet new -i ReactES6.Web\r\n\u003e dotnet new reactes6 -n NewSite.Web\r\n\u003e cd NewSite.Web\r\n\u003e dotnet restore \u0026\u0026 npm install\r\n\u003e dotnet run\r\n\u003e code .\r\n\r\n## How to Install \u0026 Run\r\nFrom command line,\r\n\r\n```bash\r\ndotnet new -i ReactES6.Web\r\n```\r\nAnd you will see a new template named `ASP.NET Core with React.js with ES6` (with shortname *reactes6*) would appear.\r\n\r\n```bash\r\ndance2die@CC C:\\misc\\sources\\throwaway\\coretemplates\\fromnuget                                                                            \r\n\u003e dotnet new -i ReactES6.Web                                                                                                              \r\nGetting ready...                                                                                                                          \r\n  ...\r\n                                                                                                                                          \r\nTemplates                                         Short Name       Language          Tags                                                 \r\n--------------------------------------------------------------------------------------------------------                                  \r\nConsole Application                               console          [C#], F#, VB      Common/Console                                       \r\n...      \r\nASP.NET Core with React.js with ES6               reactes6         [C#]              Web/MVC/SPA                                          \r\n...                                  \r\nASP.NET Core with React.js                        react            [C#]              Web/MVC/SPA                                          \r\nASP.NET Core with React.js and Redux              reactredux       [C#]              Web/MVC/SPA                                          \r\n...                          \r\nMVC ViewStart                                     viewstart                          Web/ASP.NET\r\n```\r\nCreate a new website using the template `reactes6`\r\n```bash\r\ndance2die@CC C:\\misc\\sources\\throwaway\\coretemplates\\fromnuget\r\n\u003e dotnet new reactes6 -n NewSite.Web\r\nThe template \"ASP.NET Core with React.js with ES6\" was created successfully.\r\n```\r\nGo to the new website directory\r\n```bash\r\ncd NewSite.Web\r\n```\r\nThen restore .NET Core packages and install NPM packages\r\n```bash\r\ndance2die@CC C:\\misc\\sources\\throwaway\\coretemplates\\fromnuget\\NewSite.Web\r\n\u003e dotnet restore \u0026\u0026 npm install\r\n  Restoring packages for C:\\misc\\sources\\throwaway\\coretemplates\\fromnuget\\NewSite.Web\\NewSite.Web.csproj...\r\n  Restore completed in 140.27 ms for C:\\misc\\sources\\throwaway\\coretemplates\\fromnuget\\NewSite.Web\\NewSite.Web.csproj.\r\n  Generating MSBuild file C:\\misc\\sources\\throwaway\\coretemplates\\fromnuget\\NewSite.Web\\obj\\NewSite.Web.csproj.nuget.g.props.\r\n  Generating MSBuild file C:\\misc\\sources\\throwaway\\coretemplates\\fromnuget\\NewSite.Web\\obj\\NewSite.Web.csproj.nuget.g.targets.\r\n  Restore completed in 6.11 sec for C:\\misc\\sources\\throwaway\\coretemplates\\fromnuget\\NewSite.Web\\NewSite.Web.csproj.\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.1.3 (node_modules\\fsevents):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.3: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})\r\n\r\nadded 611 packages from 525 contributors in 95.097s\r\n```\r\nStart the project with `dotnet run`.\r\n```bash\r\ndance2die@CC C:\\misc\\sources\\throwaway\\coretemplates\\fromnuget\\NewSite.Web\r\n\u003e dotnet run\r\nUsing launch settings from C:\\misc\\sources\\throwaway\\coretemplates\\fromnuget\\NewSite.Web\\Properties\\launchSettings.json...\r\ninfo: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[0]\r\n      User profile is available. Using 'C:\\Users\\dance2die\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.\r\nHosting environment: Development\r\nContent root path: C:\\misc\\sources\\throwaway\\coretemplates\\fromnuget\\NewSite.Web\r\nNow listening on: http://localhost:60672\r\nApplication started. Press Ctrl+C to shut down.\r\n```\r\nOpen an editor of your choice (I am using VS Code below).\r\nAnd play around with HMR (Hot Module Replacement) like a boss 😎.\r\n\r\n![HMR demo](https://i.imgur.com/Rbo51jW.gif)\r\n\r\n\r\n### Source Code\r\nIt's available on GitHub ([dance2die/ReactES6.Web](https://github.com/dance2die/ReactES6.Web)) with MIT license.\r\n\r\n\r\n\r\n\r\n\r\n",
    "canonical_url": null,
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": false,
    "comments_count": 9,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": null,
    "positive_reactions_count": 16,
    "edited_at": "2018-04-03T01:20:00.442Z",
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "dotnet, react, aspnet, template",
    "path": "/dance2die/aspnet-core-2-reactjs-template-with-es6-not-typescript-f71",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-03-17T08:36:52.269Z"
  },
  {
    "title": "“dotnet new install” issue – “Error: Value cannot be null”",
    "slug": "dotnet-new-install-issue--error-value-cannot-be-null-837",
    "created_at": "2018-04-08T19:25:45.732Z",
    "main_image": null,
    "description": "How to resolve dotnet new installation issue.",
    "published": true,
    "published_at": "2018-04-08T19:34:56.056Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/dotnet/cli\"\u003e.NET CLI\u003c/a\u003e has made it easy to create \u003ca href=\"https://blogs.msdn.microsoft.com/dotnet/2017/04/02/how-to-create-your-own-templates-for-dotnet-new/\"\u003ea new template\u003c/a\u003e.\u003cbr\u003e\nBut sometimes you might be frustrated the following not-so-helpful error message while creating a SPA template.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight shell\"\u003e\u003ccode\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e dotnet new \u003cspan class=\"nt\"\u003e-i\u003c/span\u003e .\u003cspan class=\"se\"\u003e\\N\u003c/span\u003eewTemplate\nError: Could not \u003cspan class=\"nb\"\u003einstall\u003c/span\u003e \u003cspan class=\"s2\"\u003e\".\u003c/span\u003e\u003cspan class=\"se\"\u003e\\N\u003c/span\u003e\u003cspan class=\"s2\"\u003eewTemplate\"\u003c/span\u003e\u003cspan class=\"nb\"\u003e.\u003c/span\u003e\nError: Value cannot be null.\nParameter name: key\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"the-cause\" href=\"#the-cause\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🤔 The Cause\n\u003c/h2\u003e\n\n\u003cp\u003eAccording to \u003ca href=\"https://github.com/mlorbetske\"\u003eMike Lorbetske\u003c/a\u003e, the error occurs when one of the \u003ccode\u003enode_modules\u003c/code\u003e folders contain a \u003ccode\u003etemplate.json\u003c/code\u003e file.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eTL;DR – the particular node modules that have been added to the project contain a template.json file\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"resolution\" href=\"#resolution\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  💡 Resolution\n\u003c/h2\u003e\n\n\u003cp\u003eSo if you have a \u003ccode\u003enode_modules\u003c/code\u003e folder in your template, \u003cstrong\u003edelete it\u003c/strong\u003e then you are good to go.\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"note-the-next-version-of-net-cli-templating-engine-dotnet-new3-has-traceauthoring-option-but-wouldnt-be-helpful-in-this-case-according-to-mike\" href=\"#note-the-next-version-of-net-cli-templating-engine-dotnet-new3-has-traceauthoring-option-but-wouldnt-be-helpful-in-this-case-according-to-mike\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  NOTE 📝: The next version of .NET CLI templating engine (dotnet new3) has --trace:authoring option but wouldn’t be helpful in this case \u003ca href=\"https://github.com/dotnet/templating/issues/1498#issuecomment-378501905\"\u003eaccording to Mike\u003c/a\u003e.\n\u003c/h6\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"closing-remark\" href=\"#closing-remark\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚪 Closing Remark\n\u003c/h2\u003e\n\n\u003cp\u003eI’ve reported \u003ca href=\"https://github.com/dotnet/templating/issues/1498\"\u003ethe issue\u003c/a\u003e on GitHub and Mike is preparing a PR to address this issue.\u003cbr\u003e\nThe issue page has the comprehensive steps to reproduce the error and how to resolve it.\u003c/p\u003e\n\n\u003cp\u003e**** UPDATE 2018/04/10 ****\u003cbr\u003e\nThe fix will be available in \u003ca href=\"https://github.com/dotnet/templating/issues/1498#issuecomment-380312603\"\u003e\"The CLI after 2.1.300-preview2\"\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis issue was found while creating a new SPA template for \u003ca href=\"https://www.nuget.org/packages/ReactES6.Web/\"\u003eASP.NET Core with React.js with ES6\u003c/a\u003e because the default template uses TypeScript.\u003c/p\u003e\n\n\u003cp\u003eYou can find more about how to use it in my previous article, \u003ca href=\"https://dev.to/dance2die/aspnet-core-2-reactjs-template-with-es6-not-typescript-f71\"\u003eASP.NET Core 2 React.js Template with ES6 (not TypeScript)\u003c/a\u003e .😉.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: “dotnet new install” issue – “Error: Value cannot be null”\r\npublished: true\r\ncanonical_url: https://www.slightedgecoder.com/2018/04/08/dotnet-new-install-issue/\r\ndescription: How to resolve dotnet new installation issue.\r\ntags: dotnet, template, core, cli\r\n---\r\n\r\n[.NET CLI](https://github.com/dotnet/cli) has made it easy to create [a new template](https://blogs.msdn.microsoft.com/dotnet/2017/04/02/how-to-create-your-own-templates-for-dotnet-new/).\r\nBut sometimes you might be frustrated the following not-so-helpful error message while creating a SPA template.\r\n```bash\r\n\u003e dotnet new -i .\\NewTemplate\r\nError: Could not install \".\\NewTemplate\".\r\nError: Value cannot be null.\r\nParameter name: key\r\n```\r\n\r\n\r\n## 🤔 The Cause\r\n\r\nAccording to [Mike Lorbetske](https://github.com/mlorbetske), the error occurs when one of the `node_modules` folders contain a `template.json` file.\r\n\r\n\u003e TL;DR – the particular node modules that have been added to the project contain a template.json file\r\n\r\n## 💡 Resolution\r\n\r\nSo if you have a `node_modules` folder in your template, **delete it** then you are good to go.\r\n###### NOTE 📝: The next version of .NET CLI templating engine (dotnet new3) has --trace:authoring option but wouldn’t be helpful in this case [according to Mike](https://github.com/dotnet/templating/issues/1498#issuecomment-378501905).\r\n\r\n## 🚪 Closing Remark\r\n\r\nI’ve reported [the issue](https://github.com/dotnet/templating/issues/1498) on GitHub and Mike is preparing a PR to address this issue.\r\nThe issue page has the comprehensive steps to reproduce the error and how to resolve it.\r\n\r\n**** UPDATE 2018/04/10 ****\r\nThe fix will be available in [\"The CLI after 2.1.300-preview2\"](https://github.com/dotnet/templating/issues/1498#issuecomment-380312603).\r\n\r\n\r\nThis issue was found while creating a new SPA template for [ASP.NET Core with React.js with ES6](https://www.nuget.org/packages/ReactES6.Web/) because the default template uses TypeScript.\r\n\r\nYou can find more about how to use it in my previous article, [ASP.NET Core 2 React.js Template with ES6 (not TypeScript)](https://dev.to/dance2die/aspnet-core-2-reactjs-template-with-es6-not-typescript-f71) .😉.",
    "canonical_url": "https://www.slightedgecoder.com/2018/04/08/dotnet-new-install-issue/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": false,
    "comments_count": 2,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": null,
    "positive_reactions_count": 6,
    "edited_at": "2018-04-11T11:12:23.558Z",
    "crossposted_at": null,
    "language": null,
    "cached_tag_list": "dotnet, template, core, cli",
    "path": "/dance2die/dotnet-new-install-issue--error-value-cannot-be-null-837",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-04-10T13:27:45.153Z"
  },
  {
    "title": "Elasticsearch installation issue on a free tier (t2.micro) AWS EC2 instance",
    "slug": "elasticsearch-installation-issue-on-a-free-tier-t2micro-aws-ec2-instance-1o3a",
    "created_at": "2018-04-11T02:42:47.965Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/xiv3zu27u3e8n2uqu5jy.jpg",
    "description": "\n\nI installed Elasticsearch 6.x on a free tier AWS EC2 instance type, t2.micro by...",
    "published": true,
    "published_at": "2018-01-26T02:31:29.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI installed Elasticsearch \u003cstrong\u003e6\u003c/strong\u003e.x on a free tier AWS EC2 instance type, \u003ccode\u003et2.micro\u003c/code\u003e by following\u003ca href=\"https://medium.com/@adnanxteam/how-to-install-elasticsearch-5-and-kibana-on-homestead-vagrant-60ea757ff8c7\"\u003einstallation instruction\u003c/a\u003e (for Elasticsearch \u003cstrong\u003e5\u003c/strong\u003e ) by \u003ca href=\"https://medium.com/@adnanxteam\"\u003eAdnan Sabanovic\u003c/a\u003e on medium.\u003c/p\u003e\n\n\u003cp\u003eAdnan used a \u003ca href=\"https://en.wikipedia.org/wiki/CURL\"\u003ecURL\u003c/a\u003e command to check if Elasticsearch is running or not.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/3dff7c0c45c8fb6e18f3b73a4dbcd316.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eBut then the command returned the following error message.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ecurl: (7) Failed to connect to localhost port 9200: Connection refused\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eWhat happened?\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"diagnosis\" href=\"#diagnosis\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Diagnosis\n\u003c/h3\u003e\n\n\u003cp\u003eLet’s see the status of Elasticsearch by running \u003ccode\u003esystemctl\u003c/code\u003e comamnd.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/b7e815a3a4e3be3f46dbc92299e7d1c7.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eOn line #9, you can see the warning “OpenJDK 64-Bit Server VM warning” and the line #10 shows that the Elasticsearch service main process has existed right away.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"updating-elasticsearch-6x-jvm-heap-size\" href=\"#updating-elasticsearch-6x-jvm-heap-size\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Updating Elasticsearch 6.x JVM Heap Size\n\u003c/h3\u003e\n\n\u003cp\u003eBy default Elasticsearch 6.x JVM Heap size set to use minimum 1Gig of memory.\u003c/p\u003e\n\n\u003cp\u003eBut \u003ccode\u003et2.micro\u003c/code\u003e has 1Gig of memory\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--7uSzSFv7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/aws-ec2-t2.micro_.jpg%3Fresize%3D794%252C456%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--7uSzSFv7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/aws-ec2-t2.micro_.jpg%3Fresize%3D794%252C456%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eElasticsearch \u003ca href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/heap-size.html\"\u003edocumentation recommends\u003c/a\u003e to set it to 50% of physical memory for kernel file system caches.\u003c/p\u003e\n\n\u003cp\u003eWe know the problem, so let’s change the Elasticsearch JVM heap size.\u003c/p\u003e\n\n\u003cp\u003eOpen \u003ccode\u003e/etc/elasticsearch/jvm.option\u003c/code\u003e using an editor of your choice (I promise that I will learn either vi or emacs… 😞)\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/f54076253a6aa402d7fa2ebffa8d2d5d.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eWhen you read the comment in \u003ccode\u003ejvm.options\u003c/code\u003e, you should set the minimum and maximum to the same value.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--X33Q2L3W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/default-jvm.option.jpg%3Fresize%3D684%252C429%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--X33Q2L3W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/default-jvm.option.jpg%3Fresize%3D684%252C429%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAnd you can see that the min and max JVM heap sizes are set to 1g on the bottom of above image.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e-Xms1g\u003c/p\u003e\n\n\u003cp\u003e-Xmx1g\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eNow update the min and max values to 512m, save the file and exit.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--rxxIA_cq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/jvm-updated-to-512m.jpg%3Fresize%3D702%252C476%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--rxxIA_cq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/jvm-updated-to-512m.jpg%3Fresize%3D702%252C476%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"restart-and-test\" href=\"#restart-and-test\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Restart and Test\n\u003c/h3\u003e\n\n\u003cp\u003eRestart Elasticsearch service,\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/3db44a114a46b8dfa252027f4e1f9a11.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eand run the cURL command again.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ogh9aLSD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/good-curl-result.jpg%3Fresize%3D577%252C329%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ogh9aLSD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/good-curl-result.jpg%3Fresize%3D577%252C329%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e🎉Tada🎉\u003cbr\u003e\nElasticsearch is now running on AWS EC2 t.micro instance.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/01/25/elasticsearch-installation-issue-free-tier-t2-micro-aws-ec2-instance/\"\u003eElasticsearch installation issue on a free tier (t2.micro) AWS EC2 instance\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: Elasticsearch installation issue on a free tier (t2.micro) AWS EC2 instance\r\npublished: true\r\ntags: aws, elasticsearch, troubleshooting\r\ncanonical_url: https://www.slightedgecoder.com/2018/01/25/elasticsearch-installation-issue-free-tier-t2-micro-aws-ec2-instance/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/xiv3zu27u3e8n2uqu5jy.jpg\r\n---\r\n\r\nI installed Elasticsearch **6**.x on a free tier AWS EC2 instance type, `t2.micro` by following[installation instruction](https://medium.com/@adnanxteam/how-to-install-elasticsearch-5-and-kibana-on-homestead-vagrant-60ea757ff8c7) (for Elasticsearch **5** ) by [Adnan Sabanovic](https://medium.com/@adnanxteam) on medium.\r\n\r\nAdnan used a [cURL](https://en.wikipedia.org/wiki/CURL) command to check if Elasticsearch is running or not.\r\n\r\n{% gist https://gist.github.com/dance2die/3dff7c0c45c8fb6e18f3b73a4dbcd316 %}\r\n\r\nBut then the command returned the following error message.\r\n\r\n\u003e curl: (7) Failed to connect to localhost port 9200: Connection refused\r\n\r\nWhat happened?\r\n\r\n### Diagnosis\r\n\r\nLet’s see the status of Elasticsearch by running `systemctl` comamnd.\r\n\r\n{% gist https://gist.github.com/dance2die/b7e815a3a4e3be3f46dbc92299e7d1c7 %}\r\n\r\nOn line #9, you can see the warning “OpenJDK 64-Bit Server VM warning” and the line #10 shows that the Elasticsearch service main process has existed right away.\r\n\r\n### Updating Elasticsearch 6.x JVM Heap Size\r\n\r\nBy default Elasticsearch 6.x JVM Heap size set to use minimum 1Gig of memory.\r\n\r\nBut `t2.micro` has 1Gig of memory\r\n\r\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/aws-ec2-t2.micro_.jpg?resize=794%2C456\u0026ssl=1)\r\n\r\nElasticsearch [documentation recommends](https://www.elastic.co/guide/en/elasticsearch/reference/current/heap-size.html) to set it to 50% of physical memory for kernel file system caches.\r\n\r\nWe know the problem, so let’s change the Elasticsearch JVM heap size.\r\n\r\nOpen `/etc/elasticsearch/jvm.option` using an editor of your choice (I promise that I will learn either vi or emacs… 😞)\r\n\r\n{% gist https://gist.github.com/dance2die/f54076253a6aa402d7fa2ebffa8d2d5d %}\r\n\r\nWhen you read the comment in `jvm.options`, you should set the minimum and maximum to the same value.\r\n\r\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/default-jvm.option.jpg?resize=684%2C429\u0026ssl=1)\r\n\r\nAnd you can see that the min and max JVM heap sizes are set to 1g on the bottom of above image.\r\n\r\n\u003e -Xms1g\r\n\u003e \r\n\u003e -Xmx1g\r\n\r\nNow update the min and max values to 512m, save the file and exit.\r\n\r\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/jvm-updated-to-512m.jpg?resize=702%2C476\u0026ssl=1)\r\n\r\n### Restart and Test\r\n\r\nRestart Elasticsearch service,\r\n\r\n{% gist https://gist.github.com/dance2die/3db44a114a46b8dfa252027f4e1f9a11 %}\r\n\r\nand run the cURL command again.\r\n\r\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/good-curl-result.jpg?resize=577%2C329\u0026ssl=1)\r\n\r\n🎉Tada🎉\r\nElasticsearch is now running on AWS EC2 t.micro instance.\r\n\r\nThe post [Elasticsearch installation issue on a free tier (t2.micro) AWS EC2 instance](https://www.slightedgecoder.com/2018/01/25/elasticsearch-installation-issue-free-tier-t2-micro-aws-ec2-instance/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/01/25/elasticsearch-installation-issue-free-tier-t2-micro-aws-ec2-instance/",
    "show_comments": true,
    "main_image_background_hex_color": "#885420",
    "published_from_feed": true,
    "comments_count": 2,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/01/25/elasticsearch-installation-issue-free-tier-t2-micro-aws-ec2-instance/",
    "positive_reactions_count": 8,
    "edited_at": "2018-04-29T00:13:56.527Z",
    "crossposted_at": "2018-04-29T00:13:42.172Z",
    "language": "en",
    "cached_tag_list": "aws, elasticsearch, troubleshooting",
    "path": "/dance2die/elasticsearch-installation-issue-on-a-free-tier-t2micro-aws-ec2-instance-1o3a",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-05-01T13:34:53.899Z"
  },
  {
    "title": "Background image loading from SVG to Full Image",
    "slug": "background-image-loading-from-svg-to-full-image-5ae2-temp-slug-8637202",
    "created_at": "2018-04-11T02:42:48.715Z",
    "main_image": null,
    "description": "\n\nPhoto by Vaughn Wright on Unsplash resized to 600×480\n\nMy landing page backgrou...",
    "published": false,
    "published_at": "2018-02-17T19:38:31.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003csmall\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/okyXCkrhHHg?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eVaughn Wright\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/around?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e resized to 600×480\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eMy \u003ca href=\"http://www.sungkim.co/\"\u003elanding page\u003c/a\u003e background from \u003ca href=\"https://unsplash.com/\"\u003eUnsplash\u003c/a\u003e has been loading slowly because it’s a fairly big file and was loading from different domain.\u003c/p\u003e\n\n\u003cp\u003eAfter reading this great article \u003ca href=\"https://jmperezperez.com/svg-placeholders/\"\u003eUsing SVG as placeholders — More Image Loading Techniques\u003c/a\u003e by José M. Pérez , I decided to show a lightweight SVG background and then load a full background image.\u003c/p\u003e\n\n\u003cp\u003eEverything was fine on Chrome but all other browsers flickered when SVG background image is being replaced with full background image using Javascript.\u003c/p\u003e\n\n\u003cp\u003eHere is a workaround I used to get around the flickering issue.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"initial-attempt\" href=\"#initial-attempt\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Initial Attempt\n\u003c/h3\u003e\n\n\u003cp\u003eThe initial attempt was to set \u003ccode\u003ebody.backgroundImage\u003c/code\u003e with an SVG file and replace it from Javascript when the image is loaded (refer to the Javascript file under “babel” tab).\u003c/p\u003e\n\n\u003cp\u003eCodepen example doesn’t flash but the transition from SVG to full image is not gradual.\u003c/p\u003e\n\n\u003cp\u003eHere is how the site looked on the landing page. First browser shows Chrome, which works fine but the 2nd browser (FireFox Quantum) flickers  \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--2-DpDC89--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f631.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--2-DpDC89--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f631.png\" alt=\"😱\"\u003e\u003c/a\u003e as if you get flashed by a \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--XSTLJzIR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f4f7.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--XSTLJzIR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f4f7.png\" alt=\"📷\"\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"workaround\" href=\"#workaround\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Workaround\n\u003c/h3\u003e\n\n\u003cp\u003eWorkaround for the flicker was generously provided by \u003ca href=\"https://twitter.com/bytefluxio\"\u003eRobert\u003c/a\u003e \u0026amp; Mehdi Merah (Sorry, couldn’t find his info on Slack) on two separate Slack servers (\u003ca href=\"https://www.codingblocks.net/slack/\"\u003eCodingBlocks\u003c/a\u003e \u0026amp; \u003ca href=\"https://damp-lake-50659.herokuapp.com/\"\u003eAnimation at Work\u003c/a\u003e).\u003c/p\u003e\n\n\u003cp\u003eInstead of replacing the background, load the full image in another tag and layer the full image on top of SVG.\u003c/p\u003e\n\n\u003cp\u003eAnd now SVG looks like it’s fading away as a full image loads on FireFox \u0026amp; IE.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"help-needed\" href=\"#help-needed\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Help Needed\n\u003c/h3\u003e\n\n\u003cp\u003eI am just getting used to the front-end development and this issue has taken me 2 days to test many of Google results and failures.\u003c/p\u003e\n\n\u003cp\u003eI’d appreciate it if anyone can suggest me another workaround and/or how I can improve my current code base, which is available on \u003ca href=\"https://github.com/dance2die/dance2die.github.io\"\u003eGitHub\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/02/17/background-image-loading-svg-full-image/\"\u003eBackground image loading from SVG to Full Image\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Background image loading from SVG to Full Image\npublished: false\ntags: Blog Entry,Problem Solving,Programming,codepen\ncanonical_url: https://www.slightedgecoder.com/2018/02/17/background-image-loading-svg-full-image/\n---\n\n\u003csmall\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/okyXCkrhHHg?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eVaughn Wright\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/around?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e resized to 600×480\u003c/small\u003e\n\nMy [landing page](http://www.sungkim.co/) background from [Unsplash](https://unsplash.com/) has been loading slowly because it’s a fairly big file and was loading from different domain.\n\nAfter reading this great article [Using SVG as placeholders — More Image Loading Techniques](https://jmperezperez.com/svg-placeholders/) by José M. Pérez , I decided to show a lightweight SVG background and then load a full background image.\n\nEverything was fine on Chrome but all other browsers flickered when SVG background image is being replaced with full background image using Javascript.\n\nHere is a workaround I used to get around the flickering issue.\n\n### Initial Attempt\n\nThe initial attempt was to set `body.backgroundImage` with an SVG file and replace it from Javascript when the image is loaded (refer to the Javascript file under “babel” tab).\n\n\u003ciframe id=\"cp_embed_NyXyPX\" src=\"https://codepen.io/dance2die/embed/preview/NyXyPX?height=300\u0026amp;slug-hash=NyXyPX\u0026amp;default-tabs=css,result\u0026amp;host=https://codepen.io\u0026amp;embed-version=2\" title=\"\" scrolling=\"no\" frameborder=\"0\" height=\"300\" allowtransparency=\"true\" style=\"width: 100%; overflow: hidden;\"\u003e\u003c/iframe\u003e\n\nCodepen example doesn’t flash but the transition from SVG to full image is not gradual.\n\nHere is how the site looked on the landing page. First browser shows Chrome, which works fine but the 2nd browser (FireFox Quantum) flickers  ![😱](https://s.w.org/images/core/emoji/2.4/72x72/1f631.png) as if you get flashed by a ![📷](https://s.w.org/images/core/emoji/2.4/72x72/1f4f7.png).\n\n\u003ciframe type=\"text/html\" width=\"1170\" height=\"689\" src=\"https://www.youtube.com/embed/n5IfLffxtzQ?version=3\u0026amp;rel=1\u0026amp;fs=1\u0026amp;autohide=2\u0026amp;showsearch=0\u0026amp;showinfo=1\u0026amp;iv_load_policy=1\u0026amp;wmode=transparent\" allowfullscreen=\"true\" style=\"border:0;\"\u003e\u003c/iframe\u003e\n\n### Workaround\n\nWorkaround for the flicker was generously provided by [Robert](https://twitter.com/bytefluxio) \u0026 Mehdi Merah (Sorry, couldn’t find his info on Slack) on two separate Slack servers ([CodingBlocks](https://www.codingblocks.net/slack/) \u0026 [Animation at Work](https://damp-lake-50659.herokuapp.com/)).\n\nInstead of replacing the background, load the full image in another tag and layer the full image on top of SVG.\n\n\u003ciframe id=\"cp_embed_ddJJEo\" src=\"https://codepen.io/dance2die/embed/preview/ddJJEo?height=300\u0026amp;slug-hash=ddJJEo\u0026amp;default-tabs=css,result\u0026amp;host=https://codepen.io\u0026amp;embed-version=2\" title=\"\" scrolling=\"no\" frameborder=\"0\" height=\"300\" allowtransparency=\"true\" style=\"width: 100%; overflow: hidden;\"\u003e\u003c/iframe\u003e\n\nAnd now SVG looks like it’s fading away as a full image loads on FireFox \u0026 IE.\n\n\u003ciframe type=\"text/html\" width=\"1170\" height=\"689\" src=\"https://www.youtube.com/embed/dlp-foryr0o?version=3\u0026amp;rel=1\u0026amp;fs=1\u0026amp;autohide=2\u0026amp;showsearch=0\u0026amp;showinfo=1\u0026amp;iv_load_policy=1\u0026amp;wmode=transparent\" allowfullscreen=\"true\" style=\"border:0;\"\u003e\u003c/iframe\u003e\n\n### Help Needed\n\nI am just getting used to the front-end development and this issue has taken me 2 days to test many of Google results and failures.\n\nI’d appreciate it if anyone can suggest me another workaround and/or how I can improve my current code base, which is available on [GitHub](https://github.com/dance2die/dance2die.github.io).\n\nThe post [Background image loading from SVG to Full Image](https://www.slightedgecoder.com/2018/02/17/background-image-loading-svg-full-image/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/02/17/background-image-loading-svg-full-image/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/02/17/background-image-loading-svg-full-image/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, problemsolving, programming, codepen",
    "path": "/dance2die/background-image-loading-from-svg-to-full-image-5ae2-temp-slug-8637202",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-02-17T19:38:31.000Z"
  },
  {
    "title": "An “Approximate” equivalent of LINQ methods in JavaScript – Part 1",
    "slug": "an-approximate-equivalent-of-linq-methods-in-javascript--part-1-382n-temp-slug-6834934",
    "created_at": "2018-04-11T02:42:49.603Z",
    "main_image": null,
    "description": "\n\nPhoto by Simon Migaj on Unsplash\n\nHere are the methods covered so far.\n\n\nPart 1...",
    "published": false,
    "published_at": "2018-02-25T03:54:59.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003csmall\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/sa7KClvDBpo?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eSimon Migaj\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/map?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eHere are the methods covered so far.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003ePart 1  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#select\"\u003eSelect\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#aggregate\"\u003eAggregate\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#where\"\u003eWhere\u003c/a\u003e, OrderBy (\u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByAscending\"\u003eAscending\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByDescending\"\u003eDescending\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/\"\u003ePart 2\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#any\"\u003eAny\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#distinct\"\u003eDistinct\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#concat\"\u003eConcat\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#selectmany\"\u003eSelectMany\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/\"\u003ePart 3\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#reverse\"\u003eReverse\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#zip\"\u003eZip\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#minmax\"\u003eMin/Max\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/\"\u003ePart 4\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#union\"\u003eUnion\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#intersect\"\u003eIntersect\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#except\"\u003eExcept\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/\"\u003ePart 5\u003c/a\u003e \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/?p=899\u0026amp;preview=true#sum\"\u003eSum\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/?p=899\u0026amp;preview=true#average\"\u003eAverage\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/?p=899\u0026amp;preview=true#count\"\u003eCount\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eLINQ has been around \u003ca href=\"https://msdn.microsoft.com/en-us/library/bb308959.aspx?f=255\u0026amp;MSPPError=-2147217396\"\u003esince 2007\u003c/a\u003e. It made the code more readable as you specify what you do with a collection not how to process it.\u003c/p\u003e\n\n\u003cp\u003eJavaScript is the de facto standard so you should be working with it often if you are doing web development.\u003c/p\u003e\n\n\u003cp\u003eI will share some “approximate” JavaScript equivalents below for those working primarily with .NET but want to use the existing skill in JavaScript.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eSince each method do not match exactly one to one functionality wise, I will drop “approximate” hereafter.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"overview\" href=\"#overview\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Overview\n\u003c/h3\u003e\n\n\u003cp\u003eHere are the examples I will show you in this article.\u003c/p\u003e\n\n\u003cdiv class=\"table-wrapper-paragraph\"\u003e\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eLINQ Methods\u003c/th\u003e\n\u003cth\u003eJavaScript Equivalents\u003c/th\u003e\n\u003cth\u003eGo to example\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.select%28v=vs.110%29.aspx?f=255\u0026amp;MSPPError=-2147217396\"\u003eSelect\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"\u003emap\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eSelect\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.aggregate(v=vs.110).aspx\"\u003eAggregate\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\"\u003ereduce\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eAggregate\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.where(v=vs.110).aspx\"\u003eWhere\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\"\u003efilter\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eWhere\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.orderby(v=vs.110).aspx\"\u003eOrderBy\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\"\u003esort\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eOrderBy - Ascending\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.orderbydescending(v=vs.110).aspx\"\u003eOrderByDescending\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\"\u003esort\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eOrderBy - Descending\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\u003c/div\u003e\n\n\u003cp\u003eI tried to match the code look similar to each other (as you can see the full source codes in \u003ca href=\"https://github.com/dance2die/blog.LinqAndJavascript.CSharpDemo/blob/master/Program.cs\"\u003eLINQ\u003c/a\u003e \u0026amp; \u003ca href=\"https://github.com/dance2die/blog.LinqAndJavascript.JavascriptDemo/blob/master/index.js\"\u003eJavaScript\u003c/a\u003e on GitHub).\u003c/p\u003e\n\n\u003cp\u003eHere are the sample collections I will use to demo each method.\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"c\" href=\"#c\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  C\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"javascript\" href=\"#javascript\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  JavaScript\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"examples\" href=\"#examples\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Examples\n\u003c/h3\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"select\" href=\"#select\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e Select\n\u003c/h5\u003e\n\n\u003cp\u003e\u003ccode\u003emap\u003c/code\u003e is the equivalent of \u003ccode\u003eSelect\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eSyntax-wise, it’s basically one-to-one replacement from \u003ccode\u003eSelect\u003c/code\u003e to\u003ccode\u003emap\u003c/code\u003e.\u003cbr\u003e\u003cbr\u003e\nI said “equivalent” but I lied. While \u003ccode\u003emap\u003c/code\u003e returns a new array, \u003ccode\u003eSelect\u003c/code\u003e has a side effect (it can update the iterating collection). Just remember this difference for the rest of JavaScript methods.\u003c/p\u003e\n\n\u003cp\u003eResults of calling \u003ccode\u003eSelectDemo\u003c/code\u003e and \u003ccode\u003emapDemo\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"aggregate\" href=\"#aggregate\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e Aggregate\n\u003c/h5\u003e\n\n\u003cp\u003e\u003ccode\u003ereduce\u003c/code\u003e works the same way \u003ccode\u003eAggregate\u003c/code\u003e does.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Ud6lMTxj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/26a1.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Ud6lMTxj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/26a1.png\" alt=\"⚡\"\u003e\u003c/a\u003e NOTE \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Ud6lMTxj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/26a1.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Ud6lMTxj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/26a1.png\" alt=\"⚡\"\u003e\u003c/a\u003e\u003c/strong\u003e: While the initial value for the accumulator is passed as a first argument in \u003ccode\u003eAggregate\u003c/code\u003e, it’s passed as the last one in \u003ccode\u003ereduce\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eResults of calling \u003ccode\u003eAggregateDemo\u003c/code\u003e and \u003ccode\u003ereduceDemo\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"where\" href=\"#where\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e  Where\n\u003c/h5\u003e\n\n\u003cp\u003eAs you might have guessed it \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ROERhfb2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f609.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ROERhfb2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f609.png\" alt=\"😉\"\u003e\u003c/a\u003e, \u003ccode\u003eWhere\u003c/code\u003e is for \u003cem\u003efiltering\u003c/em\u003e records in a collection.  So the equivalent is…, \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--uQEojgN---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f389.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--uQEojgN---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f389.png\" alt=\"🎉\"\u003e\u003c/a\u003e \u003ccode\u003efilter\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eAnother drop-in replacement of \u003ccode\u003efilter\u003c/code\u003e for \u003ccode\u003eWhere\u003c/code\u003e. The code so far looked the same thanks to the Lamda expression syntax in both C# \u0026amp; JavaScript (ES6).\u003c/p\u003e\n\n\u003cp\u003eResults of calling \u003ccode\u003eWhereDemo\u003c/code\u003e and \u003ccode\u003efilterDemo\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"orderby\" href=\"#orderby\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e OrderBy\n\u003c/h5\u003e\n\n\u003cp\u003eNow here is where it gets tricky.\u003c/p\u003e\n\n\u003cp\u003eWhile there are two methods for ordering (ascending/descending) in LINQ, there is only one method in Javascript, \u003ccode\u003esort\u003c/code\u003e, which can handle both scenarios.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003esort\u003c/code\u003e is more roughly equivalent to .NET’s \u003ca href=\"https://msdn.microsoft.com/en-us/library/bzw8611x%28v=vs.110%29.aspx?f=255\u0026amp;MSPPError=-2147217396\"\u003eArray.Sort\u003c/a\u003e method which accepts an object instance of type \u003ca href=\"https://msdn.microsoft.com/en-us/library/8ehhxeaf(v=vs.110).aspx\"\u003eIComparer\u0026lt;T\u0026gt;\u003c/a\u003e, which works the same as a callback in \u003ccode\u003esort\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eIn the examples below, if the callback, which requires two arguments, returns a value less than 0, then the left value comes before right value, and vice versa. For 0, the order is not changed.\u003c/p\u003e\n\n\u003cp\u003eThat’s why you can emulate \u003ccode\u003eOrderBy\u003c/code\u003e and \u003ccode\u003eOrderByDescending\u003c/code\u003e with only \u003ccode\u003esort\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"1-ascending-order\" href=\"#1-ascending-order\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  1. Ascending Order\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eIn \u003ccode\u003esortByAscendingDemo\u003c/code\u003e, if \u003ccode\u003eo1.quantity - o2.quantity\u003c/code\u003e returns a negative value, then \u003ccode\u003eo1\u003c/code\u003e comes before \u003ccode\u003eo2\u003c/code\u003e and vice versa. If quantity in both objects are equal (the difference is 0) then the order is not changed.\u003c/p\u003e\n\n\u003cp\u003eResults of calling \u003ccode\u003eOrderByDemo\u003c/code\u003e and \u003ccode\u003esortByAscendingDemo\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"2-descending-order\" href=\"#2-descending-order\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  2. Descending Order\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eIn this JavaScript function, \u003ccode\u003esortByDescendingDemo\u003c/code\u003e, two objects are switched from \u003ccode\u003esortByAscendingDemo\u003c/code\u003e. To emulate the descending order, we simply switch \u003ccode\u003eo1\u003c/code\u003e and \u003ccode\u003eo2\u003c/code\u003e, which will negate the return values from the callback.\u003c/p\u003e\n\n\u003cp\u003eResult of \u003ccode\u003eOrderByDescendingDemo\u003c/code\u003e and \u003ccode\u003esortByDescendingDemo\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"closing-remark\" href=\"#closing-remark\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Closing Remark\n\u003c/h3\u003e\n\n\u003cp\u003eIn this article, I’ve shown examples of each LINQ method (approximate) equivalents in JavaScript.\u003c/p\u003e\n\n\u003cp\u003ePlease feel free to leave a feedback on errors you might have spotted \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--C9P-3pnl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f60e.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--C9P-3pnl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f60e.png\" alt=\"😎\"\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe full source code and instructions on how to run them are on GitHub.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dance2die/blog.LinqAndJavascript.CSharpDemo\"\u003eC# source\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dance2die/blog.LinqAndJavascript.JavascriptDemo\"\u003eJavaScript source\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/\"\u003eAn “Approximate” equivalent of LINQ methods in JavaScript – Part 1\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: An “Approximate” equivalent of LINQ methods in JavaScript – Part 1\npublished: false\ntags: Blog Entry,Programming,quick tip,Series\ncanonical_url: https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/\n---\n\n\u003csmall\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/sa7KClvDBpo?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eSimon Migaj\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/map?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/small\u003e\n\nHere are the methods covered so far.\n\n1. Part 1  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Select](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#select), [Aggregate](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#aggregate), [Where](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#where), OrderBy ([Ascending](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByAscending), [Descending](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByDescending))\n2. [Part 2](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Any](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#any), [Distinct](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#distinct), [Concat](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#concat), [SelectMany](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#selectmany)\n3. [Part 3](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Reverse](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#reverse), [Zip](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#zip), [Min/Max](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#minmax)\n4. [Part 4](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Union](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#union), [Intersect](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#intersect), [Except](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#except)\n5. [Part 5](https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/) ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Sum](https://www.slightedgecoder.com/?p=899\u0026preview=true#sum), [Average](https://www.slightedgecoder.com/?p=899\u0026preview=true#average), [Count](https://www.slightedgecoder.com/?p=899\u0026preview=true#count)\n\nLINQ has been around [since 2007](https://msdn.microsoft.com/en-us/library/bb308959.aspx?f=255\u0026MSPPError=-2147217396). It made the code more readable as you specify what you do with a collection not how to process it.\n\nJavaScript is the de facto standard so you should be working with it often if you are doing web development.\n\nI will share some “approximate” JavaScript equivalents below for those working primarily with .NET but want to use the existing skill in JavaScript.\n\n_Since each method do not match exactly one to one functionality wise, I will drop “approximate” hereafter._\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Overview\n\nHere are the examples I will show you in this article.\n\n| LINQ Methods | JavaScript Equivalents | Go to example |\n| --- | --- | --- |\n| [Select](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.select%28v=vs.110%29.aspx?f=255\u0026MSPPError=-2147217396) | [map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) | Select |\n| [Aggregate](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.aggregate(v=vs.110).aspx) | [reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce) | Aggregate |\n| [Where](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.where(v=vs.110).aspx) | [filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter) | Where |\n| [OrderBy](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.orderby(v=vs.110).aspx) | [sort](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort) | OrderBy - Ascending |\n| [OrderByDescending](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.orderbydescending(v=vs.110).aspx) | [sort](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort) | OrderBy - Descending |\n\n\u003c!-- #tablepress-1 from cache --\u003e\n\nI tried to match the code look similar to each other (as you can see the full source codes in [LINQ](https://github.com/dance2die/blog.LinqAndJavascript.CSharpDemo/blob/master/Program.cs) \u0026 [JavaScript](https://github.com/dance2die/blog.LinqAndJavascript.JavascriptDemo/blob/master/index.js) on GitHub).\n\nHere are the sample collections I will use to demo each method.\n\n###### C#\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### JavaScript\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Examples\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) Select\n\n`map` is the equivalent of `Select`.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nSyntax-wise, it’s basically one-to-one replacement from `Select` to` map`.  \nI said “equivalent” but I lied. While `map` returns a new array, `Select` has a side effect (it can update the iterating collection). Just remember this difference for the rest of JavaScript methods.\n\nResults of calling `SelectDemo` and `mapDemo`.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) Aggregate\n\n`reduce` works the same way `Aggregate` does.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n**![⚡](https://s.w.org/images/core/emoji/2.4/72x72/26a1.png) NOTE ![⚡](https://s.w.org/images/core/emoji/2.4/72x72/26a1.png)**: While the initial value for the accumulator is passed as a first argument in `Aggregate`, it’s passed as the last one in `reduce`.\n\nResults of calling `AggregateDemo` and `reduceDemo`.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png)  Where\n\nAs you might have guessed it ![😉](https://s.w.org/images/core/emoji/2.4/72x72/1f609.png), `Where` is for _filtering_ records in a collection.  So the equivalent is…, ![🎉](https://s.w.org/images/core/emoji/2.4/72x72/1f389.png) `filter`.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nAnother drop-in replacement of `filter` for `Where`. The code so far looked the same thanks to the Lamda expression syntax in both C# \u0026 JavaScript (ES6).\n\nResults of calling `WhereDemo` and `filterDemo`.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) OrderBy\n\nNow here is where it gets tricky.\n\nWhile there are two methods for ordering (ascending/descending) in LINQ, there is only one method in Javascript, `sort`, which can handle both scenarios.\n\n`sort` is more roughly equivalent to .NET’s [Array.Sort](https://msdn.microsoft.com/en-us/library/bzw8611x%28v=vs.110%29.aspx?f=255\u0026MSPPError=-2147217396) method which accepts an object instance of type [IComparer\\\u003cT\\\u003e](https://msdn.microsoft.com/en-us/library/8ehhxeaf(v=vs.110).aspx), which works the same as a callback in `sort`.\n\nIn the examples below, if the callback, which requires two arguments, returns a value less than 0, then the left value comes before right value, and vice versa. For 0, the order is not changed.\n\nThat’s why you can emulate `OrderBy` and `OrderByDescending` with only `sort`.\n\n###### 1. Ascending Order\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nIn `sortByAscendingDemo`, if `o1.quantity - o2.quantity` returns a negative value, then `o1` comes before `o2` and vice versa. If quantity in both objects are equal (the difference is 0) then the order is not changed.\n\nResults of calling `OrderByDemo` and `sortByAscendingDemo`.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### 2. Descending Order\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nIn this JavaScript function, `sortByDescendingDemo`, two objects are switched from `sortByAscendingDemo`. To emulate the descending order, we simply switch `o1` and `o2`, which will negate the return values from the callback.\n\nResult of `OrderByDescendingDemo` and `sortByDescendingDemo`.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Closing Remark\n\nIn this article, I’ve shown examples of each LINQ method (approximate) equivalents in JavaScript.\n\nPlease feel free to leave a feedback on errors you might have spotted ![😎](https://s.w.org/images/core/emoji/2.4/72x72/1f60e.png).\n\nThe full source code and instructions on how to run them are on GitHub.\n\n- [C# source](https://github.com/dance2die/blog.LinqAndJavascript.CSharpDemo)\n- [JavaScript source](https://github.com/dance2die/blog.LinqAndJavascript.JavascriptDemo)\n\nThe post [An “Approximate” equivalent of LINQ methods in JavaScript – Part 1](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, quicktip, series",
    "path": "/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-1-382n-temp-slug-6834934",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-02-25T03:54:59.000Z"
  },
  {
    "title": "An “Approximate” equivalent of LINQ methods in JavaScript – Part 2",
    "slug": "an-approximate-equivalent-of-linq-methods-in-javascript--part-2-1ab3-temp-slug-7415665",
    "created_at": "2018-04-11T02:42:50.500Z",
    "main_image": null,
    "description": "\n\nPhoto by Daniil Silantev on Unsplash\n\nIn the previous post, I’ve covered most u...",
    "published": false,
    "published_at": "2018-03-04T03:48:33.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003csmall\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/ioYwosPYC0U?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eDaniil Silantev\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/mapping?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eIn the \u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-1-382n-temp-slug-6834934\"\u003eprevious post\u003c/a\u003e, I’ve covered most used LINQ methods and implemented them in JavaScript.\u003c/p\u003e\n\n\u003cp\u003eHere are the methods covered so far.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-1-382n-temp-slug-6834934\"\u003ePart 1\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#select\"\u003eSelect\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#aggregate\"\u003eAggregate\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#where\"\u003eWhere\u003c/a\u003e, OrderBy (\u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByAscending\"\u003eAscending\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByDescending\"\u003eDescending\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003ePart 2  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#any\"\u003eAny\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#distinct\"\u003eDistinct\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#concat\"\u003eConcat\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#selectmany\"\u003eSelectMany\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/\"\u003ePart 3\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#reverse\"\u003eReverse\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#zip\"\u003eZip\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#minmax\"\u003eMin/Max\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/\"\u003ePart 4\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#union\"\u003eUnion\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#intersect\"\u003eIntersect\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#except\"\u003eExcept\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/\"\u003ePart 5\u003c/a\u003e \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/?p=899\u0026amp;preview=true#sum\"\u003eSum\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/?p=899\u0026amp;preview=true#average\"\u003eAverage\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/?p=899\u0026amp;preview=true#count\"\u003eCount\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"overview\" href=\"#overview\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Overview\n\u003c/h3\u003e\n\n\u003cp\u003eIn this post, I will cover following methods.\u003c/p\u003e\n\n\u003cdiv class=\"table-wrapper-paragraph\"\u003e\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eLINQ Methods\u003c/th\u003e\n\u003cth\u003eJavaScript Equivalents\u003c/th\u003e\n\u003cth\u003eGo to example\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.any(v=vs.110).aspx\"\u003eAny\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\"\u003esome\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eAny\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.distinct(v=vs.110).aspx\"\u003eDistinct\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\"\u003efilter\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eDistinct\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/bb302894(v=vs.110).aspx\"\u003eConcat\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat\"\u003econcat\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eConcat\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.selectmany\"\u003eSelectMany\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax\"\u003eSpread syntax\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eSelectMany\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\u003c/div\u003e\n\n\u003cp\u003eAnd I will try to stick to using \u003ca href=\"https://stackoverflow.com/questions/20435653/what-is-vanillajs\"\u003eVanilla JS\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe sample collection used in this part is the same as the previous one but I will list them again.\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"c\" href=\"#c\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  C\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"javascript\" href=\"#javascript\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  JavaScript\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Ud6lMTxj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/26a1.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Ud6lMTxj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/26a1.png\" alt=\"⚡\"\u003e\u003c/a\u003e NOTE \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Ud6lMTxj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/26a1.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Ud6lMTxj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/26a1.png\" alt=\"⚡\"\u003e\u003c/a\u003e\u003c/strong\u003e : In all of examples, \u003ccode\u003eWriteLine\u003c/code\u003e is used for printing result in console in both C# \u0026amp; JavaScript codes to make the code difference a bit easier to see.\u003c/p\u003e\n\n\u003cp\u003eIn C#, it’s statically imported as \u003ccode\u003eusing static System.Console\u003c/code\u003e.\u003cbr\u003e\u003cbr\u003e\nIn JavaScript, it’s an alias of \u003ccode\u003econsole.log\u003c/code\u003e declared as \u003ccode\u003econst WriteLine = console.log\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"examples\" href=\"#examples\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Examples\n\u003c/h3\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"any\" href=\"#any\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e Any\n\u003c/h5\u003e\n\n\u003cp\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\"\u003esome\u003c/a\u003e is equivalent to \u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.any(v=vs.110).aspx\"\u003eAny\u003c/a\u003e in LINQ.\u003cbr\u003e\u003cbr\u003e\nThey do the same thing and both LINQ \u0026amp; JavaScript might as well have an alias to both “some” and “any” as \u003ca href=\"https://docs.microsoft.com/en-us/sql/t-sql/language-elements/some-any-transact-sql\"\u003eTSQL does\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eThe only differences in JavaScript code are:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ccode\u003esome\u003c/code\u003e is used instead of \u003ccode\u003eAny\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eYear\u003c/code\u003e is retrieved with a method call , \u003ccode\u003egetFullyear()\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"distinct\" href=\"#distinct\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e Distinct\n\u003c/h5\u003e\n\n\u003cp\u003eThere are some equivalent methods in jQuery (\u003ca href=\"https://api.jquery.com/jQuery.unique/\"\u003eunique\u003c/a\u003e) or in Lodash (\u003ca href=\"https://lodash.com/docs/4.17.5#uniqBy\"\u003euniqby\u003c/a\u003e) but I will show you two implementations in Vanilla JS.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003eThe results for all three methods are the same.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003edistinctDemo1\u003c/code\u003e in JavaScript code uses \u003ccode\u003efilter\u003c/code\u003e to filter out records that does not show up as the first element in the list (Please refer to \u003ca href=\"https://stackoverflow.com/a/14438954/4035\"\u003ethis StackOverflow question\u003c/a\u003e for more information for implementation details).\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003edistinctDemo2\u003c/code\u003e uses a \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\"\u003eSet\u003c/a\u003e object (sets by definition stores only unique values and is available from ES6) to store unique values in it, and uses a spread syntax to convert the \u003ccode\u003eSet\u003c/code\u003e object instance to an array (You could use another new ES6 addition, \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"\u003eArray.from\u003c/a\u003e if you think it’s not readable enough, as shown below).\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"concat\" href=\"#concat\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e Concat\n\u003c/h5\u003e\n\n\u003cp\u003eThankfully \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--cWm7GRHA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f64f.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--cWm7GRHA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f64f.png\" alt=\"🙏\"\u003e\u003c/a\u003e, JavaScript has a method named \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat\"\u003econcat\u003c/a\u003e, which does what LINQ version does.\u003cbr\u003e\u003cbr\u003e\n \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--B4YTvPl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/26a0.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--B4YTvPl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/26a0.png\" alt=\"⚠\"\u003e\u003c/a\u003e WARNING: Beware of super contrived example used in this demo.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eSyntax is exactly the same \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--UAlEQa1a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f604.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--UAlEQa1a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f604.png\" alt=\"😄\"\u003e\u003c/a\u003e(except capitalization), so moving right along to the next example \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--JD8AeJeK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/2935.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--JD8AeJeK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/2935.png\" alt=\"⤵\"\u003e\u003c/a\u003e, SelectMany.\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"selectmany\" href=\"#selectmany\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e SelectMany\n\u003c/h5\u003e\n\n\u003cp\u003eThis example does exactly the same thing (and just as contrived) as Concat does but wanted to share a different way you can implement it in JavaScript.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003eAs you can see, the result is exactly the same as the one in Concat demo.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eSelectMany\u003c/code\u003e basically flattens multiple collections into a single one, while\u003cbr\u003e\u003cbr\u003e\n\u003ccode\u003eSpread syntax\u003c/code\u003e in ES6 is used to flatten all arrays into a single one.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"closing-remark\" href=\"#closing-remark\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Closing Remark\n\u003c/h3\u003e\n\n\u003cp\u003eI have selected frequently used LINQ methods (at least for me that is) and shown you the JavaScript implementations.\u003cbr\u003e\u003cbr\u003e\nI hope you found the mapping between LINQ to JavaScript code useful.\u003cbr\u003e\u003cbr\u003e\nPlease let me know should you find any errors or improvements I can make to the codes.\u003c/p\u003e\n\n\u003cp\u003eThe full source code and instructions on how to run them are on GitHub.\u003cbr\u003e\u003cbr\u003e\n(Same as the\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-1-382n-temp-slug-6834934\"\u003efirst part\u003c/a\u003e as demos are added onto existing source code)\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dance2die/blog.LinqAndJavascript.CSharpDemo\"\u003eC# source\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dance2die/blog.LinqAndJavascript.JavascriptDemo\"\u003eJavaScript source\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/\"\u003eAn “Approximate” equivalent of LINQ methods in JavaScript – Part 2\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: An “Approximate” equivalent of LINQ methods in JavaScript – Part 2\npublished: false\ntags: Blog Entry,Programming,quick tip,Series\ncanonical_url: https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/\n---\n\n\u003csmall\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/ioYwosPYC0U?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eDaniil Silantev\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/mapping?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/small\u003e\n\nIn the [previous post](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-1-382n-temp-slug-6834934), I’ve covered most used LINQ methods and implemented them in JavaScript.\n\nHere are the methods covered so far.\n\n1. [Part 1](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-1-382n-temp-slug-6834934)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Select](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#select), [Aggregate](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#aggregate), [Where](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#where), OrderBy ([Ascending](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByAscending), [Descending](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByDescending))\n2. Part 2  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Any](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#any), [Distinct](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#distinct), [Concat](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#concat), [SelectMany](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#selectmany)\n3. [Part 3](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Reverse](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#reverse), [Zip](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#zip), [Min/Max](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#minmax)\n4. [Part 4](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Union](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#union), [Intersect](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#intersect), [Except](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#except)\n5. [Part 5](https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/) ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Sum](https://www.slightedgecoder.com/?p=899\u0026preview=true#sum), [Average](https://www.slightedgecoder.com/?p=899\u0026preview=true#average), [Count](https://www.slightedgecoder.com/?p=899\u0026preview=true#count)\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Overview\n\nIn this post, I will cover following methods.\n\n| LINQ Methods | JavaScript Equivalents | Go to example |\n| --- | --- | --- |\n| [Any](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.any(v=vs.110).aspx) | [some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some) | Any |\n| [Distinct](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.distinct(v=vs.110).aspx) | [filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter) | Distinct |\n| [Concat](https://msdn.microsoft.com/en-us/library/bb302894(v=vs.110).aspx) | [concat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat) | Concat |\n| [SelectMany](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.selectmany) | [Spread syntax](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax) | SelectMany |\n\n\u003c!-- #tablepress-2 from cache --\u003e\n\nAnd I will try to stick to using [Vanilla JS](https://stackoverflow.com/questions/20435653/what-is-vanillajs).\n\nThe sample collection used in this part is the same as the previous one but I will list them again.\n\n###### C#\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### JavaScript\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n**![⚡](https://s.w.org/images/core/emoji/2.4/72x72/26a1.png) NOTE ![⚡](https://s.w.org/images/core/emoji/2.4/72x72/26a1.png)** : In all of examples, `WriteLine` is used for printing result in console in both C# \u0026 JavaScript codes to make the code difference a bit easier to see.\n\nIn C#, it’s statically imported as `using static System.Console`.  \nIn JavaScript, it’s an alias of `console.log` declared as `const WriteLine = console.log`.\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Examples\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) Any\n\n[some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some) is equivalent to [Any](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.any(v=vs.110).aspx) in LINQ.  \nThey do the same thing and both LINQ \u0026 JavaScript might as well have an alias to both “some” and “any” as [TSQL does](https://docs.microsoft.com/en-us/sql/t-sql/language-elements/some-any-transact-sql).\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nThe only differences in JavaScript code are:\n\n1. `some` is used instead of `Any`\n2. `Year` is retrieved with a method call , `getFullyear()`\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) Distinct\n\nThere are some equivalent methods in jQuery ([unique](https://api.jquery.com/jQuery.unique/)) or in Lodash ([uniqby](https://lodash.com/docs/4.17.5#uniqBy)) but I will show you two implementations in Vanilla JS.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\nThe results for all three methods are the same.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n`distinctDemo1` in JavaScript code uses `filter` to filter out records that does not show up as the first element in the list (Please refer to [this StackOverflow question](https://stackoverflow.com/a/14438954/4035) for more information for implementation details).\n\n`distinctDemo2` uses a [Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set) object (sets by definition stores only unique values and is available from ES6) to store unique values in it, and uses a spread syntax to convert the `Set` object instance to an array (You could use another new ES6 addition, [Array.from](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from) if you think it’s not readable enough, as shown below).\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) Concat\n\nThankfully ![🙏](https://s.w.org/images/core/emoji/2.4/72x72/1f64f.png), JavaScript has a method named [concat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat), which does what LINQ version does.  \n ![⚠](https://s.w.org/images/core/emoji/2.4/72x72/26a0.png) WARNING: Beware of super contrived example used in this demo.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nSyntax is exactly the same ![😄](https://s.w.org/images/core/emoji/2.4/72x72/1f604.png)(except capitalization), so moving right along to the next example ![⤵](https://s.w.org/images/core/emoji/2.4/72x72/2935.png), SelectMany.\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) SelectMany\n\nThis example does exactly the same thing (and just as contrived) as Concat does but wanted to share a different way you can implement it in JavaScript.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\nAs you can see, the result is exactly the same as the one in Concat demo.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n`SelectMany` basically flattens multiple collections into a single one, while  \n`Spread syntax` in ES6 is used to flatten all arrays into a single one.\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Closing Remark\n\nI have selected frequently used LINQ methods (at least for me that is) and shown you the JavaScript implementations.  \nI hope you found the mapping between LINQ to JavaScript code useful.  \nPlease let me know should you find any errors or improvements I can make to the codes.\n\nThe full source code and instructions on how to run them are on GitHub.  \n(Same as the[first part](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-1-382n-temp-slug-6834934) as demos are added onto existing source code)\n\n- [C# source](https://github.com/dance2die/blog.LinqAndJavascript.CSharpDemo)\n- [JavaScript source](https://github.com/dance2die/blog.LinqAndJavascript.JavascriptDemo)\n\nThe post [An “Approximate” equivalent of LINQ methods in JavaScript – Part 2](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, quicktip, series",
    "path": "/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-2-1ab3-temp-slug-7415665",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-03-04T03:48:33.000Z"
  },
  {
    "title": "An “Approximate” equivalent of LINQ methods in JavaScript – Part 3",
    "slug": "an-approximate-equivalent-of-linq-methods-in-javascript--part-3-3adl-temp-slug-946966",
    "created_at": "2018-04-11T02:42:51.522Z",
    "main_image": null,
    "description": "\n\nPhoto by Chris Lawton on Unsplash\n\nThis is the 3rd part of the series, An “Appr...",
    "published": false,
    "published_at": "2018-03-11T03:18:13.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003csmall\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/o0l-M8W_7wA?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eChris Lawton\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/mapping?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eThis is the 3rd part of the series, \u003cstrong\u003eAn “Approximate” equivalent of LINQ methods in JavaScript\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eHere are the methods covered so far.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-1-382n-temp-slug-6834934\"\u003ePart 1\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#select\"\u003eSelect\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#aggregate\"\u003eAggregate\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#where\"\u003eWhere\u003c/a\u003e, OrderBy (\u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByAscending\"\u003eAscending\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByDescending\"\u003eDescending\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-2-1ab3-temp-slug-7415665\"\u003ePart 2\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#any\"\u003eAny\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#distinct\"\u003eDistinct\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#concat\"\u003eConcat\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#selectmany\"\u003eSelectMany\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003ePart 3  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#reverse\"\u003eReverse\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#zip\"\u003eZip\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#minmax\"\u003eMin/Max\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/\"\u003ePart 4\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#union\"\u003eUnion\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#intersect\"\u003eIntersect\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#except\"\u003eExcept\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/\"\u003ePart 5\u003c/a\u003e \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/?p=899\u0026amp;preview=true#sum\"\u003eSum\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/?p=899\u0026amp;preview=true#average\"\u003eAverage\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/?p=899\u0026amp;preview=true#count\"\u003eCount\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"overview\" href=\"#overview\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Overview\n\u003c/h3\u003e\n\n\u003cp\u003eHere are the methods covered.\u003c/p\u003e\n\n\u003cdiv class=\"table-wrapper-paragraph\"\u003e\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eLINQ Methods\u003c/th\u003e\n\u003cth\u003eJavaScript Equivalents\u003c/th\u003e\n\u003cth\u003eGo to example\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/bb358497(v=vs.110).aspx\"\u003eReverse\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse\"\u003ereverse\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eReverse\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/dd267698(v=vs.110).aspx\"\u003eZip\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"\u003emap\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eZip\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.min(v=vs.110).aspx\"\u003eMin\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/min\"\u003emin\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eMin/Max\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.max(v=vs.110).aspx\"\u003eMax\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/max\"\u003emax\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eMin/Max\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\u003c/div\u003e\n\n\u003cp\u003eAnd I will try to stick to using Vanilla JS as I have so far.\u003c/p\u003e\n\n\u003cp\u003eThe sample collection used in this part is the same as all previous ones but I will list again.\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"c\" href=\"#c\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  C\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"javascript\" href=\"#javascript\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  JavaScript\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eOK, now let’s dive into some examples \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GAmW9dcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f44d.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GAmW9dcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f44d.png\" alt=\"👍\"\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"examples\" href=\"#examples\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Examples\n\u003c/h3\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"reverse\" href=\"#reverse\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e Reverse\n\u003c/h5\u003e\n\n\u003cp\u003eAh yes. Yet again, there is another JavaScript method named same as in LINQ, \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse\"\u003ereverse\u003c/a\u003e.\u003cbr\u003e\u003cbr\u003e\n \u003cstrong\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Ud6lMTxj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/26a1.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Ud6lMTxj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/26a1.png\" alt=\"⚡\"\u003e\u003c/a\u003e NOTE \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Ud6lMTxj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/26a1.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Ud6lMTxj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/26a1.png\" alt=\"⚡\"\u003e\u003c/a\u003e\u003c/strong\u003e: Both in LINQ \u0026amp; JavaScript, reverse has a side effect; it alters current collection and doesn’t return a new array.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eReverse\u003c/strong\u003e is different from \u003ca href=\"https://msdn.microsoft.com/en-us/library/bb534855(v=vs.110).aspx\"\u003eOrderByDescending\u003c/a\u003e that you don’t specify which element to reverse with. It simply reverses the  current sequence in opposite order.\u003c/p\u003e\n\n\u003cp\u003eSo to make the demo show how reverse works, I flipped first half and last half of the orders and reversed the list.\u003c/p\u003e\n\n\u003cp\u003eAnd now let’s move onto the next example, Zip, which is you might use seldom.\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"zip\" href=\"#zip\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e Zip\n\u003c/h5\u003e\n\n\u003cp\u003eThere is no one-to-one equivalence in JavaScript but you can emulate one.\u003cbr\u003e\u003cbr\u003e\nNote that Lodash has \u003ca href=\"https://lodash.com/docs/4.17.5#zipWith\"\u003ezipWith\u003c/a\u003e method which works the same as the LINQ version (Maybe I will write LINQ -\u0026gt; Lodash equivalent methods as a next series \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ROERhfb2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f609.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ROERhfb2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f609.png\" alt=\"😉\"\u003e\u003c/a\u003e).\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eAs \u003ca href=\"https://msdn.microsoft.com/en-us/library/dd267698(v=vs.110).aspx\"\u003eZip\u003c/a\u003e returns one element from each collection in order, we can emulate the functionality in JavaScript with \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"\u003emap\u003c/a\u003e, which accepts a callback with an index.\u003cbr\u003e\u003cbr\u003e\nWe can simply retrieve the matching second collection’s item (\u003ccode\u003econst text = orderNumbersInText[index]\u003c/code\u003e) with the callback’s index.\u003cbr\u003e\u003cbr\u003e\nRefer to a simpler case on this \u003ca href=\"https://stackoverflow.com/questions/22015684/how-do-i-zip-two-arrays-in-javascript/22015771#22015771\"\u003eStackOverflow answer\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"minmax\" href=\"#minmax\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e Min/Max\n\u003c/h5\u003e\n\n\u003cp\u003eAlthough Lodash has a similar methods, \u003ca href=\"https://lodash.com/docs/4.17.5#minBy\"\u003eminBy\u003c/a\u003e and \u003ca href=\"https://lodash.com/docs/4.17.5#maxBy\"\u003emaxBy\u003c/a\u003e that works the same way as LINQ, I will show you a way to implement it using \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/min\"\u003eMath.min\u003c/a\u003e and \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/max\"\u003eMath.max\u003c/a\u003e. (I’ve combined two methods since both \u003ccode\u003emin\u003c/code\u003e and \u003ccode\u003emax\u003c/code\u003e are called the same way)\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eYou can use “Math.min/max” functions to emulate LINQ versions of Min/Max.\u003c/p\u003e\n\n\u003cp\u003eNotice that spread syntax (\u003ccode\u003e...orders\u003c/code\u003e) is used within Math.min/max functions because those functions accept a list of values, not an array, So the array destructuring is required.\u003c/p\u003e\n\n\u003cp\u003eIf you use “min/max” frequently or make it look just like the LINQ version, you can simply extend the Array prototype as shown below.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eNow the it looks the same as the LINQ version.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"closing-remark\" href=\"#closing-remark\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Closing Remark\n\u003c/h3\u003e\n\n\u003cp\u003eI’ve chosen some random LINQ methods this time but I will show you how to convert LINQ methods dealing with \u003ca href=\"https://en.wikipedia.org/wiki/Set_(mathematics)#Basic_operations\"\u003eset operations\u003c/a\u003e (union, intersect, etc) in JavaScript.\u003c/p\u003e\n\n\u003cp\u003eThe full source code and instructions on how to run them are on GitHub.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dance2die/blog.LinqAndJavascript.CSharpDemo\"\u003eC# source\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dance2die/blog.LinqAndJavascript.JavascriptDemo\"\u003eJavaScript source\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/\"\u003eAn “Approximate” equivalent of LINQ methods in JavaScript – Part 3\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: An “Approximate” equivalent of LINQ methods in JavaScript – Part 3\npublished: false\ntags: Blog Entry,Programming,quick tip,Series\ncanonical_url: https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/\n---\n\n\u003csmall\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/o0l-M8W_7wA?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eChris Lawton\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/mapping?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/small\u003e\n\nThis is the 3rd part of the series, **An “Approximate” equivalent of LINQ methods in JavaScript**.\n\nHere are the methods covered so far.\n\n1. [Part 1](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-1-382n-temp-slug-6834934)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Select](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#select), [Aggregate](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#aggregate), [Where](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#where), OrderBy ([Ascending](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByAscending), [Descending](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByDescending))\n2. [Part 2](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-2-1ab3-temp-slug-7415665)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Any](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#any), [Distinct](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#distinct), [Concat](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#concat), [SelectMany](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#selectmany)\n3. Part 3  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Reverse](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#reverse), [Zip](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#zip), [Min/Max](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#minmax)\n4. [Part 4](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Union](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#union), [Intersect](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#intersect), [Except](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#except)\n5. [Part 5](https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/) ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Sum](https://www.slightedgecoder.com/?p=899\u0026preview=true#sum), [Average](https://www.slightedgecoder.com/?p=899\u0026preview=true#average), [Count](https://www.slightedgecoder.com/?p=899\u0026preview=true#count)\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Overview\n\nHere are the methods covered.\n\n| LINQ Methods | JavaScript Equivalents | Go to example |\n| --- | --- | --- |\n| [Reverse](https://msdn.microsoft.com/en-us/library/bb358497(v=vs.110).aspx) | [reverse](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse) | Reverse |\n| [Zip](https://msdn.microsoft.com/en-us/library/dd267698(v=vs.110).aspx) | [map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) | Zip |\n| [Min](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.min(v=vs.110).aspx) | [min](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/min) | Min/Max |\n| [Max](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.max(v=vs.110).aspx) | [max](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/max) | Min/Max |\n\n\u003c!-- #tablepress-3 from cache --\u003e\n\nAnd I will try to stick to using Vanilla JS as I have so far.\n\nThe sample collection used in this part is the same as all previous ones but I will list again.\n\n###### C#\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### JavaScript\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nOK, now let’s dive into some examples ![👍](https://s.w.org/images/core/emoji/2.4/72x72/1f44d.png).\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Examples\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) Reverse\n\nAh yes. Yet again, there is another JavaScript method named same as in LINQ, [reverse](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse).  \n **![⚡](https://s.w.org/images/core/emoji/2.4/72x72/26a1.png) NOTE ![⚡](https://s.w.org/images/core/emoji/2.4/72x72/26a1.png)**: Both in LINQ \u0026 JavaScript, reverse has a side effect; it alters current collection and doesn’t return a new array.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n**Reverse** is different from [OrderByDescending](https://msdn.microsoft.com/en-us/library/bb534855(v=vs.110).aspx) that you don’t specify which element to reverse with. It simply reverses the  current sequence in opposite order.\n\nSo to make the demo show how reverse works, I flipped first half and last half of the orders and reversed the list.\n\nAnd now let’s move onto the next example, Zip, which is you might use seldom.\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) Zip\n\nThere is no one-to-one equivalence in JavaScript but you can emulate one.  \nNote that Lodash has [zipWith](https://lodash.com/docs/4.17.5#zipWith) method which works the same as the LINQ version (Maybe I will write LINQ -\\\u003e Lodash equivalent methods as a next series ![😉](https://s.w.org/images/core/emoji/2.4/72x72/1f609.png)).\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nAs [Zip](https://msdn.microsoft.com/en-us/library/dd267698(v=vs.110).aspx) returns one element from each collection in order, we can emulate the functionality in JavaScript with [map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map), which accepts a callback with an index.  \nWe can simply retrieve the matching second collection’s item (`const text = orderNumbersInText[index]`) with the callback’s index.  \nRefer to a simpler case on this [StackOverflow answer](https://stackoverflow.com/questions/22015684/how-do-i-zip-two-arrays-in-javascript/22015771#22015771).\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) Min/Max\n\nAlthough Lodash has a similar methods, [minBy](https://lodash.com/docs/4.17.5#minBy) and [maxBy](https://lodash.com/docs/4.17.5#maxBy) that works the same way as LINQ, I will show you a way to implement it using [Math.min](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/min) and [Math.max](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/max). (I’ve combined two methods since both `min` and `max` are called the same way)\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nYou can use “Math.min/max” functions to emulate LINQ versions of Min/Max.\n\nNotice that spread syntax (`...orders`) is used within Math.min/max functions because those functions accept a list of values, not an array, So the array destructuring is required.\n\nIf you use “min/max” frequently or make it look just like the LINQ version, you can simply extend the Array prototype as shown below.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nNow the it looks the same as the LINQ version.\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Closing Remark\n\nI’ve chosen some random LINQ methods this time but I will show you how to convert LINQ methods dealing with [set operations](https://en.wikipedia.org/wiki/Set_(mathematics)#Basic_operations) (union, intersect, etc) in JavaScript.\n\nThe full source code and instructions on how to run them are on GitHub.\n\n- [C# source](https://github.com/dance2die/blog.LinqAndJavascript.CSharpDemo)\n- [JavaScript source](https://github.com/dance2die/blog.LinqAndJavascript.JavascriptDemo)\n\nThe post [An “Approximate” equivalent of LINQ methods in JavaScript – Part 3](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, quicktip, series",
    "path": "/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-3-3adl-temp-slug-946966",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-03-11T03:18:13.000Z"
  },
  {
    "title": "An “Approximate” equivalent of LINQ methods in JavaScript – Part 4",
    "slug": "an-approximate-equivalent-of-linq-methods-in-javascript--part-4-52g2-temp-slug-5326714",
    "created_at": "2018-04-11T02:42:52.312Z",
    "main_image": null,
    "description": "\n\nPhoto by Chris Lawton on Unsplash\nThis is the 4th part of the series, An “Appro...",
    "published": false,
    "published_at": "2018-03-22T02:01:04.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003csmall\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/yRf7ABVDddM?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eChris Lawton\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/mapping?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/small\u003e\u003cbr\u003e\u003cbr\u003e\nThis is the 4th part of the series, \u003cstrong\u003eAn “Approximate” equivalent of LINQ methods in JavaScript\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eI will cover common \u003ca href=\"https://www.probabilitycourse.com/chapter1/1_2_2_set_operations.php\"\u003eSet operations\u003c/a\u003e in this article.\u003c/p\u003e\n\n\u003cp\u003eHere are the methods covered so far.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-1-382n-temp-slug-6834934\"\u003ePart 1\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#select\"\u003eSelect\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#aggregate\"\u003eAggregate\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#where\"\u003eWhere\u003c/a\u003e, OrderBy (\u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByAscending\"\u003eAscending\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByDescending\"\u003eDescending\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-2-1ab3-temp-slug-7415665\"\u003ePart 2\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#any\"\u003eAny\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#distinct\"\u003eDistinct\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#concat\"\u003eConcat\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#selectmany\"\u003eSelectMany\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-3-3adl-temp-slug-946966\"\u003ePart 3\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#reverse\"\u003eReverse\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#zip\"\u003eZip\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#minmax\"\u003eMin/Max\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003ePart 4  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#union\"\u003eUnion\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#intersect\"\u003eIntersect\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#except\"\u003eExcept\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/\"\u003ePart 5\u003c/a\u003e \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/?p=899\u0026amp;preview=true#sum\"\u003eSum\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/?p=899\u0026amp;preview=true#average\"\u003eAverage\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/?p=899\u0026amp;preview=true#count\"\u003eCount\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"overview\" href=\"#overview\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Overview\n\u003c/h3\u003e\n\n\u003cp\u003eHere are the methods covered.\u003c/p\u003e\n\n\u003cdiv class=\"table-wrapper-paragraph\"\u003e\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eLINQ Methods\u003c/th\u003e\n\u003cth\u003eLodash Equivalents\u003c/th\u003e\n\u003cth\u003eGo to example\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.union(v=vs.110).aspx\"\u003eUnion\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://lodash.com/docs/4.17.5#union\"\u003e_.union\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eUnion\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.intersect(v=vs.110).aspx\"\u003eIntersect\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://lodash.com/docs/4.17.5#intersectionBy\"\u003e_.intersectionBy\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eIntersect\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.except(v=vs.110).aspx\"\u003eExcept\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://lodash.com/docs/4.17.5#differenceBy\"\u003e_.differenceBy\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eExcept\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\u003c/div\u003e\n\n\u003cp\u003eThere is no one-to-one equivalent in JavaScript, so I added \u003ca href=\"https://lodash.com/docs\"\u003eLodash\u003c/a\u003e equivalents in the table this time.\u003cbr\u003e\u003cbr\u003e\nFor production codes, use Lodash as their implementation is thoroughly battle-tested.\u003c/p\u003e\n\n\u003cp\u003eThe sample collections used in this part are shown as below.\u003cbr\u003e\u003cbr\u003e\n(\u003ccode\u003eOrders\u003c/code\u003e is same as last 3 series and I added \u003ccode\u003eDomesticOrders\u003c/code\u003e and \u003ccode\u003eInternationalOrders\u003c/code\u003e for examples this time)\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"c\" href=\"#c\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  C\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"javascript\" href=\"#javascript\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  JavaScript\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"examples\" href=\"#examples\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Examples\n\u003c/h3\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"union\" href=\"#union\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e Union\n\u003c/h5\u003e\n\n\u003cp\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.union(v=vs.110).aspx\"\u003eUnion\u003c/a\u003e combines two sequences (of type \u003ca href=\"https://msdn.microsoft.com/en-us/library/9eekhta0(v=vs.110).aspx\"\u003eIEnumerable\u0026lt;T\u0026gt;\u003c/a\u003e) into one without duplicates.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eI’ve extended the Array prototype to make the JavaScript version look similar to the LINQ version.\u003cbr\u003e\u003cbr\u003e\n \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aS_MndCN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f4dd.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aS_MndCN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f4dd.png\" alt=\"📝\"\u003e\u003c/a\u003e \u003cstrong\u003eNOTE\u003c/strong\u003e : “Union” in Lodash is named \u003ca href=\"https://lodash.com/docs/4.17.5#union\"\u003e_.union\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"intersect\" href=\"#intersect\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e Intersect\n\u003c/h5\u003e\n\n\u003cp\u003e“Intersect” compares two sequences and return another sequence with a “common” value.\u003c/p\u003e\n\n\u003cp\u003eHow do you check for the “commonness”?\u003cbr\u003e\u003cbr\u003e\n\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.intersect(v=vs.110).aspx\"\u003eIntersect\u003c/a\u003e in LINQ provides an overload that lets you specify how to compare each value in two sequences by passing an object of type implementing \u003ca href=\"https://msdn.microsoft.com/en-us/library/ms132151(v=vs.110).aspx\"\u003eIEqualityComparer\u0026lt;T\u0026gt;\u003c/a\u003e interface.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eOur contrived \u003ccode\u003eorder\u003c/code\u003e array contains objects with a property called \u003ccode\u003eid\u003c/code\u003e so I passed a callback (\u003ccode\u003eidSelector\u003c/code\u003e) to let \u003ccode\u003eArray.prototype.intersect\u003c/code\u003e to use it to make a comparison for each value in two sequences.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aS_MndCN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f4dd.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aS_MndCN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f4dd.png\" alt=\"📝\"\u003e\u003c/a\u003e \u003cstrong\u003eNOTE\u003c/strong\u003e : While \u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.intersect(v=vs.110).aspx\"\u003eIntersect\u003c/a\u003e in LINQ is similar to \u003ca href=\"https://lodash.com/docs/4.17.5#intersectionWith\"\u003e_.intersectionWith\u003c/a\u003e in Lodash, JavaScript version is roughly equivalent to _.\u003ca href=\"https://lodash.com/docs/4.17.5#intersectionBy\"\u003eintersectionBy\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"except-difference\" href=\"#except-difference\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e Except (Difference)\n\u003c/h5\u003e\n\n\u003cp\u003e“Except” compares two sequences and return a new sequence with values that exists in the caller but not in the compared.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eThe implementation of \u003ccode\u003eArray.prototype.except\u003c/code\u003e is almost same as intersect.\u003c/p\u003e\n\n\u003cp\u003eThe only difference between \u003ccode\u003eArray.prototype.intersect\u003c/code\u003e and \u003ccode\u003eArray.prototype.except\u003c/code\u003e is whether to include the record in the other set or not.\u003c/p\u003e\n\n\u003cp\u003eTake a close look at callback in \u003ccode\u003efilter\u003c/code\u003e method.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aS_MndCN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f4dd.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aS_MndCN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f4dd.png\" alt=\"📝\"\u003e\u003c/a\u003e \u003cstrong\u003eNOTE\u003c/strong\u003e : While \u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.except(v=vs.110).aspx\"\u003eExcept\u003c/a\u003ein LINQ is similar to\u003ca href=\"https://lodash.com/docs/4.17.5#differenceWith\"\u003e _.differenceWith\u003c/a\u003e in Lodash, JavaScript version is roughly equivalent to \u003ca href=\"https://lodash.com/docs/4.17.5#differenceBy\"\u003e_.differenceBy\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"closing-remark\" href=\"#closing-remark\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Closing Remark\n\u003c/h3\u003e\n\n\u003cp\u003e“Union”, “Intersect”, and “Except” are the most common Set operations.\u003cbr\u003e\u003cbr\u003e\nI hope this article helped you understand how to implement Set operations in JavaScript.\u003c/p\u003e\n\n\u003cp\u003eJavaScript implementations in the examples above are not production ready as it’s not optimized/tested.\u003cbr\u003e\u003cbr\u003e\nSo as I mentioned before, use Lodash for Set operations in JavaScript.\u003c/p\u003e\n\n\u003cp\u003eAny feedback or error reports are always welcome.\u003c/p\u003e\n\n\u003cp\u003eThe full source code and instructions on how to run them are on GitHub.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dance2die/blog.LinqAndJavascript.CSharpDemo\"\u003eC# source\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dance2die/blog.LinqAndJavascript.JavascriptDemo\"\u003eJavaScript source\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/\"\u003eAn “Approximate” equivalent of LINQ methods in JavaScript – Part 4\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: An “Approximate” equivalent of LINQ methods in JavaScript – Part 4\npublished: false\ntags: Blog Entry,Programming,quick tip,Series\ncanonical_url: https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/\n---\n\n\u003csmall\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/yRf7ABVDddM?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eChris Lawton\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/mapping?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/small\u003e  \nThis is the 4th part of the series, **An “Approximate” equivalent of LINQ methods in JavaScript**.\n\nI will cover common [Set operations](https://www.probabilitycourse.com/chapter1/1_2_2_set_operations.php) in this article.\n\nHere are the methods covered so far.\n\n1. [Part 1](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-1-382n-temp-slug-6834934)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Select](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#select), [Aggregate](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#aggregate), [Where](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#where), OrderBy ([Ascending](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByAscending), [Descending](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByDescending))\n2. [Part 2](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-2-1ab3-temp-slug-7415665)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Any](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#any), [Distinct](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#distinct), [Concat](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#concat), [SelectMany](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#selectmany)\n3. [Part 3](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-3-3adl-temp-slug-946966)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Reverse](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#reverse), [Zip](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#zip), [Min/Max](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#minmax)\n4. Part 4  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Union](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#union), [Intersect](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#intersect), [Except](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#except)\n5. [Part 5](https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/) ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Sum](https://www.slightedgecoder.com/?p=899\u0026preview=true#sum), [Average](https://www.slightedgecoder.com/?p=899\u0026preview=true#average), [Count](https://www.slightedgecoder.com/?p=899\u0026preview=true#count)\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Overview\n\nHere are the methods covered.\n\n| LINQ Methods | Lodash Equivalents | Go to example |\n| --- | --- | --- |\n| [Union](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.union(v=vs.110).aspx) | [\\_.union](https://lodash.com/docs/4.17.5#union) | Union |\n| [Intersect](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.intersect(v=vs.110).aspx) | [\\_.intersectionBy](https://lodash.com/docs/4.17.5#intersectionBy) | Intersect |\n| [Except](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.except(v=vs.110).aspx) | [\\_.differenceBy](https://lodash.com/docs/4.17.5#differenceBy) | Except |\n\n\u003c!-- #tablepress-4 from cache --\u003e  \nThere is no one-to-one equivalent in JavaScript, so I added [Lodash](https://lodash.com/docs) equivalents in the table this time.  \nFor production codes, use Lodash as their implementation is thoroughly battle-tested.\n\nThe sample collections used in this part are shown as below.  \n(`Orders` is same as last 3 series and I added `DomesticOrders` and `InternationalOrders` for examples this time)\n\n###### C#\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### JavaScript\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Examples\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) Union\n\n[Union](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.union(v=vs.110).aspx) combines two sequences (of type [IEnumerable\\\u003cT\\\u003e](https://msdn.microsoft.com/en-us/library/9eekhta0(v=vs.110).aspx)) into one without duplicates.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nI’ve extended the Array prototype to make the JavaScript version look similar to the LINQ version.  \n ![📝](https://s.w.org/images/core/emoji/2.4/72x72/1f4dd.png) **NOTE** : “Union” in Lodash is named [\\_.union](https://lodash.com/docs/4.17.5#union).\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) Intersect\n\n“Intersect” compares two sequences and return another sequence with a “common” value.\n\nHow do you check for the “commonness”?  \n[Intersect](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.intersect(v=vs.110).aspx) in LINQ provides an overload that lets you specify how to compare each value in two sequences by passing an object of type implementing [IEqualityComparer\\\u003cT\\\u003e](https://msdn.microsoft.com/en-us/library/ms132151(v=vs.110).aspx) interface.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nOur contrived `order` array contains objects with a property called `id` so I passed a callback (`idSelector`) to let `Array.prototype.intersect` to use it to make a comparison for each value in two sequences.\n\n![📝](https://s.w.org/images/core/emoji/2.4/72x72/1f4dd.png) **NOTE** : While [Intersect](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.intersect(v=vs.110).aspx) in LINQ is similar to [\\_.intersectionWith](https://lodash.com/docs/4.17.5#intersectionWith) in Lodash, JavaScript version is roughly equivalent to \\_.[intersectionBy](https://lodash.com/docs/4.17.5#intersectionBy).\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) Except (Difference)\n\n“Except” compares two sequences and return a new sequence with values that exists in the caller but not in the compared.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nThe implementation of `Array.prototype.except` is almost same as intersect.\n\nThe only difference between `Array.prototype.intersect` and `Array.prototype.except` is whether to include the record in the other set or not.\n\nTake a close look at callback in `filter` method.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n![📝](https://s.w.org/images/core/emoji/2.4/72x72/1f4dd.png) **NOTE** : While [Except](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.except(v=vs.110).aspx)in LINQ is similar to[ \\_.differenceWith](https://lodash.com/docs/4.17.5#differenceWith) in Lodash, JavaScript version is roughly equivalent to [\\_.differenceBy](https://lodash.com/docs/4.17.5#differenceBy).\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Closing Remark\n\n“Union”, “Intersect”, and “Except” are the most common Set operations.  \nI hope this article helped you understand how to implement Set operations in JavaScript.\n\nJavaScript implementations in the examples above are not production ready as it’s not optimized/tested.  \nSo as I mentioned before, use Lodash for Set operations in JavaScript.\n\nAny feedback or error reports are always welcome.\n\nThe full source code and instructions on how to run them are on GitHub.\n\n- [C# source](https://github.com/dance2die/blog.LinqAndJavascript.CSharpDemo)\n- [JavaScript source](https://github.com/dance2die/blog.LinqAndJavascript.JavascriptDemo)\n\nThe post [An “Approximate” equivalent of LINQ methods in JavaScript – Part 4](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, quicktip, series",
    "path": "/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-4-52g2-temp-slug-5326714",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-03-22T02:01:04.000Z"
  },
  {
    "title": "A valid usage of Singleton Pattern (with Null object Pattern)",
    "slug": "a-valid-usage-of-singleton-pattern-with-null-object-pattern-3gfj",
    "created_at": "2018-04-11T02:42:52.807Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/j164f9mi3uy997x2l5bq.jpg",
    "description": "\n\nPhoto by Chetan Menaria on Unsplash\nSingleton has a bad rep for being an anti-p...",
    "published": true,
    "published_at": "2018-03-26T02:30:33.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003csub\u003e\u003csup\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/oxVjCyH_ldQ?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eChetan Menaria\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/loneliness?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/sup\u003e\u003c/sub\u003e\u003cbr\u003e\nSingleton has a bad rep for being an anti-pattern.\u003cbr\u003e\nYou might have been burned bad with it.\u003c/p\u003e\n\n\u003cp\u003eI learned from \u003ca href=\"https://www.codingblocks.net/author/outlaw/\"\u003eMichael Outlaw\u003c/a\u003e from \u003ca href=\"https://www.codingblocks.net/podcast/episode-16-design-patterns-part-2-oh-behave/\"\u003eCoding Blocks podcast episode 16\u003c/a\u003e that \u003ca href=\"https://en.wikipedia.org/wiki/Singleton_pattern\"\u003eSingleton pattern\u003c/a\u003e can come in handy in conjunction with \u003ca href=\"https://en.wikipedia.org/wiki/Null_object_pattern\"\u003eNull object pattern\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eLet’s dive in.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"why-implement-a-null-object-as-a-singleton\" href=\"#why-implement-a-null-object-as-a-singleton\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🤔 Why implement a Null object as a singleton?\n\u003c/h2\u003e\n\n\u003cp\u003e42 minutes into the Coding Blocks Episode 16, Michael Outlaw explains two reasons.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003col\u003e\n\u003cli\u003e“If you have two versions of null objects, they should be identical, why waste memory to have same nothingness repeated”.\u003c/li\u003e\n\u003cli\u003eFor equality checks – Each null object can be compared by reference.\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eDepending on a situation you might not even need to do a equality check as a null object usually does nothing (as you can see in the example below.)\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eTL;DR\u003c/strong\u003e – You can stop reading here.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"an-example-implementation\" href=\"#an-example-implementation\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ✍️ An Example Implementation\n\u003c/h2\u003e\n\n\u003cp\u003eHere is an example of how you can use a Singleton pattern with a Null object pattern.\u003cbr\u003e\nSuppose that there is a simple factory (PaymentStrategyFactory) that returns a strategy object instance for processing a payment given a provider name.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/aad6b604536afeb10f71771cc42e3853.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003ePayPal \u0026amp; ApplePay strategies return “Successful” or “Failed” process status at random.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/8d0f0f6f47f01a516f1657a7e500dd7b.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\u003cbr\u003e\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/496655cf6ec63b4dd74da93c4e6e180b.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eIf a provider name is not supported, the \u003ccode\u003ePaymentStrategyFactory\u003c/code\u003e simply returns an object of type \u003ccode\u003eNullPaymentStrategy\u003c/code\u003e, which implements \u003ccode\u003eIPaymentStrategy\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eSingleton instance is achieved with a private constructor and a static \u003ccode\u003eInstance\u003c/code\u003e property.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/8ae2a62261d3784c713a44b6eed24b56.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\u003cbr\u003e\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/dee349d007060c5701652fadfcbc4009.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eLet’s put them together and process payments.\u003cbr\u003e\n\u003c/p\u003e\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/5897ad07ed0411dfec9cc2c22b0d3fbc.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eResults of \u003ccode\u003eProcessPayments()\u003c/code\u003e.\u003cbr\u003e\n\u003c/p\u003e\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/1c76839c8c7f358018c2df0fa27ee2a0.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eYou can see that \u003ccode\u003eBraintree\u003c/code\u003e \u0026amp; \u003ccode\u003eBadPaymentProvider\u003c/code\u003e returns \u003ccode\u003eNoOp\u003c/code\u003e because there \u003ccode\u003ePaymentStrategyFactory\u003c/code\u003e returns a singleton instance \u003ccode\u003eNullPaymentStrategy.Instance\u003c/code\u003e as there is no matching payment strategy.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👋 Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eGoogling \u003ca href=\"https://www.google.com/search?q=singleton+anti+pattern\"\u003eSingleton Anti Pattern\u003c/a\u003e results in many reasons why Singleton pattern is bad.\u003cbr\u003e\nBut when used judiciously, it can improve your code quality/memory/speed.\u003c/p\u003e\n\n\u003cp\u003eSource code is available on \u003ca href=\"https://github.com/dance2die/blog.NullObjectSingletonPatterns\"\u003eGitHub\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: A valid usage of Singleton Pattern (with Null object Pattern)\r\npublished: true\r\ntags: programming, oop, tips\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/j164f9mi3uy997x2l5bq.jpg\r\ncanonical_url: https://www.slightedgecoder.com/2018/03/25/a-valid-usage-of-singleton-pattern-with-null-object-pattern/\r\n---\r\n\r\n\u003csub\u003e\u003csup\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/oxVjCyH_ldQ?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eChetan Menaria\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/loneliness?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/sup\u003e\u003c/sub\u003e\r\nSingleton has a bad rep for being an anti-pattern.\r\nYou might have been burned bad with it.\r\n\r\nI learned from [Michael Outlaw](https://www.codingblocks.net/author/outlaw/) from [Coding Blocks podcast episode 16](https://www.codingblocks.net/podcast/episode-16-design-patterns-part-2-oh-behave/) that [Singleton pattern](https://en.wikipedia.org/wiki/Singleton_pattern) can come in handy in conjunction with [Null object pattern](https://en.wikipedia.org/wiki/Null_object_pattern).\r\n\r\nLet’s dive in.\r\n\r\n## 🤔 Why implement a Null object as a singleton?\r\n\r\n42 minutes into the Coding Blocks Episode 16, Michael Outlaw explains two reasons.\r\n\r\n\u003e 1. “If you have two versions of null objects, they should be identical, why waste memory to have same nothingness repeated”.\r\n\u003e 2. For equality checks – Each null object can be compared by reference.\r\n\r\nDepending on a situation you might not even need to do a equality check as a null object usually does nothing (as you can see in the example below.)\r\n\r\n**TL;DR** – You can stop reading here.\r\n\r\n## ✍️ An Example Implementation\r\n\r\nHere is an example of how you can use a Singleton pattern with a Null object pattern.\r\nSuppose that there is a simple factory (PaymentStrategyFactory) that returns a strategy object instance for processing a payment given a provider name.\r\n\r\n{% gist https://gist.github.com/dance2die/aad6b604536afeb10f71771cc42e3853 %}\r\n\r\nPayPal \u0026 ApplePay strategies return “Successful” or “Failed” process status at random.\r\n\r\n{% gist https://gist.github.com/dance2die/8d0f0f6f47f01a516f1657a7e500dd7b %}\r\n{% gist https://gist.github.com/dance2die/496655cf6ec63b4dd74da93c4e6e180b %}\r\n\r\n\r\nIf a provider name is not supported, the `PaymentStrategyFactory` simply returns an object of type `NullPaymentStrategy`, which implements `IPaymentStrategy`.\r\n\r\nSingleton instance is achieved with a private constructor and a static `Instance` property.\r\n\r\n{% gist https://gist.github.com/dance2die/8ae2a62261d3784c713a44b6eed24b56 %}\r\n{% gist https://gist.github.com/dance2die/dee349d007060c5701652fadfcbc4009 %}\r\n\r\nLet’s put them together and process payments.\r\n{% gist https://gist.github.com/dance2die/5897ad07ed0411dfec9cc2c22b0d3fbc %}\r\n\r\nResults of `ProcessPayments()`.\r\n{% gist https://gist.github.com/dance2die/1c76839c8c7f358018c2df0fa27ee2a0 %}\r\n\r\nYou can see that `Braintree` \u0026 `BadPaymentProvider` returns `NoOp` because there `PaymentStrategyFactory` returns a singleton instance `NullPaymentStrategy.Instance` as there is no matching payment strategy.\r\n\r\n### 👋 Conclusion\r\nGoogling [Singleton Anti Pattern](https://www.google.com/search?q=singleton+anti+pattern) results in many reasons why Singleton pattern is bad.\r\nBut when used judiciously, it can improve your code quality/memory/speed.\r\n\r\nSource code is available on [GitHub](https://github.com/dance2die/blog.NullObjectSingletonPatterns).",
    "canonical_url": "https://www.slightedgecoder.com/2018/03/25/a-valid-usage-of-singleton-pattern-with-null-object-pattern/",
    "show_comments": true,
    "main_image_background_hex_color": "#83694a",
    "published_from_feed": true,
    "comments_count": 2,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/03/25/a-valid-usage-of-singleton-pattern-with-null-object-pattern/",
    "positive_reactions_count": 18,
    "edited_at": null,
    "crossposted_at": "2018-07-07T14:22:23.917Z",
    "language": "en",
    "cached_tag_list": "programming, oop, tips",
    "path": "/dance2die/a-valid-usage-of-singleton-pattern-with-null-object-pattern-3gfj",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-07-11T23:39:01.554Z"
  },
  {
    "title": "An “Approximate” equivalent of LINQ methods in JavaScript – Part 5",
    "slug": "an-approximate-equivalent-of-linq-methods-in-javascript--part-5-24gh-temp-slug-3814261",
    "created_at": "2018-04-11T02:42:53.668Z",
    "main_image": null,
    "description": "\n\nPhoto by Jonas Vincent on Unsplash\n\nI will cover common number aggregate method...",
    "published": false,
    "published_at": "2018-03-31T19:28:57.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003csmall\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/xulIYVIbYIc?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eJonas Vincent\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/high-five?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eI will cover common number aggregate methods in this article.\u003cbr\u003e\u003cbr\u003e\nHere are the methods covered so far.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-1-382n-temp-slug-6834934\"\u003ePart 1\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#select\"\u003eSelect\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#aggregate\"\u003eAggregate\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#where\"\u003eWhere\u003c/a\u003e, OrderBy (\u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByAscending\"\u003eAscending\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByDescending\"\u003eDescending\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-2-1ab3-temp-slug-7415665\"\u003ePart 2\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#any\"\u003eAny\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#distinct\"\u003eDistinct\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#concat\"\u003eConcat\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#selectmany\"\u003eSelectMany\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-3-3adl-temp-slug-946966\"\u003ePart 3\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#reverse\"\u003eReverse\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#zip\"\u003eZip\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#minmax\"\u003eMin/Max\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-4-52g2-temp-slug-5326714\"\u003ePart 4\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#union\"\u003eUnion\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#intersect\"\u003eIntersect\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#except\"\u003eExcept\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003ePart 5 \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/?p=899\u0026amp;preview=true#sum\"\u003eSum\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/?p=899\u0026amp;preview=true#average\"\u003eAverage\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/?p=899\u0026amp;preview=true#count\"\u003eCount\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eI’ve covered “min” and “max” in \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#minmax\"\u003epart 3\u003c/a\u003e so I won’t cover them again here.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"overview\" href=\"#overview\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Overview\n\u003c/h3\u003e\n\n\u003cp\u003eIn this article, I will cover following methods.\u003c/p\u003e\n\n\u003cdiv class=\"table-wrapper-paragraph\"\u003e\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eLINQ Methods\u003c/th\u003e\n\u003cth\u003eJavaScript Equivalents\u003c/th\u003e\n\u003cth\u003eGo to example\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.except(v=vs.110).aspx\"\u003eSum\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\"\u003eReduce\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eSum\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.union(v=vs.110).aspx\"\u003eAverage\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\"\u003eReduce\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eAverage\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.count(v=vs.110).aspx\"\u003eCount\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\"\u003eFilter\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eCount\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\u003c/div\u003e\n\n\u003cp\u003eAnd I will try to stick to using VanillaJS as I have so far.\u003c/p\u003e\n\n\u003cp\u003eThe sample collections used in this article.\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"c\" href=\"#c\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  C\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"javascript\" href=\"#javascript\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  JavaScript\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"examples\" href=\"#examples\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Examples\n\u003c/h3\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"sum\" href=\"#sum\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e Sum\n\u003c/h5\u003e\n\n\u003cp\u003eI will show you “Sum” demo first since “Average” is basically a sum divided by count.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eArray.prototype.sum\u003c/code\u003e simply reduces each order quantity by summing it in the callback.\u003cbr\u003e\u003cbr\u003e\nNote  \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aS_MndCN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f4dd.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aS_MndCN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f4dd.png\" alt=\"📝\"\u003e\u003c/a\u003e: It’s exactly the same as the \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#aggregate\"\u003ereduceDemo\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"average\" href=\"#average\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e Average\n\u003c/h5\u003e\n\n\u003cp\u003eNow let’s get an average quantity ordered.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eThe only difference here is that sum is divided by the order count to calculate an average.\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"count\" href=\"#count\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e Count\n\u003c/h5\u003e\n\n\u003cp\u003eCount is overloaded in LINQ; \u003ca href=\"https://msdn.microsoft.com/en-us/library/bb338038(v=vs.110).aspx\"\u003eOne\u003c/a\u003e that simply returns a number of element in a sequence, and \u003ca href=\"https://msdn.microsoft.com/en-us/library/bb535181(v=vs.110).aspx\"\u003ethe other\u003c/a\u003e that accepts a predicate which lets you test each item.\u003c/p\u003e\n\n\u003cp\u003eI will implement the one with the predicate as the former is too simple.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eThe demo counts number of orders placed on and after March of 2018.\u003cbr\u003e\u003cbr\u003e\nCount without a predicate is same as \u003ccode\u003earray.length\u003c/code\u003e but \u003ccode\u003efilter\u003c/code\u003e is required for testing each element in an array.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"closing-remark\" href=\"#closing-remark\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Closing Remark\n\u003c/h3\u003e\n\n\u003cp\u003eSum, Average, and Count are often used and easy to implement (using for/each loops).\u003cbr\u003e\u003cbr\u003e\nI used reduce and filter to implement to make it look as similar to LINQ methods.\u003c/p\u003e\n\n\u003cp\u003eAs always, I’ve not tested edge cases for Array prototypes so use the code at your own risk \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--9Vq25kuy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f603.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--9Vq25kuy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f603.png\" alt=\"😃\"\u003e\u003c/a\u003e.\u003cbr\u003e\u003cbr\u003e\nPlease let me know should you find any errors or improvements I can make to the codes.\u003c/p\u003e\n\n\u003cp\u003eThe full source code and instructions on how to run them are on GitHub.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dance2die/blog.LinqAndJavascript.CSharpDemo\"\u003eC# source\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dance2die/blog.LinqAndJavascript.JavascriptDemo\"\u003eJavaScript source\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/\"\u003eAn “Approximate” equivalent of LINQ methods in JavaScript – Part 5\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: An “Approximate” equivalent of LINQ methods in JavaScript – Part 5\npublished: false\ntags: Blog Entry,Programming,quick tip,Series\ncanonical_url: https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/\n---\n\n\u003csmall\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/xulIYVIbYIc?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eJonas Vincent\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/high-five?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/small\u003e\n\nI will cover common number aggregate methods in this article.  \nHere are the methods covered so far.\n\n1. [Part 1](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-1-382n-temp-slug-6834934)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Select](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#select), [Aggregate](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#aggregate), [Where](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#where), OrderBy ([Ascending](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByAscending), [Descending](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByDescending))\n2. [Part 2](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-2-1ab3-temp-slug-7415665)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Any](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#any), [Distinct](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#distinct), [Concat](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#concat), [SelectMany](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#selectmany)\n3. [Part 3](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-3-3adl-temp-slug-946966)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Reverse](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#reverse), [Zip](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#zip), [Min/Max](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#minmax)\n4. [Part 4](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-4-52g2-temp-slug-5326714)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Union](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#union), [Intersect](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#intersect), [Except](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#except)\n5. Part 5 ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Sum](https://www.slightedgecoder.com/?p=899\u0026preview=true#sum), [Average](https://www.slightedgecoder.com/?p=899\u0026preview=true#average), [Count](https://www.slightedgecoder.com/?p=899\u0026preview=true#count)\n\nI’ve covered “min” and “max” in [part 3](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#minmax) so I won’t cover them again here.\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Overview\n\nIn this article, I will cover following methods.\n\n| LINQ Methods | JavaScript Equivalents | Go to example |\n| --- | --- | --- |\n| [Sum](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.except(v=vs.110).aspx) | [Reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce) | Sum |\n| [Average](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.union(v=vs.110).aspx) | [Reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce) | Average |\n| [Count](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.count(v=vs.110).aspx) | [Filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter) | Count |\n\n\u003c!-- #tablepress-5 from cache --\u003e\n\nAnd I will try to stick to using VanillaJS as I have so far.\n\nThe sample collections used in this article.\n\n###### C#\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### JavaScript\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Examples\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) Sum\n\nI will show you “Sum” demo first since “Average” is basically a sum divided by count.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n`Array.prototype.sum` simply reduces each order quantity by summing it in the callback.  \nNote  ![📝](https://s.w.org/images/core/emoji/2.4/72x72/1f4dd.png): It’s exactly the same as the [reduceDemo](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#aggregate).\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) Average\n\nNow let’s get an average quantity ordered.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nThe only difference here is that sum is divided by the order count to calculate an average.\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) Count\n\nCount is overloaded in LINQ; [One](https://msdn.microsoft.com/en-us/library/bb338038(v=vs.110).aspx) that simply returns a number of element in a sequence, and [the other](https://msdn.microsoft.com/en-us/library/bb535181(v=vs.110).aspx) that accepts a predicate which lets you test each item.\n\nI will implement the one with the predicate as the former is too simple.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nThe demo counts number of orders placed on and after March of 2018.  \nCount without a predicate is same as `array.length` but `filter` is required for testing each element in an array.\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Closing Remark\n\nSum, Average, and Count are often used and easy to implement (using for/each loops).  \nI used reduce and filter to implement to make it look as similar to LINQ methods.\n\nAs always, I’ve not tested edge cases for Array prototypes so use the code at your own risk ![😃](https://s.w.org/images/core/emoji/2.4/72x72/1f603.png).  \nPlease let me know should you find any errors or improvements I can make to the codes.\n\nThe full source code and instructions on how to run them are on GitHub.\n\n- [C# source](https://github.com/dance2die/blog.LinqAndJavascript.CSharpDemo)\n- [JavaScript source](https://github.com/dance2die/blog.LinqAndJavascript.JavascriptDemo)\n\nThe post [An “Approximate” equivalent of LINQ methods in JavaScript – Part 5](https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, quicktip, series",
    "path": "/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-5-24gh-temp-slug-3814261",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-03-31T19:28:57.000Z"
  },
  {
    "title": "Shaving the Yak",
    "slug": "shaving-yak-4g2m",
    "created_at": "2018-04-14T20:10:36.138Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/vcdffl0ssmltqi6a0g9y.jpg",
    "description": "When you end up doing stupid things.",
    "published": true,
    "published_at": "2018-04-14T20:11:29.363Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI learned a new term, \u003ca href=\"http://sethgodin.typepad.com/seths_blog/2005/03/dont_shave_that.html\"\u003eShaving the Yak\u003c/a\u003e today.\u003cbr\u003e\nThis has come to me as a such a surprise that I'd like to share it.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-does-yak-shaving-mean\" href=\"#what-does-yak-shaving-mean\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  What does \"Yak Shaving\" mean❓\n\u003c/h2\u003e\n\n\u003cp\u003eIt's basically when you end up doing things totally unrelated to what you were trying to accomplish initially.\u003c/p\u003e\n\n\u003cp\u003eHere is a great illustration.\u003c/p\u003e\n\n\u003cp\u003e\u003ciframe width=\"710\" height=\"399\" src=\"https://www.youtube.com/embed/8fnfeuoh4s8\" allowfullscreen\u003e \u003c/iframe\u003e\u003c/p\u003e\n\n\u003cp\u003eHal was to replace a light bulb 💡 but a series of events led him to fix his car 🚗 😆.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"my-experience\" href=\"#my-experience\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🙋 My Experience\n\u003c/h2\u003e\n\n\u003cp\u003eAs a new comer to ASP.NET Core, I've been trying to create a simple website displaying Calendar.\u003cbr\u003e\n➡️ Then I thought that I can use a SPA template to generate the calendar dynamically.\u003cbr\u003e\n➡️ I wanted to use ES6 syntax so looked at Webpack 4 configuration options.\u003cbr\u003e\n➡️ Thought it was too complicated so looked for an alternative.\u003cbr\u003e\n➡️ Found RollUp, which was better for library.\u003cbr\u003e\n➡️ RollUp tutorials were out of date.\u003cbr\u003e\n➡️ Create \u003ca href=\"https://github.com/jlengstorf/learn-rollup/issues/48\"\u003ea GitHub issue\u003c/a\u003e reporting tutorial was out of date.\u003cbr\u003e\n➡️ Ended up creating \u003ca href=\"https://www.npmjs.com/package/calendar-dates\"\u003ean NPM package\u003c/a\u003e for generating calendar dates.\u003c/p\u003e\n\n\u003cp\u003eI wanted to learn ASP.NET Core but ended up publishing an NPM package.\u003cbr\u003e\nI wasn't able to accomplish what I set out to do initially.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-can-you-do-about-it\" href=\"#what-can-you-do-about-it\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  What can you do about it❓\n\u003c/h2\u003e\n\n\u003cp\u003eCreate a plan and stick to it and refer to the plan constantly.\u003cbr\u003e\nJust knowing about this concept will help you stay alert of what you are currently doing.\u003c/p\u003e\n\n\u003cp\u003eNow the question is, have you guys been shaving the yak lately?\u003cbr\u003e\nIf so, would you share your experience?\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"resources\" href=\"#resources\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  📚 Resources\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"http://projects.csail.mit.edu/gsb/old-archive/gsb-archive/gsb2000-02-11.html\"\u003eYak Shaving\u003c/a\u003e - the term coined by Carlin Vieri.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"http://sethgodin.typepad.com/seths_blog/2005/03/dont_shave_that.html\"\u003eDon't Shave That Yak!\u003c/a\u003e by Seth Godin\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=8fnfeuoh4s8\"\u003eHal replacing a light bulb - Malcolm in the Middle, S03E06\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: \"Shaving the Yak\"\r\npublished: true\r\ndescription: When you end up doing stupid things.\r\ntags: productivity\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/vcdffl0ssmltqi6a0g9y.jpg\r\n---\r\n\r\n\r\nI learned a new term, [Shaving the Yak](http://sethgodin.typepad.com/seths_blog/2005/03/dont_shave_that.html) today.\r\nThis has come to me as a such a surprise that I'd like to share it.\r\n\r\n## What does \"Yak Shaving\" mean❓\r\n\r\nIt's basically when you end up doing things totally unrelated to what you were trying to accomplish initially.\r\n\r\nHere is a great illustration.\r\n\r\n{% youtube 8fnfeuoh4s8 %}\r\n\r\nHal was to replace a light bulb 💡 but a series of events led him to fix his car 🚗 😆.\r\n\r\n## 🙋 My Experience\r\n\r\nAs a new comer to ASP.NET Core, I've been trying to create a simple website displaying Calendar.\r\n➡️ Then I thought that I can use a SPA template to generate the calendar dynamically.\r\n➡️ I wanted to use ES6 syntax so looked at Webpack 4 configuration options.\r\n➡️ Thought it was too complicated so looked for an alternative.\r\n➡️ Found RollUp, which was better for library.\r\n➡️ RollUp tutorials were out of date.\r\n➡️ Create [a GitHub issue](https://github.com/jlengstorf/learn-rollup/issues/48) reporting tutorial was out of date.\r\n➡️ Ended up creating [an NPM package](https://www.npmjs.com/package/calendar-dates) for generating calendar dates.\r\n\r\nI wanted to learn ASP.NET Core but ended up publishing an NPM package.\r\nI wasn't able to accomplish what I set out to do initially.\r\n\r\n## What can you do about it❓\r\n\r\nCreate a plan and stick to it and refer to the plan constantly.\r\nJust knowing about this concept will help you stay alert of what you are currently doing.\r\n\r\nNow the question is, have you guys been shaving the yak lately?\r\nIf so, would you share your experience?\r\n\r\n## 📚 Resources\r\n\r\n* [Yak Shaving](http://projects.csail.mit.edu/gsb/old-archive/gsb-archive/gsb2000-02-11.html) - the term coined by Carlin Vieri.\r\n* [Don't Shave That Yak!](http://sethgodin.typepad.com/seths_blog/2005/03/dont_shave_that.html) by Seth Godin\r\n* [Hal replacing a light bulb - Malcolm in the Middle, S03E06](https://www.youtube.com/watch?v=8fnfeuoh4s8)\r\n",
    "canonical_url": null,
    "show_comments": true,
    "main_image_background_hex_color": "#706b6a",
    "published_from_feed": false,
    "comments_count": 10,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": null,
    "positive_reactions_count": 43,
    "edited_at": "2019-04-17T01:31:42.597Z",
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "productivity",
    "path": "/dance2die/shaving-yak-4g2m",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-04-19T10:11:17.150Z"
  },
  {
    "title": "An “Approximate” equivalent of LINQ methods in JavaScript – Part 6",
    "slug": "an-approximate-equivalent-of-linq-methods-in-javascript--part-6-2in-temp-slug-273062",
    "created_at": "2018-04-15T02:11:30.315Z",
    "main_image": null,
    "description": "\n\nPhoto by Baher Khairy on Unsplash\nI will cover methods for getting subset of se...",
    "published": false,
    "published_at": "2018-04-15T01:59:34.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003csmall\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/Q3a0FHRS4BU?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eBaher Khairy\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/six?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/small\u003e\u003cbr\u003e\u003cbr\u003e\nI will cover methods for getting subset of sequence.\u003c/p\u003e\n\n\u003cp\u003eHere are the methods covered so far.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-1-382n-temp-slug-6834934\"\u003ePart 1\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#select\"\u003eSelect\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approxif-linq-methods-in-javascript-part-4/\"\u003ePart 4\u003c/a\u003e \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#union\"\u003eUnion\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#intersect\"\u003eIntersect\u003c/a\u003e, \u003ca href=\"https://www.slightedgemate-equivalent-linq-methods-javascript/#aggregate\"\u003eAggregate\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#where\"\u003eWhere\u003c/a\u003e, OrderBy (\u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByAscending\"\u003eAscending\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByDescending\"\u003eDescending\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-2-1ab3-temp-slug-7415665\"\u003ePart 2\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#any\"\u003eAny\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#distinct\"\u003eDistinct\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#concat\"\u003eConcat\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#selectmany\"\u003eSelectMany\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-3-3adl-temp-slug-946966\"\u003ePart 3\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#reverse\"\u003eReverse\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#zip\"\u003eZip\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#minmax\"\u003eMin/Max\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-4-52g2-temp-slug-5326714\"\u003ePart 4\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#union\"\u003eUnion\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#intersect\"\u003eIntersect\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#except\"\u003eExcept\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-5-24gh-temp-slug-3814261\"\u003ePart 5\u003c/a\u003e \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/#sum\"\u003eSum\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/#average\"\u003eAverage\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/#count\"\u003eCount\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003ePart 6 \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#first\"\u003eFirst\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#last\"\u003eLast\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#defaultIfEmpty\"\u003eDefaultIfEmpty\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#skip\"\u003eSkip\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#take\"\u003eTake\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"overview\" href=\"#overview\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Overview\n\u003c/h3\u003e\n\n\u003cp\u003eIn this article, I will cover following methods.\u003c/p\u003e\n\n\u003cdiv class=\"table-wrapper-paragraph\"\u003e\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eLINQ Methods\u003c/th\u003e\n\u003cth\u003eGo to example\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\n\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.first(v=vs.110).aspx\"\u003eFirst\u003c/a\u003e/\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.firstordefault(v=vs.110).aspx\"\u003eFirstOrDefault\u003c/a\u003e\n\u003c/td\u003e\n\u003ctd\u003eFirst/FirstOrDefault\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\n\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.last(v=vs.110).aspx\"\u003eLast\u003c/a\u003e/\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.lastordefault(v=vs.110).aspx\"\u003eLastOrDefault\u003c/a\u003e\n\u003c/td\u003e\n\u003ctd\u003eLast/LastOrDefault\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.defaultifempty(v=vs.110).aspx\"\u003eDefaultIfEmpty\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eDefaultIfEmpty\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\n\u003ca href=\"https://msdn.microsoft.com/en-us/library/bb358985(v=vs.110).aspx\"\u003eSkip\u003c/a\u003e/\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.skipwhile(v=vs.110).aspx\"\u003eSkipWhile\u003c/a\u003e\n\u003c/td\u003e\n\u003ctd\u003eSkip/SkipWhile\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\n\u003ca href=\"https://msdn.microsoft.com/en-us/library/bb503062(v=vs.110).aspx\"\u003eTake\u003c/a\u003e/\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.takewhile(v=vs.110).aspx\"\u003eTakeWhile\u003c/a\u003e\n\u003c/td\u003e\n\u003ctd\u003eTake/TakeWhile\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\u003c/div\u003e\n\n\u003cp\u003eThe sample collections used in this part are shown as below.\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"c\" href=\"#c\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  C\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"javascript\" href=\"#javascript\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  JavaScript\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"examples\" href=\"#examples\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Examples\n\u003c/h3\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"firstfirstordefault\" href=\"#firstfirstordefault\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e First/FirstOrDefault\n\u003c/h5\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eI’ve just used “first” in JavaScript to implement “First/FirstOrDefault”.\u003cbr\u003e\u003cbr\u003e\nJavaScript is dynamically typed so it wouldn’t know what default value is unless you specify unlike in C#.\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"lastlastordefault\" href=\"#lastlastordefault\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e Last/LastOrDefault\n\u003c/h5\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eSame as “first”, I used “last” in JavaScript to implement both “Last/LastOrDefault”\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"defaultifempty\" href=\"#defaultifempty\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e DefaultIfEmpty\n\u003c/h5\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eIn JavaScript, \u003ccode\u003efilter\u003c/code\u003e returns an array of size 0 if no record is returned.\u003cbr\u003e\u003cbr\u003e\nSo I am checking for the size and return \u003ccode\u003enullOrder\u003c/code\u003e if the length is 0.\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"skipskipwhile\" href=\"#skipskipwhile\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e Skip/SkipWhile\n\u003c/h5\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eThe callback in \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\"\u003eArray.prototype.filter\u003c/a\u003e also has an access to current index being process.\u003cbr\u003e\u003cbr\u003e\nSo the implementation for \u003ccode\u003eskip\u003c/code\u003e simply filters out records below the given \u003ccode\u003ecount\u003c/code\u003e while \u003ccode\u003eskipWhile\u003c/code\u003e filters out records that do not match the predicate.\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"taketakewhile\" href=\"#taketakewhile\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e Take/TakeWhile\n\u003c/h5\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eTake is the opposite of \u003ccode\u003eskip\u003c/code\u003e so the boolean conditions are reversed.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"closing-remark\" href=\"#closing-remark\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Closing Remark\n\u003c/h3\u003e\n\n\u003cp\u003eJavaScript is dynamically typed so returning a “default” value is tricky as a variable type is defined upon initialization. I’ve skipped implementing “*OrDefault” methods for that reason.\u003c/p\u003e\n\n\u003cp\u003ePlease let me know should you find any errors or improvements I can make to the codes.\u003c/p\u003e\n\n\u003cp\u003eThe full source code and instructions on how to run them are on GitHub.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dance2die/blog.LinqAndJavascript.CSharpDemo\"\u003eC# source\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dance2die/blog.LinqAndJavascript.JavascriptDemo\"\u003eJavaScript source\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/\"\u003eAn “Approximate” equivalent of LINQ methods in JavaScript – Part 6\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: An “Approximate” equivalent of LINQ methods in JavaScript – Part 6\npublished: false\ntags: Blog Entry,Programming,quick tip,Series\ncanonical_url: https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/\n---\n\n\u003csmall\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/Q3a0FHRS4BU?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eBaher Khairy\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/six?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/small\u003e  \nI will cover methods for getting subset of sequence.\n\nHere are the methods covered so far.\n\n1. [Part 1](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-1-382n-temp-slug-6834934)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Select](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#select), [Part 4](https://www.slightedgecoder.com/2018/02/24/approxif-linq-methods-in-javascript-part-4/) ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Union](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#union), [Intersect](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#intersect), [Aggregate](https://www.slightedgemate-equivalent-linq-methods-javascript/#aggregate), [Where](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#where), OrderBy ([Ascending](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByAscending), [Descending](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByDescending))\n2. [Part 2](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-2-1ab3-temp-slug-7415665)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Any](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#any), [Distinct](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#distinct), [Concat](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#concat), [SelectMany](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#selectmany)\n3. [Part 3](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-3-3adl-temp-slug-946966)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Reverse](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#reverse), [Zip](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#zip), [Min/Max](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#minmax)\n4. [Part 4](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-4-52g2-temp-slug-5326714)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Union](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#union), [Intersect](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#intersect), [Except](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#except)\n5. [Part 5](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-5-24gh-temp-slug-3814261) ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Sum](https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/#sum), [Average](https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/#average), [Count](https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/#count)\n6. Part 6 ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [First](https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#first), [Last](https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#last), [DefaultIfEmpty](https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#defaultIfEmpty), [Skip](https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#skip), [Take](https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#take)\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Overview\n\nIn this article, I will cover following methods.\n\n| LINQ Methods | Go to example |\n| --- | --- |\n| [First](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.first(v=vs.110).aspx)/[FirstOrDefault](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.firstordefault(v=vs.110).aspx) | First/FirstOrDefault |\n| [Last](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.last(v=vs.110).aspx)/[LastOrDefault](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.lastordefault(v=vs.110).aspx) | Last/LastOrDefault |\n| [DefaultIfEmpty](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.defaultifempty(v=vs.110).aspx) | DefaultIfEmpty |\n| [Skip](https://msdn.microsoft.com/en-us/library/bb358985(v=vs.110).aspx)/[SkipWhile](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.skipwhile(v=vs.110).aspx) | Skip/SkipWhile |\n| [Take](https://msdn.microsoft.com/en-us/library/bb503062(v=vs.110).aspx)/[TakeWhile](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.takewhile(v=vs.110).aspx) | Take/TakeWhile |\n\n\u003c!-- #tablepress-6 from cache --\u003e\n\nThe sample collections used in this part are shown as below.\n\n###### C#\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### JavaScript\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Examples\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) First/FirstOrDefault\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nI’ve just used “first” in JavaScript to implement “First/FirstOrDefault”.  \nJavaScript is dynamically typed so it wouldn’t know what default value is unless you specify unlike in C#.\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) Last/LastOrDefault\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nSame as “first”, I used “last” in JavaScript to implement both “Last/LastOrDefault”\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) DefaultIfEmpty\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nIn JavaScript, `filter` returns an array of size 0 if no record is returned.  \nSo I am checking for the size and return `nullOrder` if the length is 0.\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) Skip/SkipWhile\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nThe callback in [Array.prototype.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter) also has an access to current index being process.  \nSo the implementation for `skip` simply filters out records below the given `count` while `skipWhile` filters out records that do not match the predicate.\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) Take/TakeWhile\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nTake is the opposite of `skip` so the boolean conditions are reversed.\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Closing Remark\n\nJavaScript is dynamically typed so returning a “default” value is tricky as a variable type is defined upon initialization. I’ve skipped implementing “\\*OrDefault” methods for that reason.\n\nPlease let me know should you find any errors or improvements I can make to the codes.\n\nThe full source code and instructions on how to run them are on GitHub.\n\n- [C# source](https://github.com/dance2die/blog.LinqAndJavascript.CSharpDemo)\n- [JavaScript source](https://github.com/dance2die/blog.LinqAndJavascript.JavascriptDemo)\n\nThe post [An “Approximate” equivalent of LINQ methods in JavaScript – Part 6](https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, quicktip, series",
    "path": "/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-6-2in-temp-slug-273062",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-04-15T01:59:34.000Z"
  },
  {
    "title": "An “Approximate” equivalent of LINQ methods in JavaScript – Part 7",
    "slug": "an-approximate-equivalent-of-linq-methods-in-javascript--part-7-33b5-temp-slug-2009069",
    "created_at": "2018-04-21T22:17:36.991Z",
    "main_image": null,
    "description": "\n\nPhoto by rawpixel.com on Unsplash\nI will cover LINQ methods for initializing a ...",
    "published": false,
    "published_at": "2018-04-21T22:07:52.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003csmall\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/_2uxSN-8f9A?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003erawpixel.com\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/lucky-seven?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/small\u003e\u003cbr\u003e\u003cbr\u003e\nI will cover LINQ methods for initializing a sequence.\u003c/p\u003e\n\n\u003cp\u003eHere are the methods covered so far.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-1-382n-temp-slug-6834934\"\u003ePart 1\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#select\"\u003eSelect\u003c/a\u003e, \u003ca href=\"https://www.slightedgemate-equivalent-linq-methods-javascript/#aggregate\"\u003eAggregate\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#where\"\u003eWhere\u003c/a\u003e, OrderBy (\u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByAscending\"\u003eAscending\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByDescending\"\u003eDescending\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-2-1ab3-temp-slug-7415665\"\u003ePart 2\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#any\"\u003eAny\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#distinct\"\u003eDistinct\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#concat\"\u003eConcat\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#selectmany\"\u003eSelectMany\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-3-3adl-temp-slug-946966\"\u003ePart 3\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#reverse\"\u003eReverse\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#zip\"\u003eZip\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#minmax\"\u003eMin/Max\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-4-52g2-temp-slug-5326714\"\u003ePart 4\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#union\"\u003eUnion\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#intersect\"\u003eIntersect\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#except\"\u003eExcept\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-5-24gh-temp-slug-3814261\"\u003ePart 5\u003c/a\u003e \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/#sum\"\u003eSum\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/#average\"\u003eAverage\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/#count\"\u003eCount\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-6-2in-temp-slug-273062\"\u003ePart 6\u003c/a\u003e \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#first\"\u003eFirst\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#last\"\u003eLast\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#defaultIfEmpty\"\u003eDefaultIfEmpty\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#skip\"\u003eSkip\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#take\"\u003eTake\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003e\u003ca href=\"https://www.slightedgecoder.com/2018/04/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-7/\"\u003ePart 7\u003c/a\u003e\u003c/strong\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/04/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-7#empty\"\u003eEmpty\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/04/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-7#repeat\"\u003eRepeat\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/04/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-7#range\"\u003eRange\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"overview\" href=\"#overview\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Overview\n\u003c/h3\u003e\n\n\u003cp\u003eIn this article, I will cover following methods.\u003c/p\u003e\n\n\u003cdiv class=\"table-wrapper-paragraph\"\u003e\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eLINQ Methods\u003c/th\u003e\n\u003cth\u003eJavaScript Equivalents\u003c/th\u003e\n\u003cth\u003eGo to example\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/bb341042(v=vs.110).aspx\"\u003eEmpty\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array#Examples\"\u003e[]\u003c/a\u003e - An empty array\u003c/td\u003e\n\u003ctd\u003eEmpty\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/bb348899(v=vs.110).aspx\"\u003eRepeat\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\"\u003eArray#fill\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"\u003eArray#map\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eRepeat\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.range(v=vs.110).aspx\"\u003eRange\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\"\u003eArray#fill\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"\u003eArray#map\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eRange\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\u003c/div\u003e\n\n\u003cp\u003eI won’t be using \u003ccode\u003eOrders\u003c/code\u003e collections as I have in previous articles.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"examples\" href=\"#examples\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Examples\n\u003c/h3\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"empty\" href=\"#empty\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e Empty\n\u003c/h5\u003e\n\n\u003cp\u003eC# is a typed language while JavaScript is not. \u003ccode\u003e.Empty\u003c/code\u003e returns a typed sequence but since there is no need for a type, you can just return an empty array \u003ccode\u003e[]\u003c/code\u003e in JavaScript\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eNothing surprising as shown above \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--SQm-mz0e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f600.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--SQm-mz0e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f600.png\" alt=\"😀\"\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"repeat\" href=\"#repeat\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e Repeat\n\u003c/h5\u003e\n\n\u003cp\u003eFor this demo, I thought it was an overkill to use Orders collection used in last 6 articles so simply repeated a sentence, “I love your smile” five times.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eJavaScript version uses \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\"\u003eArray#fill\u003c/a\u003e method to simply fill it with undefined and populate it with \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"\u003emap\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"range\" href=\"#range\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e Range\n\u003c/h5\u003e\n\n\u003cp\u003eSame here with the Repeat Demo, I will use a simple case to demo how to generate a range of numbers.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eI used he same technique but utilizing an index property of \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map#Syntax\"\u003emap callback\u003c/a\u003e, which is where initialization of a range occurs (index starts from 0).\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"closing-remark\" href=\"#closing-remark\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Closing Remark\n\u003c/h3\u003e\n\n\u003cp\u003eIf you have been following the series, you might have noticed that many JavaScript implementations uses \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"\u003emap\u003c/a\u003e and \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\"\u003ereduce\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eIt’s because many LINQ methods are simply a syntactic sugar over what “map” and “reduce” can do.\u003c/p\u003e\n\n\u003cp\u003ePlease let me know should you find any errors or improvements I can make to the codes.\u003cbr\u003e\u003cbr\u003e\nThe full source code and instructions on how to run them are on GitHub.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dance2die/blog.LinqAndJavascript.CSharpDemo\"\u003eC# source\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dance2die/blog.LinqAndJavascript.JavascriptDemo\"\u003eJavaScript source\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/04/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-7/\"\u003eAn “Approximate” equivalent of LINQ methods in JavaScript – Part 7\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: An “Approximate” equivalent of LINQ methods in JavaScript – Part 7\npublished: false\ntags: Blog Entry,Programming,quick tip,Series\ncanonical_url: https://www.slightedgecoder.com/2018/04/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-7/\n---\n\n\u003csmall\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/_2uxSN-8f9A?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003erawpixel.com\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/lucky-seven?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/small\u003e  \nI will cover LINQ methods for initializing a sequence.\n\nHere are the methods covered so far.\n\n1. [Part 1](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-1-382n-temp-slug-6834934)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Select](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#select), [Aggregate](https://www.slightedgemate-equivalent-linq-methods-javascript/#aggregate), [Where](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#where), OrderBy ([Ascending](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByAscending), [Descending](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByDescending))\n2. [Part 2](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-2-1ab3-temp-slug-7415665)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Any](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#any), [Distinct](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#distinct), [Concat](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#concat), [SelectMany](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#selectmany)\n3. [Part 3](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-3-3adl-temp-slug-946966)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Reverse](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#reverse), [Zip](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#zip), [Min/Max](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#minmax)\n4. [Part 4](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-4-52g2-temp-slug-5326714)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Union](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#union), [Intersect](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#intersect), [Except](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#except)\n5. [Part 5](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-5-24gh-temp-slug-3814261) ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Sum](https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/#sum), [Average](https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/#average), [Count](https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/#count)\n6. [Part 6](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-6-2in-temp-slug-273062) ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [First](https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#first), [Last](https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#last), [DefaultIfEmpty](https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#defaultIfEmpty), [Skip](https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#skip), [Take](https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#take)\n7. **[Part 7](https://www.slightedgecoder.com/2018/04/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-7/)**![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Empty](https://www.slightedgecoder.com/2018/04/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-7#empty), [Repeat](https://www.slightedgecoder.com/2018/04/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-7#repeat), [Range](https://www.slightedgecoder.com/2018/04/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-7#range)\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Overview\n\nIn this article, I will cover following methods.\n\n| LINQ Methods | JavaScript Equivalents | Go to example |\n| --- | --- | --- |\n| [Empty](https://msdn.microsoft.com/en-us/library/bb341042(v=vs.110).aspx) | [[]](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array#Examples) - An empty array | Empty |\n| [Repeat](https://msdn.microsoft.com/en-us/library/bb348899(v=vs.110).aspx) | [Array#fill](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill)  \n[Array#map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) | Repeat |\n| [Range](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.range(v=vs.110).aspx) | [Array#fill](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill)  \n[Array#map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) | Range |\n\n\u003c!-- #tablepress-8 from cache --\u003e\n\nI won’t be using `Orders` collections as I have in previous articles.\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Examples\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) Empty\n\nC# is a typed language while JavaScript is not. `.Empty` returns a typed sequence but since there is no need for a type, you can just return an empty array `[]` in JavaScript\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nNothing surprising as shown above ![😀](https://s.w.org/images/core/emoji/2.4/72x72/1f600.png).\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) Repeat\n\nFor this demo, I thought it was an overkill to use Orders collection used in last 6 articles so simply repeated a sentence, “I love your smile” five times.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nJavaScript version uses [Array#fill](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill) method to simply fill it with undefined and populate it with [map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) Range\n\nSame here with the Repeat Demo, I will use a simple case to demo how to generate a range of numbers.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nI used he same technique but utilizing an index property of [map callback](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map#Syntax), which is where initialization of a range occurs (index starts from 0).\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Closing Remark\n\nIf you have been following the series, you might have noticed that many JavaScript implementations uses [map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) and [reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce).\n\nIt’s because many LINQ methods are simply a syntactic sugar over what “map” and “reduce” can do.\n\nPlease let me know should you find any errors or improvements I can make to the codes.  \nThe full source code and instructions on how to run them are on GitHub.\n\n- [C# source](https://github.com/dance2die/blog.LinqAndJavascript.CSharpDemo)\n- [JavaScript source](https://github.com/dance2die/blog.LinqAndJavascript.JavascriptDemo)\n\n \n\nThe post [An “Approximate” equivalent of LINQ methods in JavaScript – Part 7](https://www.slightedgecoder.com/2018/04/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-7/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/04/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-7/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/04/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-7/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, quicktip, series",
    "path": "/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-7-33b5-temp-slug-2009069",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-04-21T22:07:52.000Z"
  },
  {
    "title": "How to Implement LINQ methods in JavaScript – Part 8",
    "slug": "how-to-implement-linq-methods-in-javascript--part-8-fgj-temp-slug-7837028",
    "created_at": "2018-04-28T22:32:23.622Z",
    "main_image": null,
    "description": "\n\nLINQ methods (All, Contains, SequenceEqual) in this article  are somehow relate...",
    "published": false,
    "published_at": "2018-04-28T22:30:19.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eLINQ methods (All, Contains, SequenceEqual) in this article  are somehow related in a way that they are predicates (returns true or false).\u003c/p\u003e\n\n\u003cp\u003eHere are the methods covered so far.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-1-382n-temp-slug-6834934\"\u003ePart 1\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#select\"\u003eSelect\u003c/a\u003e, \u003ca href=\"https://www.slightedgemate-equivalent-linq-methods-javascript/#aggregate\"\u003eAggregate\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#where\"\u003eWhere\u003c/a\u003e, OrderBy (\u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByAscending\"\u003eAscending\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByDescending\"\u003eDescending\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-2-1ab3-temp-slug-7415665\"\u003ePart 2\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#any\"\u003eAny\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#distinct\"\u003eDistinct\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#concat\"\u003eConcat\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#selectmany\"\u003eSelectMany\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-3-3adl-temp-slug-946966\"\u003ePart 3\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#reverse\"\u003eReverse\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#zip\"\u003eZip\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#minmax\"\u003eMin/Max\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-4-52g2-temp-slug-5326714\"\u003ePart 4\u003c/a\u003e  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#union\"\u003eUnion\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#intersect\"\u003eIntersect\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#except\"\u003eExcept\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-5-24gh-temp-slug-3814261\"\u003ePart 5\u003c/a\u003e \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/#sum\"\u003eSum\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/#average\"\u003eAverage\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/#count\"\u003eCount\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-6-2in-temp-slug-273062\"\u003ePart 6\u003c/a\u003e \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#first\"\u003eFirst\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#last\"\u003eLast\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#defaultIfEmpty\"\u003eDefaultIfEmpty\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#skip\"\u003eSkip\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#take\"\u003eTake\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-7-33b5-temp-slug-2009069\"\u003ePart 7\u003c/a\u003e \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/04/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-7#empty\"\u003eEmpty\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/04/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-7#repeat\"\u003eRepeat\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/04/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-7#range\"\u003eRange\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003e\u003ca href=\"https://www.slightedgecoder.com/2018/04/28/how-to-implement-linq-methods-in-javascript-part-8/\"\u003ePart 8\u003c/a\u003e\u003c/strong\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtwW8KT2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/3030.png\" alt=\"〰\"\u003e \u003ca href=\"https://www.slightedgecoder.com/2018/04/28/how-to-implement-linq-methods-in-javascript-part-8#all\"\u003eAll\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/04/28/how-to-implement-linq-methods-in-javascript-part-8#contains\"\u003eContains\u003c/a\u003e, \u003ca href=\"https://www.slightedgecoder.com/2018/04/28/how-to-implement-linq-methods-in-javascript-part-8#sequenceEqual\"\u003eSequenceEqual\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"overview\" href=\"#overview\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Overview\n\u003c/h3\u003e\n\n\u003cp\u003eIn this article, I will cover following methods.\u003c/p\u003e\n\n\u003cdiv class=\"table-wrapper-paragraph\"\u003e\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eLINQ Methods\u003c/th\u003e\n\u003cth\u003eJavaScript Methods\u003c/th\u003e\n\u003cth\u003eGo to example\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/bb548541(v=vs.110).aspx\"\u003eAll\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every\"\u003eevery\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eAll\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.contains(v=vs.110).aspx\"\u003eContains\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\"\u003esome\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eContains\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://msdn.microsoft.com/en-us/library/system.linq.enumerable.sequenceequal(v=vs.110).aspx\"\u003eSequenceEqual\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every\"\u003eevery\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003eSequenceEqual\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\u003c/div\u003e\n\n\u003cp\u003eThe sample collections used in this part are shown as below.\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"c\" href=\"#c\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  C\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"javascript\" href=\"#javascript\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  JavaScript\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"examples\" href=\"#examples\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Examples\n\u003c/h3\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"all\" href=\"#all\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e All\n\u003c/h5\u003e\n\n\u003cp\u003eJavaScript has a method called \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every\"\u003eArray#every\u003c/a\u003e, which works the same way as \u003ca href=\"https://msdn.microsoft.com/en-us/library/bb548541(v=vs.110).aspx\"\u003eAll\u003c/a\u003e does.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eevery\u003c/code\u003e is more flexible as the callback is also passed an index.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--wytR4QqA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/04/arrayevery-syntax.jpg%3Fresize%3D540%252C518%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--wytR4QqA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/04/arrayevery-syntax.jpg%3Fresize%3D540%252C518%26ssl%3D1\" alt=\"array#every syntax\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"contains\" href=\"#contains\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e Contains\n\u003c/h5\u003e\n\n\u003cp\u003eThere are so many ways implement contains but i used \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\"\u003esome\u003c/a\u003e as it short circuits (returns as soon as a condition is met).\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eOrderEqualityComparer\u003c/code\u003e object instance simply checks if two objects are the same by an ID. JavaScript version simply passes a callback which does the same.\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"sequenceequal\" href=\"#sequenceequal\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--scg-mKwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f538.png\" alt=\"🔸\"\u003e SequenceEqual\n\u003c/h5\u003e\n\n\u003cp\u003eYou can use \u003ccode\u003eevery\u003c/code\u003e here to check if two sequences are the same as every passes an index of current element to the callback.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch6\u003e\n  \u003ca name=\"results\" href=\"#results\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Results\n\u003c/h6\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"closing-remark\" href=\"#closing-remark\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jmM2PWoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f534.png\" alt=\"🔴\"\u003e Closing Remark\n\u003c/h3\u003e\n\n\u003cp\u003eI hope this article can serve as a cheat sheet (that’s how I started this series).\u003c/p\u003e\n\n\u003cp\u003ePlease let me know should you find any errors or improvements I can make to the codes.\u003cbr\u003e\u003cbr\u003e\nThe full source code and instructions on how to run them are on GitHub.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dance2die/blog.LinqAndJavascript.CSharpDemo\"\u003eC# source\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dance2die/blog.LinqAndJavascript.JavascriptDemo\"\u003eJavaScript source\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/04/28/how-to-implement-linq-methods-in-javascript-part-8/\"\u003eHow to Implement LINQ methods in JavaScript – Part 8\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: How to Implement LINQ methods in JavaScript – Part 8\npublished: false\ntags: Blog Entry,Programming,quick tip,Series\ncanonical_url: https://www.slightedgecoder.com/2018/04/28/how-to-implement-linq-methods-in-javascript-part-8/\n---\n\nLINQ methods (All, Contains, SequenceEqual) in this article  are somehow related in a way that they are predicates (returns true or false).\n\nHere are the methods covered so far.\n\n1. [Part 1](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-1-382n-temp-slug-6834934)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Select](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#select), [Aggregate](https://www.slightedgemate-equivalent-linq-methods-javascript/#aggregate), [Where](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#where), OrderBy ([Ascending](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByAscending), [Descending](https://www.slightedgecoder.com/2018/02/24/approximate-equivalent-linq-methods-javascript/#orderByDescending))\n2. [Part 2](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-2-1ab3-temp-slug-7415665)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Any](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#any), [Distinct](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#distinct), [Concat](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#concat), [SelectMany](https://www.slightedgecoder.com/2018/03/03/approximate-equivalent-linq-methods-javascript-part-2/#selectmany)\n3. [Part 3](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-3-3adl-temp-slug-946966)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Reverse](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#reverse), [Zip](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#zip), [Min/Max](https://www.slightedgecoder.com/2018/03/10/an-approximate-equivalent-of-linq-methods-in-javascript-part-3/#minmax)\n4. [Part 4](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-4-52g2-temp-slug-5326714)  ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Union](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#union), [Intersect](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#intersect), [Except](https://www.slightedgecoder.com/2018/03/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-4/#except)\n5. [Part 5](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-5-24gh-temp-slug-3814261) ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Sum](https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/#sum), [Average](https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/#average), [Count](https://www.slightedgecoder.com/2018/03/31/an-approximate-equivalent-of-linq-methods-in-javascript-part-5/#count)\n6. [Part 6](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-6-2in-temp-slug-273062) ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [First](https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#first), [Last](https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#last), [DefaultIfEmpty](https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#defaultIfEmpty), [Skip](https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#skip), [Take](https://www.slightedgecoder.com/2018/04/14/an-approximate-equivalent-of-linq-methods-in-javascript-part-6/#take)\n7. [Part 7](https://dev.to/dance2die/an-approximate-equivalent-of-linq-methods-in-javascript--part-7-33b5-temp-slug-2009069) ![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [Empty](https://www.slightedgecoder.com/2018/04/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-7#empty), [Repeat](https://www.slightedgecoder.com/2018/04/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-7#repeat), [Range](https://www.slightedgecoder.com/2018/04/21/an-approximate-equivalent-of-linq-methods-in-javascript-part-7#range)\n8. **[Part 8](https://www.slightedgecoder.com/2018/04/28/how-to-implement-linq-methods-in-javascript-part-8/)**![〰](https://s.w.org/images/core/emoji/2.4/72x72/3030.png) [All](https://www.slightedgecoder.com/2018/04/28/how-to-implement-linq-methods-in-javascript-part-8#all), [Contains](https://www.slightedgecoder.com/2018/04/28/how-to-implement-linq-methods-in-javascript-part-8#contains), [SequenceEqual](https://www.slightedgecoder.com/2018/04/28/how-to-implement-linq-methods-in-javascript-part-8#sequenceEqual)\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Overview\n\nIn this article, I will cover following methods.\n\n| LINQ Methods | JavaScript Methods | Go to example |\n| --- | --- | --- |\n| [All](https://msdn.microsoft.com/en-us/library/bb548541(v=vs.110).aspx) | [every](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every) | All |\n| [Contains](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.contains(v=vs.110).aspx) | [some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some) | Contains |\n| [SequenceEqual](https://msdn.microsoft.com/en-us/library/system.linq.enumerable.sequenceequal(v=vs.110).aspx) | [every](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every) | SequenceEqual |\n\n\u003c!-- #tablepress-9 from cache --\u003e\n\nThe sample collections used in this part are shown as below.\n\n###### C#\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### JavaScript\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Examples\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) All\n\nJavaScript has a method called [Array#every](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every), which works the same way as [All](https://msdn.microsoft.com/en-us/library/bb548541(v=vs.110).aspx) does.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n`every` is more flexible as the callback is also passed an index.\n\n![array#every syntax](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/04/arrayevery-syntax.jpg?resize=540%2C518\u0026ssl=1)\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) Contains\n\nThere are so many ways implement contains but i used [some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some) as it short circuits (returns as soon as a condition is met).\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n`OrderEqualityComparer` object instance simply checks if two objects are the same by an ID. JavaScript version simply passes a callback which does the same.\n\n##### ![🔸](https://s.w.org/images/core/emoji/2.4/72x72/1f538.png) SequenceEqual\n\nYou can use `every` here to check if two sequences are the same as every passes an index of current element to the callback.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n###### Results\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n### ![🔴](https://s.w.org/images/core/emoji/2.4/72x72/1f534.png) Closing Remark\n\nI hope this article can serve as a cheat sheet (that’s how I started this series).\n\nPlease let me know should you find any errors or improvements I can make to the codes.  \nThe full source code and instructions on how to run them are on GitHub.\n\n- [C# source](https://github.com/dance2die/blog.LinqAndJavascript.CSharpDemo)\n- [JavaScript source](https://github.com/dance2die/blog.LinqAndJavascript.JavascriptDemo)\n\nThe post [How to Implement LINQ methods in JavaScript – Part 8](https://www.slightedgecoder.com/2018/04/28/how-to-implement-linq-methods-in-javascript-part-8/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/04/28/how-to-implement-linq-methods-in-javascript-part-8/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/04/28/how-to-implement-linq-methods-in-javascript-part-8/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, quicktip, series",
    "path": "/dance2die/how-to-implement-linq-methods-in-javascript--part-8-fgj-temp-slug-7837028",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-04-28T22:30:19.000Z"
  },
  {
    "title": "Evergreen skills to use throughout your career?",
    "slug": "everygreen-skills-to-use-throughout-your-career-3b17",
    "created_at": "2018-05-03T14:57:46.215Z",
    "main_image": "https://images.unsplash.com/photo-1473448912268-2022ce9509d8?ixlib=rb-0.3.5\u0026ixid=eyJhcHBfaWQiOjEyMDd9\u0026s=f78b533b7bac6a79b4c694bac28bdb2f\u0026dpr=1\u0026auto=format\u0026fit=crop\u0026w=1000\u0026q=80\u0026cs=tinysrgb",
    "description": "What are the skills that'd last throughout your career?",
    "published": true,
    "published_at": "2018-05-03T14:59:55.577Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eTechnologies change everyday.\u003cbr\u003e\nWeb is fast changing.\u003cbr\u003e\nFrom static HTML, Dynamic websites and to WebAssemblies.\u003cbr\u003e\nAnd You see a bunch of new JavaScript libraries released everday.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eIt's hard to keep up and skillsets change every few years.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eBut I see developers using vi/emacs/make/gcc skills for decades.\u003c/p\u003e\n\n\u003cp\u003e🤔\u003cstrong\u003eWhat are the evergreen skills you can invest in (or learning now)❓\u003c/strong\u003e \u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cp\u003e** Update on 12/14/2018 **\u003cbr\u003e\nCheck out this great post by \u003ca href=\"https://dev.to/alexfawkes\"\u003eAlex Fawkes\u003c/a\u003e, in which he discusses the topic more in depth.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag__link\"\u003e\n        \u003ca href=\"/alexfawkes\" class=\"ltag__link__link\"\u003e\n          \u003cdiv class=\"ltag__link__pic\"\u003e\n            \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--dsuh54w5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--WPpU9Du1--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://thepracticaldev.s3.amazonaws.com/uploads/user/profile_image/118742/28a965fd-be3f-4959-b608-444c508497d8.png\" alt=\"alexfawkes image\"\u003e\n          \u003c/div\u003e\u003c/a\u003e\n          \u003ca href=\"/checkgit/software-development-some-things-never-change-1lk5\" class=\"ltag__link__link\"\u003e\n            \u003cdiv class=\"ltag__link__content\"\u003e\n              \u003ch2\u003eSoftware Development: Some Things Never Change\u003c/h2\u003e\n              \u003ch3\u003eAlex Fawkes\u003c/h3\u003e\n              \u003cdiv class=\"ltag__link__taglist\"\u003e\n\u003cspan class=\"ltag__link__tag\"\u003e#software\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#softwaredevelopment\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#softwareengineering\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#softwarearchitecture\u003c/span\u003e\n\u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/a\u003e\n      \u003c/div\u003e\n\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: Evergreen skills to use throughout your career?\r\npublished: true\r\ndescription: What are the skills that'd last throughout your career?\r\ntags: discuss, career\r\ncover_image: https://images.unsplash.com/photo-1473448912268-2022ce9509d8?ixlib=rb-0.3.5\u0026ixid=eyJhcHBfaWQiOjEyMDd9\u0026s=f78b533b7bac6a79b4c694bac28bdb2f\u0026dpr=1\u0026auto=format\u0026fit=crop\u0026w=1000\u0026q=80\u0026cs=tinysrgb\r\n---\r\n\r\nTechnologies change everyday.\r\nWeb is fast changing.\r\nFrom static HTML, Dynamic websites and to WebAssemblies.\r\nAnd You see a bunch of new JavaScript libraries released everday.\r\n\r\n_It's hard to keep up and skillsets change every few years._\r\n\r\nBut I see developers using vi/emacs/make/gcc skills for decades.\r\n\r\n🤔**What are the evergreen skills you can invest in (or learning now)❓** \r\n\r\n\r\n_____\r\n\r\n** Update on 12/14/2018 **\r\nCheck out this great post by [Alex Fawkes](https://dev.to/alexfawkes), in which he discusses the topic more in depth.\r\n\r\n\r\n{% link checkgit/software-development-some-things-never-change-1lk5 %}\r\n",
    "canonical_url": null,
    "show_comments": true,
    "main_image_background_hex_color": "#56675f",
    "published_from_feed": false,
    "comments_count": 58,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": null,
    "positive_reactions_count": 170,
    "edited_at": "2018-12-14T14:38:30.160Z",
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "discuss, career",
    "path": "/dance2die/everygreen-skills-to-use-throughout-your-career-3b17",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-09-06T19:38:51.946Z"
  },
  {
    "title": "Keyboard shortcut to get out of node_modules folder in Visual Studio Code",
    "slug": "keyboard-shortcut-to-get-out-of-nodemodules-folder-in-visual-studio-code-5dd7",
    "created_at": "2018-05-09T00:14:45.766Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/y2c5e18dmvpjszpvv052.jpg",
    "description": "\n\n\n  \n  \n  🌧️ Introduction\n\n\nVisual Studio Code has been de facto choice of front...",
    "published": true,
    "published_at": "2018-05-09T00:10:34.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003ch3\u003e\n  \u003ca name=\"introduction\" href=\"#introduction\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🌧️ Introduction\n\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"https://code.visualstudio.com/\"\u003eVisual Studio Code\u003c/a\u003e has been de facto choice of front-end development.\u003cbr\u003e\nWhat do you usually use for front-end development? NPM packages.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"problem\" href=\"#problem\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🤔 Problem\n\u003c/h3\u003e\n\n\u003cp\u003eAs you are navigating JavaScript code, you are bound to stumble upon a code in \u003ccode\u003enode_modules\u003c/code\u003e folder.\u003cbr\u003e\u003cbr\u003e\nAnd It’s a pain 😠 to scroll all the way up and close it.\u003c/p\u003e\n\n\u003cp\u003eSo how do you quickly close \u003ccode\u003enode_modules\u003c/code\u003e folder?\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"tldr\" href=\"#tldr\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  📜 TL;DR\n\u003c/h3\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePress and hold down the ⬅️ left arrow key.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eYeah, seriously \u003cstrong\u003ethat’s it\u003c/strong\u003e.\u003cbr\u003e\nIt works in Windows Explorer and Atom, as well.\u003c/p\u003e\n\n\u003cp\u003eHere is the live action.\u003cbr\u003e\n\u003ciframe width=\"710\" height=\"399\" src=\"https://www.youtube.com/embed/0YGH1fKIaNY\" allowfullscreen\u003e \u003c/iframe\u003e\u003c/p\u003e\n\n\u003cp\u003eThis will save you at most 5~10 seconds but it will add up.\u003cbr\u003e\nI've been stuck in \u003ccode\u003enode_modules\u003c/code\u003e folder hell so many times and decided to share this tip.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/05/08/node_modules-folder-hell/\"\u003eKeyboard shortcut to get out of node_modules folder in Visual Studio Code\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: Keyboard shortcut to get out of node_modules folder in Visual Studio Code\r\npublished: true\r\ntags: javascript, vscode, node_modules, npm\r\ncanonical_url: https://www.slightedgecoder.com/2018/05/08/node_modules-folder-hell/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/y2c5e18dmvpjszpvv052.jpg\r\n---\r\n\r\n### 🌧️ Introduction\r\n\r\n[Visual Studio Code](https://code.visualstudio.com/) has been de facto choice of front-end development.\r\nWhat do you usually use for front-end development? NPM packages.\r\n\r\n### 🤔 Problem\r\n\r\nAs you are navigating JavaScript code, you are bound to stumble upon a code in `node_modules` folder.  \r\nAnd It’s a pain 😠 to scroll all the way up and close it.\r\n\r\nSo how do you quickly close `node_modules` folder?\r\n\r\n### 📜 TL;DR \r\n\r\n\u003e Press and hold down the ⬅️ left arrow key.\r\n\r\nYeah, seriously **that’s it**.\r\nIt works in Windows Explorer and Atom, as well.\r\n\r\nHere is the live action.\r\n{% youtube 0YGH1fKIaNY %}\r\n\r\nThis will save you at most 5~10 seconds but it will add up.\r\nI've been stuck in `node_modules` folder hell so many times and decided to share this tip.\r\n\r\n_The post [Keyboard shortcut to get out of node\\_modules folder in Visual Studio Code](https://www.slightedgecoder.com/2018/05/08/node_modules-folder-hell/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com)._",
    "canonical_url": "https://www.slightedgecoder.com/2018/05/08/node_modules-folder-hell/",
    "show_comments": true,
    "main_image_background_hex_color": "#7e7049",
    "published_from_feed": true,
    "comments_count": 12,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/05/08/node_modules-folder-hell/",
    "positive_reactions_count": 69,
    "edited_at": "2018-05-09T14:44:24.182Z",
    "crossposted_at": "2018-05-09T00:26:00.429Z",
    "language": "en",
    "cached_tag_list": "javascript, vscode, nodemodules, npm",
    "path": "/dance2die/keyboard-shortcut-to-get-out-of-nodemodules-folder-in-visual-studio-code-5dd7",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-06-27T19:59:39.887Z"
  },
  {
    "title": "Rollup Class Properties Transform Babel Plugin Issue",
    "slug": "rollup-class-properties-transform-babel-plugin-issue-32a0-temp-slug-4767722",
    "created_at": "2018-05-16T02:26:37.793Z",
    "main_image": null,
    "description": "\n\nI have an NPM library, calendar-dates built with RollUp.JS (“RollUp” hereafter)...",
    "published": false,
    "published_at": "2018-05-16T02:23:24.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI have an NPM library, \u003ca href=\"https://www.npmjs.com/package/calendar-dates\"\u003ecalendar-dates\u003c/a\u003e built with \u003ca href=\"https://www.rollupjs.org/\"\u003eRollUp.JS\u003c/a\u003e (“RollUp” hereafter).\u003cbr\u003e\u003cbr\u003e\nAs I was using an experimental JavaScript feature, \u003ca href=\"https://babeljs.io/docs/plugins/transform-class-properties/\"\u003eClass properties transform\u003c/a\u003e (to declare a static property in an ES6 class) with RollUp, I ran into the following error \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--fh0DXXTQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f645.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--fh0DXXTQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f645.png\" alt=\"🙅\"\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"commonjs%20plugin\"\u003e!\u003c/a\u003e SyntaxError: Unexpected token\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eI’ll show you what I did and how I fixed the error.\u003cbr\u003e\u003cbr\u003e\n(I will assume that you are familiar with static class properties in ES6 and RollUp)\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"what-i-did-before-getting-the-error\" href=\"#what-i-did-before-getting-the-error\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Kukdh8M0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f914.png\" alt=\"🤔\"\u003e What I did before getting the error\n\u003c/h3\u003e\n\n\u003cp\u003eMy main class \u003ccode\u003eCalendarDates\u003c/code\u003e is declared with the static property, \u003ccode\u003emonthTypes\u003c/code\u003e, which caused the error in the introduction.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eI installed the Class properties transform Babel plugin to the project as a devdependency.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eAnd added \u003ccode\u003etransform-class-properties\u003c/code\u003e plugin in \u003ccode\u003e.babelrc\u003c/code\u003e file.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eBelow was my original \u003ccode\u003erollup.config.js\u003c/code\u003e file.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eThe configuration takes \u003ccode\u003esrc/index.js\u003c/code\u003e file as an input then\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eResolves package (resolve())\u003c/li\u003e\n\u003cli\u003eConverts CommonJS to ES6 (commonjs())\u003c/li\u003e\n\u003cli\u003eMinimize the package (uglify())\u003c/li\u003e\n\u003cli\u003eConverts ES6 to ES5 (babel())\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eLastly, outputs two files\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003ecalendardates.cjs.js – Common JS module – Enables the library to be imported using \u003ccode\u003erequire()\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003ecalendardates.esm.js – ES6 module – Enables the library to be imported using \u003ccode\u003eimport()\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThe logic above worked until I added Class transform properties plugin.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"how-i-fixed-it\" href=\"#how-i-fixed-it\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--61ZesPW_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/26cf.png\" alt=\"⛏\"\u003e How I Fixed It\n\u003c/h3\u003e\n\n\u003cp\u003eIt turns out that my logic was half-right.\u003c/p\u003e\n\n\u003cp\u003eWhat I had to do  was to transpile (with Babel) before piping the code into \u003ccode\u003ecommonjs()\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eBasically Babel converts ES6 code into ES5 and then \u003ccode\u003ecommonjs()\u003c/code\u003e converts that ES5 back to ES6 so that the library can be \u003ccode\u003eimport\u003c/code\u003e‘ed in ES6 code.\u003cbr\u003e\u003cbr\u003e\nThe order of how plugins are added matters!\u003c/p\u003e\n\n\u003cp\u003eHere is the result after the change.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eI hope you were making \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--kVSRdbMS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f601.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--kVSRdbMS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f601.png\" alt=\"😁\"\u003e\u003c/a\u003e if you were having a similar issue.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--gVg-g_YK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f390.png\" alt=\"🎐\"\u003e Parting Words\n\u003c/h3\u003e\n\n\u003cp\u003eYeah, it was as simple as just moving plugin methods around.\u003cbr\u003e\u003cbr\u003e\nLearned something new that the order of plugin declaration mattered.\u003c/p\u003e\n\n\u003cp\u003eI only guessed to change the order around as I was used to using middlewares in ASP.NET Core, and Express.\u003cbr\u003e\u003cbr\u003e\nIt seems like many programming concepts can be found in many places and can be used.\u003c/p\u003e\n\n\u003cp\u003eHere is the link to the updated \u003ca href=\"https://github.com/dance2die/calendar-dates/blob/add_date_metadata/rollup.config.js\"\u003erollup.config.js\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/05/15/rollup-js-issue-commonjs-plugin-syntaxerror-unexpected-token/\"\u003eRollup Class Properties Transform Babel Plugin Issue\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Rollup Class Properties Transform Babel Plugin Issue\npublished: false\ntags: Blog Entry,quick tip,babel,es6\ncanonical_url: https://www.slightedgecoder.com/2018/05/15/rollup-js-issue-commonjs-plugin-syntaxerror-unexpected-token/\n---\n\nI have an NPM library, [calendar-dates](https://www.npmjs.com/package/calendar-dates) built with [RollUp.JS](https://www.rollupjs.org/) (“RollUp” hereafter).  \nAs I was using an experimental JavaScript feature, [Class properties transform](https://babeljs.io/docs/plugins/transform-class-properties/) (to declare a static property in an ES6 class) with RollUp, I ran into the following error ![🙅](https://s.w.org/images/core/emoji/2.4/72x72/1f645.png).\n\n\u003e [!] (commonjs plugin) SyntaxError: Unexpected token\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nI’ll show you what I did and how I fixed the error.  \n(I will assume that you are familiar with static class properties in ES6 and RollUp)\n\n### ![🤔](https://s.w.org/images/core/emoji/2.4/72x72/1f914.png) What I did before getting the error\n\nMy main class `CalendarDates` is declared with the static property, `monthTypes`, which caused the error in the introduction.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nI installed the Class properties transform Babel plugin to the project as a devdependency.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nAnd added `transform-class-properties` plugin in `.babelrc` file.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nBelow was my original `rollup.config.js` file.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nThe configuration takes `src/index.js` file as an input then\n\n1. Resolves package (resolve())\n2. Converts CommonJS to ES6 (commonjs())\n3. Minimize the package (uglify())\n4. Converts ES6 to ES5 (babel())\n\nLastly, outputs two files\n\n1. calendardates.cjs.js – Common JS module – Enables the library to be imported using `require()`\n2. calendardates.esm.js – ES6 module – Enables the library to be imported using `import()`\n\nThe logic above worked until I added Class transform properties plugin.\n\n### ![⛏](https://s.w.org/images/core/emoji/2.4/72x72/26cf.png) How I Fixed It\n\nIt turns out that my logic was half-right.\n\nWhat I had to do  was to transpile (with Babel) before piping the code into `commonjs()`.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nBasically Babel converts ES6 code into ES5 and then `commonjs()` converts that ES5 back to ES6 so that the library can be `import`‘ed in ES6 code.  \nThe order of how plugins are added matters!\n\nHere is the result after the change.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nI hope you were making ![😁](https://s.w.org/images/core/emoji/2.4/72x72/1f601.png) if you were having a similar issue.\n\n### ![🎐](https://s.w.org/images/core/emoji/2.4/72x72/1f390.png) Parting Words\n\nYeah, it was as simple as just moving plugin methods around.  \nLearned something new that the order of plugin declaration mattered.\n\nI only guessed to change the order around as I was used to using middlewares in ASP.NET Core, and Express.  \nIt seems like many programming concepts can be found in many places and can be used.\n\nHere is the link to the updated [rollup.config.js](https://github.com/dance2die/calendar-dates/blob/add_date_metadata/rollup.config.js).\n\nThe post [Rollup Class Properties Transform Babel Plugin Issue](https://www.slightedgecoder.com/2018/05/15/rollup-js-issue-commonjs-plugin-syntaxerror-unexpected-token/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/05/15/rollup-js-issue-commonjs-plugin-syntaxerror-unexpected-token/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/05/15/rollup-js-issue-commonjs-plugin-syntaxerror-unexpected-token/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, quicktip, babel, es6",
    "path": "/dance2die/rollup-class-properties-transform-babel-plugin-issue-32a0-temp-slug-4767722",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-05-16T02:23:24.000Z"
  },
  {
    "title": "Introducing SHanC – A Static Hacker News Clone",
    "slug": "introducing-shanc--a-static-hacker-news-clone-3ldj",
    "created_at": "2018-05-26T18:33:21.873Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/6yri3hgl2uc97h1m66h2.jpg",
    "description": "\n\nI read Hacker News (HN hereafter) daily.\nThe way I read is that, I skim through...",
    "published": true,
    "published_at": "2018-05-26T18:33:11.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI read \u003ca href=\"https://news.ycombinator.com/\"\u003eHacker News\u003c/a\u003e (HN hereafter) daily.\u003cbr\u003e\u003cbr\u003e\nThe way I read is that, I \u003cem\u003e\u003cstrong\u003eskim through\u003c/strong\u003e\u003c/em\u003e titles and open 5~10 stories and actually read 2~5.\u003c/p\u003e\n\n\u003cp\u003eTwo problems I have with HN.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eEach HN page shows 30 stories only and\u003c/li\u003e\n\u003cli\u003ehaving to click on “more” for a post-back seemed too much of a pain\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cem\u003eAnd I don’t need real-time updates of the story.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSo I created \u003ca href=\"http://shanc.netlify.com/\"\u003eSHaNc\u003c/a\u003e, a Static page Hacker News clone.\u003c/p\u003e\n\n\u003cp\u003eI will only introduce you SHaNc in this article. Details on how it was built and problems faced while building it will be discussed in the next post.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"why\" href=\"#why\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ❓ Why?\n\u003c/h3\u003e\n\n\u003cp\u003eIt solves two problems mentioned above.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eSkimming through 30 pages at a time takes focus away\u003c/li\u003e\n\u003cli\u003eLoading next page with a post-back is slow\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eSHaNc loads all stories in one page (solves the first problem) and fast as it’s a static page\u003cbr\u003e\u003cbr\u003e\n\u003cem\u003eand also learn \u003ca href=\"https://www.gatsbyjs.org/\"\u003eGatsbyJS\u003c/a\u003e \u0026amp; \u003ca href=\"https://www.styled-components.com/\"\u003eStyled Components\u003c/a\u003e along the way.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"what\" href=\"#what\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🤷 What?\n\u003c/h3\u003e\n\n\u003cp\u003eSHaNc is a static page, which displays all stories (Best \u0026amp; New story pages planned), which solves both problems – loads all stories \u0026amp; fast (for being a static page).\u003c/p\u003e\n\n\u003cp\u003eA static page is by definition doesn’t change. So the page is rebuilt every hour on the hour.\u003cbr\u003e\u003cbr\u003e\n\u003cem\u003eSo you will probably be at most 1 hour behind.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"how-about-other-static-hn-clones\" href=\"#how-about-other-static-hn-clones\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🤔 How about other static HN clones?😕\n\u003c/h3\u003e\n\n\u003cp\u003eThere are other two awesome static HN clones.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"https://hn.nuxtjs.org/news\"\u003eNuxt Hacker News\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://next-news.now.sh/\"\u003eHacker Next\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThey are fast but I still had the problem of having to load next page manually, which takes your focus away.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"tech-stack-amp-architecture\" href=\"#tech-stack-amp-architecture\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🏭 Tech Stack \u0026amp; Architecture\n\u003c/h3\u003e\n\n\u003cp\u003eNothing fancy.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.gatsbyjs.org/\"\u003eGatsbyJS\u003c/a\u003e – a static site generator using \u003ca href=\"https://reactjs.org/\"\u003eReactJS\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.styled-components.com/\"\u003eStyled Components\u003c/a\u003e – CSS in JS\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.netlify.com/\"\u003eNetlify\u003c/a\u003e – deployment \u0026amp; Build WebHook\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://azure.microsoft.com/en-us/services/functions/\"\u003eAzure Functions\u003c/a\u003e – triggering site build via Build WebHok every hour\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eSHaNc architecture (Hand-drawn on a piece of paper 😝)\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jIO1_O98--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/05/architecture.jpg%3Fresize%3D1024%252C653\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jIO1_O98--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/05/architecture.jpg%3Fresize%3D1024%252C653\" alt=\"architecture\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🏃‍♂️ Parting Words\n\u003c/h3\u003e\n\n\u003cp\u003eIf you have a similar HN reading style, I hope \u003ca href=\"https://shanc.netlify.com/\"\u003eSHaNc\u003c/a\u003e can help to address your problems.\u003c/p\u003e\n\n\u003cp\u003ePlease leave a feedback, issues, suggestion on \u003ca href=\"https://github.com/dance2die/SHANc/issues\"\u003eGitHub page\u003c/a\u003e (MIT licensed).\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/05/26/introducing-shanc-a-static-hacker-news-clone/\"\u003eIntroducing SHanC – A Static Hacker News Clone\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: Introducing SHanC – A Static Hacker News Clone\r\npublished: true\r\ntags: showdev\r\ncanonical_url: https://www.slightedgecoder.com/2018/05/26/introducing-shanc-a-static-hacker-news-clone/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/6yri3hgl2uc97h1m66h2.jpg\r\n---\r\nI read [Hacker News](https://news.ycombinator.com/) (HN hereafter) daily.  \r\nThe way I read is that, I _**skim through**_ titles and open 5~10 stories and actually read 2~5.\r\n\r\nTwo problems I have with HN.\r\n\r\n1. Each HN page shows 30 stories only and\r\n2. having to click on “more” for a post-back seemed too much of a pain\r\n\r\n_And I don’t need real-time updates of the story._\r\n\r\nSo I created [SHaNc](http://shanc.netlify.com/), a Static page Hacker News clone.\r\n\r\nI will only introduce you SHaNc in this article. Details on how it was built and problems faced while building it will be discussed in the next post.\r\n\r\n### ❓ Why?\r\n\r\nIt solves two problems mentioned above.\r\n\r\n1. Skimming through 30 pages at a time takes focus away\r\n2. Loading next page with a post-back is slow\r\n\r\nSHaNc loads all stories in one page (solves the first problem) and fast as it’s a static page  \r\n_and also learn [GatsbyJS](https://www.gatsbyjs.org/) \u0026 [Styled Components](https://www.styled-components.com/) along the way._\r\n\r\n### 🤷 What?\r\n\r\nSHaNc is a static page, which displays all stories (Best \u0026 New story pages planned), which solves both problems – loads all stories \u0026 fast (for being a static page).\r\n\r\nA static page is by definition doesn’t change. So the page is rebuilt every hour on the hour.  \r\n_So you will probably be at most 1 hour behind._\r\n\r\n### 🤔 How about other static HN clones?😕\r\n\r\nThere are other two awesome static HN clones.\r\n\r\n1. [Nuxt Hacker News](https://hn.nuxtjs.org/news)\r\n2. [Hacker Next](https://next-news.now.sh/)\r\n\r\nThey are fast but I still had the problem of having to load next page manually, which takes your focus away.\r\n\r\n### 🏭 Tech Stack \u0026 Architecture\r\n\r\nNothing fancy.\r\n\r\n1. [GatsbyJS](https://www.gatsbyjs.org/) – a static site generator using [ReactJS](https://reactjs.org/)\r\n2. [Styled Components](https://www.styled-components.com/) – CSS in JS\r\n3. [Netlify](https://www.netlify.com/) – deployment \u0026 Build WebHook\r\n4. [Azure Functions](https://azure.microsoft.com/en-us/services/functions/) – triggering site build via Build WebHok every hour\r\n\r\nSHaNc architecture (Hand-drawn on a piece of paper 😝)\r\n\r\n ![architecture](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/05/architecture.jpg?resize=1024%2C653)\r\n\r\n\r\n\r\n### 🏃‍♂️ Parting Words\r\n\r\nIf you have a similar HN reading style, I hope [SHaNc](https://shanc.netlify.com/) can help to address your problems.\r\n\r\nPlease leave a feedback, issues, suggestion on [GitHub page](https://github.com/dance2die/SHANc/issues) (MIT licensed).\r\n\r\n---\r\n\r\n_The post [Introducing SHanC – A Static Hacker News Clone](https://www.slightedgecoder.com/2018/05/26/introducing-shanc-a-static-hacker-news-clone/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com)_\r\n\r\n",
    "canonical_url": "https://www.slightedgecoder.com/2018/05/26/introducing-shanc-a-static-hacker-news-clone/",
    "show_comments": true,
    "main_image_background_hex_color": "#e6e6e6",
    "published_from_feed": true,
    "comments_count": 2,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/05/26/introducing-shanc-a-static-hacker-news-clone/",
    "positive_reactions_count": 15,
    "edited_at": null,
    "crossposted_at": "2018-05-30T00:09:28.936Z",
    "language": "en",
    "cached_tag_list": "showdev",
    "path": "/dance2die/introducing-shanc--a-static-hacker-news-clone-3ldj",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-05-30T11:02:14.822Z"
  },
  {
    "title": "Technology Stack Rundown of SHaNc",
    "slug": "technology-stack-rundown-of-shanc-ef7",
    "created_at": "2018-06-02T18:19:51.547Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/6fme4xds41f4g1p24bxk.jpg",
    "description": "\n\nThe post Technology Stack Rundown of SHaNc appeared first on Slight Edge Coder....",
    "published": true,
    "published_at": "2018-06-02T18:16:06.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/06/02/technology-stack-rundown-of-shanc/\"\u003eTechnology Stack Rundown of SHaNc\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eIn the \u003ca href=\"https://dev.to/dance2die/introducing-shanc--a-static-hacker-news-clone-3ldj\"\u003eprevious article\u003c/a\u003e, I introduced \u003ca href=\"http://shanc.netlify.com/\"\u003eSHaNc\u003c/a\u003e, a Static Hacker News clone.\u003cbr\u003e\nI will talk about following technologies used and why.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"https://www.gatsbyjs.org/\"\u003eGatsbyJS\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.styled-components.com/\"\u003eStyled Components\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.netlify.com/\"\u003eNetlify\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://azure.microsoft.com/en-us/services/functions/\"\u003eAzure Functions\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"architecture-reprise\" href=\"#architecture-reprise\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🏭 Architecture – Reprise\n\u003c/h3\u003e\n\n\u003cp\u003eHere is a the recap of the architecture in the previous article.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Vr2hK1AF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/05/architecture.jpg%3Fresize%3D1024%252C653%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Vr2hK1AF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/05/architecture.jpg%3Fresize%3D1024%252C653%26ssl%3D1\" alt=\"architecture\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eGatsby is used to generate a static page, which is then deployed to Netlify. And Azure Function causes Netlify to rebuild the static page via build webhook.\u003c/p\u003e\n\n\u003cp\u003eI will go over each component one by one below.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"gatsbyjs\" href=\"#gatsbyjs\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  📜 GatsbyJS\n\u003c/h3\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"what\" href=\"#what\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  What❓\n\u003c/h4\u003e\n\n\u003cp\u003eIt’s a static site generator using ReactJS (React hereafter) as UI template engine.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"why\" href=\"#why\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Why? 🤔\n\u003c/h4\u003e\n\n\u003cp\u003eThere are many static site generators out there, I picked it for two reasons.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eMy familiarity with React – It helped me create a MVP (\u003ca href=\"https://en.wikipedia.org/wiki/Minimum_viable_product\"\u003eMinimum Viable Product\u003c/a\u003e)  fast\u003c/li\u003e\n\u003cli\u003eEasy to get started with great \u003ca href=\"https://www.gatsbyjs.org/docs/\"\u003edocumentations\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"how\" href=\"#how\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  How? 🔨\n\u003c/h4\u003e\n\n\u003cp\u003eGatsby fetches Hacker News data via a publicly available \u003ca href=\"https://github.com/HackerNews/API\"\u003eHacker News API\u003c/a\u003e (HN API hereafter) then merges it with React template to create a single HTML file.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"challenge\" href=\"#challenge\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Challenge 🤔\n\u003c/h4\u003e\n\n\u003cp\u003eGatsby can fetch external data only via \u003ca href=\"https://graphql.org/\"\u003eGraphQL\u003c/a\u003e data source (Reference \u003ca href=\"https://www.gatsbyjs.org/docs/querying-with-graphql/\"\u003eQuerying Data with GraphQL\u003c/a\u003e).\u003cbr\u003e\u003cbr\u003e\nI wanted to use \u003ca href=\"https://twitter.com/ryanflorence/\"\u003eRyan Florence\u003c/a\u003e‘s \u003ca href=\"https://github.com/ryanflorence/gatsby-source-firebase\"\u003egatsby-source-firebase\u003c/a\u003e as HN API hosted on Firebase.\u003c/p\u003e\n\n\u003cp\u003eRyan’s plugin required Firebase credential to be passed but HN API is public thus required no credential.\u003cbr\u003e\u003cbr\u003e\nDue to a default GitHub license issue, I could not fork, update, \u0026amp; publish my own plugin.\u003c/p\u003e\n\n\u003cp\u003eSo the next option was to create a \u003ca href=\"https://github.com/dance2die/SHANc/blob/master/gatsby-node.js\"\u003ecustom GraphQL data source\u003c/a\u003e, which exposes fetched HN data.\u003cbr\u003e\u003cbr\u003e\n\u003cem\u003e(I will go into more details on how it was implemented in a later blog post)\u003c/em\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"styled-components\" href=\"#styled-components\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  📜 Styled Components\n\u003c/h3\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"what\" href=\"#what\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  What❓\n\u003c/h4\u003e\n\n\u003cp\u003eIt’s a React library that lets you embed CSS in React (\u003ca href=\"https://www.styled-components.com/\"\u003eStyled Components Home\u003c/a\u003e).\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"why\" href=\"#why\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Why? 🤔\n\u003c/h4\u003e\n\n\u003cp\u003eI started using it out of a curiosity.\u003c/p\u003e\n\n\u003cp\u003eBut then I realized that it made creating simple stylized React component with ease with familiar CSS syntax (React requires slightly different syntax, \u003ccode\u003eclassName\u003c/code\u003e for \u003ccode\u003eclass\u003c/code\u003e attribute, and need to camelize CSS styles with \u003ccode\u003e-\u003c/code\u003e; \u003ccode\u003elineHeight\u003c/code\u003e instead of \u003ccode\u003eline-height\u003c/code\u003e).\u003c/p\u003e\n\n\u003cp\u003eAnother benefit I found is that I could name the container making the code readable (instead of using generic “div” or “span”) and intentional.\u003c/p\u003e\n\n\u003cp\u003eYou can see that \u003ccode\u003estoriesComponents\u003c/code\u003e is consisted of a story with rank, content, which contains body and meta data.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/56d863a786182fc7a853084d5005a159.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"how\" href=\"#how\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  How? 🔨\n\u003c/h4\u003e\n\n\u003cp\u003eAs mentioned in “Why?”, I used it to apply styles without an external CSS file keeping each component self-contained (but less flexible as I didn’t use \u003ca href=\"https://www.styled-components.com/docs/advanced#theming\"\u003etheming functionality\u003c/a\u003e).\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"why-not\" href=\"#why-not\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Why Not? 😤\n\u003c/h4\u003e\n\n\u003cp\u003eCSS in JS is very controversial so I won’t go into much details. But you could read up on \u003ca href=\"https://hackernoon.com/all-you-need-to-know-about-css-in-js-984a72d48ebc\"\u003eCSS in JS\u003c/a\u003e, and make your own decision😉\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"netlify\" href=\"#netlify\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  📜 Netlify\n\u003c/h3\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"what\" href=\"#what\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  What ❓\n\u003c/h4\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.netlify.com/\"\u003eNetlify\u003c/a\u003e is a web site hosting company, which makes deploying from GitHub very easy (\u0026amp; 😀 free 💰).\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"why\" href=\"#why\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Why? 🤔\n\u003c/h4\u003e\n\n\u003cp\u003eI used it because Netlify’s \u003ca href=\"https://www.netlify.com/docs/webhooks/#incoming-webhooks\"\u003eBuild WebHook\u003c/a\u003e is more accessible than \u003ca href=\"https://developer.github.com/webhooks/\"\u003eGitHub WebHook\u003c/a\u003e.\u003cbr\u003e\u003cbr\u003e\nIt was a matter of making a simple HTTPS POST request for Netlify while GitHub required many other steps\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"how\" href=\"#how\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  How? 🔨\n\u003c/h4\u003e\n\n\u003cp\u003eI deployed GitHub repo using similar steps I blogged about.\u003cbr\u003e\u003cbr\u003e\n\u003cem\u003e(Refer to my previous post \u003ca href=\"https://www.slightedgecoder.com/2017/12/09/deploying-existing-create-react-app-github-netlify/\"\u003eDeploying Existing Create-React-App on GitHub to Netlify\u003c/a\u003e)\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eNetlify is aware that a project is a Gatsby site thus filling out many values for you (what command to run and what folder to deploy to production)\u003c/p\u003e\n\n\u003cp\u003eAnd also publishing to a master branch (you can set it to another branch) continuously deploys to production as Netlify creates a webhook on GitHub and runs the build automatically.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"azure-functions\" href=\"#azure-functions\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  📜 Azure Functions\n\u003c/h3\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"what\" href=\"#what\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  What❓\n\u003c/h4\u003e\n\n\u003cp\u003eIt’s sorta like a Web API you can invoke without requiring a server.\u003c/p\u003e\n\n\u003cp\u003eHere is an analogy I heard from somewhere (I think it was \u003ca href=\"https://twitter.com/shanselman\"\u003eScott Hanselman\u003c/a\u003e in one of the Azure related podcasts).\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eBuilding your own server to get something work done\u003cbr\u003e\u003cbr\u003e\n– is like “building your own car” to get to one point to another\u003cbr\u003e\u003cbr\u003e\n– You pay for car parts (server parts) and build costs\u003cbr\u003e\u003cbr\u003e\nDeploying your site to a cloud\u003cbr\u003e\u003cbr\u003e\n– is like “buying a car” (a server) – and you are responsible for maintaining it\u003cbr\u003e\u003cbr\u003e\nCalling/invoking Azure Functions\u003cbr\u003e\u003cbr\u003e\n– is like “renting a car” as you don’t take care of the car (server) yourself.\u003cbr\u003e\u003cbr\u003e\n– You just want to go from one place to another (the purpose is to get a piece of work done without requiring a server).\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"why\" href=\"#why\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Why? 🤔\n\u003c/h4\u003e\n\n\u003cp\u003e\u003ca href=\"https://aws.amazon.com/lambda/\"\u003eAWS Lambda\u003c/a\u003e was pain in the butt as I just needed a simple job that runs every hour without much security concern.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"how\" href=\"#how\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  How? 🔨\n\u003c/h4\u003e\n\n\u003cp\u003eIt runs every hour doing a HTTPS POST request to the Netlify’s Build WebHook (Using an experimental PowerShell version of Azure Functions).\u003c/p\u003e\n\n\u003cp\u003eFull implementation (I mean really)\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/970999b7fb5ba0e62001766ce55af9f7.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eAzure Functions Schedule (runs every 60 minutes on the hour)\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/b6d16c2b10cfbb7a635a02485dd6108c.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👋 Parting Words\n\u003c/h3\u003e\n\n\u003cp\u003eIn this article, I’ve shown you tech stack used to build \u003ca href=\"http://shanc.netlify.com/\"\u003eSHaNc\u003c/a\u003e.\u003cbr\u003e\nMost of the decisions are based on familiarity and ease of use.\u003c/p\u003e\n\n\u003cp\u003eIn following posts, I will go more into details\u003cbr\u003e\n\u003cem\u003e(e.g. How to implement a custom GraphQL data source for GatsbyJS).\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eLeave a feedback on \u003ca href=\"https://github.com/dance2die/SHANc/issues\"\u003eGitHub\u003c/a\u003e.\u003cbr\u003e\nSay hi on Twitter \u003ca href=\"https://twitter.com/slightedgecoder\"\u003e@SlightEdgeCoder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: Technology Stack Rundown of SHaNc\r\npublished: true\r\ntags: webdev\r\ncanonical_url: https://www.slightedgecoder.com/2018/06/02/technology-stack-rundown-of-shanc/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/6fme4xds41f4g1p24bxk.jpg\r\n---\r\n\r\n_The post [Technology Stack Rundown of SHaNc](https://www.slightedgecoder.com/2018/06/02/technology-stack-rundown-of-shanc/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com)._\r\n\r\nIn the [previous article](https://dev.to/dance2die/introducing-shanc--a-static-hacker-news-clone-3ldj), I introduced [SHaNc](http://shanc.netlify.com/), a Static Hacker News clone.\r\nI will talk about following technologies used and why.\r\n\r\n1. [GatsbyJS](https://www.gatsbyjs.org/)\r\n2. [Styled Components](https://www.styled-components.com/)\r\n3. [Netlify](https://www.netlify.com/)\r\n4. [Azure Functions](https://azure.microsoft.com/en-us/services/functions/)\r\n\r\n### 🏭 Architecture – Reprise\r\n\r\nHere is a the recap of the architecture in the previous article.\r\n\r\n ![architecture](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/05/architecture.jpg?resize=1024%2C653\u0026ssl=1)\r\n\r\nGatsby is used to generate a static page, which is then deployed to Netlify. And Azure Function causes Netlify to rebuild the static page via build webhook.\r\n\r\nI will go over each component one by one below.\r\n\r\n### 📜 GatsbyJS\r\n\r\n#### What❓\r\n\r\nIt’s a static site generator using ReactJS (React hereafter) as UI template engine.\r\n\r\n#### Why? 🤔\r\n\r\nThere are many static site generators out there, I picked it for two reasons.\r\n\r\n1. My familiarity with React – It helped me create a MVP ([Minimum Viable Product](https://en.wikipedia.org/wiki/Minimum_viable_product))  fast\r\n2. Easy to get started with great [documentations](https://www.gatsbyjs.org/docs/)\r\n\r\n#### How? 🔨\r\n\r\nGatsby fetches Hacker News data via a publicly available [Hacker News API](https://github.com/HackerNews/API) (HN API hereafter) then merges it with React template to create a single HTML file.\r\n\r\n#### Challenge 🤔\r\n\r\nGatsby can fetch external data only via [GraphQL](https://graphql.org/) data source (Reference [Querying Data with GraphQL](https://www.gatsbyjs.org/docs/querying-with-graphql/)).  \r\nI wanted to use [Ryan Florence](https://twitter.com/ryanflorence/)‘s [gatsby-source-firebase](https://github.com/ryanflorence/gatsby-source-firebase) as HN API hosted on Firebase.\r\n\r\nRyan’s plugin required Firebase credential to be passed but HN API is public thus required no credential.  \r\nDue to a default GitHub license issue, I could not fork, update, \u0026 publish my own plugin.\r\n\r\nSo the next option was to create a [custom GraphQL data source](https://github.com/dance2die/SHANc/blob/master/gatsby-node.js), which exposes fetched HN data.  \r\n_(I will go into more details on how it was implemented in a later blog post)_\r\n\r\n### 📜 Styled Components\r\n\r\n#### What❓\r\n\r\nIt’s a React library that lets you embed CSS in React ([Styled Components Home](https://www.styled-components.com/)).\r\n\r\n#### Why? 🤔\r\n\r\nI started using it out of a curiosity.\r\n\r\nBut then I realized that it made creating simple stylized React component with ease with familiar CSS syntax (React requires slightly different syntax, `className` for `class` attribute, and need to camelize CSS styles with `-`; `lineHeight` instead of `line-height`).\r\n\r\nAnother benefit I found is that I could name the container making the code readable (instead of using generic “div” or “span”) and intentional.\r\n\r\nYou can see that `storiesComponents` is consisted of a story with rank, content, which contains body and meta data.\r\n\r\n{% gist https://gist.github.com/dance2die/56d863a786182fc7a853084d5005a159 %}\r\n\r\n#### How? 🔨\r\n\r\nAs mentioned in “Why?”, I used it to apply styles without an external CSS file keeping each component self-contained (but less flexible as I didn’t use [theming functionality](https://www.styled-components.com/docs/advanced#theming)).\r\n\r\n#### Why Not? 😤\r\n\r\nCSS in JS is very controversial so I won’t go into much details. But you could read up on [CSS in JS](https://hackernoon.com/all-you-need-to-know-about-css-in-js-984a72d48ebc), and make your own decision😉\r\n\r\n### 📜 Netlify\r\n\r\n#### What ❓\r\n\r\n[Netlify](https://www.netlify.com/) is a web site hosting company, which makes deploying from GitHub very easy (\u0026 😀 free 💰).\r\n\r\n#### Why? 🤔\r\n\r\nI used it because Netlify’s [Build WebHook](https://www.netlify.com/docs/webhooks/#incoming-webhooks) is more accessible than [GitHub WebHook](https://developer.github.com/webhooks/).  \r\nIt was a matter of making a simple HTTPS POST request for Netlify while GitHub required many other steps\r\n\r\n#### How? 🔨\r\n\r\nI deployed GitHub repo using similar steps I blogged about.  \r\n_(Refer to my previous post [Deploying Existing Create-React-App on GitHub to Netlify](https://www.slightedgecoder.com/2017/12/09/deploying-existing-create-react-app-github-netlify/))_\r\n\r\nNetlify is aware that a project is a Gatsby site thus filling out many values for you (what command to run and what folder to deploy to production)\r\n\r\nAnd also publishing to a master branch (you can set it to another branch) continuously deploys to production as Netlify creates a webhook on GitHub and runs the build automatically.\r\n\r\n### 📜 Azure Functions\r\n\r\n#### What❓\r\n\r\nIt’s sorta like a Web API you can invoke without requiring a server.\r\n\r\nHere is an analogy I heard from somewhere (I think it was [Scott Hanselman](https://twitter.com/shanselman) in one of the Azure related podcasts).\r\n\r\n\u003e Building your own server to get something work done  \r\n\u003e – is like “building your own car” to get to one point to another  \r\n\u003e – You pay for car parts (server parts) and build costs  \r\n\u003e Deploying your site to a cloud  \r\n\u003e – is like “buying a car” (a server) – and you are responsible for maintaining it  \r\n\u003e Calling/invoking Azure Functions  \r\n\u003e – is like “renting a car” as you don’t take care of the car (server) yourself.  \r\n\u003e – You just want to go from one place to another (the purpose is to get a piece of work done without requiring a server).\r\n\r\n####  Why? 🤔\r\n\r\n[AWS Lambda](https://aws.amazon.com/lambda/) was pain in the butt as I just needed a simple job that runs every hour without much security concern.\r\n\r\n#### How? 🔨\r\n\r\nIt runs every hour doing a HTTPS POST request to the Netlify’s Build WebHook (Using an experimental PowerShell version of Azure Functions).\r\n\r\nFull implementation (I mean really)\r\n\r\n{% gist https://gist.github.com/dance2die/970999b7fb5ba0e62001766ce55af9f7 %}\r\n\r\nAzure Functions Schedule (runs every 60 minutes on the hour)\r\n\r\n{% gist https://gist.github.com/dance2die/b6d16c2b10cfbb7a635a02485dd6108c %}\r\n\r\n### 👋 Parting Words\r\n\r\nIn this article, I’ve shown you tech stack used to build [SHaNc](http://shanc.netlify.com/).\r\nMost of the decisions are based on familiarity and ease of use.\r\n\r\nIn following posts, I will go more into details\r\n_(e.g. How to implement a custom GraphQL data source for GatsbyJS)._\r\n\r\nLeave a feedback on [GitHub](https://github.com/dance2die/SHANc/issues).\r\nSay hi on Twitter [@SlightEdgeCoder](https://twitter.com/slightedgecoder).",
    "canonical_url": "https://www.slightedgecoder.com/2018/06/02/technology-stack-rundown-of-shanc/",
    "show_comments": true,
    "main_image_background_hex_color": "#f7f7f8",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/06/02/technology-stack-rundown-of-shanc/",
    "positive_reactions_count": 18,
    "edited_at": "2018-06-07T10:23:32.866Z",
    "crossposted_at": "2018-06-02T18:41:02.003Z",
    "language": "en",
    "cached_tag_list": "webdev",
    "path": "/dance2die/technology-stack-rundown-of-shanc-ef7",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-06-02T18:16:06.000Z"
  },
  {
    "title": "What's your opinion on Microsoft's GitHub Acquisition?",
    "slug": "whats-your-opinion-on-microsofts-github-acquisition-3je2",
    "created_at": "2018-06-03T21:26:34.653Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/1krw9d20stfo16znhmad.png",
    "description": "The Verge just reported that Microsoft has acquired GitHub.",
    "published": true,
    "published_at": "2018-06-03T21:26:34.631Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eUPDATE 2018/06/04\u003c/em\u003e\u003c/strong\u003e\u003cbr\u003e\nMicrosoft \u003ca href=\"https://www.theverge.com/2018/6/4/17422788/microsoft-github-acquisition-official-deal\"\u003econfirms the acquisition\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe Verge just reported that \u003ca href=\"https://www.theverge.com/2018/6/3/17422752/microsoft-github-acquisition-rumors\"\u003eMicrosoft has reportedly acquired GitHub\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eWhat's your opinion about it?\u003c/p\u003e\n\n\u003cp\u003eSome of the questions I can think of for the discussion are\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWill Open source contributors and project stay on GitHub?\u003c/li\u003e\n\u003cli\u003eWill Microsoft abandon VSTS (\u003ca href=\"https://www.visualstudio.com/team-services/\"\u003eVisual Studio Team Services\u003c/a\u003e)?\u003c/li\u003e\n\u003cli\u003eetc.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAnd also,\u003cbr\u003e\nGnome has recently \u003ca href=\"https://about.gitlab.com/2018/05/31/welcome-gnome-to-gitlab/\"\u003emoved to GitLab\u003c/a\u003e.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eWould \u003cstrong\u003eyou\u003c/strong\u003e keep using GitHub? or consider alternatives such as GitLab, BitBucket, etc?\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eI am wondering about how you think about this \"supposed\" acquisition.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: What's your opinion on Microsoft's GitHub Acquisition?\r\npublished: true\r\ndescription: The Verge just reported that Microsoft has acquired GitHub.\r\ntags: discussion\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/1krw9d20stfo16znhmad.png\r\n---\r\n\r\n***UPDATE 2018/06/04***\r\nMicrosoft [confirms the acquisition](https://www.theverge.com/2018/6/4/17422788/microsoft-github-acquisition-official-deal).\r\n\r\n\r\nThe Verge just reported that [Microsoft has reportedly acquired GitHub](https://www.theverge.com/2018/6/3/17422752/microsoft-github-acquisition-rumors).\r\n\r\nWhat's your opinion about it?\r\n\r\nSome of the questions I can think of for the discussion are\r\n\r\n- Will Open source contributors and project stay on GitHub?\r\n- Will Microsoft abandon VSTS ([Visual Studio Team Services](https://www.visualstudio.com/team-services/))?\r\n- etc.\r\n\r\nAnd also,\r\nGnome has recently [moved to GitLab](https://about.gitlab.com/2018/05/31/welcome-gnome-to-gitlab/).\r\n- Would **you** keep using GitHub? or consider alternatives such as GitLab, BitBucket, etc?\r\n\r\nI am wondering about how you think about this \"supposed\" acquisition.",
    "canonical_url": null,
    "show_comments": true,
    "main_image_background_hex_color": "#ffffff",
    "published_from_feed": false,
    "comments_count": 178,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": null,
    "positive_reactions_count": 116,
    "edited_at": "2018-06-04T15:34:53.142Z",
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "discuss",
    "path": "/dance2die/whats-your-opinion-on-microsofts-github-acquisition-3je2",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-08-26T20:02:52.315Z"
  },
  {
    "title": "How to create a Hacker News API GraphQL data source for GatsbyJS",
    "slug": "how-to-create-a-hacker-news-api-graphql-data-source-for-gatsbyjs-eg3",
    "created_at": "2018-06-16T18:34:30.198Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/0tr7ptejulh2gfdrenqv.jpg",
    "description": "\n\nIn the previous post, I introduced a tech stack for SHaNc.\n\nI will go into more...",
    "published": true,
    "published_at": "2018-06-16T18:20:50.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eIn the \u003ca href=\"https://dev.to/dance2die/technology-stack-rundown-of-shanc-ef7\"\u003eprevious post\u003c/a\u003e, I introduced a tech stack for \u003ca href=\"http://shanc.netlify.com/\"\u003eSHaNc\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eI will go into more details on how to create a Hacker News \u003ca href=\"https://graphql.org/\"\u003eGraphQL\u003c/a\u003e data source for \u003ca href=\"https://www.gatsbyjs.org/\"\u003eGatsbyJS\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"why\" href=\"#why\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ❓ Why?\n\u003c/h2\u003e\n\n\u003cp\u003eBecause GatsbyJS can query data only via GraphQL endpoints.\u003cbr\u003e\n\u003cem\u003eRefer to \u003ca href=\"https://www.gatsbyjs.org/docs/querying-with-graphql/\"\u003eQuerying with GraphQL\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"assumption\" href=\"#assumption\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🤔 Assumption\n\u003c/h2\u003e\n\n\u003cp\u003eI will assume that you are familiar with JavaScript \u003ca href=\"https://developers.google.com/web/fundamentals/primers/promises\"\u003epromises\u003c/a\u003e, and \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\"\u003easync\u003c/a\u003e/\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await\"\u003eawait\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"terminologies-amp-concepts\" href=\"#terminologies-amp-concepts\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  💭 Terminologies \u0026amp; Concepts\n\u003c/h2\u003e\n\n\u003cp\u003eLet’s make sure we are on the same page.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.gatsbyjs.org/docs/create-source-plugin/\"\u003eGraphQL Source\u003c/a\u003e – This is the data that GatsbyJS can query via GraphQL.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eNode\u003c/strong\u003e – A node is called a “model” (according to documentation), which is a shape of how the data looks (Not Node.JS).\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003egatsby-node.js\u003c/strong\u003e – This is where you define your GraphQL sources and it’s located in the project root.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eNow we’ve cleared some terms and concepts, let’s’ review Hacker News API.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"hacker-news-api-overview\" href=\"#hacker-news-api-overview\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔍 Hacker News API Overview\n\u003c/h2\u003e\n\n\u003cp\u003eThe Official \u003ca href=\"https://github.com/HackerNews/API\"\u003eHacker News API\u003c/a\u003e (“HN API” hereafter) exposes top level endpoints for “Top”, “Best”, and “New” stories.\u003c/p\u003e\n\n\u003cp\u003eTop level endpoints returns only IDs with no other data associated with it.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eCalling \"https://hacker-news.firebaseio.com/v0/topstories.json\" \nreturns an array of story IDs \n\n[9127232, 9128437, 9130049, 9127243, 9128571, ..., 9120990]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eSo you’d need to make a call for each story ID returned from the top level endpoint.\u003cbr\u003e\nIt’s not an optimal design and \u003ca href=\"https://github.com/HackerNews/API#design\"\u003eHN team admits it\u003c/a\u003e.\u003cbr\u003e\n\u003cem\u003eBut I am thankful that HN team has provided a public API for their stories.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSo with that in mind, let’s move on to creating a source.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"%F0%9F%8F%99-implementation-steps\" href=\"#%F0%9F%8F%99-implementation-steps\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🏙 Implementation Steps\n\u003c/h2\u003e\n\n\u003cp\u003eNow let’s see how one can turn Hacker News API into a GraphQL Source by wrapping it as a Node by following steps below.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eGet all top level story IDs from HN API\u003c/li\u003e\n\u003cli\u003eCreate source nodes\u003c/li\u003e\n\u003cli\u003eMake it available to GatsbyJS\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"get-all-top-level-story-ids-from-hn-api\" href=\"#get-all-top-level-story-ids-from-hn-api\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  💡 Get all top level story IDs from HN API\n\u003c/h3\u003e\n\n\u003cp\u003eLet’s get all top level story IDs from HN API.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/342880490bd1d274625bcc928b6ca358.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eThere are duplicate stories in Top, New, and Best stories. So let’s cache only distinct story IDs.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/cf9a6685c577b704a0317b9043dcc910.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eGetting all stories is as simple as calling an endpoint with story ID as part of the URL.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/cb721d594a3c717569499f6239901710.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eYou are creating sources for “Top”, “New”, and “Best” stories where “data” contains arrays of story IDs that were fetched in previously.\u003c/p\u003e\n\n\u003cp\u003eWe’ve now fetched all data, now let’s create story nodes  to expose it for GatsbyJS.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"create-source-nodes\" href=\"#create-source-nodes\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  💡 Create source nodes\n\u003c/h3\u003e\n\n\u003cp\u003eWe’ve retrieved \u003ccode\u003etop/new/BestResults\u003c/code\u003e from the previous step, and we now use them to create nodes as shown above.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/2751e37f89bba9cd2f963294df42a6d8.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eLet’s take a look at the implementation of aptly named, \u003ccode\u003ecreateStoryNodes\u003c/code\u003e method.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/ba1a6630fcae0f7a9e7932334e9a1697.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eThe shape is defined by \u003ccode\u003estoryNode\u003c/code\u003e between line 4~11. Let’s go over each property.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003cstrong\u003eid\u003c/strong\u003e\n\n\u003cul\u003e\n\u003cli\u003eThis is created by combining the type with story ID, where the types are “TopStories”, “BestStories”, and “NewStories”.\u003c/li\u003e\n\u003cli\u003eThis makes each record distinct so that you can get this record and only this record if you need to.\u003c/li\u003e\n\u003cli\u003eThis is similar to a primary key if you are familiar with database terms.\u003c/li\u003e\n\u003cli\u003eYou can’t just use a story ID as an ID, as Top, Best, and New stories can contain duplicate stories, that was the reason for the “type” to make each record distinct globally.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eparent \u0026amp; children\u003c/strong\u003e\n\n\u003col\u003e\n\u003cli\u003eI honestly do not know 😅 exact use cases for this yet as I could not find any good documentations for them yet.\u003c/li\u003e\n\u003cli\u003eThe best I found was \u003ca href=\"https://www.gatsbyjs.org/docs/node-interface/\"\u003ethis documentation\u003c/a\u003e but without a concrete example, I had to look at other source plugins like \u003ca href=\"https://github.com/ryanflorence/gatsby-source-firebase/blob/master/gatsby-node.js\"\u003egatsby-source-firebase\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003e\u003cem\u003eA shameless begging – I’d appreciate it if you can help me understand why, where, and hows of these parameters\u003c/em\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003einternal\u003c/strong\u003e –\n\n\u003col\u003e\n\u003cli\u003eThis is how you want the name of GraphQL type\u003c/li\u003e\n\u003cli\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--P1EnR6OT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.mindmeister.com/generic_files/get_file/9305386%3Ffiletype%3Dattachment_file\" alt=\"graphql - topstories.jpg\"\u003e\u003c/li\u003e\n\u003cli\u003eFor three \u003ccode\u003ecreateStoryNodes\u003c/code\u003e method calls, I passed “TopStories” for the first call so it’s available as “topStories” in GraphQL.\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003estoryId\u003c/strong\u003e – This is self-explanatory, skip!\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eitem\u003c/strong\u003e – This contains actual story data but what’s that \u003ccode\u003eitems.get(storyId)\u003c/code\u003e?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eRemember that we defined \u003ccode\u003egetStories\u003c/code\u003e function but never called?\u003cbr\u003e\u003cbr\u003e\n\u003ccode\u003eitems\u003c/code\u003e is a map of all stories fetched using \u003ccode\u003egetStories\u003c/code\u003e as shown below.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/6ef5401930840c141464a2e2965af038.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eThe code above fetches stories and caches them into a map, from which we can construct the stories with.\u003cbr\u003e\u003cbr\u003e\n\u003cem\u003eA new \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\"\u003eMap object\u003c/a\u003e ( \u003cstrong\u003enot\u003c/strong\u003e \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"\u003eArray#map\u003c/a\u003e) is used for a constant time (\u003ca href=\"https://en.wikipedia.org/wiki/Time_complexity#Constant_time\"\u003eO(1)\u003c/a\u003e) look up for an efficient data retrieval.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.gatsbyjs.org/docs/bound-action-creators/#createNode\"\u003eContent Digest\u003c/a\u003e (scroll down to “Parameters”) helps GatsbyJS track whether data has been changed or not enabling it to be more efficient.\u003cbr\u003e\u003cbr\u003e\nThe implementation of \u003ccode\u003ebuildContentDigest\u003c/code\u003e is shown below.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/dba912d6e2ad633b02e06f633015e502.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eIt uses to serialize story into a hex representation using MD5 hashing algorithm.\u003cbr\u003e\u003cbr\u003e\n\u003cem\u003eHonestly again, I used the implementation in the documentation as I don’t know much about GatsbyJS’s internal details.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"make-it-available-to-gatsbyjs\" href=\"#make-it-available-to-gatsbyjs\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  💡 Make it available to GatsbyJS\n\u003c/h3\u003e\n\n\u003cp\u003eNow you export the stories source for GatsbyJS at the bottom of \u003ccode\u003egatsby-node.js\u003c/code\u003e file.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/0b2c3858ed300836f2efebec8e34b655.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"how-to-call-use-the-source\" href=\"#how-to-call-use-the-source\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  📞 How to call (use the source)\n\u003c/h2\u003e\n\n\u003cp\u003eGatsbyJS automatically converts \u003ccode\u003egraphql...\u003c/code\u003e function \u003ca href=\"https://www.gatsbyjs.org/tutorial/part-four/#wait--where-did-the-graphql-tag-come-from\"\u003ebehind the scene\u003c/a\u003e, so all you have to do is to query the data source you created (\u003ca href=\"https://github.com/dance2die/SHANc/blob/master/src/pages/index.js\"\u003efull source\u003c/a\u003e).\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/6d6b4234050801d4c90b05ea64fd5396.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eGatsbyJS passes a prop containing \u003ccode\u003edata\u003c/code\u003e property, which in turn contains actual data fetched using GraphQL.\u003c/p\u003e\n\n\u003cp\u003eHere is the full source code of \u003ca href=\"https://github.com/dance2die/SHANc/blob/master/gatsby-node.js\"\u003egatsby-node.js\u003c/a\u003e.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/86b91a3e8544676d51f3a6f2cfe53d55.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👋 Parting Words\n\u003c/h2\u003e\n\n\u003cp\u003eThe code might not be optimal at fetching data, but static site generator will cache it before generating sites so wouldn’t affect the site performance in the end.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eBut I’d love to see if you have any suggestions on how to improve it 🙂\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eYou can create an issue on \u003ca href=\"https://github.com/dance2die/SHANc/issues\"\u003eGitHub\u003c/a\u003e or send me a \u003ca href=\"https://twitter.com/slightedgecoder\"\u003etweet\u003c/a\u003e.\u003cbr\u003e\nFull source for \u003ccode\u003egatsby-node.js\u003c/code\u003e can be found \u003ca href=\"https://github.com/dance2die/SHANc/blob/master/gatsby-node.js\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/06/16/how-to-create-a-hacker-news-api-graphql-data-source-for-gatsbyjs/\"\u003eHow to create a Hacker News API GraphQL data source for GatsbyJS\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: How to create a Hacker News API GraphQL data source for GatsbyJS\r\npublished: true\r\ntags: gatsby, webdev, javascript\r\ncanonical_url: https://www.slightedgecoder.com/2018/06/16/how-to-create-a-hacker-news-api-graphql-data-source-for-gatsbyjs/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/0tr7ptejulh2gfdrenqv.jpg\r\n---\r\n\r\nIn the [previous post](https://dev.to/dance2die/technology-stack-rundown-of-shanc-ef7), I introduced a tech stack for [SHaNc](http://shanc.netlify.com/).\r\n\r\nI will go into more details on how to create a Hacker News [GraphQL](https://graphql.org/) data source for [GatsbyJS](https://www.gatsbyjs.org/).\r\n\r\n## ❓ Why?\r\n\r\nBecause GatsbyJS can query data only via GraphQL endpoints.\r\n_Refer to [Querying with GraphQL](https://www.gatsbyjs.org/docs/querying-with-graphql/)._\r\n\r\n## 🤔 Assumption\r\n\r\nI will assume that you are familiar with JavaScript [promises](https://developers.google.com/web/fundamentals/primers/promises), and [async](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function)/[await](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await).\r\n\r\n## 💭 Terminologies \u0026 Concepts\r\n\r\nLet’s make sure we are on the same page.\r\n\r\n1. [GraphQL Source](https://www.gatsbyjs.org/docs/create-source-plugin/) – This is the data that GatsbyJS can query via GraphQL.\r\n2. **Node** – A node is called a “model” (according to documentation), which is a shape of how the data looks (Not Node.JS).\r\n3. **gatsby-node.js** – This is where you define your GraphQL sources and it’s located in the project root.\r\n\r\nNow we’ve cleared some terms and concepts, let’s’ review Hacker News API.\r\n\r\n## 🔍 Hacker News API Overview\r\n\r\nThe Official [Hacker News API](https://github.com/HackerNews/API) (“HN API” hereafter) exposes top level endpoints for “Top”, “Best”, and “New” stories.\r\n\r\nTop level endpoints returns only IDs with no other data associated with it.\r\n\r\n```\r\nCalling \"https://hacker-news.firebaseio.com/v0/topstories.json\" \r\nreturns an array of story IDs \r\n\r\n[9127232, 9128437, 9130049, 9127243, 9128571, ..., 9120990]\r\n```\r\n\r\nSo you’d need to make a call for each story ID returned from the top level endpoint.\r\nIt’s not an optimal design and [HN team admits it](https://github.com/HackerNews/API#design).\r\n_But I am thankful that HN team has provided a public API for their stories._\r\n\r\nSo with that in mind, let’s move on to creating a source.\r\n\r\n## 🏙 Implementation Steps\r\n\r\nNow let’s see how one can turn Hacker News API into a GraphQL Source by wrapping it as a Node by following steps below.\r\n\r\n1. Get all top level story IDs from HN API\r\n2. Create source nodes\r\n3. Make it available to GatsbyJS\r\n\r\n### 💡 Get all top level story IDs from HN API\r\n\r\nLet’s get all top level story IDs from HN API.\r\n\r\n{% gist https://gist.github.com/dance2die/342880490bd1d274625bcc928b6ca358 %}\r\n\r\nThere are duplicate stories in Top, New, and Best stories. So let’s cache only distinct story IDs.\r\n\r\n{% gist https://gist.github.com/dance2die/cf9a6685c577b704a0317b9043dcc910 %}\r\n\r\nGetting all stories is as simple as calling an endpoint with story ID as part of the URL.\r\n\r\n{% gist https://gist.github.com/dance2die/cb721d594a3c717569499f6239901710 %}\r\n\r\nYou are creating sources for “Top”, “New”, and “Best” stories where “data” contains arrays of story IDs that were fetched in previously.\r\n\r\nWe’ve now fetched all data, now let’s create story nodes  to expose it for GatsbyJS.\r\n\r\n### 💡 Create source nodes\r\n\r\nWe’ve retrieved `top/new/BestResults` from the previous step, and we now use them to create nodes as shown above.\r\n\r\n{% gist https://gist.github.com/dance2die/2751e37f89bba9cd2f963294df42a6d8 %}\r\n\r\nLet’s take a look at the implementation of aptly named, `createStoryNodes` method.\r\n\r\n{% gist https://gist.github.com/dance2die/ba1a6630fcae0f7a9e7932334e9a1697 %}\r\n\r\nThe shape is defined by `storyNode` between line 4~11. Let’s go over each property.\r\n\r\n1. **id**\r\n  - This is created by combining the type with story ID, where the types are “TopStories”, “BestStories”, and “NewStories”.\r\n  - This makes each record distinct so that you can get this record and only this record if you need to.\r\n  - This is similar to a primary key if you are familiar with database terms.\r\n  - You can’t just use a story ID as an ID, as Top, Best, and New stories can contain duplicate stories, that was the reason for the “type” to make each record distinct globally.\r\n2. **parent \u0026 children**\r\n  1. I honestly do not know 😅 exact use cases for this yet as I could not find any good documentations for them yet.\r\n  2. The best I found was [this documentation](https://www.gatsbyjs.org/docs/node-interface/) but without a concrete example, I had to look at other source plugins like [gatsby-source-firebase](https://github.com/ryanflorence/gatsby-source-firebase/blob/master/gatsby-node.js).\r\n  3. _A shameless begging – I’d appreciate it if you can help me understand why, where, and hows of these parameters_\r\n3. **internal** –\r\n  1. This is how you want the name of GraphQL type\r\n  2. ![graphql - topstories.jpg](https://www.mindmeister.com/generic_files/get_file/9305386?filetype=attachment_file)\r\n  3. For three `createStoryNodes` method calls, I passed “TopStories” for the first call so it’s available as “topStories” in GraphQL.\r\n4. **storyId** – This is self-explanatory, skip!\r\n5. **item** – This contains actual story data but what’s that `items.get(storyId)`?\r\n\r\nRemember that we defined `getStories` function but never called?  \r\n`items` is a map of all stories fetched using `getStories` as shown below.\r\n\r\n{% gist https://gist.github.com/dance2die/6ef5401930840c141464a2e2965af038 %}\r\n\r\nThe code above fetches stories and caches them into a map, from which we can construct the stories with.  \r\n_A new [Map object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map) ( **not** [Array#map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)) is used for a constant time ([O(1)](https://en.wikipedia.org/wiki/Time_complexity#Constant_time)) look up for an efficient data retrieval._\r\n\r\n[Content Digest](https://www.gatsbyjs.org/docs/bound-action-creators/#createNode) (scroll down to “Parameters”) helps GatsbyJS track whether data has been changed or not enabling it to be more efficient.  \r\nThe implementation of `buildContentDigest` is shown below.\r\n\r\n{% gist https://gist.github.com/dance2die/dba912d6e2ad633b02e06f633015e502 %}\r\n\r\nIt uses to serialize story into a hex representation using MD5 hashing algorithm.  \r\n_Honestly again, I used the implementation in the documentation as I don’t know much about GatsbyJS’s internal details._\r\n\r\n### 💡 Make it available to GatsbyJS\r\n\r\nNow you export the stories source for GatsbyJS at the bottom of `gatsby-node.js` file.\r\n\r\n{% gist https://gist.github.com/dance2die/0b2c3858ed300836f2efebec8e34b655 %}\r\n\r\n## 📞 How to call (use the source)\r\n\r\nGatsbyJS automatically converts `graphql...` function [behind the scene](https://www.gatsbyjs.org/tutorial/part-four/#wait--where-did-the-graphql-tag-come-from), so all you have to do is to query the data source you created ([full source](https://github.com/dance2die/SHANc/blob/master/src/pages/index.js)).\r\n\r\n{% gist https://gist.github.com/dance2die/6d6b4234050801d4c90b05ea64fd5396 %}\r\n\r\nGatsbyJS passes a prop containing `data` property, which in turn contains actual data fetched using GraphQL.\r\n\r\nHere is the full source code of [gatsby-node.js](https://github.com/dance2die/SHANc/blob/master/gatsby-node.js).\r\n\r\n{% gist https://gist.github.com/dance2die/86b91a3e8544676d51f3a6f2cfe53d55 %}\r\n\r\n## 👋 Parting Words\r\n\r\nThe code might not be optimal at fetching data, but static site generator will cache it before generating sites so wouldn’t affect the site performance in the end.\r\n\r\n_But I’d love to see if you have any suggestions on how to improve it 🙂_\r\n\r\nYou can create an issue on [GitHub](https://github.com/dance2die/SHANc/issues) or send me a [tweet](https://twitter.com/slightedgecoder).\r\nFull source for `gatsby-node.js` can be found [here](https://github.com/dance2die/SHANc/blob/master/gatsby-node.js).\r\n\r\nThe post [How to create a Hacker News API GraphQL data source for GatsbyJS](https://www.slightedgecoder.com/2018/06/16/how-to-create-a-hacker-news-api-graphql-data-source-for-gatsbyjs/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/06/16/how-to-create-a-hacker-news-api-graphql-data-source-for-gatsbyjs/",
    "show_comments": true,
    "main_image_background_hex_color": "#0e0b0a",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/06/16/how-to-create-a-hacker-news-api-graphql-data-source-for-gatsbyjs/",
    "positive_reactions_count": 43,
    "edited_at": null,
    "crossposted_at": "2018-06-16T19:26:51.189Z",
    "language": "en",
    "cached_tag_list": "gatsby, webdev, javascript",
    "path": "/dance2die/how-to-create-a-hacker-news-api-graphql-data-source-for-gatsbyjs-eg3",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-06-16T18:20:50.000Z"
  },
  {
    "title": "Providing a Better GitHub Issue Experience",
    "slug": "providing-a-better-github-issue-experience-fgh",
    "created_at": "2018-06-24T04:22:02.998Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/tectuf3cordco2tcxedr.jpg",
    "description": "\n\nI recently started contributing to an open source project, qit, which “let prog...",
    "published": true,
    "published_at": "2018-06-24T04:15:03.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI recently started contributing to an open source project, \u003ca href=\"https://qit.cloud/\"\u003eqit\u003c/a\u003e, which “\u003ca href=\"https://github.com/codingblocks/podcast-app#qit-listen-to-programming-podcasts-by-topic\"\u003elet programmers find and listen to podcasts by topic\u003c/a\u003e“.\u003c/p\u003e\n\n\u003cp\u003eAs I was going through issues to tackle to get started, I found out that many issues had just titles but no description of how to reproduce it or how the site should normally behave.\u003c/p\u003e\n\n\u003cp\u003eThankfully, GitHub provides a way to encourage users for a better issue report.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"an-issue-with-unclear-context\" href=\"#an-issue-with-unclear-context\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  😱 An Issue with Unclear Context\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/codingblocks/podcast-app/issues/120\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--9yxXOJ7I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/06/issue-with-unclear-description.jpg%3Fresize%3D817%252C290%26ssl%3D1\" alt=\"issue with unclear description\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe issue reported by \u003ca href=\"https://twitter.com/thejoezack\"\u003eTHEjoezack\u003c/a\u003e above doesn’t provide a context regarding the issue reported.\u003c/p\u003e\n\n\u003cp\u003eWhat I mean by “context” is\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eHow to reproduce the error\u003c/li\u003e\n\u003cli\u003eAn expected behavior\u003c/li\u003e\n\u003cli\u003eEnvironment such as browser, versions, and\u003c/li\u003e\n\u003cli\u003eadditional (optional) contexts such as screenshots/videos.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"an-issue-with-better-context\" href=\"#an-issue-with-better-context\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  😎 An Issue with Better Context\n\u003c/h2\u003e\n\n\u003cp\u003eBelow is the issue created with the context mentioned above.\u003cbr\u003e\u003cbr\u003e\nWhen other developers see the issue, they can reproduce the error and how to fix it easier.\u003cbr\u003e\u003cbr\u003e\n\u003cem\u003ewithout having to ask the reporter back and forth for more info.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/codingblocks/podcast-app/issues/146\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--HlOfo3w2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/06/good-issue-357x1024.jpg%3Fresize%3D357%252C1024%26ssl%3D1\" alt=\"Issue with better context\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eI gotta admit that I forgot to add a description on how to reproduce the error, only some URLs…\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eI am not smart enough to memorize what info to provide every time I create an issue.\u003cbr\u003e\u003cbr\u003e\nThankfully, GitHub made the process easy.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"how-to-create-issue-templates\" href=\"#how-to-create-issue-templates\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔧 How to create issue templates\n\u003c/h2\u003e\n\n\u003cp\u003eGitHub provides \u003ca href=\"https://help.github.com/articles/creating-issue-templates-for-your-repository/\"\u003ea way to create Markdown templates\u003c/a\u003e for issues such as\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eBug Report\u003c/li\u003e\n\u003cli\u003eFeature Request\u003c/li\u003e\n\u003cli\u003eCustom templates\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eI won’t go into details as the GitHub documentation is easy to follow.\u003c/p\u003e\n\n\u003cp\u003eYou can add contexts in the template so that when a user creates a new issue, they are provided with pre-populated information about how to report an issue.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--FhpA2G-U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/06/bug-report.jpg%3Fresize%3D778%252C697%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--FhpA2G-U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/06/bug-report.jpg%3Fresize%3D778%252C697%26ssl%3D1\" alt=\"Pre-filled issue template\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eI reported the issue after setting up the template providing better experience for both issue reporter and the developer.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eYou can read more about issue templates on \u003ca href=\"https://help.github.com/articles/about-issue-and-pull-request-templates/\"\u003eAbout issue and pull request templates\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"issue-template-in-action\" href=\"#issue-template-in-action\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  💪 Issue Template in Action\n\u003c/h2\u003e\n\n\u003cp\u003eCheck out \u003ca href=\"https://youtu.be/dT5en5V3B-w\"\u003ethis video\u003c/a\u003e to see how issue template works after setting up templates.\u003cbr\u003e\n\u003cem\u003eFor some reason, embedded youtube video isn’t working…\u003c/em\u003e 🤔\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👋 Parting Words\n\u003c/h2\u003e\n\n\u003cp\u003eI found about the issue template from \u003ca href=\"https://github.com/dotnet/cli\"\u003edotnet/cli\u003c/a\u003e project, which is s a huge project (with 200 contributors \u0026amp; 9k commits).\u003cbr\u003e\u003cbr\u003e\nIt’s amazing that the majority of issue reporters \u003ca href=\"https://github.com/dotnet/cli/issues\"\u003efollow the template\u003c/a\u003e providing better context for the project contributors.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/THEjoezack\"\u003eTHEjoezack\u003c/a\u003e has create a feature request with a better context provided by the template.\u003cbr\u003e\u003cbr\u003e\n\u003cem\u003eAnd everyone’s happy\u003c/em\u003e 😎\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/codingblocks/podcast-app/issues/149\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--1vLYpMZL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/06/joes-feature-request.png%3Fresize%3D794%252C416%26ssl%3D1\" alt=\"joes feature request\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eJoe’s FOSSA feature request\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003e\u003ca href=\"https://qit.cloud/\"\u003eqit\u003c/a\u003e is a \u003ca href=\"https://developers.google.com/web/progressive-web-apps/\"\u003eProgressive Web App\u003c/a\u003e  (PWA) using \u003ca href=\"https://reactjs.org/\"\u003eReactJs\u003c/a\u003e that uses \u003ca href=\"https://www.styled-components.com/docs/basics\"\u003estyled components\u003c/a\u003e.\u003cbr\u003e\u003cbr\u003e\nAnd it is quite an active project.\u003c/p\u003e\n\n\u003cp\u003eWe are trying \u003ca href=\"https://github.com/codingblocks/podcast-app/issues?utf8=%E2%9C%93\u0026amp;q=cypress\"\u003emany fun things\u003c/a\u003e and \u003ca href=\"https://github.com/codingblocks/podcast-app/pull/139\"\u003efailing\u003c/a\u003e along the way.\u003cbr\u003e\u003cbr\u003e\nIf you want to have fun developing a PWA, please join us on \u003ca href=\"https://www.codingblocks.net/slack/\"\u003eCoding Blocks Slack community\u003c/a\u003e (#qit).\u003c/p\u003e\n\n\u003cp\u003eIf you have any questions, leave a comment (or please holla me on \u003ca href=\"https://twitter.com/slightedgecoder\"\u003eTwitter\u003c/a\u003e).\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/06/23/providing-a-better-github-issue-experience/\"\u003eProviding a Better GitHub Issue Experience\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: Providing a Better GitHub Issue Experience\r\npublished: true\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/tectuf3cordco2tcxedr.jpg\r\ntags: github,opensource\r\ncanonical_url: https://www.slightedgecoder.com/2018/06/23/providing-a-better-github-issue-experience/\r\n---\r\n\r\nI recently started contributing to an open source project, [qit](https://qit.cloud/), which “[let programmers find and listen to podcasts by topic](https://github.com/codingblocks/podcast-app#qit-listen-to-programming-podcasts-by-topic)“.\r\n\r\nAs I was going through issues to tackle to get started, I found out that many issues had just titles but no description of how to reproduce it or how the site should normally behave.\r\n\r\nThankfully, GitHub provides a way to encourage users for a better issue report.\r\n\r\n## 😱 An Issue with Unclear Context\r\n\r\n[![issue with unclear description](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/06/issue-with-unclear-description.jpg?resize=817%2C290\u0026ssl=1)](https://github.com/codingblocks/podcast-app/issues/120)\r\n\r\nThe issue reported by [THEjoezack](https://twitter.com/thejoezack) above doesn’t provide a context regarding the issue reported.\r\n\r\nWhat I mean by “context” is\r\n\r\n1. How to reproduce the error\r\n2. An expected behavior\r\n3. Environment such as browser, versions, and\r\n4. additional (optional) contexts such as screenshots/videos.\r\n\r\n## 😎 An Issue with Better Context\r\n\r\nBelow is the issue created with the context mentioned above.  \r\nWhen other developers see the issue, they can reproduce the error and how to fix it easier.  \r\n_without having to ask the reporter back and forth for more info._\r\n\r\n[![Issue with better context](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/06/good-issue-357x1024.jpg?resize=357%2C1024\u0026ssl=1)](https://github.com/codingblocks/podcast-app/issues/146)\r\n\r\n\r\n_I gotta admit that I forgot to add a description on how to reproduce the error, only some URLs…_\r\n\r\nI am not smart enough to memorize what info to provide every time I create an issue.  \r\nThankfully, GitHub made the process easy.\r\n\r\n## 🔧 How to create issue templates\r\n\r\nGitHub provides [a way to create Markdown templates](https://help.github.com/articles/creating-issue-templates-for-your-repository/) for issues such as\r\n\r\n1. Bug Report\r\n2. Feature Request\r\n3. Custom templates\r\n\r\nI won’t go into details as the GitHub documentation is easy to follow.\r\n\r\nYou can add contexts in the template so that when a user creates a new issue, they are provided with pre-populated information about how to report an issue.\r\n\r\n ![Pre-filled issue template](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/06/bug-report.jpg?resize=778%2C697\u0026ssl=1)\r\n\r\nI reported the issue after setting up the template providing better experience for both issue reporter and the developer.\r\n\r\n_You can read more about issue templates on [About issue and pull request templates](https://help.github.com/articles/about-issue-and-pull-request-templates/)._\r\n\r\n## 💪 Issue Template in Action\r\n\r\nCheck out [this video](https://youtu.be/dT5en5V3B-w) to see how issue template works after setting up templates.\r\n_For some reason, embedded youtube video isn’t working…_ 🤔\r\n\r\n## \r\n\r\n## 👋 Parting Words\r\n\r\nI found about the issue template from [dotnet/cli](https://github.com/dotnet/cli) project, which is s a huge project (with 200 contributors \u0026 9k commits).  \r\nIt’s amazing that the majority of issue reporters [follow the template](https://github.com/dotnet/cli/issues) providing better context for the project contributors.\r\n\r\n[THEjoezack](https://github.com/THEjoezack) has create a feature request with a better context provided by the template.  \r\n_And everyone’s happy_ 😎\r\n\r\n[![joes feature request](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/06/joes-feature-request.png?resize=794%2C416\u0026ssl=1)](https://github.com/codingblocks/podcast-app/issues/149)\r\n\r\nJoe’s FOSSA feature request\r\n\r\n \r\n\r\n* * *\r\n\r\n[qit](https://qit.cloud/) is a [Progressive Web App](https://developers.google.com/web/progressive-web-apps/)  (PWA) using [ReactJs](https://reactjs.org/) that uses [styled components](https://www.styled-components.com/docs/basics).  \r\nAnd it is quite an active project.\r\n\r\nWe are trying [many fun things](https://github.com/codingblocks/podcast-app/issues?utf8=%E2%9C%93\u0026q=cypress) and [failing](https://github.com/codingblocks/podcast-app/pull/139) along the way.  \r\nIf you want to have fun developing a PWA, please join us on [Coding Blocks Slack community](https://www.codingblocks.net/slack/) (#qit).\r\n\r\nIf you have any questions, leave a comment (or please holla me on [Twitter](https://twitter.com/slightedgecoder)).\r\n\r\nThe post [Providing a Better GitHub Issue Experience](https://www.slightedgecoder.com/2018/06/23/providing-a-better-github-issue-experience/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/06/23/providing-a-better-github-issue-experience/",
    "show_comments": true,
    "main_image_background_hex_color": "#89984c",
    "published_from_feed": true,
    "comments_count": 2,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/06/23/providing-a-better-github-issue-experience/",
    "positive_reactions_count": 23,
    "edited_at": null,
    "crossposted_at": "2018-06-24T13:23:48.988Z",
    "language": "en",
    "cached_tag_list": "github, opensource",
    "path": "/dance2die/providing-a-better-github-issue-experience-fgh",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-06-26T14:53:14.921Z"
  },
  {
    "title": "Understanding JavaScript Iteration with C#",
    "slug": "understanding-javascript-iteration-with-c-2mf1",
    "created_at": "2018-07-04T16:03:32.846Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/xg225fcze2lha89t85nk.jpg",
    "description": "\n\nAs I was chatting, someone from Coding Blocks slack channel (#javascript) has a...",
    "published": true,
    "published_at": "2018-07-04T16:01:20.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eAs I was chatting, someone from \u003ca href=\"https://www.codingblocks.net/slack/\"\u003eCoding Blocks slack channel\u003c/a\u003e (#javascript) has asked a question regarding a code snippet\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/1c0f3799d371c2c4bdaf1603ed32f228.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eHis question was “Kinda lost in the \u003ccode\u003e[].filter.call\u003c/code\u003e , etc part.”\u003c/p\u003e\n\n\u003cp\u003eI will show you a C# code snippet to explain “why” someone used \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"\u003ecall\u003c/a\u003e instead of directly calling \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\"\u003efilter\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"code-breakdown-uniqueinorder\" href=\"#code-breakdown-uniqueinorder\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔨 Code Breakdown – uniqueInOrder\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003euniqueInOrder\u003c/code\u003e returns a distinct list of array for an order array with duplicate values.\u003c/p\u003e\n\n\u003cp\u003eGiven an array \u003ccode\u003e[1, 1, 2, 2, 2, 3, 3, 3, 3],\u003c/code\u003e uniqueInOrder returns \u003ccode\u003e[1, 2, 3]\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eClick on \"Run\" to see the result.\u003c/em\u003e\u003cbr\u003e\n\u003c/p\u003e\n\u003cdiv class=\"runkit-element\"\u003e\n  \u003ccode style=\"display: none\"\u003e\u003c/code\u003e\n  \u003ccode\u003e\nconst arr = [1, 1, 2, 2, 2, 3, 3, 3, 3];\nvar uniqueInOrder = function(iterable) {\n  return [].filter.call(iterable, function(a, i) {\n    return iterable[i - 1] !== a;\n  });\n};\n\nconsole.log(uniqueInOrder(arr));\n\u003c/code\u003e\n\u003c/div\u003e\n\u003cbr\u003e\nBut couldn’t you have just used \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\"\u003eArray#filter\u003c/a\u003e?\u003cbr\u003e\n\u003cdiv class=\"runkit-element\"\u003e\n  \u003ccode style=\"display: none\"\u003e\u003c/code\u003e\n  \u003ccode\u003e\nvar arr = [1, 1, 2, 2, 2, 3, 3, 3, 3];\nvar uniqueInOrder = function(iterable) {\n  return iterable.filter(function(a, i) {\n    return iterable[i - 1] !== a;\n  });\n};\n\nconsole.log(uniqueInOrder(arr));\n\u003c/code\u003e\n\u003c/div\u003e\n\u003cbr\u003e\nYes it works but \u003ccode\u003e[].filter.call\u003c/code\u003e can handle objects not derived from \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\"\u003eArray\u003c/a\u003e.\n\u003ch2\u003e\n  \u003ca name=\"what-do-you-mean\" href=\"#what-do-you-mean\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🧐 What do you mean?\n\u003c/h2\u003e\n\n\u003cp\u003eSome objects are iterable and not derived from Array.\u003cbr\u003e\u003cbr\u003e\n\u003cem\u003eRefer to \u003ca href=\"https://dev.to/kepta/how-i-learned-to-stop-looping-and-love-the-iterator-463j\"\u003eHow I learned to Stop Looping and Love the Iterator\u003c/a\u003e post by \u003ca href=\"https://dev.to/kepta\"\u003eKushan\u003c/a\u003e for details on iterable/iterators.\u003c/em\u003e\u003cbr\u003e\n      \u003c/p\u003e\n\u003cdiv class=\"ltag__link\"\u003e\n        \u003ca href=\"/kepta\" class=\"ltag__link__link\"\u003e\n          \u003cdiv class=\"ltag__link__pic\"\u003e\n            \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--lLDD-bGq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--poFG01rG--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://thepracticaldev.s3.amazonaws.com/uploads/user/profile_image/27827/f929f08b-e7ce-4a57-b996-80ae152291cb.jpeg\" alt=\"kepta image\"\u003e\n          \u003c/div\u003e\u003c/a\u003e\n          \u003ca href=\"/kepta/how-i-learned-to-stop-looping-and-love-the-iterator-463j\" class=\"ltag__link__link\"\u003e\n            \u003cdiv class=\"ltag__link__content\"\u003e\n              \u003ch2\u003eHow I learned to Stop Looping and Love the Iterator\u003c/h2\u003e\n              \u003ch3\u003eKushan Joshi\u003c/h3\u003e\n              \u003cdiv class=\"ltag__link__taglist\"\u003e\n\u003cspan class=\"ltag__link__tag\"\u003e#javascript\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#es6\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#iterables\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#iterators\u003c/span\u003e\n\u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/a\u003e\n      \u003c/div\u003e\n\n\n\u003cp\u003eThe (notoriously) notable one is \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/NodeList\"\u003eNodeList\u003c/a\u003e, which is returned by \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\"\u003edocument.querySelectorAll\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"so-what\" href=\"#so-what\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🤷 So What?\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\"\u003efilter\u003c/a\u003e is defined by Array prototype thus an object calling “filter” should implement an Array prototype.\u003cbr\u003e\u003cbr\u003e\nBut NodeList doesn’t implement Array prototype, so you can’t call filter on it even though it’s iterable.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e[].filter.call\u003c/code\u003e lets you \u003cstrong\u003euse\u003c/strong\u003e the filter method without having to convert non-Array sequences into an array.\u003cbr\u003e\n\u003cem\u003eTherefore making \u003ccode\u003euniqueInOrder\u003c/code\u003e method more generic.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eHere is an example of working with \u003ccode\u003eNodeList\u003c/code\u003e with \u003ccode\u003eArray#filter\u003c/code\u003e.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003edocument.querySelectorAll('a')\u003c/code\u003e returns an object of type NodeList.\u003c/li\u003e\n\u003cli\u003eWhen you try to call filter directly, it fails.\u003c/li\u003e\n\u003cli\u003eYou can get around it by using a spread syntax.\u003c/li\u003e\n\u003cli\u003eAnd [].filter.call works as well.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--V6n7dQ3r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/document-queryselctorall.jpg%3Fresize%3D768%252C234%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--V6n7dQ3r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/document-queryselctorall.jpg%3Fresize%3D768%252C234%26ssl%3D1\" alt=\"document queryselctorall example\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"c-analogy\" href=\"#c-analogy\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🐳 C# Analogy\n\u003c/h2\u003e\n\n\u003cp\u003eIf you use C#, you might have run into \u003ca href=\"https://msdn.microsoft.com/en-us/library/9eekhta0(v=vs.110).aspx\"\u003eIEnumerable\u003ccode\u003e\u0026lt;T\u003c/code\u003e\u0026gt;\u003c/a\u003e.\u003cbr\u003e\u003cbr\u003e\nIt’s an interface, which enables implementing class to be iterable.\u003c/p\u003e\n\n\u003cp\u003eLet’s see two methods that accepts an iterable object of type string and prints each element.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://dotnetfiddle.net/CBCHVu\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--NBfzPODR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/sh97yqpdofwwpkhh7zvu.jpg\" alt=\"PrintWords on .NET Fiddle\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eIf you were to pass \u003ccode\u003ewordArray\u003c/code\u003e to \u003ccode\u003eListPrintWords\u003c/code\u003e, it will fail to compile while \u003ccode\u003eGenericPrintWords\u003c/code\u003e is happy to work with it.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--_3z-_Q71--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/error-wordArray.jpg%3Fresize%3D697%252C385%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--_3z-_Q71--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/error-wordArray.jpg%3Fresize%3D697%252C385%26ssl%3D1\" alt=\"Argument Error\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-did-we-learn\" href=\"#what-did-we-learn\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  😀 What did we learn?\n\u003c/h2\u003e\n\n\u003cp\u003eSo \u003ccode\u003e[].filter.call\u003c/code\u003e can be used to deal with any iterable objects that do not inherit Array prototypes.\u003c/p\u003e\n\n\u003cp\u003eAnd it’s roughly equivalent to dealing with objects implementing \u003ca href=\"https://msdn.microsoft.com/en-us/library/9eekhta0(v=vs.110).aspx\"\u003eIEnumerable\u003c/a\u003e interface in .NET, thus enabling methods accept any kind of generic iterable sequences.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👋 Parting Words\n\u003c/h2\u003e\n\n\u003cp\u003eI’ve had hard time understanding the WHY of such a method initially.\u003cbr\u003e\u003cbr\u003e\nI am able to see more when I make analogies to languages I am used to (C#).\u003c/p\u003e\n\n\u003cp\u003eFunctional Programming (FP) in JavaScript is being adopted nowadays (\u003ca href=\"https://redux.js.org/\"\u003eRedux\u003c/a\u003e, \u003ca href=\"https://github.com/getify/Functional-Light-JS\"\u003eFunctional Light JS\u003c/a\u003e by Kyle Simpson), thus started learning \u003ca href=\"https://elixir-lang.org/\"\u003eElixir\u003c/a\u003e to see WHY JavaScript community is raving about FP.\u003c/p\u003e\n\n\u003cp\u003eI’d love your feedback/errata. So leave a comment below or send me a \u003ca href=\"https://twitter.com/slightedgecoder\"\u003etwit\u003c/a\u003e 🙂\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/07/04/understanding-javascript-iteration-with-c/\"\u003eUnderstanding JavaScript Iteration with C#\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: Understanding JavaScript Iteration with C#\r\npublished: true\r\ntags: javascript, csharp\r\ncanonical_url: https://www.slightedgecoder.com/2018/07/04/understanding-javascript-iteration-with-c/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/xg225fcze2lha89t85nk.jpg\r\n---\r\n\r\nAs I was chatting, someone from [Coding Blocks slack channel](https://www.codingblocks.net/slack/) (#javascript) has asked a question regarding a code snippet\r\n\r\n{% gist https://gist.github.com/dance2die/1c0f3799d371c2c4bdaf1603ed32f228 %}\r\n\r\nHis question was “Kinda lost in the `[].filter.call` , etc part.”\r\n\r\nI will show you a C# code snippet to explain “why” someone used [call](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call) instead of directly calling [filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter).\r\n\r\n## 🔨 Code Breakdown – uniqueInOrder\r\n\r\n`uniqueInOrder` returns a distinct list of array for an order array with duplicate values.\r\n\r\nGiven an array `[1, 1, 2, 2, 2, 3, 3, 3, 3],` uniqueInOrder returns `[1, 2, 3]`.\r\n\r\n_Click on \"Run\" to see the result._\r\n{% runkit %}\r\nconst arr = [1, 1, 2, 2, 2, 3, 3, 3, 3];\r\nvar uniqueInOrder = function(iterable) {\r\n  return [].filter.call(iterable, function(a, i) {\r\n    return iterable[i - 1] !== a;\r\n  });\r\n};\r\n\r\nconsole.log(uniqueInOrder(arr));\r\n{% endrunkit %}\r\nBut couldn’t you have just used [Array#filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)?\r\n{% runkit %}\r\nvar arr = [1, 1, 2, 2, 2, 3, 3, 3, 3];\r\nvar uniqueInOrder = function(iterable) {\r\n  return iterable.filter(function(a, i) {\r\n    return iterable[i - 1] !== a;\r\n  });\r\n};\r\n\r\nconsole.log(uniqueInOrder(arr));\r\n{% endrunkit %}\r\nYes it works but `[].filter.call` can handle objects not derived from [Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array).\r\n\r\n## 🧐 What do you mean?\r\n\r\nSome objects are iterable and not derived from Array.  \r\n_Refer to [How I learned to Stop Looping and Love the Iterator](https://dev.to/kepta/how-i-learned-to-stop-looping-and-love-the-iterator-463j) post by [Kushan](https://dev.to/kepta) for details on iterable/iterators._\r\n{% link https://dev.to/kepta/how-i-learned-to-stop-looping-and-love-the-iterator-463j %}\r\n\r\nThe (notoriously) notable one is [NodeList](https://developer.mozilla.org/en-US/docs/Web/API/NodeList), which is returned by [document.querySelectorAll](https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll).\r\n\r\n## 🤷 So What?\r\n\r\n[filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter) is defined by Array prototype thus an object calling “filter” should implement an Array prototype.  \r\nBut NodeList doesn’t implement Array prototype, so you can’t call filter on it even though it’s iterable.\r\n\r\n`[].filter.call` lets you **use** the filter method without having to convert non-Array sequences into an array.\r\n_Therefore making `uniqueInOrder` method more generic._\r\n\r\nHere is an example of working with `NodeList` with `Array#filter`.\r\n- `document.querySelectorAll('a')` returns an object of type NodeList.\r\n- When you try to call filter directly, it fails.\r\n- You can get around it by using a spread syntax.\r\n- And [].filter.call works as well.\r\n\r\n ![document queryselctorall example](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/document-queryselctorall.jpg?resize=768%2C234\u0026ssl=1)\r\n\r\n\r\n## 🐳 C# Analogy\r\n\r\nIf you use C#, you might have run into [IEnumerable`\u003cT`\u003e](https://msdn.microsoft.com/en-us/library/9eekhta0(v=vs.110).aspx).  \r\nIt’s an interface, which enables implementing class to be iterable.\r\n\r\nLet’s see two methods that accepts an iterable object of type string and prints each element.\r\n\r\n[![PrintWords on .NET Fiddle](https://thepracticaldev.s3.amazonaws.com/i/sh97yqpdofwwpkhh7zvu.jpg)](https://dotnetfiddle.net/CBCHVu)\r\n\r\nIf you were to pass `wordArray` to `ListPrintWords`, it will fail to compile while `GenericPrintWords` is happy to work with it.\r\n\r\n ![Argument Error](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/error-wordArray.jpg?resize=697%2C385\u0026ssl=1)\r\n\r\n\r\n## 😀 What did we learn?\r\n\r\nSo `[].filter.call` can be used to deal with any iterable objects that do not inherit Array prototypes.\r\n\r\nAnd it’s roughly equivalent to dealing with objects implementing [IEnumerable\u003cT\u003e](https://msdn.microsoft.com/en-us/library/9eekhta0(v=vs.110).aspx) interface in .NET, thus enabling methods accept any kind of generic iterable sequences.\r\n\r\n## 👋 Parting Words\r\n\r\nI’ve had hard time understanding the WHY of such a method initially.  \r\nI am able to see more when I make analogies to languages I am used to (C#).\r\n\r\nFunctional Programming (FP) in JavaScript is being adopted nowadays ([Redux](https://redux.js.org/), [Functional Light JS](https://github.com/getify/Functional-Light-JS) by Kyle Simpson), thus started learning [Elixir](https://elixir-lang.org/) to see WHY JavaScript community is raving about FP.\r\n\r\nI’d love your feedback/errata. So leave a comment below or send me a [twit](https://twitter.com/slightedgecoder) 🙂\r\n\r\nThe post [Understanding JavaScript Iteration with C#](https://www.slightedgecoder.com/2018/07/04/understanding-javascript-iteration-with-c/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/07/04/understanding-javascript-iteration-with-c/",
    "show_comments": true,
    "main_image_background_hex_color": "#f5f5f6",
    "published_from_feed": true,
    "comments_count": 9,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/07/04/understanding-javascript-iteration-with-c/",
    "positive_reactions_count": 28,
    "edited_at": "2018-07-04T19:16:01.427Z",
    "crossposted_at": "2018-07-04T18:18:20.555Z",
    "language": "en",
    "cached_tag_list": "javascript, csharp",
    "path": "/dance2die/understanding-javascript-iteration-with-c-2mf1",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-07-20T16:30:14.519Z"
  },
  {
    "title": "How recording my weight daily motivates me to lose weight over time",
    "slug": "how-recording-my-weight-daily-motivates-me-to-lose-weight-over-time-2lp7-temp-slug-1344453",
    "created_at": "2018-07-07T01:41:23.747Z",
    "main_image": null,
    "description": "\n\nI used to weigh 219.6 lbs (my height is 5`7″) in April of 2015 and now I am 25 ...",
    "published": false,
    "published_at": "2016-11-21T01:19:31.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI used to weigh 219.6 lbs (my height is 5`7″) in April of 2015 and now I am 25 lbs less since then.\u003c/p\u003e\n\n\u003cp\u003eThe problem was that I used to celebrate weekend with what I called “Pizza Sunday” by eating two pies (not slices) of pizza, pasta, and soda in one day. I don’t know how much weight I had gained during that 6 month period since I used not record my weight at the time.\u003c/p\u003e\n\n\u003cp\u003eI was always feeling tired, my right knee started hurting while walking and suffered from severe acid reflux.\u003c/p\u003e\n\n\u003cp\u003eI started recording my weight as wells my daily intake on \u003ca href=\"https://www.google.com/sheets/about/\"\u003eGoogle Sheets\u003c/a\u003e (since I could record on PC as well as on my phone using app) to see if I can improve what I eat and see the progress.\u003c/p\u003e\n\n\u003cp\u003eI started drinking smoothies for lunch and started doing crunches and push ups for a change. Between April and July of 2015, I lost about 8 lbs. It was a gradually change and didn’t happen over night.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ybN9gyVV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2016/11/WeightGraph1-300x186.jpg%3Fresize%3D300%252C186%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ybN9gyVV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2016/11/WeightGraph1-300x186.jpg%3Fresize%3D300%252C186%26ssl%3D1\" alt=\"April~July 2015\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eI started getting lazy and started working out less, which resulted in gaining weight again as you can see here.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--A8W7YvKj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2016/11/WeightGraph2-300x186.jpg%3Fresize%3D300%252C186%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--A8W7YvKj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2016/11/WeightGraph2-300x186.jpg%3Fresize%3D300%252C186%26ssl%3D1\" alt=\"August~November 2015\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eSince then until May of 2016, the weight fluctuated between 205 ~ 210 lbs. On May of 2016, I’ve reached 216.4, which was only 3 lbs away from before I started working out even though I wasn’t eating pizza every Sunday.\u003c/p\u003e\n\n\u003cp\u003eSince it was Summer, I didn’t want to work out and sweat too much so I looked for an alternative. Everyone knows that taking in less calories would result in losing weight so I decided to eat less. It was tough in the beginning but after two or three weeks later, my body started adapt to the change.\u003c/p\u003e\n\n\u003cp\u003eWhat I did was to eat just one energy bar (such as KIND bar or Luna bar) for lunch and eat whatever I wanted for dinner.\u003c/p\u003e\n\n\u003cp\u003eWhen I saw the graph pointing downward, it motivated me even more. I was able to keep going because recording was showing the progress. Seeing the progress helped me keep going and I’ve been able to keep it up for last 6 months.\u003c/p\u003e\n\n\u003cp\u003eHere is the graph since December of 2015 until Yesterday (11/19/2016)\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--3aC6yOZU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2016/11/WeightGraph3-300x186.jpg%3Fresize%3D300%252C186%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--3aC6yOZU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2016/11/WeightGraph3-300x186.jpg%3Fresize%3D300%252C186%26ssl%3D1\" alt=\"Dec 2015~Nov 2016\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eBeing able to *see* the weight going down makes whole lotta difference.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2016/11/20/recording-weight-daily-motivates-lose-weight-time/\"\u003eHow recording my weight daily motivates me to lose weight over time\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: How recording my weight daily motivates me to lose weight over time\npublished: false\ntags: Blog Entry,slight edge,googlesheets,progress\ncanonical_url: https://www.slightedgecoder.com/2016/11/20/recording-weight-daily-motivates-lose-weight-time/\n---\n\nI used to weigh 219.6 lbs (my height is 5`7″) in April of 2015 and now I am 25 lbs less since then.\n\nThe problem was that I used to celebrate weekend with what I called “Pizza Sunday” by eating two pies (not slices) of pizza, pasta, and soda in one day. I don’t know how much weight I had gained during that 6 month period since I used not record my weight at the time.\n\nI was always feeling tired, my right knee started hurting while walking and suffered from severe acid reflux.\n\nI started recording my weight as wells my daily intake on [Google Sheets](https://www.google.com/sheets/about/) (since I could record on PC as well as on my phone using app) to see if I can improve what I eat and see the progress.\n\nI started drinking smoothies for lunch and started doing crunches and push ups for a change. Between April and July of 2015, I lost about 8 lbs. It was a gradually change and didn’t happen over night.\n\n![April~July 2015](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2016/11/WeightGraph1-300x186.jpg?resize=300%2C186\u0026ssl=1)\n\nI started getting lazy and started working out less, which resulted in gaining weight again as you can see here.\n\n![August~November 2015](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2016/11/WeightGraph2-300x186.jpg?resize=300%2C186\u0026ssl=1)\n\nSince then until May of 2016, the weight fluctuated between 205 ~ 210 lbs. On May of 2016, I’ve reached 216.4, which was only 3 lbs away from before I started working out even though I wasn’t eating pizza every Sunday.\n\nSince it was Summer, I didn’t want to work out and sweat too much so I looked for an alternative. Everyone knows that taking in less calories would result in losing weight so I decided to eat less. It was tough in the beginning but after two or three weeks later, my body started adapt to the change.\n\nWhat I did was to eat just one energy bar (such as KIND bar or Luna bar) for lunch and eat whatever I wanted for dinner.\n\nWhen I saw the graph pointing downward, it motivated me even more. I was able to keep going because recording was showing the progress. Seeing the progress helped me keep going and I’ve been able to keep it up for last 6 months.\n\nHere is the graph since December of 2015 until Yesterday (11/19/2016)\n\n![Dec 2015~Nov 2016](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2016/11/WeightGraph3-300x186.jpg?resize=300%2C186\u0026ssl=1)\n\nBeing able to \\*see\\* the weight going down makes whole lotta difference.\n\nThe post [How recording my weight daily motivates me to lose weight over time](https://www.slightedgecoder.com/2016/11/20/recording-weight-daily-motivates-lose-weight-time/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2016/11/20/recording-weight-daily-motivates-lose-weight-time/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2016/11/20/recording-weight-daily-motivates-lose-weight-time/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, slightedge, googlesheets, progress",
    "path": "/dance2die/how-recording-my-weight-daily-motivates-me-to-lose-weight-over-time-2lp7-temp-slug-1344453",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2016-11-21T01:19:31.000Z"
  },
  {
    "title": "What I learned from “Who Moved My Cheese”",
    "slug": "what-i-learned-from-who-moved-my-cheese-25gl-temp-slug-36313",
    "created_at": "2018-07-07T01:41:24.161Z",
    "main_image": null,
    "description": "\n\nLast week I read a book titled “Who Moved My Cheese“. \n\nThe book was published ...",
    "published": false,
    "published_at": "2016-11-27T05:00:55.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eLast week I read a book titled “\u003ca href=\"https://www.amazon.com/Who-Moved-My-Cheese-Amazing/dp/0399144463/ref=sr_1_1?ie=UTF8\u0026amp;qid=1480022666\u0026amp;sr=8-1\u0026amp;keywords=who+moved+my+cheese\"\u003eWho Moved My Cheese\u003c/a\u003e“. \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--vRrDtThT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2016/11/Who-Moved-My-Cheese-Cover-232x300.jpg%3Fresize%3D232%252C300%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--vRrDtThT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2016/11/Who-Moved-My-Cheese-Cover-232x300.jpg%3Fresize%3D232%252C300%26ssl%3D1\" alt=\"Who Moved My Cheese Cover\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe book was published on 1998 and has been sold more than 10 million copies.\u003c/p\u003e\n\n\u003cp\u003e“Who Moved My Cheese” is a story of four characters, Sniff (mouse), Scurry (mouse), Hem (littlepeople), and Haw (littlepeople). It’s about them looking for cheese (accomplishments, goal, or dream) in a maze (society they live in).\u003c/p\u003e\n\n\u003cp\u003eThe book is a short story, which shows us a way on how to adapt to changes and where we are in our current situation as well as to learn to detect changes around us and make a quick decision and act on it.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eSummary of Who Moved My Cheese\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eOne day all four characters found cheese in a maze. Sniff was always monitoring a change in cheese size. Scurry was quick to take an action. They both knew that cheese will be gone one day so they were always on alert while Hem and Haw were relaxing that cheese will be here day after day.\u003c/p\u003e\n\n\u003cp\u003eWhen the cheese was gone Sniff and Scurry immediately look for another cheese in the maze and moved on. Hem and Haw were busy blaming external factors for cheese being gone. Haw eventually realized that he was in the wrong for not realizing that the cheese will be gone someday and looked for another cheese while Hem was stuck in the past without moving on.\u003c/p\u003e\n\n\u003cp\u003eWhile Haw was in the journey looking for another cheese, he left many clues to motivate Hem to move on and taken an action but it was of no use. Haw eventually found another cheese and discovered Sniff and Scurry there.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eLessons Learned.\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eI applied the lessons learned in three different areas.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWork: I rather keep this one private.\u003c/li\u003e\n\u003cli\u003eHealth: I used to be like Hem, who was denying the current situation that I am going to be fine even after gaining 30+ pounds. I’ve realized that my cheese (health) was gone and I needed to look for another cheese (healthier life). After realizing later, I’ve notified Hem like people with clues to how I lost weight but they were reluctant to make a change…\u003c/li\u003e\n\u003cli\u003eTechnical Side: I’ve realized that my Web Forms and .NET knowledge was outdated. I was looking for new cheese and eventually settled with learning Python (I’ve been wondering why big companies such as Google and Facebook uses Python…). I also found out that many people are moving toward “Functional Programming” over OOP. I am detecting the change like Sniff and try to look for the next big thing.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cstrong\u003eConclusion\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eI am applying what I’ve learned in three different areas. Depending on number of perspective I discover, I will be able to apply the concept in other areas.\u003c/p\u003e\n\n\u003cp\u003e“Who Moved My Cheese” helped me to understand my current situation and what needs to be done as well as to realize the changes around me.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2016/11/27/learned-moved-cheese/\"\u003eWhat I learned from “Who Moved My Cheese”\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: What I learned from “Who Moved My Cheese”\npublished: false\ntags: book review\ncanonical_url: https://www.slightedgecoder.com/2016/11/27/learned-moved-cheese/\n---\n\nLast week I read a book titled “[Who Moved My Cheese](https://www.amazon.com/Who-Moved-My-Cheese-Amazing/dp/0399144463/ref=sr_1_1?ie=UTF8\u0026qid=1480022666\u0026sr=8-1\u0026keywords=who+moved+my+cheese)“. ![Who Moved My Cheese Cover](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2016/11/Who-Moved-My-Cheese-Cover-232x300.jpg?resize=232%2C300\u0026ssl=1)\n\nThe book was published on 1998 and has been sold more than 10 million copies.\n\n“Who Moved My Cheese” is a story of four characters, Sniff (mouse), Scurry (mouse), Hem (littlepeople), and Haw (littlepeople). It’s about them looking for cheese (accomplishments, goal, or dream) in a maze (society they live in).\n\nThe book is a short story, which shows us a way on how to adapt to changes and where we are in our current situation as well as to learn to detect changes around us and make a quick decision and act on it.\n\n**Summary of Who Moved My Cheese**\n\nOne day all four characters found cheese in a maze. Sniff was always monitoring a change in cheese size. Scurry was quick to take an action. They both knew that cheese will be gone one day so they were always on alert while Hem and Haw were relaxing that cheese will be here day after day.\n\nWhen the cheese was gone Sniff and Scurry immediately look for another cheese in the maze and moved on. Hem and Haw were busy blaming external factors for cheese being gone. Haw eventually realized that he was in the wrong for not realizing that the cheese will be gone someday and looked for another cheese while Hem was stuck in the past without moving on.\n\nWhile Haw was in the journey looking for another cheese, he left many clues to motivate Hem to move on and taken an action but it was of no use. Haw eventually found another cheese and discovered Sniff and Scurry there.\n\n**Lessons Learned.**\n\nI applied the lessons learned in three different areas.\n\n1. Work: I rather keep this one private.\n2. Health: I used to be like Hem, who was denying the current situation that I am going to be fine even after gaining 30+ pounds. I’ve realized that my cheese (health) was gone and I needed to look for another cheese (healthier life). After realizing later, I’ve notified Hem like people with clues to how I lost weight but they were reluctant to make a change…\n3. Technical Side: I’ve realized that my Web Forms and .NET knowledge was outdated. I was looking for new cheese and eventually settled with learning Python (I’ve been wondering why big companies such as Google and Facebook uses Python…). I also found out that many people are moving toward “Functional Programming” over OOP. I am detecting the change like Sniff and try to look for the next big thing.\n\n**Conclusion**\n\nI am applying what I’ve learned in three different areas. Depending on number of perspective I discover, I will be able to apply the concept in other areas.\n\n“Who Moved My Cheese” helped me to understand my current situation and what needs to be done as well as to realize the changes around me.\n\n \n\n \n\n \n\n \n\nThe post [What I learned from “Who Moved My Cheese”](https://www.slightedgecoder.com/2016/11/27/learned-moved-cheese/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2016/11/27/learned-moved-cheese/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2016/11/27/learned-moved-cheese/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "bookreview",
    "path": "/dance2die/what-i-learned-from-who-moved-my-cheese-25gl-temp-slug-36313",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2016-11-27T05:00:55.000Z"
  },
  {
    "title": "How to Pass HttpContext to Ninject in ASP.NET MVC",
    "slug": "how-to-pass-httpcontext-to-ninject-in-aspnet-mvc-1691-temp-slug-3585969",
    "created_at": "2018-07-07T01:41:24.479Z",
    "main_image": null,
    "description": "\n\nI’ve been working with ASP.NET MVC websites that creates a connection string ba...",
    "published": false,
    "published_at": "2016-12-04T05:00:19.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI’ve been working with ASP.NET MVC websites that creates a connection string based on a query string value.\u003c/p\u003e\n\n\u003cp\u003eI’ve been trying to learn how to use Ninject and decided to inject repository instances to controllers.\u003c/p\u003e\n\n\u003cp\u003eI ran into a problem where HttpContext object instance was not available at the time of kernel binding.\u003c/p\u003e\n\n\u003cp\u003eI found out a solution and I’d like to share how.\u003c/p\u003e\n\n\u003cp\u003eHere is a simple ASP.NET MVC controller that accepts IRepository object instance. “Index” simply returns a view with “HomeIndexViewModel”, which accepts a connection string from the repository (this is a very contrived example).\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epublic class HomeController : Controller { private readonly IRepository \\_repository; public HomeController(IRepository repository) { \\_repository = repository; } // GET: Home public ActionResult Index() { return View(new HomeIndexViewModel(\\_repository.ConnectionString)); } }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eRepository accepts a connection string but it’s retrieved via Query String argument of “db” parameter.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epublic class Repository : IRepository { public string ConnectionString { get; set; } public Repository(string connectionString) { ConnectionString = connectionString; } }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eI’ve created a simplified utility class, which returns a connection string depending on the query string parameter “db”.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epublic class QueryArgParser { public HttpContext HttpContext { get; set; } public QueryArgParser(HttpContext httpContext) { HttpContext = httpContext; } public string GetConnectionString() { string dbValue = HttpContext.Request.QueryString[\"db\"]; switch (dbValue) { case \"prod\": return @\"Server=GODDESS\\SQL2014;Initial Catalog=AdventureWorks2014;Integrated Security=SSPI\"; case \"stage\": return @\"Server=GODDESS\\SQL2014;Initial Catalog=AdventureWorks2014Stage;Integrated Security=SSPI\"; case \"dev\": return @\"Server=GODDESS\\SQL2014;Initial Catalog=AdventureWorks2014Dev;Integrated Security=SSPI\"; } throw new ArgumentException(\"Query string doesn't contain \\\"db\\\" parameter\"); } }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eI’ve installed following Ninject Nuget Packages.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--iqq5OINn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/i.imgur.com/X27wuyC.jpg%3Fresize%3D822%252C472\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--iqq5OINn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/i.imgur.com/X27wuyC.jpg%3Fresize%3D822%252C472\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eInstalling “Ninject.MVC3” will add a file called “NinjectWebCommon” under “App_Start” folder.\u003c/p\u003e\n\n\u003cp\u003eYou can now register your dependencies in a method called “RegisterServices” within “NinjectWebCommon” class.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eprivate static void RegisterServices(IKernel kernel) { const string dataAccessParameterName = \"connectionString\"; Func\\\u0026lt;HttpContext, string\\\u0026gt; getConnectionString = context =\\\u0026gt; context != null ? new QueryArgParser(context).GetConnectionString() : string.Empty; kernel.Bind\\\u0026lt;IRepository\\\u0026gt;() .To\\\u0026lt;Repository\\\u0026gt;() .WithConstructorArgument(dataAccessParameterName, ninjectContext =\\\u0026gt; getConnectionString(HttpContext.Current)); }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eLine 9~13 binds “IRepository” to “Repository”, which requires a contructor argument of connection string. “getConnectionString(…)” in line 4~7 is just to make the code more readable.\u003c/p\u003e\n\n\u003cp\u003eWhat’s important here is the line 12~13, which is the callback within “WithConstructorArgument” that is called during RunTime, therefore “HttpContext.Current” is not null.\u003c/p\u003e\n\n\u003cp\u003eNow set the web start page to “?db=prod”, “?db=stage”, or “?db=dev”\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--cqNvM2QQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/i.imgur.com/p4JDvMc.png%3Fresize%3D579%252C255\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--cqNvM2QQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/i.imgur.com/p4JDvMc.png%3Fresize%3D579%252C255\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eYou will see the connection string on the web page as shown below (this is for “?db=prod”)\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Xy9ZjtFu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/i.imgur.com/5Xy3fI0.png%3Fresize%3D968%252C290\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Xy9ZjtFu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/i.imgur.com/5Xy3fI0.png%3Fresize%3D968%252C290\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eI’ve found the \u003ca href=\"http://stackoverflow.com/a/3617961/4035\"\u003eanswer\u003c/a\u003e via StackOverflow answered by “\u003ca href=\"http://stackoverflow.com/users/11635/ruben-bartelink\"\u003eRuben Bartelink\u003c/a\u003e“. One line of code Ruben posted saved me hours of headache.\u003c/p\u003e\n\n\u003cp\u003eThe working source code is available on \u003ca href=\"https://github.com/dance2die/Blog.SlightEdgeCoder.NinjectHttpContext\"\u003eGitHub\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2016/12/04/pass-httpcontext-ninject-asp-net-mvc/\"\u003eHow to Pass HttpContext to Ninject in ASP.NET MVC\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: How to Pass HttpContext to Ninject in ASP.NET MVC\npublished: false\ntags: Blog Entry,Programming,asp.net mvc,httpcontext\ncanonical_url: https://www.slightedgecoder.com/2016/12/04/pass-httpcontext-ninject-asp-net-mvc/\n---\n\nI’ve been working with ASP.NET MVC websites that creates a connection string based on a query string value.\n\nI’ve been trying to learn how to use Ninject and decided to inject repository instances to controllers.\n\nI ran into a problem where HttpContext object instance was not available at the time of kernel binding.\n\nI found out a solution and I’d like to share how.\n\nHere is a simple ASP.NET MVC controller that accepts IRepository object instance. “Index” simply returns a view with “HomeIndexViewModel”, which accepts a connection string from the repository (this is a very contrived example).\n\n```\npublic class HomeController : Controller { private readonly IRepository \\_repository; public HomeController(IRepository repository) { \\_repository = repository; } // GET: Home public ActionResult Index() { return View(new HomeIndexViewModel(\\_repository.ConnectionString)); } }\n```\n\n \n\nRepository accepts a connection string but it’s retrieved via Query String argument of “db” parameter.\n\n```\npublic class Repository : IRepository { public string ConnectionString { get; set; } public Repository(string connectionString) { ConnectionString = connectionString; } }\n```\n\nI’ve created a simplified utility class, which returns a connection string depending on the query string parameter “db”.\n\n```\npublic class QueryArgParser { public HttpContext HttpContext { get; set; } public QueryArgParser(HttpContext httpContext) { HttpContext = httpContext; } public string GetConnectionString() { string dbValue = HttpContext.Request.QueryString[\"db\"]; switch (dbValue) { case \"prod\": return @\"Server=GODDESS\\SQL2014;Initial Catalog=AdventureWorks2014;Integrated Security=SSPI\"; case \"stage\": return @\"Server=GODDESS\\SQL2014;Initial Catalog=AdventureWorks2014Stage;Integrated Security=SSPI\"; case \"dev\": return @\"Server=GODDESS\\SQL2014;Initial Catalog=AdventureWorks2014Dev;Integrated Security=SSPI\"; } throw new ArgumentException(\"Query string doesn't contain \\\"db\\\" parameter\"); } }\n```\n\nI’ve installed following Ninject Nuget Packages.\n\n![](https://i1.wp.com/i.imgur.com/X27wuyC.jpg?resize=822%2C472)\n\nInstalling “Ninject.MVC3” will add a file called “NinjectWebCommon” under “App\\_Start” folder.\n\nYou can now register your dependencies in a method called “RegisterServices” within “NinjectWebCommon” class.\n\n```\nprivate static void RegisterServices(IKernel kernel) { const string dataAccessParameterName = \"connectionString\"; Func\\\u003cHttpContext, string\\\u003e getConnectionString = context =\\\u003e context != null ? new QueryArgParser(context).GetConnectionString() : string.Empty; kernel.Bind\\\u003cIRepository\\\u003e() .To\\\u003cRepository\\\u003e() .WithConstructorArgument(dataAccessParameterName, ninjectContext =\\\u003e getConnectionString(HttpContext.Current)); }\n```\n\nLine 9~13 binds “IRepository” to “Repository”, which requires a contructor argument of connection string. “getConnectionString(…)” in line 4~7 is just to make the code more readable.\n\nWhat’s important here is the line 12~13, which is the callback within “WithConstructorArgument” that is called during RunTime, therefore “HttpContext.Current” is not null.\n\nNow set the web start page to “?db=prod”, “?db=stage”, or “?db=dev”\n\n![](https://i0.wp.com/i.imgur.com/p4JDvMc.png?resize=579%2C255)\n\nYou will see the connection string on the web page as shown below (this is for “?db=prod”)\n\n![](https://i1.wp.com/i.imgur.com/5Xy3fI0.png?resize=968%2C290)\n\nI’ve found the [answer](http://stackoverflow.com/a/3617961/4035) via StackOverflow answered by “[Ruben Bartelink](http://stackoverflow.com/users/11635/ruben-bartelink)“. One line of code Ruben posted saved me hours of headache.\n\nThe working source code is available on [GitHub](https://github.com/dance2die/Blog.SlightEdgeCoder.NinjectHttpContext).\n\nThe post [How to Pass HttpContext to Ninject in ASP.NET MVC](https://www.slightedgecoder.com/2016/12/04/pass-httpcontext-ninject-asp-net-mvc/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2016/12/04/pass-httpcontext-ninject-asp-net-mvc/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2016/12/04/pass-httpcontext-ninject-asp-net-mvc/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, aspnetmvc, httpcontext",
    "path": "/dance2die/how-to-pass-httpcontext-to-ninject-in-aspnet-mvc-1691-temp-slug-3585969",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2016-12-04T05:00:19.000Z"
  },
  {
    "title": "Learning Python and…",
    "slug": "learning-python-and-2gfd-temp-slug-6160869",
    "created_at": "2018-07-07T01:41:24.890Z",
    "main_image": null,
    "description": "\n\nI’ve started learning Python recently and fell in love with expressiveness of t...",
    "published": false,
    "published_at": "2016-12-11T05:00:38.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI’ve started learning Python recently and fell in love with expressiveness of the language. There were sometimes too many ways to get the same job done, which made me feel uneasy since it’d mean there could be many different patterns of code people could be writing.\u003c/p\u003e\n\n\u003cp\u003eI deal with mostly with .NET stack so I tried to give IronPython a try. I install IronPython support for Visual Studio 2015. I tried to install a package using PIP but there weren’t many documentations or even blog posts that deal IronPython PIP support. I found a page but wasn’t that helpful.\u003c/p\u003e\n\n\u003cp\u003eIronPython PIP required “ipy.exe” but it was nowhere to be found in my system, thus I had to install IronPython again, after installing one for Visual Studio 2015.\u003c/p\u003e\n\n\u003cp\u003eEverything should be good to go for me to install a PyPI package now.\u003c/p\u003e\n\n\u003cp\u003eWrong!\u003c/p\u003e\n\n\u003cp\u003eThe package I was trying to install called \u003ca href=\"https://pypi.python.org/pypi/ImageHash\"\u003eImageHash\u003c/a\u003e, had failed to install using “ipy.exe”.\u003c/p\u003e\n\n\u003cp\u003eI tried to install the package using “pip” this time.\u003c/p\u003e\n\n\u003cp\u003eFailed again.\u003c/p\u003e\n\n\u003cp\u003eI am just trying to get a simple library installation but ended up spending 3+ hours.\u003c/p\u003e\n\n\u003cp\u003eI believe this is because I still don’t see how Python works as a whole.\u003c/p\u003e\n\n\u003cp\u003eThis is part of the learning curve and I gladly accept it.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2016/12/11/learning-python-and/\"\u003eLearning Python and…\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Learning Python and…\npublished: false\ntags: Blog Entry,python,TIL\ncanonical_url: https://www.slightedgecoder.com/2016/12/11/learning-python-and/\n---\n\nI’ve started learning Python recently and fell in love with expressiveness of the language. There were sometimes too many ways to get the same job done, which made me feel uneasy since it’d mean there could be many different patterns of code people could be writing.\n\nI deal with mostly with .NET stack so I tried to give IronPython a try. I install IronPython support for Visual Studio 2015. I tried to install a package using PIP but there weren’t many documentations or even blog posts that deal IronPython PIP support. I found a page but wasn’t that helpful.\n\nIronPython PIP required “ipy.exe” but it was nowhere to be found in my system, thus I had to install IronPython again, after installing one for Visual Studio 2015.\n\nEverything should be good to go for me to install a PyPI package now.\n\nWrong!\n\nThe package I was trying to install called [ImageHash](https://pypi.python.org/pypi/ImageHash), had failed to install using “ipy.exe”.\n\nI tried to install the package using “pip” this time.\n\nFailed again.\n\nI am just trying to get a simple library installation but ended up spending 3+ hours.\n\nI believe this is because I still don’t see how Python works as a whole.\n\nThis is part of the learning curve and I gladly accept it.\n\nThe post [Learning Python and…](https://www.slightedgecoder.com/2016/12/11/learning-python-and/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2016/12/11/learning-python-and/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2016/12/11/learning-python-and/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, python, todayilearned",
    "path": "/dance2die/learning-python-and-2gfd-temp-slug-6160869",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2016-12-11T05:00:38.000Z"
  },
  {
    "title": "Showing Project Status to Project Manager",
    "slug": "showing-project-status-to-project-manager-20oh-temp-slug-8474869",
    "created_at": "2018-07-07T01:41:25.453Z",
    "main_image": null,
    "description": "\n\nFor years, I’ve been working to gather requirements and have done user acceptan...",
    "published": false,
    "published_at": "2016-12-18T05:00:25.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eFor years, I’ve been working to gather requirements and have done user acceptance testing directly with my business partners (end users). Less than a month ago, the company I work for has hired a business analyst/project manager. Now I am faced with a challenge as to how to show my project progress to the project manager.\u003c/p\u003e\n\n\u003cp\u003eI’ve been keeping track of my own project status using three different tools.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eMind Mapping software (\u003ca href=\"http://mindmeister.com\"\u003eMindMeister.com\u003c/a\u003e)\n\n\u003col\u003e\n\u003cli\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--vB5A1cXB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2016/12/MindMeister-241x300.png%3Fresize%3D384%252C478%26ssl%3D1\" alt=\"\"\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003eOutlook Calendar\n\n\u003col\u003e\n\u003cli\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--fMnAOIhD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2016/12/Outlook-blurred-300x112.png%3Fresize%3D383%252C143%26ssl%3D1\" alt=\"\"\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.countersoft.com/\"\u003eGemini Tracker\u003c/a\u003e from \u003ca href=\"https://www.countersoft.com/\"\u003eCounterSoft\u003c/a\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--UOU7XJ-Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2016/12/Gemini-blurred-300x257.png%3Fresize%3D382%252C327%26ssl%3D1\" alt=\"\"\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eEvery morning, I spend about 30 minutes to an hour to plan my day. Here are the steps.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eBrainstorm what needs to be done by \u003cstrong\u003emind mapping\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003eCreate issue tickets or re-prioritize backlogs in \u003cstrong\u003eGemini Tracker\u003c/strong\u003e\n\u003c/li\u003e\n\u003cli\u003eCreate \u003cstrong\u003eOutlook Calendar\u003c/strong\u003e items for each task to be done today or whole week (depending on the size of the project being worked on)\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eI’ve only doing those three steps to help myself to track where I was in project status. But it had a side-effect of easily showing my progress to others, as well.\u003c/p\u003e\n\n\u003cp\u003eI am able to show my project status to the project manager using Gemini Tracker. He knows how much work is done and is left to be done in one screen for a particular project.\u003c/p\u003e\n\n\u003cp\u003eOutlook Calendar items shows exactly what I am working on and have worked on as well as what I have planned to work.\u003c/p\u003e\n\n\u003cp\u003eThe project manager was very impressed with what he was seeing and I am able to do my job without him interrupting me every day or report to him since he is able to see the progress anywhere on his phone on Outlook Calendar (this was shared for the project manager to see).\u003c/p\u003e\n\n\u003cp\u003eWith this habit, I was able to satisfy the needs of the project manager. The added benefit is that I am able to negotiate the deadline by showing how much work needs to be done or what features need to be cut out.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2016/12/18/showing-project-status-project-manager/\"\u003eShowing Project Status to Project Manager\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Showing Project Status to Project Manager\npublished: false\ntags: Blog Entry,project,project management,project status\ncanonical_url: https://www.slightedgecoder.com/2016/12/18/showing-project-status-project-manager/\n---\n\nFor years, I’ve been working to gather requirements and have done user acceptance testing directly with my business partners (end users). Less than a month ago, the company I work for has hired a business analyst/project manager. Now I am faced with a challenge as to how to show my project progress to the project manager.\n\nI’ve been keeping track of my own project status using three different tools.\n\n1. Mind Mapping software ([MindMeister.com](http://mindmeister.com))\n  1. ![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2016/12/MindMeister-241x300.png?resize=384%2C478\u0026ssl=1)\n2. Outlook Calendar\n  1. ![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2016/12/Outlook-blurred-300x112.png?resize=383%2C143\u0026ssl=1)\n3. [Gemini Tracker](https://www.countersoft.com/) from [CounterSoft](https://www.countersoft.com/)\n  1. ![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2016/12/Gemini-blurred-300x257.png?resize=382%2C327\u0026ssl=1)\n\nEvery morning, I spend about 30 minutes to an hour to plan my day. Here are the steps.\n\n1. Brainstorm what needs to be done by **mind mapping**\n2. Create issue tickets or re-prioritize backlogs in **Gemini Tracker**\n3. Create **Outlook Calendar** items for each task to be done today or whole week (depending on the size of the project being worked on)\n\nI’ve only doing those three steps to help myself to track where I was in project status. But it had a side-effect of easily showing my progress to others, as well.\n\nI am able to show my project status to the project manager using Gemini Tracker. He knows how much work is done and is left to be done in one screen for a particular project.\n\nOutlook Calendar items shows exactly what I am working on and have worked on as well as what I have planned to work.\n\nThe project manager was very impressed with what he was seeing and I am able to do my job without him interrupting me every day or report to him since he is able to see the progress anywhere on his phone on Outlook Calendar (this was shared for the project manager to see).\n\nWith this habit, I was able to satisfy the needs of the project manager. The added benefit is that I am able to negotiate the deadline by showing how much work needs to be done or what features need to be cut out.\n\n \n\nThe post [Showing Project Status to Project Manager](https://www.slightedgecoder.com/2016/12/18/showing-project-status-project-manager/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2016/12/18/showing-project-status-project-manager/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2016/12/18/showing-project-status-project-manager/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, project, projectmanagement, projectstatus",
    "path": "/dance2die/showing-project-status-to-project-manager-20oh-temp-slug-8474869",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2016-12-18T05:00:25.000Z"
  },
  {
    "title": "Motivation for Programming",
    "slug": "motivation-for-programming-40mi-temp-slug-2729370",
    "created_at": "2018-07-07T01:41:25.920Z",
    "main_image": null,
    "description": "\n\nI’ve coded for fun last year to learn how to make Web API calls using C#. The l...",
    "published": false,
    "published_at": "2016-12-25T04:30:17.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI’ve coded for fun last year to learn how to make Web API calls using C#. The library access \u003ca href=\"https://myanimelist.net/modules.php?go=api\"\u003eMyAnimeList.net API\u003c/a\u003e and the project is called \u003ca href=\"https://github.com/dance2die/MyAnimeListSharp\"\u003eMyAnimeListSharp\u003c/a\u003e, which I never thought anyone would use.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aT-AD1HY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2016/12/MAL-300x277.jpg%3Fresize%3D300%252C277%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aT-AD1HY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2016/12/MAL-300x277.jpg%3Fresize%3D300%252C277%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003eAs a background information, MyAnimeList is a well known community/website\u003cbr\u003e\u003cbr\u003e\nfor searching Japanese Anime (animation) or Manga (cartoon) as well as maintaining your Manga/Anime viewing list.\u003c/p\u003e\n\n\u003cp\u003eA few days ago, someone (\u003ca href=\"https://github.com/onilink128\"\u003eonilink128\u003c/a\u003e) has created an issue for the project I haven’t touched over a year. That person reported a \u003ca href=\"https://github.com/dance2die/MyAnimeListSharp/issues/3\"\u003eGitHub issue\u003c/a\u003e that the library stopped working. I was a bit confused initially that someone was actually using my library. After a few moments later, I was feeling pleasure from the issue even though it was about reporting a problem in my code. I was just glad that someone has actually tried to use the code I wrote publicly. I’ve gotten back the motivation I’ve lost to work on that project a year ago.\u003c/p\u003e\n\n\u003cp\u003eI’ve newly found a motivation to keep myself to keep programming. It’s funny how a problem often causes me to look forward to what’s coming next.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2016/12/24/motivation-for-programming/\"\u003eMotivation for Programming\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Motivation for Programming\npublished: false\ntags: Blog Entry,GitHub,Motivation\ncanonical_url: https://www.slightedgecoder.com/2016/12/24/motivation-for-programming/\n---\n\nI’ve coded for fun last year to learn how to make Web API calls using C#. The library access [MyAnimeList.net API](https://myanimelist.net/modules.php?go=api) and the project is called [MyAnimeListSharp](https://github.com/dance2die/MyAnimeListSharp), which I never thought anyone would use.\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2016/12/MAL-300x277.jpg?resize=300%2C277\u0026ssl=1)As a background information, MyAnimeList is a well known community/website  \nfor searching Japanese Anime (animation) or Manga (cartoon) as well as maintaining your Manga/Anime viewing list.\n\n \n\n \n\nA few days ago, someone ([onilink128](https://github.com/onilink128)) has created an issue for the project I haven’t touched over a year. That person reported a [GitHub issue](https://github.com/dance2die/MyAnimeListSharp/issues/3) that the library stopped working. I was a bit confused initially that someone was actually using my library. After a few moments later, I was feeling pleasure from the issue even though it was about reporting a problem in my code. I was just glad that someone has actually tried to use the code I wrote publicly. I’ve gotten back the motivation I’ve lost to work on that project a year ago.\n\nI’ve newly found a motivation to keep myself to keep programming. It’s funny how a problem often causes me to look forward to what’s coming next.\n\n \n\nThe post [Motivation for Programming](https://www.slightedgecoder.com/2016/12/24/motivation-for-programming/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2016/12/24/motivation-for-programming/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2016/12/24/motivation-for-programming/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, github, motivation",
    "path": "/dance2die/motivation-for-programming-40mi-temp-slug-2729370",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2016-12-25T04:30:17.000Z"
  },
  {
    "title": "Awesomeness of % (Modulo Operator)",
    "slug": "awesomeness-of--modulo-operator-27np-temp-slug-8701955",
    "created_at": "2018-07-07T01:41:26.314Z",
    "main_image": null,
    "description": "\n\nOne day, I was solving a coding question, for which, I had to shift each elemen...",
    "published": false,
    "published_at": "2016-12-25T14:30:06.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eOne day, I was solving a coding question, for which, I had to shift each element in an array to the right. It is an easy task to do but I wanted to know if there was more “elegant way”. After doing some Googling, I found one entry on \u003ca href=\"http://www.stackoverflow.com\"\u003eStackOverflow\u003c/a\u003e, which blew my mind and I’d like to share it.\u003c/p\u003e\n\n\u003cp\u003eI’ve never much utilized an operator for modulo except when I had to check for “even” or “odd” numbers.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e// right shift with modulus for (int i = 0; i \\\u0026lt; arr.length; i++) { demo[(i+1) % demo.length] = arr[i]; }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eThe code snippet above is an \u003ca href=\"http://stackoverflow.com/a/21385230/4035\"\u003eanswer\u003c/a\u003eby \u003ca href=\"http://stackoverflow.com/users/3123545/artemkller545\"\u003eArtemkller545\u003c/a\u003eto this question, \u003ca href=\"http://stackoverflow.com/questions/21385066/shifting-array-elements-to-right/21385230#21385230\"\u003eshifting array elements to right?\u003c/a\u003e on StackOverflow. An example of shifting each element array to right would be\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eyou have an array, 1 2 3 4 5 6\u003c/p\u003e\n\n\u003cp\u003eShifting it to right by one: 6 1 2 3 4 5\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eWhen I looked at the code, it broadened my view of how I can use modulo and thought that I can use other operators in more clever way like that. The code isn’t clever enough so that it’d need more than a minute to understand but it makes the shifting look dead simple.\u003c/p\u003e\n\n\u003cp\u003eI’ve learned a new trick today and just knowing one such application of an operator broadened my horizon.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2016/12/25/awesomeness-modulo-operator/\"\u003eAwesomeness of % (Modulo Operator)\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Awesomeness of % (Modulo Operator)\npublished: false\ntags: Blog Entry,Programming,Modulo,Motivation\ncanonical_url: https://www.slightedgecoder.com/2016/12/25/awesomeness-modulo-operator/\n---\n\nOne day, I was solving a coding question, for which, I had to shift each element in an array to the right. It is an easy task to do but I wanted to know if there was more “elegant way”. After doing some Googling, I found one entry on [StackOverflow](http://www.stackoverflow.com), which blew my mind and I’d like to share it.\n\nI’ve never much utilized an operator for modulo except when I had to check for “even” or “odd” numbers.\n\n```\n// right shift with modulus for (int i = 0; i \\\u003c arr.length; i++) { demo[(i+1) % demo.length] = arr[i]; }\n```\n\nThe code snippet above is an [answer](http://stackoverflow.com/a/21385230/4035)by [Artemkller545](http://stackoverflow.com/users/3123545/artemkller545)to this question, [shifting array elements to right?](http://stackoverflow.com/questions/21385066/shifting-array-elements-to-right/21385230#21385230) on StackOverflow. An example of shifting each element array to right would be\n\n\u003e you have an array, 1 2 3 4 5 6\n\u003e \n\u003e Shifting it to right by one: 6 1 2 3 4 5\n\nWhen I looked at the code, it broadened my view of how I can use modulo and thought that I can use other operators in more clever way like that. The code isn’t clever enough so that it’d need more than a minute to understand but it makes the shifting look dead simple.\n\nI’ve learned a new trick today and just knowing one such application of an operator broadened my horizon.\n\nThe post [Awesomeness of % (Modulo Operator)](https://www.slightedgecoder.com/2016/12/25/awesomeness-modulo-operator/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2016/12/25/awesomeness-modulo-operator/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2016/12/25/awesomeness-modulo-operator/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, modulo, motivation",
    "path": "/dance2die/awesomeness-of--modulo-operator-27np-temp-slug-8701955",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2016-12-25T14:30:06.000Z"
  },
  {
    "title": "Solving an XML Entity Deserialization Issue",
    "slug": "solving-an-xml-entity-deserialization-issue-1kfe-temp-slug-4910061",
    "created_at": "2018-07-07T01:41:26.805Z",
    "main_image": null,
    "description": "\n\nI’ve recently released a new version of MyAnimeListSharp and I’d like to talk a...",
    "published": false,
    "published_at": "2016-12-31T16:49:12.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI’ve recently released a new version of \u003ca href=\"https://github.com/dance2die/MyAnimeListSharp\"\u003eMyAnimeListSharp\u003c/a\u003e and I’d like to talk about a challenge I faced while implementing it.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://myanimelist.net/modules.php?go=api\"\u003eMAL (MyAnimeList.net) API\u003c/a\u003e returns search responses in an XML format instead of in JSON. To make library users’ lives easier, I decided to deserialize the XML response into an object (either as \u003ca href=\"https://github.com/dance2die/MyAnimeListSharp/blob/master/Project.MyAnimeList/Project.MyAnimeList/Core/AnimeSearchResponse.cs\"\u003eAnimeSearchResponse\u003c/a\u003e or \u003ca href=\"https://github.com/dance2die/MyAnimeListSharp/blob/master/Project.MyAnimeList/Project.MyAnimeList/Core/MangaSearchResponse.cs\"\u003eMangaSearchResponse\u003c/a\u003e) for easier processing. Then Alas, I run into a problem. For some reason, I am not able to deserialize XML into an object due to undeclared XML entities such as \u003ccode\u003e—\u003c/code\u003e(—), \u003ccode\u003e\u0026lt;\u003c/code\u003e (\u0026lt;) or  \u003ccode\u003e\u0026gt;\u003c/code\u003e(\u0026gt;), etc…\u003c/p\u003e\n\n\u003cp\u003eHere is the edited sample response from MAL API for an anime search (“synopsys” section usually contains undeclared XML entities)\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\\\u0026lt;?xml version=\"\"1.0\"\" encoding=\"\"utf-8\"\" ?\\\u0026gt; \\\u0026lt;anime\\\u0026gt; \\\u0026lt;entry\\\u0026gt; \\\u0026lt;id\\\u0026gt;71\\\u0026lt;/id\\\u0026gt; ... \\\u0026lt;synopsis\\\u0026gt;Sousuke Sagara, ... on the battlefield.\u0026amp;lt;br /\u0026amp;gt; \u0026amp;lt;br /\u0026amp;gt;(Source: ANN, edited)\\\u0026lt;/synopsis\\\u0026gt; \\\u0026lt;image\\\u0026gt;http://cdn.myanimelist.net/images/anime/2/75259.jpg\\\u0026lt;/image\\\u0026gt; \\\u0026lt;/entry\\\u0026gt; \\\u0026lt;entry\\\u0026gt; \\\u0026lt;id\\\u0026gt;72\\\u0026lt;/id\\\u0026gt; ... \\\u0026lt;synopsis\\\u0026gt;It's ... Kaname's classmate.\u0026amp;lt;br /\u0026amp;gt;\u0026amp;lt;br /\u0026amp;gt;(Source: ANN)\\\u0026lt;/synopsis\\\u0026gt; \\\u0026lt;image\\\u0026gt;http://cdn.myanimelist.net/images/anime/4/75260.jpg\\\u0026lt;/image\\\u0026gt; \\\u0026lt;/entry\\\u0026gt; \\\u0026lt;/anime\\\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eHacking begins…\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epublic class SearchResponseDeserializer\\\u0026lt;T\\\u0026gt; where T : class { public T Deserialize(string responseString) { using (var stringReader = new StringReader(responseString)) using ( var xmlReader = XmlReader.Create(stringReader, new XmlReaderSettings {DtdProcessing = DtdProcessing.Ignore})) { DisableUndeclaredEntityCheck(xmlReader); var xmlSerializer = new XmlSerializer(typeof(T)); var result = xmlSerializer.Deserialize(xmlReader) as T; return result; } } private static void DisableUndeclaredEntityCheck(XmlReader xmlReader) { ... } }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eHere is the run-down of \u003ca href=\"https://github.com/dance2die/MyAnimeListSharp/blob/master/Project.MyAnimeList/Project.MyAnimeList/Util/SearchResponseDeserializer.cs\"\u003e\u003ccode\u003eSearchResponseDeserializer.Deserialize\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eGiven the response string in XML format\u003c/li\u003e\n\u003cli\u003eDisable undeclared entity check\u003c/li\u003e\n\u003cli\u003eDeserialize.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThe part I was having trouble figuring out was #2, disabling undeclared entity check. There is a limit to replacing all entities as an empty string and that solution is just not optimal since one never knows when XML response will change to return other unknown XML entities.\u003c/p\u003e\n\n\u003cp\u003eI looked for an alternative in .NET documentation. There were no properties to set or functions to call to disable the entity check. But I’ve found a way in one of StackOverflow \u003ca href=\"http://stackoverflow.com/questions/3504227/prevent-xmltextreader-from-expanding-entities/22787825#22787825\"\u003eanswer\u003c/a\u003e (by \u003ca href=\"http://stackoverflow.com/users/138304/sam-harwell\"\u003eSam Harwell\u003c/a\u003e who is a Microsoft MVP in .NET), which discusses how to use reflection to set an internal variable to bypass entity check.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eprivate static void DisableUndeclaredEntityCheck(XmlReader xmlReader) { PropertyInfo propertyInfo = xmlReader.GetType().GetProperty( \"DisableUndeclaredEntityCheck\", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic); propertyInfo.SetValue(xmlReader, true); }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003e\u003ccode\u003eXmlReader\u003c/code\u003e does not expose a property \u003ccode\u003eDisableUndeclaredEntityCheck\u003c/code\u003e publicly so it needs to be turned on using reflection. The property name is aptly named since you can guess what it does from the name.\u003c/p\u003e\n\n\u003cp\u003eI’ve never hacked my code this bad by having to set an internal property in .NET library. What I’ve learned from this challenge was that this experience has broadened my horizon that learning the internal of a framework can be useful in certain scenarios even though messing around with internal details is not a good idea most of time.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2016/12/31/solving-xml-entity-deserialization-issue/\"\u003eSolving an XML Entity Deserialization Issue\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Solving an XML Entity Deserialization Issue\npublished: false\ntags: Blog Entry,Programming,c#,deserialization\ncanonical_url: https://www.slightedgecoder.com/2016/12/31/solving-xml-entity-deserialization-issue/\n---\n\nI’ve recently released a new version of [MyAnimeListSharp](https://github.com/dance2die/MyAnimeListSharp) and I’d like to talk about a challenge I faced while implementing it.\n\n[MAL (MyAnimeList.net) API](http://myanimelist.net/modules.php?go=api) returns search responses in an XML format instead of in JSON. To make library users’ lives easier, I decided to deserialize the XML response into an object (either as [AnimeSearchResponse](https://github.com/dance2die/MyAnimeListSharp/blob/master/Project.MyAnimeList/Project.MyAnimeList/Core/AnimeSearchResponse.cs) or [MangaSearchResponse](https://github.com/dance2die/MyAnimeListSharp/blob/master/Project.MyAnimeList/Project.MyAnimeList/Core/MangaSearchResponse.cs)) for easier processing. Then Alas, I run into a problem. For some reason, I am not able to deserialize XML into an object due to undeclared XML entities such as `—`(\u0026mdash;), `\u003c` (\u0026lt;) or  `\u003e`(\u0026gt;), etc…\n\nHere is the edited sample response from MAL API for an anime search (“synopsys” section usually contains undeclared XML entities)\n\n```\n\\\u003c?xml version=\"\"1.0\"\" encoding=\"\"utf-8\"\" ?\\\u003e \\\u003canime\\\u003e \\\u003centry\\\u003e \\\u003cid\\\u003e71\\\u003c/id\\\u003e ... \\\u003csynopsis\\\u003eSousuke Sagara, ... on the battlefield.\u0026lt;br /\u0026gt; \u0026lt;br /\u0026gt;(Source: ANN, edited)\\\u003c/synopsis\\\u003e \\\u003cimage\\\u003ehttp://cdn.myanimelist.net/images/anime/2/75259.jpg\\\u003c/image\\\u003e \\\u003c/entry\\\u003e \\\u003centry\\\u003e \\\u003cid\\\u003e72\\\u003c/id\\\u003e ... \\\u003csynopsis\\\u003eIt's ... Kaname's classmate.\u0026lt;br /\u0026gt;\u0026lt;br /\u0026gt;(Source: ANN)\\\u003c/synopsis\\\u003e \\\u003cimage\\\u003ehttp://cdn.myanimelist.net/images/anime/4/75260.jpg\\\u003c/image\\\u003e \\\u003c/entry\\\u003e \\\u003c/anime\\\u003e\n```\n\n \n\nHacking begins…\n\n```\npublic class SearchResponseDeserializer\\\u003cT\\\u003e where T : class { public T Deserialize(string responseString) { using (var stringReader = new StringReader(responseString)) using ( var xmlReader = XmlReader.Create(stringReader, new XmlReaderSettings {DtdProcessing = DtdProcessing.Ignore})) { DisableUndeclaredEntityCheck(xmlReader); var xmlSerializer = new XmlSerializer(typeof(T)); var result = xmlSerializer.Deserialize(xmlReader) as T; return result; } } private static void DisableUndeclaredEntityCheck(XmlReader xmlReader) { ... } }\n```\n\n \n\nHere is the run-down of [`SearchResponseDeserializer.Deserialize`](https://github.com/dance2die/MyAnimeListSharp/blob/master/Project.MyAnimeList/Project.MyAnimeList/Util/SearchResponseDeserializer.cs).\n\n1. Given the response string in XML format\n2. Disable undeclared entity check\n3. Deserialize.\n\nThe part I was having trouble figuring out was #2, disabling undeclared entity check. There is a limit to replacing all entities as an empty string and that solution is just not optimal since one never knows when XML response will change to return other unknown XML entities.\n\nI looked for an alternative in .NET documentation. There were no properties to set or functions to call to disable the entity check. But I’ve found a way in one of StackOverflow [answer](http://stackoverflow.com/questions/3504227/prevent-xmltextreader-from-expanding-entities/22787825#22787825) (by [Sam Harwell](http://stackoverflow.com/users/138304/sam-harwell) who is a Microsoft MVP in .NET), which discusses how to use reflection to set an internal variable to bypass entity check.\n\n```\nprivate static void DisableUndeclaredEntityCheck(XmlReader xmlReader) { PropertyInfo propertyInfo = xmlReader.GetType().GetProperty( \"DisableUndeclaredEntityCheck\", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic); propertyInfo.SetValue(xmlReader, true); }\n```\n\n \n\n`XmlReader` does not expose a property `DisableUndeclaredEntityCheck` publicly so it needs to be turned on using reflection. The property name is aptly named since you can guess what it does from the name.\n\nI’ve never hacked my code this bad by having to set an internal property in .NET library. What I’ve learned from this challenge was that this experience has broadened my horizon that learning the internal of a framework can be useful in certain scenarios even though messing around with internal details is not a good idea most of time.\n\nThe post [Solving an XML Entity Deserialization Issue](https://www.slightedgecoder.com/2016/12/31/solving-xml-entity-deserialization-issue/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2016/12/31/solving-xml-entity-deserialization-issue/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2016/12/31/solving-xml-entity-deserialization-issue/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, c, deserialization",
    "path": "/dance2die/solving-an-xml-entity-deserialization-issue-1kfe-temp-slug-4910061",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2016-12-31T16:49:12.000Z"
  },
  {
    "title": "Thoughts on “Dealing With Lack Of Confidence As A Developer”",
    "slug": "thoughts-on-dealing-with-lack-of-confidence-as-a-developer-9m-temp-slug-3210248",
    "created_at": "2018-07-07T01:41:27.301Z",
    "main_image": null,
    "description": "\n\nI’ve been in a slump where I feel like I’ve been doing the same thing 3 times l...",
    "published": false,
    "published_at": "2017-01-07T22:47:45.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI’ve been in a slump where I feel like I’ve been doing the same thing 3 times last 9 years at the same job, thus feeling like having only 3 years of experience.\u003c/p\u003e\n\n\u003cp\u003eI’ve been having a lack of confidence as a developer trying to keep up with all these new technologies, especially in front-end area where there is a deluge of JavaScript technologies (refer to this \u003ca href=\"https://hackernoon.com/\"\u003eHackernoon\u003c/a\u003e post on “\u003ca href=\"https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f#.t7dg2iuk2\"\u003eHow it feels to learn JavaScript in 2016\u003c/a\u003e“.)\u003c/p\u003e\n\n\u003cp\u003eI found this YouTube video by John Sonmez (\u003ca href=\"http://simpleprogrammer.com\"\u003eSimple Programmer\u003c/a\u003e) and I’d like to share what I’ve learned to do.\u003c/p\u003e\n\n\u003cp\u003eIn this video, “\u003ca href=\"https://youtu.be/KmimOJIR0zE\"\u003eDealing With Lack Of Confidence As A Developer\u003c/a\u003e“, John talks about what you should do to deal with your lack of confidence and also narrates his experience.\u003c/p\u003e\n\n\u003cp\u003eThe gist of the content is that, everyone takes jobs they are not prepared for. Don’t give up until you make it. You will get used to the uncomfortable situation when you face it.\u003c/p\u003e\n\n\u003cp\u003eThen, John says something that made me feel guilty.” At \u003ca href=\"https://youtu.be/KmimOJIR0zE?t=3m35s\"\u003e3:35\u003c/a\u003e,  he says that a lot of his old co-workers have been “doing the same thing for the last 10 or 15 years”. To get around the problem, he suggested to constantly put yourself in an uncomfortable situations.\u003c/p\u003e\n\n\u003cp\u003eHe ends his video mentioning that if you aim for your goal and you will achieve it.\u003c/p\u003e\n\n\u003cp\u003eI will shoot the moon, and hit the moon.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/01/07/dealing-lack-confidence-developer/\"\u003eThoughts on “Dealing With Lack Of Confidence As A Developer”\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Thoughts on “Dealing With Lack Of Confidence As A Developer”\npublished: false\ntags: Blog Entry,johnsonmez,review,simpleprogrammer\ncanonical_url: https://www.slightedgecoder.com/2017/01/07/dealing-lack-confidence-developer/\n---\n\nI’ve been in a slump where I feel like I’ve been doing the same thing 3 times last 9 years at the same job, thus feeling like having only 3 years of experience.\n\nI’ve been having a lack of confidence as a developer trying to keep up with all these new technologies, especially in front-end area where there is a deluge of JavaScript technologies (refer to this [Hackernoon](https://hackernoon.com/) post on “[How it feels to learn JavaScript in 2016](https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f#.t7dg2iuk2)“.)\n\nI found this YouTube video by John Sonmez ([Simple Programmer](http://simpleprogrammer.com)) and I’d like to share what I’ve learned to do.\n\nIn this video, “[Dealing With Lack Of Confidence As A Developer](https://youtu.be/KmimOJIR0zE)“, John talks about what you should do to deal with your lack of confidence and also narrates his experience.\n\n\u003ciframe type=\"text/html\" width=\"1170\" height=\"689\" src=\"https://www.youtube.com/embed/KmimOJIR0zE?version=3\u0026amp;rel=1\u0026amp;fs=1\u0026amp;autohide=2\u0026amp;showsearch=0\u0026amp;showinfo=1\u0026amp;iv_load_policy=1\u0026amp;wmode=transparent\" allowfullscreen=\"true\" style=\"border:0;\"\u003e\u003c/iframe\u003e\n\nThe gist of the content is that, everyone takes jobs they are not prepared for. Don’t give up until you make it. You will get used to the uncomfortable situation when you face it.\n\nThen, John says something that made me feel guilty.” At [3:35](https://youtu.be/KmimOJIR0zE?t=3m35s),  he says that a lot of his old co-workers have been “doing the same thing for the last 10 or 15 years”. To get around the problem, he suggested to constantly put yourself in an uncomfortable situations.\n\nHe ends his video mentioning that if you aim for your goal and you will achieve it.\n\n \n\nI will shoot the moon, and hit the moon.\n\n \n\nThe post [Thoughts on “Dealing With Lack Of Confidence As A Developer”](https://www.slightedgecoder.com/2017/01/07/dealing-lack-confidence-developer/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/01/07/dealing-lack-confidence-developer/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/01/07/dealing-lack-confidence-developer/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, johnsonmez, review, simpleprogrammer",
    "path": "/dance2die/thoughts-on-dealing-with-lack-of-confidence-as-a-developer-9m-temp-slug-3210248",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-01-07T22:47:45.000Z"
  },
  {
    "title": "Iterating two enumerable objects simultaneously",
    "slug": "iterating-two-enumerable-objects-simultaneously-5em8-temp-slug-4436211",
    "created_at": "2018-07-07T01:41:27.945Z",
    "main_image": null,
    "description": "\n\nI was solving a question on Cracking the Coding Interview Edition 6 question 4....",
    "published": false,
    "published_at": "2017-01-09T05:00:33.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI was solving a question on Cracking the Coding Interview Edition 6 question 4.1\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eGiven a directed graph, design an algorithm to find out whether there is a route between two nodes.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eMy first attempt was a brute force approach of iterating all nodes in a graph. But then I thought about the possibility of having to deal with thousands or millions of nodes in a graph and my approach would not work.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epublic bool HasRouteUsingDfs\\\u0026lt;T\\\u0026gt;(Node\\\u0026lt;T\\\u0026gt; node1, Node\\\u0026lt;T\\\u0026gt; node2) { var nodeValues1 = GetValuesUsingDfs(node1).ToList(); var nodeValues2 = GetValuesUsingDfs(node2).ToList(); return nodeValues1.Contains(node2.Name) \u0026amp;\u0026amp; nodeValues2.Contains(node1.Name); }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003ewhere \u003ccode\u003eGetValuesUsingDfs(...)\u003c/code\u003eis just a graph iteration function using DFS (Depth-First Search) algorithm.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eprivate IEnumerable\\\u0026lt;T\\\u0026gt; GetValuesUsingDfs\\\u0026lt;T\\\u0026gt;(Node\\\u0026lt;T\\\u0026gt; node) { var stack = new Stack\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;\\\u0026gt;(); stack.Push(node); while (stack.Count \\\u0026gt; 0) { var v = stack.Pop(); if (!v.IsVisited) { v.IsVisited = true; yield return v.Name; foreach (Node\\\u0026lt;T\\\u0026gt; child in v.Children) { stack.Push(child); } } } }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eTo be able to pull that off, I had to think of a way to run returned enumerators of \u003ccode\u003eGetValuesUsingDfs(...)\u003c/code\u003e  at the same time. Until now, I’ve been simply been using two nested for/foreach loops to accomplish such tasks. But ever since I’ve been conscious about Big O (where using two nested for/foreach would require B(N\u003csup\u003e2)),\u003c/sup\u003e I was looking for a different way.\u003c/p\u003e\n\n\u003cp\u003eSo the optimization technique I thought of was to iterate from both sides and if there is a common node between the two nodes, then there is a route. I can’t exactly come up with any other striking idea since I am still reading the book, but I am sure that I will be able to apply more optimizations as I read the book.\u003c/p\u003e\n\n\u003cp\u003eHere is the code that utilizes simultaneous iteration.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epublic bool HasRouteUsingDfs2(Node\\\u0026lt;int\\\u0026gt; node1, Node\\\u0026lt;int\\\u0026gt; node2) { var nodes1 = GetValuesUsingDfs(node1); var nodes2 = GetValuesUsingDfs(node2); // Enumerate multiple lists one at a time using Depth-First Search using (var n1 = nodes1.GetEnumerator()) using (var n2 = nodes2.GetEnumerator()) { while (n1.MoveNext() \u0026amp;\u0026amp; n2.MoveNext()) { var nodeValue1 = n1.Current; var nodeValue2 = n2.Current; if (nodeValue1 == nodeValue2) return true; } } return false; }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eNow the function terminates as soon as a common node between the two nodes is found, which runs much faster for four of my test cases.  I’ve found simultaneous iteration code from StackOverflow as usual from \u003ca href=\"http://stackoverflow.com/questions/18395943/using-foreach-to-iterate-simultaneously-through-multiple-lists-syntax-sugar\"\u003ethis question\u003c/a\u003e answered by \u003ca href=\"http://stackoverflow.com/users/201088/eren-ers%C3%B6nmez\"\u003eEren Ersönmez\u003c/a\u003e (Answer is \u003ca href=\"http://stackoverflow.com/a/18396163/4035\"\u003ehere\u003c/a\u003e; Eren also created a generic “ZipAll” function that accepts any number of IEnumerables in the answer.)\u003c/p\u003e\n\n\u003cp\u003eWhile four tests using HasRouteUsingDfs ran for 0.06 seconds, optimized version using HasRouteUsingDfs2 ran within 0.001 seconds.\u003c/p\u003e\n\n\u003cp\u003eFull source for above codes is available on \u003ca href=\"https://github.com/dance2die/Demo.LearnByDoing/blob/master/Demo.LearnByDoing.Tests/Chapter04/Chapter4_1Test.cs\"\u003eGitHub\u003c/a\u003e. You’d need \u003ca href=\"https://github.com/xunit/xunit\"\u003eXUnit\u003c/a\u003eto run the tests.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eIt’s not possible to iterate multiple enumerators using “foreach” but can use “GetEnumerator”. I’ve been quite conscious about writing optimized code and this one just rocked since I never knew about this trick.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/01/09/iterating-two-enumerable-objects-simultaneously/\"\u003eIterating two enumerable objects simultaneously\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Iterating two enumerable objects simultaneously\npublished: false\ntags: Blog Entry,Programming,c#,cracking the coding \ncanonical_url: https://www.slightedgecoder.com/2017/01/09/iterating-two-enumerable-objects-simultaneously/\n---\n\nI was solving a question on Cracking the Coding Interview Edition 6 question 4.1\n\n\u003e Given a directed graph, design an algorithm to find out whether there is a route between two nodes.\n\nMy first attempt was a brute force approach of iterating all nodes in a graph. But then I thought about the possibility of having to deal with thousands or millions of nodes in a graph and my approach would not work.\n\n```\npublic bool HasRouteUsingDfs\\\u003cT\\\u003e(Node\\\u003cT\\\u003e node1, Node\\\u003cT\\\u003e node2) { var nodeValues1 = GetValuesUsingDfs(node1).ToList(); var nodeValues2 = GetValuesUsingDfs(node2).ToList(); return nodeValues1.Contains(node2.Name) \u0026\u0026 nodeValues2.Contains(node1.Name); }\n```\n\nwhere `GetValuesUsingDfs(...)`is just a graph iteration function using DFS (Depth-First Search) algorithm.\n\n```\nprivate IEnumerable\\\u003cT\\\u003e GetValuesUsingDfs\\\u003cT\\\u003e(Node\\\u003cT\\\u003e node) { var stack = new Stack\\\u003cNode\\\u003cT\\\u003e\\\u003e(); stack.Push(node); while (stack.Count \\\u003e 0) { var v = stack.Pop(); if (!v.IsVisited) { v.IsVisited = true; yield return v.Name; foreach (Node\\\u003cT\\\u003e child in v.Children) { stack.Push(child); } } } }\n```\n\nTo be able to pull that off, I had to think of a way to run returned enumerators of `GetValuesUsingDfs(...)`  at the same time. Until now, I’ve been simply been using two nested for/foreach loops to accomplish such tasks. But ever since I’ve been conscious about Big O (where using two nested for/foreach would require B(N^2)), I was looking for a different way.\n\nSo the optimization technique I thought of was to iterate from both sides and if there is a common node between the two nodes, then there is a route. I can’t exactly come up with any other striking idea since I am still reading the book, but I am sure that I will be able to apply more optimizations as I read the book.\n\nHere is the code that utilizes simultaneous iteration.\n\n```\npublic bool HasRouteUsingDfs2(Node\\\u003cint\\\u003e node1, Node\\\u003cint\\\u003e node2) { var nodes1 = GetValuesUsingDfs(node1); var nodes2 = GetValuesUsingDfs(node2); // Enumerate multiple lists one at a time using Depth-First Search using (var n1 = nodes1.GetEnumerator()) using (var n2 = nodes2.GetEnumerator()) { while (n1.MoveNext() \u0026\u0026 n2.MoveNext()) { var nodeValue1 = n1.Current; var nodeValue2 = n2.Current; if (nodeValue1 == nodeValue2) return true; } } return false; }\n```\n\nNow the function terminates as soon as a common node between the two nodes is found, which runs much faster for four of my test cases.  I’ve found simultaneous iteration code from StackOverflow as usual from [this question](http://stackoverflow.com/questions/18395943/using-foreach-to-iterate-simultaneously-through-multiple-lists-syntax-sugar) answered by [Eren Ersönmez](http://stackoverflow.com/users/201088/eren-ers%C3%B6nmez) (Answer is [here](http://stackoverflow.com/a/18396163/4035); Eren also created a generic “ZipAll” function that accepts any number of IEnumerables in the answer.)\n\nWhile four tests using HasRouteUsingDfs ran for 0.06 seconds, optimized version using HasRouteUsingDfs2 ran within 0.001 seconds.\n\nFull source for above codes is available on [GitHub](https://github.com/dance2die/Demo.LearnByDoing/blob/master/Demo.LearnByDoing.Tests/Chapter04/Chapter4_1Test.cs). You’d need [XUnit](https://github.com/xunit/xunit)to run the tests.\n\n### Conclusion\n\nIt’s not possible to iterate multiple enumerators using “foreach” but can use “GetEnumerator”. I’ve been quite conscious about writing optimized code and this one just rocked since I never knew about this trick.\n\n \n\nThe post [Iterating two enumerable objects simultaneously](https://www.slightedgecoder.com/2017/01/09/iterating-two-enumerable-objects-simultaneously/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/01/09/iterating-two-enumerable-objects-simultaneously/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/01/09/iterating-two-enumerable-objects-simultaneously/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, c, crackingthecoding",
    "path": "/dance2die/iterating-two-enumerable-objects-simultaneously-5em8-temp-slug-4436211",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-01-09T05:00:33.000Z"
  },
  {
    "title": "Blaming Windows 10 for My Own Mess Up",
    "slug": "blaming-windows-10-for-my-own-mess-up-35gp-temp-slug-3457304",
    "created_at": "2018-07-07T01:41:28.435Z",
    "main_image": null,
    "description": "\n\nI had to reset my Windows 10 PC last night (1/11/2017). The problem was that my...",
    "published": false,
    "published_at": "2017-01-13T01:22:39.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI had to reset my Windows 10 PC last night (1/11/2017). The problem was that my computer lost power during windows update. Mouse and keyboard weren’t being recognized on Login Screen.\u003c/p\u003e\n\n\u003cp\u003eMouse was working in BIOS mode at least. I was sure that it was not a hardware problem but that of windows. After only 30 minutes of research and trying a half dozen methods, I gave up and decided to reset my Windows 10.\u003c/p\u003e\n\n\u003cp\u003eEven after resetting Windows 10 back to factory image, losing all data, Windows 10 still didn’t recognize my mouse and keyboard. No lights were on for either of them.\u003c/p\u003e\n\n\u003cp\u003eI did one last search and found this article, \u003ca href=\"http://www.tomshardware.com/forum/4791-73-unable-login-mouse-keyboard-work\"\u003eUnable to login: mouse and keyboard does not work\u003c/a\u003e on Tom’s Hardware. The “Best Answer” in the forum basically suggested to shut down the PC, disconnect all peripherals. Turn the PC back on and reconnect peripherals.\u003c/p\u003e\n\n\u003cp\u003eIt worked like a charm but felt stupid to jump to a conclusion that it was a good idea to simply reset my PC.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eI jumped the gun without trying all alternatives. My windows is reset but can’t cry over spilled milk. I’ve learned that there is always a way even though it seems like you ran out of choice. And also, I am sorry Microsoft for blaming my mess up as Windows 10 problem when I was the one who couldn’t maintain the power on the PC during Windows Update installation…\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/01/12/blaming-windows-10-mess/\"\u003eBlaming Windows 10 for My Own Mess Up\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Blaming Windows 10 for My Own Mess Up\npublished: false\ntags: Blog Entry,blame,mess up,TIL\ncanonical_url: https://www.slightedgecoder.com/2017/01/12/blaming-windows-10-mess/\n---\n\nI had to reset my Windows 10 PC last night (1/11/2017). The problem was that my computer lost power during windows update. Mouse and keyboard weren’t being recognized on Login Screen.\n\nMouse was working in BIOS mode at least. I was sure that it was not a hardware problem but that of windows. After only 30 minutes of research and trying a half dozen methods, I gave up and decided to reset my Windows 10.\n\nEven after resetting Windows 10 back to factory image, losing all data, Windows 10 still didn’t recognize my mouse and keyboard. No lights were on for either of them.\n\nI did one last search and found this article, [Unable to login: mouse and keyboard does not work](http://www.tomshardware.com/forum/4791-73-unable-login-mouse-keyboard-work) on Tom’s Hardware. The “Best Answer” in the forum basically suggested to shut down the PC, disconnect all peripherals. Turn the PC back on and reconnect peripherals.\n\nIt worked like a charm but felt stupid to jump to a conclusion that it was a good idea to simply reset my PC.\n\n### Conclusion\n\nI jumped the gun without trying all alternatives. My windows is reset but can’t cry over spilled milk. I’ve learned that there is always a way even though it seems like you ran out of choice. And also, I am sorry Microsoft for blaming my mess up as Windows 10 problem when I was the one who couldn’t maintain the power on the PC during Windows Update installation…\n\nThe post [Blaming Windows 10 for My Own Mess Up](https://www.slightedgecoder.com/2017/01/12/blaming-windows-10-mess/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/01/12/blaming-windows-10-mess/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/01/12/blaming-windows-10-mess/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, blame, messup, todayilearned",
    "path": "/dance2die/blaming-windows-10-for-my-own-mess-up-35gp-temp-slug-3457304",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-01-13T01:22:39.000Z"
  },
  {
    "title": "Solving a HackerRank Problem with Modulo Array Rotation",
    "slug": "solving-a-hackerrank-problem-with-modulo-array-rotation-54ci-temp-slug-5979633",
    "created_at": "2018-07-07T01:41:28.882Z",
    "main_image": null,
    "description": "\n\nOn December 25th of 2016, I wrote about AWESOMENESS OF % (MODULO OPERATOR). I w...",
    "published": false,
    "published_at": "2017-01-14T01:00:56.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eOn December 25th of 2016, I wrote about \u003ca href=\"https://dev.to/dance2die/awesomeness-of--modulo-operator-27np-temp-slug-8701955\"\u003eAWESOMENESS OF % (MODULO OPERATOR)\u003c/a\u003e. I was able to apply the knowledge I learned to solve a \u003ca href=\"http://hackerrank.com/\"\u003eHackerRank\u003c/a\u003e warm-up question, \u003ca href=\"https://www.hackerrank.com/challenges/circular-array-rotation\"\u003eCircular Array Rotation\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe gist of the question is to rotate an array multiple times, given the data from console and then print the output.\u003c/p\u003e\n\n\u003cp\u003eIt was exactly the situation where I can apply the concept I wrote about in \u003ca href=\"https://dev.to/dance2die/awesomeness-of--modulo-operator-27np-temp-slug-8701955\"\u003eAWESOMENESS OF % (MODULO OPERATOR)\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eI tried to solve it by rotating it the number of times entered by the user, but the tests were failing for very large input data. Here is the initial implementation.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eprivate static int[] RotateRightNTimes(int[] a, int k) { int[] result = a; for (int rotateIndex = 0; rotateIndex \\\u0026lt; k; rotateIndex++) { result = RotateRightOnce(result); } return result; } private static int[] RotateRightOnce(int[] a) { int[] result = new int[a.Length]; for (int i = 0; i \\\u0026lt; a.Length; i++) { result[(i + 1) % a.Length] = a[i]; } return result; }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eAs shown above, it’s very naive implementation of rotating. If I had thought this through, I could have made it faster from the get-go by adding the number of positions to rotate instead of adding 1 in line 18 (\u003ccode\u003eresult[(i + 1) % a.Length]\u003c/code\u003e).\u003c/p\u003e\n\n\u003cp\u003eMy second approach was just as I describe above and just add number of rotation count.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eprivate static int[] RotateRightNTimes2(int[] a, int rotateCount) { int[] result = new int[a.Length]; for (int i = 0; i \\\u0026lt; a.Length; i++) { result[(i + rotateCount) % a.Length] = a[i]; } return result; }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eNow there is only one method and now it takes \u003cstrong\u003eO(n)\u003c/strong\u003e to rotate instead of \u003cstrong\u003eO(N\u003csup\u003e2)\u003c/sup\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eFull source is available on \u003ca href=\"https://github.com/dance2die/Problems.HackerRank/blob/master/Problems.HackerRank.Algorithms/WarmUp/CircularArrayRotationMain.cs\"\u003eGitHub\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eBeing able to apply what I’ve learned recently and wrote about seems to make a long last memory. I will have to change my approach on learning;I’d learn new things as if I will have to apply it in short or long term.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/01/13/solving-hackerrank-problem-modulo-array-rotation/\"\u003eSolving a HackerRank Problem with Modulo Array Rotation\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Solving a HackerRank Problem with Modulo Array Rotation\npublished: false\ntags: Blog Entry,Programming,Application,Apply\ncanonical_url: https://www.slightedgecoder.com/2017/01/13/solving-hackerrank-problem-modulo-array-rotation/\n---\n\nOn December 25th of 2016, I wrote about [AWESOMENESS OF % (MODULO OPERATOR)](https://dev.to/dance2die/awesomeness-of--modulo-operator-27np-temp-slug-8701955). I was able to apply the knowledge I learned to solve a [HackerRank](http://hackerrank.com/) warm-up question, [Circular Array Rotation](https://www.hackerrank.com/challenges/circular-array-rotation).\n\nThe gist of the question is to rotate an array multiple times, given the data from console and then print the output.\n\nIt was exactly the situation where I can apply the concept I wrote about in [AWESOMENESS OF % (MODULO OPERATOR)](https://dev.to/dance2die/awesomeness-of--modulo-operator-27np-temp-slug-8701955).\n\nI tried to solve it by rotating it the number of times entered by the user, but the tests were failing for very large input data. Here is the initial implementation.\n\n```\nprivate static int[] RotateRightNTimes(int[] a, int k) { int[] result = a; for (int rotateIndex = 0; rotateIndex \\\u003c k; rotateIndex++) { result = RotateRightOnce(result); } return result; } private static int[] RotateRightOnce(int[] a) { int[] result = new int[a.Length]; for (int i = 0; i \\\u003c a.Length; i++) { result[(i + 1) % a.Length] = a[i]; } return result; }\n```\n\nAs shown above, it’s very naive implementation of rotating. If I had thought this through, I could have made it faster from the get-go by adding the number of positions to rotate instead of adding 1 in line 18 (`result[(i + 1) % a.Length]`).\n\nMy second approach was just as I describe above and just add number of rotation count.\n\n```\nprivate static int[] RotateRightNTimes2(int[] a, int rotateCount) { int[] result = new int[a.Length]; for (int i = 0; i \\\u003c a.Length; i++) { result[(i + rotateCount) % a.Length] = a[i]; } return result; }\n```\n\nNow there is only one method and now it takes **O(n)** to rotate instead of **O(N^2)**.\n\nFull source is available on [GitHub](https://github.com/dance2die/Problems.HackerRank/blob/master/Problems.HackerRank.Algorithms/WarmUp/CircularArrayRotationMain.cs).\n\n### Conclusion\n\nBeing able to apply what I’ve learned recently and wrote about seems to make a long last memory. I will have to change my approach on learning;I’d learn new things as if I will have to apply it in short or long term.\n\n \n\nThe post [Solving a HackerRank Problem with Modulo Array Rotation](https://www.slightedgecoder.com/2017/01/13/solving-hackerrank-problem-modulo-array-rotation/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/01/13/solving-hackerrank-problem-modulo-array-rotation/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/01/13/solving-hackerrank-problem-modulo-array-rotation/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, application, apply",
    "path": "/dance2die/solving-a-hackerrank-problem-with-modulo-array-rotation-54ci-temp-slug-5979633",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-01-14T01:00:56.000Z"
  },
  {
    "title": "Inspirational Posters",
    "slug": "inspirational-posters-37fn-temp-slug-2428979",
    "created_at": "2018-07-07T01:41:29.338Z",
    "main_image": null,
    "description": "\n\nI just purchased two posters from JoeyRoth.com, “Charlatan, Martyr, Hustler”, a...",
    "published": false,
    "published_at": "2017-01-21T18:21:07.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI just purchased two posters from \u003ca href=\"http://joeyroth.com/posters/\"\u003eJoeyRoth.com\u003c/a\u003e, “Charlatan, Martyr, Hustler”, and “Grind/Dream”.\u003c/p\u003e\n\n\u003cp\u003eThose posters reflect the ways I want to live by.\u003c/p\u003e\n\n\u003cp\u003eI found out Joey Roth from John Sonmez’s video on Youtube,  “\u003ca href=\"https://youtu.be/a4MemzkIxEA?t=14s\"\u003eWhat Are These Pictures On My Wall?\u003c/a\u003e” You can watch John Sonmez’s reason on why he’s got “Charlatan, Martyr, Hustler” poster.\u003c/p\u003e\n\n\u003cp\u003eYou can buy posters with quality frames from \u003ca href=\"http://joeyroth.com\"\u003eJoeyRoth.com\u003c/a\u003e but it was over my budget so I just purchased posters and ordered frames elsewhere.\u003c/p\u003e\n\n\u003cp\u003eHere are the posters framed and rested on a shelf.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/3-small.jpg?fit=1613%2C1210\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--b0oyP4fi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/3-small.jpg%3Ffit%3D585%252C439%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/2-small.jpg?fit=1613%2C1210\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--X4X4C1zp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/2-small.jpg%3Ffit%3D585%252C439%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/6-small.jpg?fit=1613%2C1210\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ci9hIiVz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/6-small.jpg%3Ffit%3D585%252C439%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/5-small.jpg?fit=1613%2C1210\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--W-e139ik--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/5-small.jpg%3Ffit%3D585%252C439%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/4-small.jpg?fit=1613%2C1210\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--lTPyKcV7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/4-small.jpg%3Ffit%3D585%252C439%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/1-small.jpg?fit=1613%2C1210\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--xBnKSmWd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/1-small.jpg%3Ffit%3D585%252C439%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eCharlatan, Martyr, Hustler\u003c/strong\u003e (First picture on the top left)\u003c/p\u003e\n\n\u003cp\u003eI am guilty of being a charlatan, all talk and no action/work. I will move toward becoming a martyr by becoming humble. Eventual goal is to learn to promote myself and become a hustler.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eGrind vs. Dream\u003c/strong\u003e (Second picture on the top middle)\u003c/p\u003e\n\n\u003cp\u003eWhen you grind away, you can reach your goal much easily in the end. Dreamers could probably reach their goal but it’d be much tougher\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eI am now constantly reminded of the way I should live by.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/01/21/inspirational-posters/\"\u003eInspirational Posters\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Inspirational Posters\npublished: false\ntags: Blog Entry\ncanonical_url: https://www.slightedgecoder.com/2017/01/21/inspirational-posters/\n---\n\nI just purchased two posters from [JoeyRoth.com](http://joeyroth.com/posters/), “Charlatan, Martyr, Hustler”, and “Grind/Dream”.\n\nThose posters reflect the ways I want to live by.\n\nI found out Joey Roth from John Sonmez’s video on Youtube,  “[What Are These Pictures On My Wall?](https://youtu.be/a4MemzkIxEA?t=14s)” You can watch John Sonmez’s reason on why he’s got “Charlatan, Martyr, Hustler” poster.\n\nYou can buy posters with quality frames from [JoeyRoth.com](http://joeyroth.com) but it was over my budget so I just purchased posters and ordered frames elsewhere.\n\nHere are the posters framed and rested on a shelf.\n\n[![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/3-small.jpg?fit=585%2C439\u0026ssl=1)](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/3-small.jpg?fit=1613%2C1210\u0026ssl=1)[![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/2-small.jpg?fit=585%2C439\u0026ssl=1)](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/2-small.jpg?fit=1613%2C1210\u0026ssl=1)[![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/6-small.jpg?fit=585%2C439\u0026ssl=1)](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/6-small.jpg?fit=1613%2C1210\u0026ssl=1)[![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/5-small.jpg?fit=585%2C439\u0026ssl=1)](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/5-small.jpg?fit=1613%2C1210\u0026ssl=1)[![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/4-small.jpg?fit=585%2C439\u0026ssl=1)](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/4-small.jpg?fit=1613%2C1210\u0026ssl=1)[![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/1-small.jpg?fit=585%2C439\u0026ssl=1)](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/1-small.jpg?fit=1613%2C1210\u0026ssl=1)\n\n**Charlatan, Martyr, Hustler** (First picture on the top left)\n\nI am guilty of being a charlatan, all talk and no action/work. I will move toward becoming a martyr by becoming humble. Eventual goal is to learn to promote myself and become a hustler.\n\n**Grind vs. Dream** (Second picture on the top middle)\n\nWhen you grind away, you can reach your goal much easily in the end. Dreamers could probably reach their goal but it’d be much tougher\n\n### Conclusion\n\nI am now constantly reminded of the way I should live by.\n\nThe post [Inspirational Posters](https://www.slightedgecoder.com/2017/01/21/inspirational-posters/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/01/21/inspirational-posters/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/01/21/inspirational-posters/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry",
    "path": "/dance2die/inspirational-posters-37fn-temp-slug-2428979",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-01-21T18:21:07.000Z"
  },
  {
    "title": "Reading List for 2017",
    "slug": "reading-list-for-2017-3o7k-temp-slug-9141578",
    "created_at": "2018-07-07T01:41:30.989Z",
    "main_image": null,
    "description": "\n\n*Feature Image Credit – Image by Sam Greenhalgh*\n\nSmartCuts was the book that g...",
    "published": false,
    "published_at": "2017-01-25T00:38:20.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e*Feature Image Credit – Image by \u003ca href=\"https://www.flickr.com/photos/zapthedingbat/\"\u003eSam Greenhalgh\u003c/a\u003e*\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.amazon.com/Smartcuts-Breakthrough-Power-Lateral-Thinking/dp/0062560751/ref=sr_1_1?ie=UTF8\u0026amp;qid=1485056991\u0026amp;sr=8-1\u0026amp;keywords=smartcut\"\u003eSmartCuts\u003c/a\u003e was the book that got me interested in reading back in 2015. I never read a single self-development book. Then I came to read \u003ca href=\"https://www.amazon.com/Slight-Edge-Turning-Disciplines-Happiness/dp/1626340463/ref=sr_1_1?ie=UTF8\u0026amp;qid=1485057083\u0026amp;sr=8-1\u0026amp;keywords=the+slight+edge\"\u003ethe Slight Edge\u003c/a\u003e not long after and decided to make a reading a habit to replace my existing habit (reading manga) to \u003cstrong\u003eapply\u003c/strong\u003e what I learned from Charles Duhigg’s \u003ca href=\"https://www.amazon.com/Power-Habit-What-Life-Business/dp/081298160X/ref=sr_1_1?ie=UTF8\u0026amp;qid=1485057128\u0026amp;sr=8-1\u0026amp;keywords=the+power+of+habit\"\u003eThe Power of Habit\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eAfter a year of reading only 10 pages a day every day for a year, reading became sort of a new habit.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s---gxM5zPc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/tracking-link-300x143.jpg%3Fresize%3D300%252C143%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s---gxM5zPc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/tracking-link-300x143.jpg%3Fresize%3D300%252C143%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003eI read \u003cstrong\u003e90+ books\u003c/strong\u003e last year alone (Click “Tracking” menu, which takes you to Google Sheet. Then click on “Books I read in 2016” worksheet.)\u003c/p\u003e\n\n\u003cp\u003eI decided to post a blog to set my goal in stone by \u003cstrong\u003emaking it public\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eHere are the \u003cstrong\u003e40 books\u003c/strong\u003e I will read this year.\u003c/p\u003e\n\n\u003cp\u003eBooks are listed in no particular order. I usually read whatever I feel like reading at the moment.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eFiction\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Stories-of-Your-LIfe.png?fit=324%2C500\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--7W-iwJgp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Stories-of-Your-LIfe.png%3Ffit%3D324%252C500%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/SevenEves.png?fit=257%2C386\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--DOQcYZtJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/SevenEves.png%3Ffit%3D257%252C386%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.amazon.com/Stories-Your-Life-Others-Chiang/dp/1101972122/ref=sr_1_1?s=books\u0026amp;ie=UTF8\u0026amp;qid=1484875560\u0026amp;sr=1-1\u0026amp;keywords=Stories+of+Your+LIfe\"\u003eStories of Your LIfe\u003c/a\u003e by Ted Chang – The movie, \u003ca href=\"http://www.imdb.com/title/tt2543164/?ref_=fn_al_tt_1\"\u003eArrival\u003c/a\u003e, is based on one of the stories in this book. I haven’t watched the movie but I’d like to read the book first.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.amazon.com/Seveneves-Neal-Stephenson/dp/0062334514/ref=sr_1_1?s=books\u0026amp;ie=UTF8\u0026amp;qid=1484875566\u0026amp;sr=1-1\u0026amp;keywords=SevenEves\"\u003eSeveneves\u003c/a\u003e by Neal Stephenson – Bill Gates wrote a \u003ca href=\"https://www.gatesnotes.com/Books/Seveneves\"\u003ereview\u003c/a\u003e so I was interested.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cstrong\u003eProgramming\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eThere are only 4 books for programming because I started learning most of new materials from online contents (PluralSight, Udemy, blogs, magazines, or articles).\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Cracking-the-Coding-Interview-6th-Edition.jpg?fit=350%2C499\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s---WCvJ3ik--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Cracking-the-Coding-Interview-6th-Edition.jpg%3Ffit%3D350%252C499%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Extreme-Programming-Explained.jpg?fit=260%2C326\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--rBkgs0VJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Extreme-Programming-Explained.jpg%3Ffit%3D260%252C326%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Head-First-Design-Patterns.jpg?fit=260%2C301\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jB4LhL1P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Head-First-Design-Patterns.jpg%3Ffit%3D260%252C301%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/kanban-in-action.jpg?fit=399%2C499\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TebbYtbU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/kanban-in-action.jpg%3Ffit%3D399%252C499%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.amazon.com/Cracking-Coding-Interview-Programming-Questions/dp/0984782850/ref=sr_1_1?ie=UTF8\u0026amp;qid=1484876972\u0026amp;sr=8-1\u0026amp;keywords=cracking+the+coding+interview\"\u003eCracking the Coding Interview\u003c/a\u003e (6th Edition) by Gayle Laakmann McDowell – To polish algorithms and data structure skills\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.amazon.com/Extreme-Programming-Explained-Embrace-Change/dp/0321278658/ref=sr_1_1?s=books\u0026amp;ie=UTF8\u0026amp;qid=1484875523\u0026amp;sr=1-1\u0026amp;keywords=Extreme+Programming+Explained\"\u003eExtreme Programming Explained\u003c/a\u003e by Kent Beck and Cynthia Andres\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.amazon.com/Kanban-Action-Marcus-Hammarberg/dp/1617291056/ref=sr_1_5?s=books\u0026amp;ie=UTF8\u0026amp;qid=1484958716\u0026amp;sr=1-5\u0026amp;keywords=kanban\"\u003eKanban in Action\u003c/a\u003e by Marcus Hammarberg and Joakim Sunden – Interested after using Trello.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.amazon.com/Head-First-Design-Patterns-Brain-Friendly/dp/0596007124/ref=sr_1_1?s=books\u0026amp;ie=UTF8\u0026amp;qid=1484875532\u0026amp;sr=1-1\u0026amp;keywords=Head+First+Design+Patterns\"\u003eHead First Design Patterns\u003c/a\u003e by Eric Freeman, Bert Bates, Kathy Sierra, Elisabeth Robson – read the beginning a few times but couldn’t finish it. This time, I am reading to the end.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cstrong\u003eNon-Fiction\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/better-and-faster.jpg?fit=399%2C600\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--5-9357Bu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/better-and-faster.jpg%3Ffit%3D399%252C600%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/bold.jpg?fit=462%2C697\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--SX86WACL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/bold.jpg%3Ffit%3D462%252C697%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Disrupt-Yourself.jpg?fit=512%2C819\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ZfL2nvm3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Disrupt-Yourself.jpg%3Ffit%3D512%252C819%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/energy-myths-and-realities.jpg?fit=330%2C499\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--qAAadqDe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/energy-myths-and-realities.jpg%3Ffit%3D330%252C499%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/how-not-to-be-wrong.jpg?fit=567%2C845\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--KFlmwM5O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/how-not-to-be-wrong.jpg%3Ffit%3D567%252C845%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/how-the-world-sees-you.png?fit=260%2C337\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--z_5KiEUl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/how-the-world-sees-you.png%3Ffit%3D260%252C337%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/remote.png?fit=246%2C346\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--DC03OPm1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/remote.png%3Ffit%3D246%252C346%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/rework.jpg?fit=530%2C805\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--sO8_oIZE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/rework.jpg%3Ffit%3D530%252C805%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/smarter-faster-better.jpg?fit=293%2C445\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--AxadpZh7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/smarter-faster-better.jpg%3Ffit%3D293%252C445%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/sorted.jpg?fit=324%2C500\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--9s-YQJgA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/sorted.jpg%3Ffit%3D324%252C500%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-energy-bus.jpg?fit=224%2C346\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Yb0A-UnN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-energy-bus.jpg%3Ffit%3D224%252C346%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-innovators-dilemma.jpg?fit=333%2C499\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--K08mgvxa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-innovators-dilemma.jpg%3Ffit%3D333%252C499%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-obstacle-is-the-way.jpg?fit=533%2C705\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--kdbxToHD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-obstacle-is-the-way.jpg%3Ffit%3D533%252C705%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-slight-edge.jpg?fit=334%2C500\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--fHXVcvS9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-slight-edge.jpg%3Ffit%3D334%252C500%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-ten-day-MBA.jpg?fit=231%2C346\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--FE-WeF5g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-ten-day-MBA.jpg%3Ffit%3D231%252C346%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-vital-question.jpg?fit=347%2C499\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Ij2MmtqP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-vital-question.jpg%3Ffit%3D347%252C499%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/thinking-fast-and-slow.jpg?fit=668%2C1000\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--PR4J3Gvy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/thinking-fast-and-slow.jpg%3Ffit%3D585%252C876%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/zero-to-one.jpg?fit=333%2C499\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--q7NZGWHT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/zero-to-one.jpg%3Ffit%3D333%252C499%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.amazon.com/Slight-Edge-Turning-Disciplines-Happiness/dp/1626340463/ref=sr_1_1?ie=UTF8\u0026amp;qid=1484875244\u0026amp;sr=8-1\u0026amp;keywords=the+slight+edge\"\u003eThe Slight Edge\u003c/a\u003e by Jeff Olson – This is the book where I got the blog name from. Reading for the second time.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.amazon.com/Energy-Bus-Rules-Fuel-Positive/dp/0470100281/ref=sr_1_1?s=books\u0026amp;ie=UTF8\u0026amp;qid=1484875270\u0026amp;sr=1-1\u0026amp;keywords=the+energy+bus\"\u003eThe Energy Bus\u003c/a\u003e by Jon Gordon – Purchased a book after watching a YouTube \u003ca href=\"https://youtu.be/4T0J_oyRI6k\"\u003eReview\u003c/a\u003e by John Sonmez.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.amazon.com/Obstacle-Way-Timeless-Turning-Triumph/dp/1591846358/ref=sr_1_1?s=books\u0026amp;ie=UTF8\u0026amp;qid=1484875298\u0026amp;sr=1-1\u0026amp;keywords=the+obstacle+is+the+way\"\u003eThe Obstacle is the Way\u003c/a\u003e by Ryan Holiday – I don’t know who I heard about this book from…\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.amazon.com/Sorted-Freedom-Structure-Gillian-Perkins/dp/1532976445/ref=sr_1_1?s=books\u0026amp;ie=UTF8\u0026amp;qid=1484875306\u0026amp;sr=1-1\u0026amp;keywords=sorted\"\u003eSorted\u003c/a\u003e by Gillian Perkins – Another book on productivity\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.amazon.com/Disrupt-Yourself-Putting-Disruptive-Innovation/dp/1629560529/ref=sr_1_1?s=books\u0026amp;ie=UTF8\u0026amp;qid=1484875323\u0026amp;sr=1-1\u0026amp;keywords=disrupt+yourself\"\u003eDisrupt Yourself\u003c/a\u003e by Whitney L. Johnson – Planning for the future\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.amazon.com/Innovator-s-Dilemma-Technologies-Management-Innovation/dp/1633691780/ref=sr_1_1?s=books\u0026amp;ie=UTF8\u0026amp;qid=1484875334\u0026amp;sr=1-1\u0026amp;keywords=the+innovator%27s+dilemma\"\u003eThe Innovator’s Dilemma\u003c/a\u003e by Clayton M. Christensen – To learn what I can do to improve the company I work for.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.amazon.com/Energy-Myths-Realities-Bringing-Science/dp/0844743283/ref=sr_1_1?s=books\u0026amp;ie=UTF8\u0026amp;qid=1484875346\u0026amp;sr=1-1\u0026amp;keywords=energy+myths+and+realities\"\u003eEnergy – Myths and Realities\u003c/a\u003e by Vaclav Smil – Something I’ve never read about.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.amazon.com/Vital-Question-Evolution-Origins-Complex/dp/0393352978/ref=sr_1_1?s=books\u0026amp;ie=UTF8\u0026amp;qid=1484875356\u0026amp;sr=1-1\u0026amp;keywords=the+vital+question\"\u003eThe Vital Question\u003c/a\u003e by Nick Lane – Evolution theory explained in simple terms.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.amazon.com/Ten-Day-MBA-4th-Step-Step/dp/0062199579/ref=sr_1_1?s=books\u0026amp;ie=UTF8\u0026amp;qid=1484875369\u0026amp;sr=1-1\u0026amp;keywords=the+ten+day+mba\"\u003eThe Ten Day MBA\u003c/a\u003e by Steven A. Silbiger – To reach a bigger goal in life.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.amazon.com/Rework-Jason-Fried/dp/0307463745/ref=sr_1_1?s=books\u0026amp;ie=UTF8\u0026amp;qid=1484875377\u0026amp;sr=1-1\u0026amp;keywords=rework\"\u003eRework\u003c/a\u003eand \u003ca href=\"https://www.amazon.com/Remote-Office-Required-Jason-Fried/dp/0804137501/ref=asap_bc?ie=UTF8\"\u003eRemote\u003c/a\u003e by DHH (David Heinemeier Hansson, the creator of Ruby on Rails) – To improve working condition.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.amazon.com/How-Not-Be-Wrong-Mathematical/dp/0143127535/ref=sr_1_1?s=books\u0026amp;ie=UTF8\u0026amp;qid=1484875422\u0026amp;sr=1-1\u0026amp;keywords=how+not+to+be+wrong\"\u003eHow Not To Be Wrong\u003c/a\u003e by Jordan Ellenberg – My math skill is subpar as a developer\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.amazon.com/How-World-Sees-You-Fascination/dp/0062230697/ref=sr_1_1?s=books\u0026amp;ie=UTF8\u0026amp;qid=1484875431\u0026amp;sr=1-1\u0026amp;keywords=How+the+World+Sees+You\"\u003eHow the World Sees You\u003c/a\u003e by Sally Hogshead – To improve my self worth.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.amazon.com/Zero-One-Notes-Startups-Future/dp/0804139296/ref=sr_1_1?s=books\u0026amp;ie=UTF8\u0026amp;qid=1484875442\u0026amp;sr=1-1\u0026amp;keywords=zero+to+one\"\u003eZero to One\u003c/a\u003e by Peter Thiel – I’ve seen many developers reading this book.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.amazon.com/Smarter-Faster-Better-Productive-Business/dp/081299339X/ref=sr_1_1?s=books\u0026amp;ie=UTF8\u0026amp;qid=1484875450\u0026amp;sr=1-1\u0026amp;keywords=Smarter+Faster+Better\"\u003eSmarter Faster Better\u003c/a\u003e by Charles Duhigg (the author of the Power of Habit) – I liked his previous work, The Power of Habit.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.amazon.com/Better-Faster-Proven-Unstoppable-Ideas/dp/0385346549/ref=sr_1_1?s=books\u0026amp;ie=UTF8\u0026amp;qid=1484875472\u0026amp;sr=1-1\u0026amp;keywords=better+and+faster\"\u003eBetter and Faster\u003c/a\u003e by Jeremy Gutsche – I don’t believe in taking a shortcut in life but still interesting to check it out.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.amazon.com/Thinking-Fast-Slow-Daniel-Kahneman/dp/0374533555/ref=sr_1_1?s=books\u0026amp;ie=UTF8\u0026amp;qid=1484875481\u0026amp;sr=1-1\u0026amp;keywords=Thinking%2C+Fast+and+Slow\"\u003eThinking, Fast and Slow\u003c/a\u003e by Daniel Kahneman – Heard many good things about this book.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.amazon.com/Bold-Create-Wealth-Impact-World/dp/1476709580/ref=sr_1_1?s=books\u0026amp;ie=UTF8\u0026amp;qid=1484875502\u0026amp;sr=1-1\u0026amp;keywords=bold\"\u003eBold\u003c/a\u003e by Peter H. Diamandis and Steven Kotler – Researched and found it after reading “10x Thinking” chapter in SmartCuts\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cstrong\u003eKorean Books\u003c/strong\u003e (Both fiction and non-fictions)\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/11-steps.jpg?fit=200%2C293\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--G9kl2xJT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/11-steps.jpg%3Ffit%3D200%252C293%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/fluent.jpg?fit=200%2C284\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--qZaTNylq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/fluent.jpg%3Ffit%3D200%252C284%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Only-I-know.jpg?fit=200%2C291\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--VDCYJktB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Only-I-know.jpg%3Ffit%3D200%252C291%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/slime.jpg?fit=200%2C343\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--n-gVCsg7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/slime.jpg%3Ffit%3D200%252C343%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/snafu-1.jpg?fit=200%2C296\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--HbBB-bHr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/snafu-1.jpg%3Ffit%3D200%252C296%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/snafu-2.jpg?fit=200%2C296\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GCd_K2rN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/snafu-2.jpg%3Ffit%3D200%252C296%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/snafu-3.jpg?fit=200%2C297\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--nX4d749D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/snafu-3.jpg%3Ffit%3D200%252C297%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/snafu-4.jpg?fit=200%2C298\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--rXHU8k5M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/snafu-4.jpg%3Ffit%3D200%252C298%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/snafu-5.jpg?fit=200%2C290\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--k3wEwiha--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/snafu-5.jpg%3Ffit%3D200%252C290%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-art-of-war.jpg?fit=200%2C304\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--xlFx7ai5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-art-of-war.jpg%3Ffit%3D200%252C304%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-1.jpg?fit=200%2C300\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--oMYpvPty--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-1.jpg%3Ffit%3D200%252C300%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-2.jpg?fit=200%2C295\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ZPLXmRws--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-2.jpg%3Ffit%3D200%252C295%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-3.jpg?fit=200%2C295\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--9NSknWrM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-3.jpg%3Ffit%3D200%252C295%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-4.jpg?fit=200%2C295\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--2eXRAk20--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-4.jpg%3Ffit%3D200%252C295%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-5.jpg?fit=200%2C295\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--i9giGSVY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-5.jpg%3Ffit%3D200%252C295%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003ca href=\"https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-6.jpg?fit=200%2C295\u0026amp;ssl=1\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--G7YZN2XI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-6.jpg%3Ffit%3D200%252C295%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ca href=\"http://www.bandibookus.com/front/product/detailProduct.do?prodId=3996433\"\u003e플루언트\u003c/a\u003e (Fluent) by 조승연 (\u003ca href=\"https://twitter.com/totalintelli?lang=ko\"\u003eSeungyeon Cho\u003c/a\u003e) – Liberal Arts book on English.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"http://www.bandibookus.com/front/product/detailProduct.do?prodId=3991270\"\u003e손자병법\u003c/a\u003e (The Art of War) by 손자 (Sun Tzu) – Korean Translation. Wanted to read after watching a short video on BusinessInsider, ‘\u003ca href=\"http://www.businessinsider.com/art-of-war-wall-street-psychology-2015-10\"\u003eThe Art Of War’ holds the keys to success on Wall Street\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"http://www.bandibookus.com/front/product/detailProduct.do?prodId=4014511\"\u003e열한 계단\u003c/a\u003e(11 Steps (or Stairs?)) by 채사장 – Another book on Liberal Arts.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"http://www.bandibookus.com/front/product/detailProduct.do?prodId=3528085\"\u003eMy Romantic Comedy SNAFU\u003c/a\u003e (Japanese Light Novel) volume 1~5 – A comedy about a loner Japanese high school student having trouble with romantic relationship. There is an \u003ca href=\"https://myanimelist.net/anime/14813/Yahari_Ore_no_Seishun_Love_Comedy_wa_Machigatteiru\"\u003eanime\u003c/a\u003e based on this novel.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"http://www.bandibookus.com/front/product/detailProduct.do?prodId=3824934\"\u003e유녀전기\u003c/a\u003e(Youjo Senki, Japanese Light Novel) volume 1~6 – A story about an elite salaryman reincarnated into a blonde girl fighting war in a world with magic. Found it after watching an \u003ca href=\"https://myanimelist.net/anime/32615/Youjo_Senki\"\u003eanime\u003c/a\u003ethis season.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"http://www.bandibookus.com/front/product/detailProduct.do?prodId=4012005\"\u003e이 세계가 게임이란 사실은 나만이 알고 있다\u003c/a\u003e (literal translation – \u003cem\u003eOnly\u003c/em\u003e I \u003cem\u003eKnow\u003c/em\u003e That This \u003cem\u003eWorld Is a Game\u003c/em\u003e\u003cem\u003e,\u003c/em\u003e Japanese Light Novel) volume 6 – A comedy where a main character is stuck in a game and he is the only one who knows that others are just a part of an RPG game.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"http://www.bandibookus.com/front/product/detailProduct.do?prodId=4020985\"\u003e전생했더니 슬라임이었던 건에 대하여\u003c/a\u003e (Regarding Reincarnated to Slime, Japanese Light Novel) volume 8~8.5 – Another novel where a main character dies in real world and reincarnated in another world. Not as a human but as a slime!\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eI WILL read all 40 books by the end of 2017. It’s much less than the number of books I read last year. The reason is because I randomly pick up books (either in English or in Korean) on a whim whenever I think a certain knowledge is required or just want to have fun reading. And also, I read many Korean books online on a site called Munpia where authors write a chapter or two every day.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/01/24/reading-list-2017/\"\u003eReading List for 2017\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Reading List for 2017\npublished: false\ntags: Blog Entry,books,fiction,Japanese Light Novel\ncanonical_url: https://www.slightedgecoder.com/2017/01/24/reading-list-2017/\n---\n\n\\*Feature Image Credit – Image by [Sam Greenhalgh](https://www.flickr.com/photos/zapthedingbat/)\\*\n\n[SmartCuts](https://www.amazon.com/Smartcuts-Breakthrough-Power-Lateral-Thinking/dp/0062560751/ref=sr_1_1?ie=UTF8\u0026qid=1485056991\u0026sr=8-1\u0026keywords=smartcut) was the book that got me interested in reading back in 2015. I never read a single self-development book. Then I came to read [the Slight Edge](https://www.amazon.com/Slight-Edge-Turning-Disciplines-Happiness/dp/1626340463/ref=sr_1_1?ie=UTF8\u0026qid=1485057083\u0026sr=8-1\u0026keywords=the+slight+edge) not long after and decided to make a reading a habit to replace my existing habit (reading manga) to **apply** what I learned from Charles Duhigg’s [The Power of Habit](https://www.amazon.com/Power-Habit-What-Life-Business/dp/081298160X/ref=sr_1_1?ie=UTF8\u0026qid=1485057128\u0026sr=8-1\u0026keywords=the+power+of+habit).\n\nAfter a year of reading only 10 pages a day every day for a year, reading became sort of a new habit.\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/tracking-link-300x143.jpg?resize=300%2C143\u0026ssl=1)I read **90+ books** last year alone (Click “Tracking” menu, which takes you to Google Sheet. Then click on “Books I read in 2016” worksheet.)\n\nI decided to post a blog to set my goal in stone by **making it public**.\n\nHere are the **40 books** I will read this year.\n\nBooks are listed in no particular order. I usually read whatever I feel like reading at the moment.\n\n**Fiction**\n\n[![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Stories-of-Your-LIfe.png?fit=324%2C500\u0026ssl=1)](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Stories-of-Your-LIfe.png?fit=324%2C500\u0026ssl=1)[![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/SevenEves.png?fit=257%2C386\u0026ssl=1)](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/SevenEves.png?fit=257%2C386\u0026ssl=1)\n\n1. [Stories of Your LIfe](https://www.amazon.com/Stories-Your-Life-Others-Chiang/dp/1101972122/ref=sr_1_1?s=books\u0026ie=UTF8\u0026qid=1484875560\u0026sr=1-1\u0026keywords=Stories+of+Your+LIfe) by Ted Chang – The movie, [Arrival](http://www.imdb.com/title/tt2543164/?ref_=fn_al_tt_1), is based on one of the stories in this book. I haven’t watched the movie but I’d like to read the book first.\n2. [Seveneves](https://www.amazon.com/Seveneves-Neal-Stephenson/dp/0062334514/ref=sr_1_1?s=books\u0026ie=UTF8\u0026qid=1484875566\u0026sr=1-1\u0026keywords=SevenEves) by Neal Stephenson – Bill Gates wrote a [review](https://www.gatesnotes.com/Books/Seveneves) so I was interested.\n\n**Programming**\n\nThere are only 4 books for programming because I started learning most of new materials from online contents (PluralSight, Udemy, blogs, magazines, or articles).\n\n[![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Cracking-the-Coding-Interview-6th-Edition.jpg?fit=350%2C499\u0026ssl=1)](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Cracking-the-Coding-Interview-6th-Edition.jpg?fit=350%2C499\u0026ssl=1)[![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Extreme-Programming-Explained.jpg?fit=260%2C326\u0026ssl=1)](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Extreme-Programming-Explained.jpg?fit=260%2C326\u0026ssl=1)[![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Head-First-Design-Patterns.jpg?fit=260%2C301\u0026ssl=1)](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Head-First-Design-Patterns.jpg?fit=260%2C301\u0026ssl=1)[![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/kanban-in-action.jpg?fit=399%2C499\u0026ssl=1)](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/kanban-in-action.jpg?fit=399%2C499\u0026ssl=1)\n\n1. [Cracking the Coding Interview](https://www.amazon.com/Cracking-Coding-Interview-Programming-Questions/dp/0984782850/ref=sr_1_1?ie=UTF8\u0026qid=1484876972\u0026sr=8-1\u0026keywords=cracking+the+coding+interview) (6th Edition) by Gayle Laakmann McDowell – To polish algorithms and data structure skills\n2. [Extreme Programming Explained](https://www.amazon.com/Extreme-Programming-Explained-Embrace-Change/dp/0321278658/ref=sr_1_1?s=books\u0026ie=UTF8\u0026qid=1484875523\u0026sr=1-1\u0026keywords=Extreme+Programming+Explained) by Kent Beck and Cynthia Andres\n3. [Kanban in Action](https://www.amazon.com/Kanban-Action-Marcus-Hammarberg/dp/1617291056/ref=sr_1_5?s=books\u0026ie=UTF8\u0026qid=1484958716\u0026sr=1-5\u0026keywords=kanban) by Marcus Hammarberg and Joakim Sunden – Interested after using Trello.\n4. [Head First Design Patterns](https://www.amazon.com/Head-First-Design-Patterns-Brain-Friendly/dp/0596007124/ref=sr_1_1?s=books\u0026ie=UTF8\u0026qid=1484875532\u0026sr=1-1\u0026keywords=Head+First+Design+Patterns) by Eric Freeman, Bert Bates, Kathy Sierra, Elisabeth Robson – read the beginning a few times but couldn’t finish it. This time, I am reading to the end.\n\n**Non-Fiction**\n\n[![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/better-and-faster.jpg?fit=399%2C600\u0026ssl=1)](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/better-and-faster.jpg?fit=399%2C600\u0026ssl=1)[![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/bold.jpg?fit=462%2C697\u0026ssl=1)](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/bold.jpg?fit=462%2C697\u0026ssl=1)[![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Disrupt-Yourself.jpg?fit=512%2C819\u0026ssl=1)](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Disrupt-Yourself.jpg?fit=512%2C819\u0026ssl=1)[![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/energy-myths-and-realities.jpg?fit=330%2C499\u0026ssl=1)](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/energy-myths-and-realities.jpg?fit=330%2C499\u0026ssl=1)[![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/how-not-to-be-wrong.jpg?fit=567%2C845\u0026ssl=1)](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/how-not-to-be-wrong.jpg?fit=567%2C845\u0026ssl=1)[![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/how-the-world-sees-you.png?fit=260%2C337\u0026ssl=1)](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/how-the-world-sees-you.png?fit=260%2C337\u0026ssl=1)[![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/remote.png?fit=246%2C346\u0026ssl=1)](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/remote.png?fit=246%2C346\u0026ssl=1)[![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/rework.jpg?fit=530%2C805\u0026ssl=1)](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/rework.jpg?fit=530%2C805\u0026ssl=1)[![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/smarter-faster-better.jpg?fit=293%2C445\u0026ssl=1)](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/smarter-faster-better.jpg?fit=293%2C445\u0026ssl=1)[![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/sorted.jpg?fit=324%2C500\u0026ssl=1)](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/sorted.jpg?fit=324%2C500\u0026ssl=1)[![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-energy-bus.jpg?fit=224%2C346\u0026ssl=1)](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-energy-bus.jpg?fit=224%2C346\u0026ssl=1)[![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-innovators-dilemma.jpg?fit=333%2C499\u0026ssl=1)](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-innovators-dilemma.jpg?fit=333%2C499\u0026ssl=1)[![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-obstacle-is-the-way.jpg?fit=533%2C705\u0026ssl=1)](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-obstacle-is-the-way.jpg?fit=533%2C705\u0026ssl=1)[![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-slight-edge.jpg?fit=334%2C500\u0026ssl=1)](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-slight-edge.jpg?fit=334%2C500\u0026ssl=1)[![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-ten-day-MBA.jpg?fit=231%2C346\u0026ssl=1)](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-ten-day-MBA.jpg?fit=231%2C346\u0026ssl=1)[![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-vital-question.jpg?fit=347%2C499\u0026ssl=1)](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-vital-question.jpg?fit=347%2C499\u0026ssl=1)[![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/thinking-fast-and-slow.jpg?fit=585%2C876\u0026ssl=1)](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/thinking-fast-and-slow.jpg?fit=668%2C1000\u0026ssl=1)[![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/zero-to-one.jpg?fit=333%2C499\u0026ssl=1)](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/zero-to-one.jpg?fit=333%2C499\u0026ssl=1)\n\n1. [The Slight Edge](https://www.amazon.com/Slight-Edge-Turning-Disciplines-Happiness/dp/1626340463/ref=sr_1_1?ie=UTF8\u0026qid=1484875244\u0026sr=8-1\u0026keywords=the+slight+edge) by Jeff Olson – This is the book where I got the blog name from. Reading for the second time.\n2. [The Energy Bus](https://www.amazon.com/Energy-Bus-Rules-Fuel-Positive/dp/0470100281/ref=sr_1_1?s=books\u0026ie=UTF8\u0026qid=1484875270\u0026sr=1-1\u0026keywords=the+energy+bus) by Jon Gordon – Purchased a book after watching a YouTube [Review](https://youtu.be/4T0J_oyRI6k) by John Sonmez.\n3. [The Obstacle is the Way](https://www.amazon.com/Obstacle-Way-Timeless-Turning-Triumph/dp/1591846358/ref=sr_1_1?s=books\u0026ie=UTF8\u0026qid=1484875298\u0026sr=1-1\u0026keywords=the+obstacle+is+the+way) by Ryan Holiday – I don’t know who I heard about this book from…\n4. [Sorted](https://www.amazon.com/Sorted-Freedom-Structure-Gillian-Perkins/dp/1532976445/ref=sr_1_1?s=books\u0026ie=UTF8\u0026qid=1484875306\u0026sr=1-1\u0026keywords=sorted) by Gillian Perkins – Another book on productivity\n5. [Disrupt Yourself](https://www.amazon.com/Disrupt-Yourself-Putting-Disruptive-Innovation/dp/1629560529/ref=sr_1_1?s=books\u0026ie=UTF8\u0026qid=1484875323\u0026sr=1-1\u0026keywords=disrupt+yourself) by Whitney L. Johnson – Planning for the future\n6. [The Innovator’s Dilemma](https://www.amazon.com/Innovator-s-Dilemma-Technologies-Management-Innovation/dp/1633691780/ref=sr_1_1?s=books\u0026ie=UTF8\u0026qid=1484875334\u0026sr=1-1\u0026keywords=the+innovator%27s+dilemma) by Clayton M. Christensen – To learn what I can do to improve the company I work for.\n7. [Energy – Myths and Realities](https://www.amazon.com/Energy-Myths-Realities-Bringing-Science/dp/0844743283/ref=sr_1_1?s=books\u0026ie=UTF8\u0026qid=1484875346\u0026sr=1-1\u0026keywords=energy+myths+and+realities) by Vaclav Smil – Something I’ve never read about.\n8. [The Vital Question](https://www.amazon.com/Vital-Question-Evolution-Origins-Complex/dp/0393352978/ref=sr_1_1?s=books\u0026ie=UTF8\u0026qid=1484875356\u0026sr=1-1\u0026keywords=the+vital+question) by Nick Lane – Evolution theory explained in simple terms.\n9. [The Ten Day MBA](https://www.amazon.com/Ten-Day-MBA-4th-Step-Step/dp/0062199579/ref=sr_1_1?s=books\u0026ie=UTF8\u0026qid=1484875369\u0026sr=1-1\u0026keywords=the+ten+day+mba) by Steven A. Silbiger – To reach a bigger goal in life.\n10. [Rework](https://www.amazon.com/Rework-Jason-Fried/dp/0307463745/ref=sr_1_1?s=books\u0026ie=UTF8\u0026qid=1484875377\u0026sr=1-1\u0026keywords=rework)and [Remote](https://www.amazon.com/Remote-Office-Required-Jason-Fried/dp/0804137501/ref=asap_bc?ie=UTF8) by DHH (David Heinemeier Hansson, the creator of Ruby on Rails) – To improve working condition.\n11. [How Not To Be Wrong](https://www.amazon.com/How-Not-Be-Wrong-Mathematical/dp/0143127535/ref=sr_1_1?s=books\u0026ie=UTF8\u0026qid=1484875422\u0026sr=1-1\u0026keywords=how+not+to+be+wrong) by Jordan Ellenberg – My math skill is subpar as a developer\n12. [How the World Sees You](https://www.amazon.com/How-World-Sees-You-Fascination/dp/0062230697/ref=sr_1_1?s=books\u0026ie=UTF8\u0026qid=1484875431\u0026sr=1-1\u0026keywords=How+the+World+Sees+You) by Sally Hogshead – To improve my self worth.\n13. [Zero to One](https://www.amazon.com/Zero-One-Notes-Startups-Future/dp/0804139296/ref=sr_1_1?s=books\u0026ie=UTF8\u0026qid=1484875442\u0026sr=1-1\u0026keywords=zero+to+one) by Peter Thiel – I’ve seen many developers reading this book.\n14. [Smarter Faster Better](https://www.amazon.com/Smarter-Faster-Better-Productive-Business/dp/081299339X/ref=sr_1_1?s=books\u0026ie=UTF8\u0026qid=1484875450\u0026sr=1-1\u0026keywords=Smarter+Faster+Better) by Charles Duhigg (the author of the Power of Habit) – I liked his previous work, The Power of Habit.\n15. [Better and Faster](https://www.amazon.com/Better-Faster-Proven-Unstoppable-Ideas/dp/0385346549/ref=sr_1_1?s=books\u0026ie=UTF8\u0026qid=1484875472\u0026sr=1-1\u0026keywords=better+and+faster) by Jeremy Gutsche – I don’t believe in taking a shortcut in life but still interesting to check it out.\n16. [Thinking, Fast and Slow](https://www.amazon.com/Thinking-Fast-Slow-Daniel-Kahneman/dp/0374533555/ref=sr_1_1?s=books\u0026ie=UTF8\u0026qid=1484875481\u0026sr=1-1\u0026keywords=Thinking%2C+Fast+and+Slow) by Daniel Kahneman – Heard many good things about this book.\n17. [Bold](https://www.amazon.com/Bold-Create-Wealth-Impact-World/dp/1476709580/ref=sr_1_1?s=books\u0026ie=UTF8\u0026qid=1484875502\u0026sr=1-1\u0026keywords=bold) by Peter H. Diamandis and Steven Kotler – Researched and found it after reading “10x Thinking” chapter in SmartCuts\n\n**Korean Books** (Both fiction and non-fictions)\n\n[![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/11-steps.jpg?fit=200%2C293\u0026ssl=1)](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/11-steps.jpg?fit=200%2C293\u0026ssl=1)[![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/fluent.jpg?fit=200%2C284\u0026ssl=1)](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/fluent.jpg?fit=200%2C284\u0026ssl=1)[![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Only-I-know.jpg?fit=200%2C291\u0026ssl=1)](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/Only-I-know.jpg?fit=200%2C291\u0026ssl=1)[![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/slime.jpg?fit=200%2C343\u0026ssl=1)](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/slime.jpg?fit=200%2C343\u0026ssl=1)[![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/snafu-1.jpg?fit=200%2C296\u0026ssl=1)](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/snafu-1.jpg?fit=200%2C296\u0026ssl=1)[![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/snafu-2.jpg?fit=200%2C296\u0026ssl=1)](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/snafu-2.jpg?fit=200%2C296\u0026ssl=1)[![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/snafu-3.jpg?fit=200%2C297\u0026ssl=1)](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/snafu-3.jpg?fit=200%2C297\u0026ssl=1)[![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/snafu-4.jpg?fit=200%2C298\u0026ssl=1)](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/snafu-4.jpg?fit=200%2C298\u0026ssl=1)[![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/snafu-5.jpg?fit=200%2C290\u0026ssl=1)](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/snafu-5.jpg?fit=200%2C290\u0026ssl=1)[![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-art-of-war.jpg?fit=200%2C304\u0026ssl=1)](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/the-art-of-war.jpg?fit=200%2C304\u0026ssl=1)[![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-1.jpg?fit=200%2C300\u0026ssl=1)](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-1.jpg?fit=200%2C300\u0026ssl=1)[![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-2.jpg?fit=200%2C295\u0026ssl=1)](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-2.jpg?fit=200%2C295\u0026ssl=1)[![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-3.jpg?fit=200%2C295\u0026ssl=1)](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-3.jpg?fit=200%2C295\u0026ssl=1)[![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-4.jpg?fit=200%2C295\u0026ssl=1)](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-4.jpg?fit=200%2C295\u0026ssl=1)[![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-5.jpg?fit=200%2C295\u0026ssl=1)](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-5.jpg?fit=200%2C295\u0026ssl=1)[![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-6.jpg?fit=200%2C295\u0026ssl=1)](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/youjo-senki-6.jpg?fit=200%2C295\u0026ssl=1)\n\n1. [플루언트](http://www.bandibookus.com/front/product/detailProduct.do?prodId=3996433) (Fluent) by 조승연 ([Seungyeon Cho](https://twitter.com/totalintelli?lang=ko)) – Liberal Arts book on English.\n2. [손자병법](http://www.bandibookus.com/front/product/detailProduct.do?prodId=3991270) (The Art of War) by 손자 (Sun Tzu) – Korean Translation. Wanted to read after watching a short video on BusinessInsider, ‘[The Art Of War’ holds the keys to success on Wall Street](http://www.businessinsider.com/art-of-war-wall-street-psychology-2015-10).\n3. [열한 계단](http://www.bandibookus.com/front/product/detailProduct.do?prodId=4014511)(11 Steps (or Stairs?)) by 채사장 – Another book on Liberal Arts.\n4. [My Romantic Comedy SNAFU](http://www.bandibookus.com/front/product/detailProduct.do?prodId=3528085) (Japanese Light Novel) volume 1~5 – A comedy about a loner Japanese high school student having trouble with romantic relationship. There is an [anime](https://myanimelist.net/anime/14813/Yahari_Ore_no_Seishun_Love_Comedy_wa_Machigatteiru) based on this novel.\n5. [유녀전기](http://www.bandibookus.com/front/product/detailProduct.do?prodId=3824934)(Youjo Senki, Japanese Light Novel) volume 1~6 – A story about an elite salaryman reincarnated into a blonde girl fighting war in a world with magic. Found it after watching an [anime](https://myanimelist.net/anime/32615/Youjo_Senki)this season.\n6. [이 세계가 게임이란 사실은 나만이 알고 있다](http://www.bandibookus.com/front/product/detailProduct.do?prodId=4012005) (literal translation – _Only_ I _Know_ That This _World Is a Game__,_ Japanese Light Novel) volume 6 – A comedy where a main character is stuck in a game and he is the only one who knows that others are just a part of an RPG game.\n7. [전생했더니 슬라임이었던 건에 대하여](http://www.bandibookus.com/front/product/detailProduct.do?prodId=4020985) (Regarding Reincarnated to Slime, Japanese Light Novel) volume 8~8.5 – Another novel where a main character dies in real world and reincarnated in another world. Not as a human but as a slime!\n\n \n\n### Conclusion\n\nI WILL read all 40 books by the end of 2017. It’s much less than the number of books I read last year. The reason is because I randomly pick up books (either in English or in Korean) on a whim whenever I think a certain knowledge is required or just want to have fun reading. And also, I read many Korean books online on a site called Munpia where authors write a chapter or two every day.\n\nThe post [Reading List for 2017](https://www.slightedgecoder.com/2017/01/24/reading-list-2017/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/01/24/reading-list-2017/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/01/24/reading-list-2017/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, books, fiction, japaneselightnovel",
    "path": "/dance2die/reading-list-for-2017-3o7k-temp-slug-9141578",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-01-25T00:38:20.000Z"
  },
  {
    "title": "Review of Extreme Programming Explained Second Edition",
    "slug": "review-of-extreme-programming-explained-second-edition-184f-temp-slug-6113300",
    "created_at": "2018-07-07T01:41:31.545Z",
    "main_image": null,
    "description": "\n\nI just finished reading Extreme Programming Explained Second Edition by Kent Be...",
    "published": false,
    "published_at": "2017-01-28T23:30:14.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI just finished reading Extreme Programming Explained Second Edition by Kent Beck. \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--J9y_0wKy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/feature-image-2017.01.23-282x300.jpg%3Fresize%3D282%252C300%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--J9y_0wKy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/feature-image-2017.01.23-282x300.jpg%3Fresize%3D282%252C300%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eI’d like to do a bit of review and what I learned.\u003c/p\u003e\n\n\u003cp\u003e“Extreme Programming Explained” consists of two sections.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eExploring XP\u003c/li\u003e\n\u003cli\u003ePhilophy of XP\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003csmall\u003e* Featured image by \u003ca href=\"https://www.flickr.com/photos/damienpollet/5048830734/in/photolist-8G9ztL-5HP2Lh-nZDNuv-7CyDbt-dYFeYi-okB3kk-dYFf3X-dYFeU2-dYFeHg-6vkpVp-mET1h8-nNH8Lb-bR3md4-4Wyyg-7UfM1w-yZ1hS-7Hxgmw-9S4fk3-7SxRJ1-7xuFqe-aRe2V2-7bfXSN-9S4fwL-9S1mk8-wJYJQ-3akWk1-dcy2Kp-djuyPj-pM7Uv1-4ejqfD-nZDX5o-fa5NyG-p7ueu-wJYJH-7LUYnb-oiUBc4-nQKH84-dgfsqd-nZF6pr-8KkdEL-wJYJT-p7uet-8YH4zm-8TYGza-wJYJU-wJYJX-6vkcr8-n9XZUA-oh6PTf-5U35Wi\"\u003e\u003cstrong\u003eDamien Pollet\u003c/strong\u003e\u003c/a\u003e *\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eExploring XP talks about “Values, Principles, and Practices.”\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eValues – This is your view of the world, a philosophy.\u003c/li\u003e\n\u003cli\u003ePractices – It’s the “things you actually do” daily.\u003c/li\u003e\n\u003cli\u003ePrinciples.\n\n\u003cul\u003e\n\u003cli\u003eThis is what \u003cstrong\u003econnects\u003c/strong\u003e XP values with practices, sort of like a bridge.\u003c/li\u003e\n\u003cli\u003eIt’s a “domain-specific guidelines for life.”\u003c/li\u003e\n\u003cli\u003eWithout principles, you wouldn’t know \u003cstrong\u003ehow to apply\u003c/strong\u003e your values to practices.\u003c/li\u003e\n\u003cli\u003eSuppose that a situation arises, which is not mentioned in the book. Understanding XP principles would empower you to apply the values into the unforeseen situations.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e“Practices” is probably what most of people will be interested in since it talks about what comprises XP, such as pair programming, weekly/quarterly cycles, CI (Continuous Integration), Test-First Programming (TDD), and etc. as well as how XP team should be organized and what each member of the XP team should do.\u003c/p\u003e\n\n\u003cp\u003eMany people are concerned that XP would not scale but Kent Beck explains how XP can scale out (in Chapter 15, “Scaling XP”). But he also mentions when XP should be adopted and when not (in Chapter 20, “Applying XP”).\u003c/p\u003e\n\n\u003cp\u003ePhilosophy of XP deals with how idea of XP development was conceived. Kent Beck makes connections between existing concepts from different industries with XP to help readers understand where XP is coming from.\u003c/p\u003e\n\n\u003cp\u003eThere was one part that many people have trouble digesting, \u003cstrong\u003ePair Programming\u003c/strong\u003e. I consider that it not easy to adopt this practice unless you get a backing from a executive sponsor. And also Ken Beck consider developers as “people” and many people have different values and principles in life. Unless someone in managerial position steps and implement this, no matter how much you try to change and improve yourself, this would would be a moot point.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003e“Extreme Programming Explained” deals with solid philosophies on how development should be done and Kent Beck backs up his ideas with real world experiences.\u003c/p\u003e\n\n\u003cp\u003eI found something very surprising about XP. It’s like Slight Edge principles translated into Software Development!\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/01/28/review-extreme-programming-explained-second-edition/\"\u003eReview of Extreme Programming Explained Second Edition\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Review of Extreme Programming Explained Second Edition\npublished: false\ntags: book review,book,review\ncanonical_url: https://www.slightedgecoder.com/2017/01/28/review-extreme-programming-explained-second-edition/\n---\n\nI just finished reading Extreme Programming Explained Second Edition by Kent Beck. ![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/01/feature-image-2017.01.23-282x300.jpg?resize=282%2C300\u0026ssl=1)\n\nI’d like to do a bit of review and what I learned.\n\n“Extreme Programming Explained” consists of two sections.\n\n1. Exploring XP\n2. Philophy of XP\n\n\u003csmall\u003e* Featured image by \u003ca href=\"https://www.flickr.com/photos/damienpollet/5048830734/in/photolist-8G9ztL-5HP2Lh-nZDNuv-7CyDbt-dYFeYi-okB3kk-dYFf3X-dYFeU2-dYFeHg-6vkpVp-mET1h8-nNH8Lb-bR3md4-4Wyyg-7UfM1w-yZ1hS-7Hxgmw-9S4fk3-7SxRJ1-7xuFqe-aRe2V2-7bfXSN-9S4fwL-9S1mk8-wJYJQ-3akWk1-dcy2Kp-djuyPj-pM7Uv1-4ejqfD-nZDX5o-fa5NyG-p7ueu-wJYJH-7LUYnb-oiUBc4-nQKH84-dgfsqd-nZF6pr-8KkdEL-wJYJT-p7uet-8YH4zm-8TYGza-wJYJU-wJYJX-6vkcr8-n9XZUA-oh6PTf-5U35Wi\"\u003e\u003cstrong\u003eDamien Pollet\u003c/strong\u003e\u003c/a\u003e *\u003c/small\u003e\n\n \n\nExploring XP talks about “Values, Principles, and Practices.”\n\n- Values – This is your view of the world, a philosophy.\n- Practices – It’s the “things you actually do” daily.\n- Principles.\n  - This is what **connects** XP values with practices, sort of like a bridge.\n  - It’s a “domain-specific guidelines for life.”\n  - Without principles, you wouldn’t know **how to apply** your values to practices.\n  - Suppose that a situation arises, which is not mentioned in the book. Understanding XP principles would empower you to apply the values into the unforeseen situations.\n\n“Practices” is probably what most of people will be interested in since it talks about what comprises XP, such as pair programming, weekly/quarterly cycles, CI (Continuous Integration), Test-First Programming (TDD), and etc. as well as how XP team should be organized and what each member of the XP team should do.\n\nMany people are concerned that XP would not scale but Kent Beck explains how XP can scale out (in Chapter 15, “Scaling XP”). But he also mentions when XP should be adopted and when not (in Chapter 20, “Applying XP”).\n\nPhilosophy of XP deals with how idea of XP development was conceived. Kent Beck makes connections between existing concepts from different industries with XP to help readers understand where XP is coming from.\n\nThere was one part that many people have trouble digesting, **Pair Programming**. I consider that it not easy to adopt this practice unless you get a backing from a executive sponsor. And also Ken Beck consider developers as “people” and many people have different values and principles in life. Unless someone in managerial position steps and implement this, no matter how much you try to change and improve yourself, this would would be a moot point.\n\n### Conclusion\n\n“Extreme Programming Explained” deals with solid philosophies on how development should be done and Kent Beck backs up his ideas with real world experiences.\n\nI found something very surprising about XP. It’s like Slight Edge principles translated into Software Development!\n\nThe post [Review of Extreme Programming Explained Second Edition](https://www.slightedgecoder.com/2017/01/28/review-extreme-programming-explained-second-edition/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/01/28/review-extreme-programming-explained-second-edition/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/01/28/review-extreme-programming-explained-second-edition/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "bookreview, book, review",
    "path": "/dance2die/review-of-extreme-programming-explained-second-edition-184f-temp-slug-6113300",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-01-28T23:30:14.000Z"
  },
  {
    "title": "Getting lazy with Resharper",
    "slug": "getting-lazy-with-resharper-3b0k-temp-slug-7851305",
    "created_at": "2018-07-07T01:41:31.914Z",
    "main_image": null,
    "description": "\n\n Featured Image by Martin Cron *\n\nI’ve been using Resharper (R#), a Visual Stud...",
    "published": false,
    "published_at": "2017-02-04T23:00:20.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003csmall\u003e Featured Image by \u003ca href=\"https://www.flickr.com/photos/martincron/4127880673/in/photolist-5Uz3so-2s5eGW-2rZNMD-7hLt7r-5xjUSF-uB4au9-uBbC6n-64Qkeb-9EcyP-7VF6zc-9Tym55-9TvuTM\"\u003eMartin Cron\u003c/a\u003e *\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eI’ve been using \u003ca href=\"https://www.jetbrains.com/resharper/\"\u003eResharper\u003c/a\u003e (R#), a Visual Studio plug-in for over 7 years. I’ve finally been able to convince the company I work for to purchase R# for other developers.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--AGGg6YsR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/02/Resharper-300x116.jpg%3Fresize%3D300%252C116%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--AGGg6YsR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/02/Resharper-300x116.jpg%3Fresize%3D300%252C116%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eBut a problem arose for a developer.\u003c/p\u003e\n\n\u003cp\u003eR# to the rescue.\u003c/p\u003e\n\n\u003cp\u003eA developer was having a problem dealing with Data Access Layer (DAL) DLL she was referencing in her website. She needed to change a stored procedure (sproc) called. It’s not a significant problem since she has an access to the source code. It was just a matter of finding the project, open it, and then search for the method called.\u003c/p\u003e\n\n\u003cp\u003eBut then she wanted to be “lazy” in a good way. She was looking for a more efficient way of finding the sproc name. If you \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--VGZtm8tW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/02/process-explorer-300x183.png%3Fresize%3D300%252C183%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--VGZtm8tW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/02/process-explorer-300x183.png%3Fresize%3D300%252C183%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003ehave ever used Visual Studio (VS), it’s very resource intensive so that opening an instance takes a while, not to mention 5~6 instances she had to open to search different DAL projects.\u003c/p\u003e\n\n\u003cp\u003e(An instance of Visual Studio eats up \u003cem\u003eat least\u003c/em\u003e 300+ MB of memory when idle)\u003c/p\u003e\n\n\u003cp\u003eShe’s been using R# only for few months so she wasn’t proficient. It was time to demonstrate the laziness I’ve been enjoying all these years.\u003c/p\u003e\n\n\u003cp\u003eIt was just a matter of going to the method in question then VS would have decompiled the source when someone tries to go to the definition. But she had set a different default set so she was getting directed to “Object Explorer” window, which shows only class member names in DLLs.\u003c/p\u003e\n\n\u003cp\u003eInstead of changing the default, I just showed her how to use \u003ca href=\"https://www.jetbrains.com/help/resharper/2016.3/Navigation_and_Search%20__Navigate_from_Here__%20Decompiled_Code.html\"\u003eNavigate To Decompiled Sources\u003c/a\u003e context menu in R#. As soon as she selected the option, R# decompiled the source and she was able to find the sproc being called.\u003c/p\u003e\n\n\u003cp\u003eShe just saved about 3~5 minutes of time. It doesn’t sound like much but time adds up when you have to check 10 sprocs, which is equivalent to 30~50 minutes of developer time. Considering we, developers, are known to abhor menial tasks that take focus away, it was a huge gain in both time and effort.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eThe transition to motivate other developers to use R# was tough since R# increases memory and CPU usage of VS. I was glad that someone wanted to become “lazy” and I was able to get a developer into using R# more.\u003c/p\u003e\n\n\u003cp\u003eBy the way Bill Gates said it the best regarding being lazy.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eI choose a lazy person to do a hard job. Because a lazy person will find an easy way to do it\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/02/04/getting-lazy-resharper/\"\u003eGetting lazy with Resharper\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Getting lazy with Resharper\npublished: false\ntags: Blog Entry,jetbrains,laziness,lazy\ncanonical_url: https://www.slightedgecoder.com/2017/02/04/getting-lazy-resharper/\n---\n\n\u003csmall\u003e Featured Image by \u003ca href=\"https://www.flickr.com/photos/martincron/4127880673/in/photolist-5Uz3so-2s5eGW-2rZNMD-7hLt7r-5xjUSF-uB4au9-uBbC6n-64Qkeb-9EcyP-7VF6zc-9Tym55-9TvuTM\"\u003eMartin Cron\u003c/a\u003e *\u003c/small\u003e\n\nI’ve been using [Resharper](https://www.jetbrains.com/resharper/) (R#), a Visual Studio plug-in for over 7 years. I’ve finally been able to convince the company I work for to purchase R# for other developers.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/02/Resharper-300x116.jpg?resize=300%2C116\u0026ssl=1)\n\nBut a problem arose for a developer.\n\nR# to the rescue.\n\nA developer was having a problem dealing with Data Access Layer (DAL) DLL she was referencing in her website. She needed to change a stored procedure (sproc) called. It’s not a significant problem since she has an access to the source code. It was just a matter of finding the project, open it, and then search for the method called.\n\nBut then she wanted to be “lazy” in a good way. She was looking for a more efficient way of finding the sproc name. If you ![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/02/process-explorer-300x183.png?resize=300%2C183\u0026ssl=1)have ever used Visual Studio (VS), it’s very resource intensive so that opening an instance takes a while, not to mention 5~6 instances she had to open to search different DAL projects.\n\n(An instance of Visual Studio eats up _at least_ 300+ MB of memory when idle)\n\n \n\nShe’s been using R# only for few months so she wasn’t proficient. It was time to demonstrate the laziness I’ve been enjoying all these years.\n\nIt was just a matter of going to the method in question then VS would have decompiled the source when someone tries to go to the definition. But she had set a different default set so she was getting directed to “Object Explorer” window, which shows only class member names in DLLs.\n\nInstead of changing the default, I just showed her how to use [Navigate To Decompiled Sources](https://www.jetbrains.com/help/resharper/2016.3/Navigation_and_Search __Navigate_from_Here__ Decompiled_Code.html) context menu in R#. As soon as she selected the option, R# decompiled the source and she was able to find the sproc being called.\n\nShe just saved about 3~5 minutes of time. It doesn’t sound like much but time adds up when you have to check 10 sprocs, which is equivalent to 30~50 minutes of developer time. Considering we, developers, are known to abhor menial tasks that take focus away, it was a huge gain in both time and effort.\n\n### Conclusion\n\nThe transition to motivate other developers to use R# was tough since R# increases memory and CPU usage of VS. I was glad that someone wanted to become “lazy” and I was able to get a developer into using R# more.\n\nBy the way Bill Gates said it the best regarding being lazy.\n\n\u003e I choose a lazy person to do a hard job. Because a lazy person will find an easy way to do it\n\n \n\n \n\nThe post [Getting lazy with Resharper](https://www.slightedgecoder.com/2017/02/04/getting-lazy-resharper/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/02/04/getting-lazy-resharper/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/02/04/getting-lazy-resharper/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, jetbrains, laziness, lazy",
    "path": "/dance2die/getting-lazy-with-resharper-3b0k-temp-slug-7851305",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-02-04T23:00:20.000Z"
  },
  {
    "title": "How I learned to appreciate others",
    "slug": "how-i-learned-to-appreciate-others-3jjd-temp-slug-5920278",
    "created_at": "2018-07-07T01:41:32.382Z",
    "main_image": null,
    "description": "\n\nFeatured Image – “Appreciation” by Edd Turtle is licensed under CC BY 2.0\n\nI’ve...",
    "published": false,
    "published_at": "2017-02-11T17:54:30.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/eddturtle/6908027572/in/photolist-bwrrVE-9gSHbS-oZZXRz-aFWeNP-ea2Zp1-9gSG2u-AzJGjg-bHNRXv-gdqLsF-o7EuF6-fJXWqz-PfPKt-bkhLsc-taoAGy-sSZBb9-t8ggGE-taCtPX-ea2ZuJ-6oAJxC-taBa3K-e9Wjwx-sT2kbQ-sSZ943-fM5mKQ-ea2Zy3-9w8G8B-p2vFNE-9e2eAE-mZVGLB-pg3bof-e9Wjsi-e9WjiT-ea2YV3-bwVenz-sdBWYG-ea2YXN-tajkEh-pXA8bn-ea2Zfb-hRMfb-e9WjtV-a5bsDk-fqh7st-6DHq5C-e9WjbT-JtZPa-ea2Z7U-dXLR2X-ea2Z15-9tjCSh\"\u003eAppreciation\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/eddturtle/\"\u003eEdd Turtle\u003c/a\u003e is licensed under \u003ca href=\"https://creativecommons.org/licenses/by/2.0/\"\u003eCC BY 2.0\u003c/a\u003e\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eI’ve read a book, How to Win Friends and Influence People (the Friends book), recently and wondered about the phrase, “be hearty in your approbation and lavish in your praise”\u003c/p\u003e\n\n\u003cp\u003eI’ve tried to apply what I learned but never understood “why” it’d help to win friends.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/kirillVv\"\u003ekirillVv\u003c/a\u003e reported an \u003ca href=\"https://github.com/dance2die/MyAnimeListSharp/issues/4\"\u003eissue (InvalidOperationException by anime Search) \u003c/a\u003efor one of the library I created on GitHub.\u003c/p\u003e\n\n\u003cp\u003eI’ve fixed the issue and notify the reporter to try it out and S/he was able to get the program working fine. But then kirillVv thanked me about the update made as well as for the library. S/he simply thanked me for creating the library but I felt something warm and fuzzy inside.\u003c/p\u003e\n\n\u003cp\u003eAnd then it hit me and felt enlightened. I was reminded of the phrase in the Friends book and thought that “this was why”… It’d be simply a manipulation should the appreciation came from with another objective in mind. But his/her comment really sounded as if it came from the true gratitude (or maybe I thought about it that way).\u003c/p\u003e\n\n\u003cp\u003eFor some reason, I’ve wanted to pay more attention to what “kirillVv” does on GitHub and probably would put more priority on issues that kirillVv reports.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eI’ve learned that showing appreciation to others for their efforts and help would greatly increase the relationship with those you thank. It doesn’t have to be monetary compensation to win others but a simply “Thank You” is enough sometimes.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/02/11/learned-appreciate-others/\"\u003eHow I learned to appreciate others\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: How I learned to appreciate others\npublished: false\ntags: Blog Entry,TIL,appreciation,praise\ncanonical_url: https://www.slightedgecoder.com/2017/02/11/learned-appreciate-others/\n---\n\n\u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/eddturtle/6908027572/in/photolist-bwrrVE-9gSHbS-oZZXRz-aFWeNP-ea2Zp1-9gSG2u-AzJGjg-bHNRXv-gdqLsF-o7EuF6-fJXWqz-PfPKt-bkhLsc-taoAGy-sSZBb9-t8ggGE-taCtPX-ea2ZuJ-6oAJxC-taBa3K-e9Wjwx-sT2kbQ-sSZ943-fM5mKQ-ea2Zy3-9w8G8B-p2vFNE-9e2eAE-mZVGLB-pg3bof-e9Wjsi-e9WjiT-ea2YV3-bwVenz-sdBWYG-ea2YXN-tajkEh-pXA8bn-ea2Zfb-hRMfb-e9WjtV-a5bsDk-fqh7st-6DHq5C-e9WjbT-JtZPa-ea2Z7U-dXLR2X-ea2Z15-9tjCSh\"\u003eAppreciation\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/eddturtle/\"\u003eEdd Turtle\u003c/a\u003e is licensed under \u003ca href=\"https://creativecommons.org/licenses/by/2.0/\"\u003eCC BY 2.0\u003c/a\u003e\u003c/small\u003e\n\nI’ve read a book, How to Win Friends and Influence People (the Friends book), recently and wondered about the phrase, “be hearty in your approbation and lavish in your praise”\n\nI’ve tried to apply what I learned but never understood “why” it’d help to win friends.\n\n[kirillVv](https://github.com/kirillVv) reported an [issue (InvalidOperationException by anime Search) ](https://github.com/dance2die/MyAnimeListSharp/issues/4)for one of the library I created on GitHub.\n\nI’ve fixed the issue and notify the reporter to try it out and S/he was able to get the program working fine. But then kirillVv thanked me about the update made as well as for the library. S/he simply thanked me for creating the library but I felt something warm and fuzzy inside.\n\nAnd then it hit me and felt enlightened. I was reminded of the phrase in the Friends book and thought that “this was why”… It’d be simply a manipulation should the appreciation came from with another objective in mind. But his/her comment really sounded as if it came from the true gratitude (or maybe I thought about it that way).\n\nFor some reason, I’ve wanted to pay more attention to what “kirillVv” does on GitHub and probably would put more priority on issues that kirillVv reports.\n\n### Conclusion\n\nI’ve learned that showing appreciation to others for their efforts and help would greatly increase the relationship with those you thank. It doesn’t have to be monetary compensation to win others but a simply “Thank You” is enough sometimes.\n\nThe post [How I learned to appreciate others](https://www.slightedgecoder.com/2017/02/11/learned-appreciate-others/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/02/11/learned-appreciate-others/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/02/11/learned-appreciate-others/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, todayilearned, appreciation, praise",
    "path": "/dance2die/how-i-learned-to-appreciate-others-3jjd-temp-slug-5920278",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-02-11T17:54:30.000Z"
  },
  {
    "title": "Readability Conscious",
    "slug": "readability-conscious-4k8i-temp-slug-3979584",
    "created_at": "2018-07-07T01:41:33.118Z",
    "main_image": null,
    "description": "\n\n* Featured Image – “voynich” by D.C.Atty, used under CC BY / Dropped Quality to...",
    "published": false,
    "published_at": "2017-02-19T19:28:56.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/figgenhoffer/2393781060/in/photolist-4DwKHf-6bPEf-5cD6N1-5cyPXP-5cD6W1-5cyQvi-5cD6YW-5cD75h-5cD6Sj-5cyQqv-yY54S-yY54V-87DHYs-mrZ7WV-eSstSZ-5cD7h1-6iiRn5-4pHvoE-cCqgiU-szWvt-c6niF5-c6nkQd-szSmU-c6mgyY-c6mTe1-c6nesd-yUjFT-c6maY1-c6mY3w-9tdawJ-c6mrm3-c6mxf1-c6nbMw-c6mnih-c6npwY-c6nx9U-c6mM1q-59qPmR-c6mBb9-c6n5FE-c6mFMN-c6n7CL-2fhmqn-4Vc476-6bLgg-5cT71Z-59v3Es-6bLcc-59v3Rb-6bL7S\"\u003evoynich\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/figgenhoffer/\"\u003eD.C.Atty\u003c/a\u003e, used under \u003ca href=\"http://creativecommons.org/licenses/by/2.0/\"\u003eCC BY\u003c/a\u003e / Dropped Quality to 60% from original – It’s a featured image since nobody can figure out what’s written in Voynich Manuscript. \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ROERhfb2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f609.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ROERhfb2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f609.png\" alt=\"😉\"\u003e\u003c/a\u003e\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eI’ve been solving \u003ca href=\"https://www.hackerrank.com\"\u003eHackerRank\u003c/a\u003eproblems lately. HackerRank provides many coding problems.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--soCexdIP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/02/HackerRank-Discussion-300x208.jpg%3Fresize%3D300%252C208%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--soCexdIP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/02/HackerRank-Discussion-300x208.jpg%3Fresize%3D300%252C208%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eHackerRank Discussions\u003c/p\u003e\n\n\u003cp\u003eEach problem has a discussion forum to post algorithms and sometimes answers. After solving each question, I compare my answers with those of others.\u003c/p\u003e\n\n\u003cp\u003eAfter reading \u003ca href=\"https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882\"\u003eClean Code\u003c/a\u003e by Uncle Bob, and listening to \u003ca href=\"http://www.codingblocks.net/\"\u003eCoding blocks podcasts\u003c/a\u003e with titles that begin with “Clean Code – *”, I decided to write a more readable code even for solving a simple question.\u003c/p\u003e\n\n\u003cp\u003eI noticed that many people ask in discussion what the code does.  Why would I have to write a code, which would require an explanation? Could I write more readable code that anyone can understand?\u003c/p\u003e\n\n\u003cp\u003eThere is a question titled, \u003ca href=\"https://www.hackerrank.com/challenges/balanced-brackets\"\u003eBalanced Brackets\u003c/a\u003e, which asks if brackets are closed or not. I see many answers that requires much thinking even though code is short.\u003c/p\u003e\n\n\u003cp\u003eHere is my solution for the question.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epublic static void Main() { int caseCount = Convert.ToInt32(Console.ReadLine()); List\\\u0026lt;string\\\u0026gt; testCases = GetTestCases(caseCount).ToList(); PrintMatchingBrackets(testCases); }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eBasically, all the code does is , get test cases and print matching brackets.\u003c/p\u003e\n\n\u003cp\u003eHere is the code for getting test cases; It just reads input from console.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eprivate static IEnumerable\\\u0026lt;string\\\u0026gt; GetTestCases(int caseCount) { for (int i = 0; i \\\u0026lt; caseCount; i++) { yield return Console.ReadLine(); } }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eNow, \u003ccode\u003ePrintMatchingBrackets\u003c/code\u003e simply delegates work to another function, which is aptly named, \u003ccode\u003ePrintMatchingBracket\u003c/code\u003e.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eprivate static void PrintMatchingBrackets(List\\\u0026lt;string\\\u0026gt; testCases) { foreach (string testCase in testCases) { Console.WriteLine(HasMatchingBrackets(testCase) ? \"YES\" : \"NO\"); } }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eNow, \u003ccode\u003eHasMatchingBrackets\u003c/code\u003e is a bit complicated but I abstracted most of low level code into separate functions or lambdas with names describing what each code does.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eprivate static bool HasMatchingBrackets(string testCase) { // Matching brackets should have even number of brackets. Func\\\u0026lt;string, bool\\\u0026gt; hasOddLength = text =\\\u0026gt; text.Length % 2 == 1; if (hasOddLength(testCase)) return false; var openingBracketMap = GetOpeningBracketMap(); var closingBracketMap = GetClosingBracketMap(); Func\\\u0026lt;char, bool\\\u0026gt; isOpeningBracket = c =\\\u0026gt; openingBracketMap.Keys.Contains(c); Func\\\u0026lt;char, bool\\\u0026gt; isClosingBracket = c =\\\u0026gt; closingBracketMap.Keys.Contains(c); var stackSize = testCase.Length / 2; Stack\\\u0026lt;char\\\u0026gt; stack = new Stack\\\u0026lt;char\\\u0026gt;(stackSize); Func\\\u0026lt;char, bool\\\u0026gt; isLastOneInStackMatching = c =\\\u0026gt; stack.Peek() == closingBracketMap[c]; foreach (char c in testCase) { if (isOpeningBracket(c)) stack.Push(c); if (IsStackEmpty(stack) \u0026amp;\u0026amp; isClosingBracket(c)) return false; if (isClosingBracket(c) \u0026amp;\u0026amp; isLastOneInStackMatching(c)) stack.Pop(); } return IsStackEmpty(stack); }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eI especially thought that adding \u003ccode\u003eisOpeningBracket\u003c/code\u003e and \u003ccode\u003eisClosingBracket\u003c/code\u003e increased the readability quite much since it describes my \u003cstrong\u003eintention\u003c/strong\u003e. Had I used \u003ccode\u003eopeningBracketMap.Keys.Contains(c)\u003c/code\u003e inline, reader would have to try to figure out \u003cstrong\u003ewhy\u003c/strong\u003e I put that code in there. Describing the intention with the lambda name makes it clear.\u003c/p\u003e\n\n\u003cp\u003eIf I really wanted to go further, I could have moved all bracket logic into another class and used a strategy pattern and whatnot, but I thought that it’d be too much for this simple problem. I had to draw a line somewhere. If another question comes up where this functionality is needed, then I’d refactor it into a library.\u003c/p\u003e\n\n\u003cp\u003eThe above source code is available on \u003ca href=\"https://github.com/dance2die/Problems.HackerRank/blob/master/Problems.HackerRank.DataStructure/Stacks/BalancedBrackets.cs\"\u003eGitHub\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eI read \u003ca href=\"https://github.com/dotnet/corefx\"\u003eDotNet/CoreFX\u003c/a\u003e code on GitHub and it seems like it was written from top-down;Meaning top level code was written as just calling functions with meaningful names and just implement the lower level functions by breaking them down as small as possible thus making each function not spanning more than a screen.\u003c/p\u003e\n\n\u003cp\u003eI’ve been trying that approach and it seems to be making the code much more readable, modular, and maintainable since I can just call small functions elsewhere in many different functions, which reduces code duplication.\u003c/p\u003e\n\n\u003cp\u003eI approached the Balanced Bracket problem the same way. I wrote the “Main” code first, without any implementation and just simply implemented functions along the way.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eSolving coding questions and writing readable code helps me understand the question better and let me find an error in the code much easier. I will improve my programming skill so that other people can understand it by helping them read it like a book.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/02/19/readability-conscious/\"\u003eReadability Conscious\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Readability Conscious\npublished: false\ntags: Blog Entry,Programming,TIL,c#\ncanonical_url: https://www.slightedgecoder.com/2017/02/19/readability-conscious/\n---\n\n\\* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/figgenhoffer/2393781060/in/photolist-4DwKHf-6bPEf-5cD6N1-5cyPXP-5cD6W1-5cyQvi-5cD6YW-5cD75h-5cD6Sj-5cyQqv-yY54S-yY54V-87DHYs-mrZ7WV-eSstSZ-5cD7h1-6iiRn5-4pHvoE-cCqgiU-szWvt-c6niF5-c6nkQd-szSmU-c6mgyY-c6mTe1-c6nesd-yUjFT-c6maY1-c6mY3w-9tdawJ-c6mrm3-c6mxf1-c6nbMw-c6mnih-c6npwY-c6nx9U-c6mM1q-59qPmR-c6mBb9-c6n5FE-c6mFMN-c6n7CL-2fhmqn-4Vc476-6bLgg-5cT71Z-59v3Es-6bLcc-59v3Rb-6bL7S\"\u003evoynich\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/figgenhoffer/\"\u003eD.C.Atty\u003c/a\u003e, used under \u003ca href=\"http://creativecommons.org/licenses/by/2.0/\"\u003eCC BY\u003c/a\u003e / Dropped Quality to 60% from original – It’s a featured image since nobody can figure out what’s written in Voynich Manuscript. \u003cimg src=\"https://s.w.org/images/core/emoji/2.4/72x72/1f609.png\" alt=\"😉\" style=\"height: 1em; max-height: 1em;\"\u003e\u003c/small\u003e\n\nI’ve been solving [HackerRank](https://www.hackerrank.com)problems lately. HackerRank provides many coding problems.\n\n ![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/02/HackerRank-Discussion-300x208.jpg?resize=300%2C208\u0026ssl=1)\n\nHackerRank Discussions\n\nEach problem has a discussion forum to post algorithms and sometimes answers. After solving each question, I compare my answers with those of others.\n\nAfter reading [Clean Code](https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882) by Uncle Bob, and listening to [Coding blocks podcasts](http://www.codingblocks.net/) with titles that begin with “Clean Code – \\*”, I decided to write a more readable code even for solving a simple question.\n\nI noticed that many people ask in discussion what the code does.  Why would I have to write a code, which would require an explanation? Could I write more readable code that anyone can understand?\n\nThere is a question titled, [Balanced Brackets](https://www.hackerrank.com/challenges/balanced-brackets), which asks if brackets are closed or not. I see many answers that requires much thinking even though code is short.\n\nHere is my solution for the question.\n\n```\npublic static void Main() { int caseCount = Convert.ToInt32(Console.ReadLine()); List\\\u003cstring\\\u003e testCases = GetTestCases(caseCount).ToList(); PrintMatchingBrackets(testCases); }\n```\n\nBasically, all the code does is , get test cases and print matching brackets.\n\nHere is the code for getting test cases; It just reads input from console.\n\n```\nprivate static IEnumerable\\\u003cstring\\\u003e GetTestCases(int caseCount) { for (int i = 0; i \\\u003c caseCount; i++) { yield return Console.ReadLine(); } }\n```\n\nNow, `PrintMatchingBrackets` simply delegates work to another function, which is aptly named, `PrintMatchingBracket`.\n\n```\nprivate static void PrintMatchingBrackets(List\\\u003cstring\\\u003e testCases) { foreach (string testCase in testCases) { Console.WriteLine(HasMatchingBrackets(testCase) ? \"YES\" : \"NO\"); } }\n```\n\nNow, `HasMatchingBrackets` is a bit complicated but I abstracted most of low level code into separate functions or lambdas with names describing what each code does.\n\n```\nprivate static bool HasMatchingBrackets(string testCase) { // Matching brackets should have even number of brackets. Func\\\u003cstring, bool\\\u003e hasOddLength = text =\\\u003e text.Length % 2 == 1; if (hasOddLength(testCase)) return false; var openingBracketMap = GetOpeningBracketMap(); var closingBracketMap = GetClosingBracketMap(); Func\\\u003cchar, bool\\\u003e isOpeningBracket = c =\\\u003e openingBracketMap.Keys.Contains(c); Func\\\u003cchar, bool\\\u003e isClosingBracket = c =\\\u003e closingBracketMap.Keys.Contains(c); var stackSize = testCase.Length / 2; Stack\\\u003cchar\\\u003e stack = new Stack\\\u003cchar\\\u003e(stackSize); Func\\\u003cchar, bool\\\u003e isLastOneInStackMatching = c =\\\u003e stack.Peek() == closingBracketMap[c]; foreach (char c in testCase) { if (isOpeningBracket(c)) stack.Push(c); if (IsStackEmpty(stack) \u0026\u0026 isClosingBracket(c)) return false; if (isClosingBracket(c) \u0026\u0026 isLastOneInStackMatching(c)) stack.Pop(); } return IsStackEmpty(stack); }\n```\n\nI especially thought that adding `isOpeningBracket` and `isClosingBracket` increased the readability quite much since it describes my **intention**. Had I used `openingBracketMap.Keys.Contains(c)` inline, reader would have to try to figure out **why** I put that code in there. Describing the intention with the lambda name makes it clear.\n\nIf I really wanted to go further, I could have moved all bracket logic into another class and used a strategy pattern and whatnot, but I thought that it’d be too much for this simple problem. I had to draw a line somewhere. If another question comes up where this functionality is needed, then I’d refactor it into a library.\n\nThe above source code is available on [GitHub](https://github.com/dance2die/Problems.HackerRank/blob/master/Problems.HackerRank.DataStructure/Stacks/BalancedBrackets.cs).\n\nI read [DotNet/CoreFX](https://github.com/dotnet/corefx) code on GitHub and it seems like it was written from top-down;Meaning top level code was written as just calling functions with meaningful names and just implement the lower level functions by breaking them down as small as possible thus making each function not spanning more than a screen.\n\nI’ve been trying that approach and it seems to be making the code much more readable, modular, and maintainable since I can just call small functions elsewhere in many different functions, which reduces code duplication.\n\nI approached the Balanced Bracket problem the same way. I wrote the “Main” code first, without any implementation and just simply implemented functions along the way.\n\n### Conclusion\n\nSolving coding questions and writing readable code helps me understand the question better and let me find an error in the code much easier. I will improve my programming skill so that other people can understand it by helping them read it like a book.\n\n \n\n \n\nThe post [Readability Conscious](https://www.slightedgecoder.com/2017/02/19/readability-conscious/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/02/19/readability-conscious/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/02/19/readability-conscious/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, todayilearned, c",
    "path": "/dance2die/readability-conscious-4k8i-temp-slug-3979584",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-02-19T19:28:56.000Z"
  },
  {
    "title": "Catching a code bottleneck using a profiler",
    "slug": "catching-a-code-bottleneck-using-a-profiler-2p2m-temp-slug-9673027",
    "created_at": "2018-07-07T01:41:33.789Z",
    "main_image": null,
    "description": "\n\n\n\nPalindrome Index\n\nI’ve been having a problem with an easy HackerRankproblem, ...",
    "published": false,
    "published_at": "2017-02-25T20:03:26.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003ca href=\"https://www.hackerrank.com/challenges/palindrome-index\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--lH__N5dv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/02/HackerRank-Palindrome-Index-300x127.png%3Fresize%3D300%252C127%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003ePalindrome Index\u003c/p\u003e\n\n\u003cp\u003eI’ve been having a problem with an easy \u003ca href=\"https://www.hackerrank.com\"\u003eHackerRank\u003c/a\u003eproblem, \u003ca href=\"https://www.hackerrank.com/notifications/page/1\"\u003ePalindrome Index\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eI knew that I was on the right track since answers for test cases were correct. But then I ran into a problem where most of test cases time out after submitting the code.\u003c/p\u003e\n\n\u003cp\u003eI’d like to talk about how I solved the performance issue.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.hackerrank.com/dashboard\"\u003eHackerRank\u003c/a\u003e allows only up to 3 seconds of execution time per test case for C# programs. For some of the test cases, my program ran fine but for the majority of them, it was timing out.\u003c/p\u003e\n\n\u003cp\u003eI came up with 4 different implementations for the problem but I wasn’t still able to solve all issues (There were still 4 out of 15 cases that were timing out for the last implementation. You can see the history of my implementation changes on \u003ca href=\"https://github.com/dance2die/Problems.HackerRank/commits/master/Problems.HackerRank.Algorithms/Strings/PalindromeIndex.cs\"\u003eGitHub\u003c/a\u003e).\u003c/p\u003e\n\n\u003cp\u003eI reached the point where I couldn’t think any more after only 4 tries. Then I looked around optimization techniques and many websites suggested using profiling tools. I have a license for JetBrains \u003ca href=\"https://www.jetbrains.com/profiler/\"\u003edotTrace\u003c/a\u003eso I decided to give it a try.\u003c/p\u003e\n\n\u003cp\u003eMy eyes opened wide as soon as I profile the code. There it was! The bottleneck!\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--u_8SNo7_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/02/profile-result-1.png%3Fresize%3D827%252C490%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--u_8SNo7_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/02/profile-result-1.png%3Fresize%3D827%252C490%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003eThe problem was that, I was unnecessarily creating a new object for each loop iteration. After moving the object creation out of the loop, the code ran within a second.\u003c/p\u003e\n\n\u003cp\u003eThe code was changed from\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003efor (int i = 0; i \\\u0026lt; testCase.Length; i++) { StringBuilder buffer = new StringBuilder(testCase); if (testCase[i] != testCase[testCase.Length - i - 1]) { if (IsPalindrome2(buffer.Remove(i, 1))) return i; return testCase.Length - i - 1; } }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eto\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eStringBuilder buffer = new StringBuilder(testCase); for (int i = 0; i \\\u0026lt; testCase.Length; i++) { if (testCase[i] != testCase[testCase.Length - i - 1]) { if (IsPalindrome2(buffer.Remove(i, 1))) return i; return testCase.Length - i - 1; } }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003e\u003ccode\u003eStringBuilder buffer = new StringBuilder(testCase)\u003c/code\u003e was moved out of the for loop. It was that simple. I spent hours trying to come up with different algorithms without catching that simple error/bad coding.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eI learned 4 different ways of failures, which I’d get around next time.\u003c/p\u003e\n\n\u003cp\u003eI am glad to have run into this issue while solving a coding question instead of during writing a production code at work.\u003c/p\u003e\n\n\u003cp\u003eAnd also I learned to appreciate all the tools at disposal.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/02/25/catching-code-bottleneck-using-profiler/\"\u003eCatching a code bottleneck using a profiler\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Catching a code bottleneck using a profiler\npublished: false\ntags: Blog Entry,Programming,TIL\ncanonical_url: https://www.slightedgecoder.com/2017/02/25/catching-code-bottleneck-using-profiler/\n---\n\n[![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/02/HackerRank-Palindrome-Index-300x127.png?resize=300%2C127\u0026ssl=1)](https://www.hackerrank.com/challenges/palindrome-index)\n\nPalindrome Index\n\nI’ve been having a problem with an easy [HackerRank](https://www.hackerrank.com)problem, [Palindrome Index](https://www.hackerrank.com/notifications/page/1).\n\nI knew that I was on the right track since answers for test cases were correct. But then I ran into a problem where most of test cases time out after submitting the code.\n\nI’d like to talk about how I solved the performance issue.\n\n[HackerRank](https://www.hackerrank.com/dashboard) allows only up to 3 seconds of execution time per test case for C# programs. For some of the test cases, my program ran fine but for the majority of them, it was timing out.\n\nI came up with 4 different implementations for the problem but I wasn’t still able to solve all issues (There were still 4 out of 15 cases that were timing out for the last implementation. You can see the history of my implementation changes on [GitHub](https://github.com/dance2die/Problems.HackerRank/commits/master/Problems.HackerRank.Algorithms/Strings/PalindromeIndex.cs)).\n\nI reached the point where I couldn’t think any more after only 4 tries. Then I looked around optimization techniques and many websites suggested using profiling tools. I have a license for JetBrains [dotTrace](https://www.jetbrains.com/profiler/)so I decided to give it a try.\n\nMy eyes opened wide as soon as I profile the code. There it was! The bottleneck!\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/02/profile-result-1.png?resize=827%2C490\u0026ssl=1)The problem was that, I was unnecessarily creating a new object for each loop iteration. After moving the object creation out of the loop, the code ran within a second.\n\nThe code was changed from\n\n```\nfor (int i = 0; i \\\u003c testCase.Length; i++) { StringBuilder buffer = new StringBuilder(testCase); if (testCase[i] != testCase[testCase.Length - i - 1]) { if (IsPalindrome2(buffer.Remove(i, 1))) return i; return testCase.Length - i - 1; } }\n```\n\nto\n\n```\nStringBuilder buffer = new StringBuilder(testCase); for (int i = 0; i \\\u003c testCase.Length; i++) { if (testCase[i] != testCase[testCase.Length - i - 1]) { if (IsPalindrome2(buffer.Remove(i, 1))) return i; return testCase.Length - i - 1; } }\n```\n\n`StringBuilder buffer = new StringBuilder(testCase)` was moved out of the for loop. It was that simple. I spent hours trying to come up with different algorithms without catching that simple error/bad coding.\n\n### Conclusion\n\nI learned 4 different ways of failures, which I’d get around next time.\n\nI am glad to have run into this issue while solving a coding question instead of during writing a production code at work.\n\nAnd also I learned to appreciate all the tools at disposal.\n\n \n\n \n\n \n\nThe post [Catching a code bottleneck using a profiler](https://www.slightedgecoder.com/2017/02/25/catching-code-bottleneck-using-profiler/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/02/25/catching-code-bottleneck-using-profiler/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/02/25/catching-code-bottleneck-using-profiler/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, todayilearned",
    "path": "/dance2die/catching-a-code-bottleneck-using-a-profiler-2p2m-temp-slug-9673027",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-02-25T20:03:26.000Z"
  },
  {
    "title": "Pain of supporting COM enabled .NET library",
    "slug": "pain-of-supporting-com-enabled-net-library-1bh2-temp-slug-1021107",
    "created_at": "2018-07-07T01:41:34.449Z",
    "main_image": null,
    "description": "\n\n* Featured Image – “Stockholm Public Library” by Wojtek Gurak, used under BY NC...",
    "published": false,
    "published_at": "2017-03-04T17:25:18.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/wojtekgurak/5617290873/in/photolist-9yo5SD-8tuaF4-7LUp5T-chQiW-4bij9y-4Qb8dX-e1oibS-c9JibN-7R1u2K-6masys-9urLf3-7R4PS3-jGG92n-cRtGFo-8c1MDP-avzvsg-7ygCHH-Bf1yg-9u2j95-8PUw4i-qwEkDL-7ygF8D-E64e3-74BkLW-7R4HzQ-6uSYM1-avC99w-7fNVQ3-6EVajT-hM5HF3-4v5KjS-6m6iEr-8UvQ8h-7R4UW7-cRtJkJ-6vv1Xd-NytKT-7R2nNB-93WXwT-787Wt9-7xytdc-2gMjT-7xytkM-o5BQYY-7JYMRm-97NH5y-7xChWA-96DMZm-7xCi79-8QA6PP\"\u003eStockholm Public Library\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/wojtekgurak/\"\u003eWojtek Gurak\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by-nc/2.0/\"\u003eBY NC\u003c/a\u003e / Dropped Quality to 60% from original\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eNearly 10 years ago, I created a .NET library that creates both .NET dll as well as COM dll.\u003c/p\u003e\n\n\u003cp\u003eVB6 application that depends on the library is still in use after 10 years.\u003c/p\u003e\n\n\u003cp\u003eI had much problem figuring out what went wrong and also learned much along the way.\u003c/p\u003e\n\n\u003cp\u003eI updated VB6 application with a new functionality and I need a developer to test it on his machine. The feature “worked on my machine”, but it failed to work on other developer’s machine.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--RYWrwK4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/03/DebugView.jpg%3Fresize%3D465%252C198%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--RYWrwK4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/03/DebugView.jpg%3Fresize%3D465%252C198%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eSince VB6 application was using the library as COM dll, I had no way of figuring out what has gone wrong. I’ve added “Debug.Print” statements everywhere to find out where the error occurred. Along the way, I’ve found a great application from sysinternals called \u003ca href=\"https://technet.microsoft.com/en-us/sysinternals/debugview.aspx\"\u003eDebugView\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--XD4sOAIl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/03/Visual-Studio-2015-Post-build-event.jpg%3Fresize%3D466%252C273%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--XD4sOAIl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/03/Visual-Studio-2015-Post-build-event.jpg%3Fresize%3D466%252C273%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eIn the beginning, I compiled the DLLs and copied them over to VB6 environment manually. Deployment was taking about 30 seconds to a minute each time when done manually. I decided to become lazy and created a batch file, which copies all the DLLs to the VB6 environment. I added the batch file to be called in Post-build event section of visual studio. The result was that, after each build, all DLLs were deployed to the VB6 environment automatically saving me 30~60 seconds each time I had to test a new DLL.\u003c/p\u003e\n\n\u003cp\u003eAfter half day of debugging and tracing, I’ve finally figured out the problem. When the library was written, there was a dependency on .NET 2.0 DLLs. But someone recompiled the DLLs to .NET framework 4.0 so that they needed to be GACed to .NET 4.0 GAC location (\u003cem\u003eC:\\Windows\\Microsoft.NET\\assembly\u003c/em\u003e), which is different from .NET 2.0 GAC folder (\u003cem\u003eC:\\windows\\assembly\u003c/em\u003e).\u003c/p\u003e\n\n\u003cp\u003eThen another problem occurred. The DLLs deployed to is an XP machine. It didn’t have GACUtil installed on it. What did I do? I naively copied GACUtil.exe to the XP machine and try to GAC 4.0 DLLs there. GACUtil ran but DLLs weren’t added to the GAC. After some research, I found out that I had to copy \u003ca href=\"http://blog.janjonas.net/2013-09-15/net4-gacutil_exe-does-nothing-copying-gacutil_exe-machine-server\"\u003etwo additional files\u003c/a\u003e (gacutil.exe.config, gacutlrc.dll).\u003c/p\u003e\n\n\u003cp\u003eNow new DLLs were GACed successfully in XP machine and the new VB6 functionality worked fine.\u003c/p\u003e\n\n\u003cp\u003eI am writing about this not to forget about my valuable experience. One of the \u003ca href=\"https://www.scrumalliance.org/community/articles/2013/september/how-to-manage-the-7-wastes%E2%80%9D-of-agile-software-deve\"\u003e7 “wastes” of Agile Software Developments\u003c/a\u003e is “relearning” (waste #3). This post serves me as a reminder that I’d not have to re-learn what I did and learned.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eThe pain was grave but I got much out of the experience.\u003c/p\u003e\n\n\u003cp\u003eI’ve learned how to\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eautomate deployment by creating a post-build event script in Visual Studio\u003c/li\u003e\n\u003cli\u003euse DebugView\u003c/li\u003e\n\u003cli\u003erun GACUtil from machine without new version of GACUtil\u003c/li\u003e\n\u003cli\u003edeal with DLL dependencies\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/03/04/pain-supporting-com-enabled-net-library/\"\u003ePain of supporting COM enabled .NET library\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Pain of supporting COM enabled .NET library\npublished: false\ntags: Blog Entry,Programming,TIL\ncanonical_url: https://www.slightedgecoder.com/2017/03/04/pain-supporting-com-enabled-net-library/\n---\n\n\\* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/wojtekgurak/5617290873/in/photolist-9yo5SD-8tuaF4-7LUp5T-chQiW-4bij9y-4Qb8dX-e1oibS-c9JibN-7R1u2K-6masys-9urLf3-7R4PS3-jGG92n-cRtGFo-8c1MDP-avzvsg-7ygCHH-Bf1yg-9u2j95-8PUw4i-qwEkDL-7ygF8D-E64e3-74BkLW-7R4HzQ-6uSYM1-avC99w-7fNVQ3-6EVajT-hM5HF3-4v5KjS-6m6iEr-8UvQ8h-7R4UW7-cRtJkJ-6vv1Xd-NytKT-7R2nNB-93WXwT-787Wt9-7xytdc-2gMjT-7xytkM-o5BQYY-7JYMRm-97NH5y-7xChWA-96DMZm-7xCi79-8QA6PP\"\u003eStockholm Public Library\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/wojtekgurak/\"\u003eWojtek Gurak\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by-nc/2.0/\"\u003eBY NC\u003c/a\u003e / Dropped Quality to 60% from original\u003c/small\u003e\n\n \n\nNearly 10 years ago, I created a .NET library that creates both .NET dll as well as COM dll.\n\nVB6 application that depends on the library is still in use after 10 years.\n\nI had much problem figuring out what went wrong and also learned much along the way.\n\nI updated VB6 application with a new functionality and I need a developer to test it on his machine. The feature “worked on my machine”, but it failed to work on other developer’s machine.\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/03/DebugView.jpg?resize=465%2C198\u0026ssl=1)\n\nSince VB6 application was using the library as COM dll, I had no way of figuring out what has gone wrong. I’ve added “Debug.Print” statements everywhere to find out where the error occurred. Along the way, I’ve found a great application from sysinternals called [DebugView](https://technet.microsoft.com/en-us/sysinternals/debugview.aspx).\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/03/Visual-Studio-2015-Post-build-event.jpg?resize=466%2C273\u0026ssl=1)\n\nIn the beginning, I compiled the DLLs and copied them over to VB6 environment manually. Deployment was taking about 30 seconds to a minute each time when done manually. I decided to become lazy and created a batch file, which copies all the DLLs to the VB6 environment. I added the batch file to be called in Post-build event section of visual studio. The result was that, after each build, all DLLs were deployed to the VB6 environment automatically saving me 30~60 seconds each time I had to test a new DLL.\n\nAfter half day of debugging and tracing, I’ve finally figured out the problem. When the library was written, there was a dependency on .NET 2.0 DLLs. But someone recompiled the DLLs to .NET framework 4.0 so that they needed to be GACed to .NET 4.0 GAC location (_C:\\Windows\\Microsoft.NET\\assembly_), which is different from .NET 2.0 GAC folder (_C:\\windows\\assembly_).\n\nThen another problem occurred. The DLLs deployed to is an XP machine. It didn’t have GACUtil installed on it. What did I do? I naively copied GACUtil.exe to the XP machine and try to GAC 4.0 DLLs there. GACUtil ran but DLLs weren’t added to the GAC. After some research, I found out that I had to copy [two additional files](http://blog.janjonas.net/2013-09-15/net4-gacutil_exe-does-nothing-copying-gacutil_exe-machine-server) (gacutil.exe.config, gacutlrc.dll).\n\nNow new DLLs were GACed successfully in XP machine and the new VB6 functionality worked fine.\n\nI am writing about this not to forget about my valuable experience. One of the [7 “wastes” of Agile Software Developments](https://www.scrumalliance.org/community/articles/2013/september/how-to-manage-the-7-wastes%E2%80%9D-of-agile-software-deve) is “relearning” (waste #3). This post serves me as a reminder that I’d not have to re-learn what I did and learned.\n\n### Conclusion\n\nThe pain was grave but I got much out of the experience.\n\nI’ve learned how to\n\n1. automate deployment by creating a post-build event script in Visual Studio\n2. use DebugView\n3. run GACUtil from machine without new version of GACUtil\n4. deal with DLL dependencies\n\n \n\nThe post [Pain of supporting COM enabled .NET library](https://www.slightedgecoder.com/2017/03/04/pain-supporting-com-enabled-net-library/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/03/04/pain-supporting-com-enabled-net-library/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/03/04/pain-supporting-com-enabled-net-library/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, todayilearned",
    "path": "/dance2die/pain-of-supporting-com-enabled-net-library-1bh2-temp-slug-1021107",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-03-04T17:25:18.000Z"
  },
  {
    "title": "Parsing a number into digits",
    "slug": "parsing-a-number-into-digits-6pf-temp-slug-2258361",
    "created_at": "2018-07-07T01:41:34.980Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/yyo3fibkwk6aitb4runi.jpg",
    "description": "\n\n* Featured Image – “Miss South Carolina Powerset Parse” by official_powerset, u...",
    "published": false,
    "published_at": "2017-03-11T17:00:43.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/powerset/1287236163/in/photolist-2XKqsX-92tLtK-83awUM-74vSFm-7uWvED-7oGauR-2m1HqN-6H8tfZ-6zV2qz-cX55Hb-5s8uxu-6YD2sU-9Ckr5z-rkAHXL-8dE8fG-gpH3Nw-i1Tfc-ifzWGW-aWh9jr-fKg1cH-7YJRQz-a78NC6-hCHGeB-k7M1Az-cnwmV7-7mCDZp-fq5rFC-8bd4ez-ifzZnA-kFQUjG-ifAqcT-4qwvGw-a7bFGA-679Fqh-huZnpg-36Kp9w-7vMS1s-5x36nq-4BbU8N-pkmtPi-r4exaS-5aHJVB-8f5q6X-5fwSs7-7iJCNf-9szExx-dpsK2Y-39C2hH-JXPcEf-BCo4q\"\u003eMiss South Carolina Powerset Parse\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/powerset/\"\u003eofficial_powerset\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by-sa/2.0/\"\u003eBY SA\u003c/a\u003e / Dropped Quality to 80% from original\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eI’ve run into situations where I had to parse a number into digits.\u003c/p\u003e\n\n\u003cp\u003eAn easy way to do this is to convert a number into a string and returns a character array, and then convert each character into a number\u003c/p\u003e\n\n\u003cp\u003eWhen dealing with large sets of long numbers, it simply is not optimal.\u003c/p\u003e\n\n\u003cp\u003eThere is a simple way to convert a number into digits, which requires a simple math.\u003c/p\u003e\n\n\u003cp\u003eGiven an integer  “val =213”, one might consider converting it to a string, breaking it to a character array and convert each character into an integer (it’s so simple in LINQ, it’s just tempting to implement it this way).\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eprivate static List\\\u0026lt;int\\\u0026gt; GetDigitsUsingConversion(int val) { return val.ToString().ToCharArray().Select(c =\\\u0026gt; (int) c).ToList(); }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--q7_RvYab--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/03/conversion-cost-is-too-damn-high.jpg%3Fresize%3D420%252C316%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--q7_RvYab--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/03/conversion-cost-is-too-damn-high.jpg%3Fresize%3D420%252C316%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe cost of type conversion from an integer to a string, to an array, and then back to integer is too high.\u003c/p\u003e\n\n\u003cp\u003eNow let’s take a look at another way using a simple math.\u003c/p\u003e\n\n\u003cp\u003eGiven an integer 213, if you\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003edivide it by 1 and mod 10, you get 3\u003c/li\u003e\n\u003cli\u003edivide it by 10 and mod 10, you get 1\u003c/li\u003e\n\u003cli\u003edivide it by 100 and mod 10, you get 2\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eIf you look at the returned result, it’s each digit returned in reverse order. There is a useful data structure, for holding data in reverse order, Stack.\u003c/p\u003e\n\n\u003cp\u003eAn algorithm is fairly simple.\u003c/p\u003e\n\n\u003cp\u003eWhile the given number is greater than 0, divide it by 10\u003csup\u003edigit,\u003c/sup\u003e put the digit into a stack, and lastly return the stack as a list.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eprivate static List\\\u0026lt;int\\\u0026gt; GetDigits(int val) { Stack\\\u0026lt;int\\\u0026gt; stack = new Stack\\\u0026lt;int\\\u0026gt;(); int number = val; while (number \\\u0026gt; 0) { var digit = number % 10; stack.Push(digit); number /= 10; } return stack.ToList(); }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eDuring each iteration, “number” is divided by 10 so it is equivalent to dividing by 10\u003csup\u003edigit.\u003c/sup\u003e\u003c/p\u003e\n\n\u003cp\u003eI did a simple benchmarking (contrived but works for a simple demo) and the one requiring a type conversion to a string ran about 2x as long.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eprivate const int UPTO = 1000000; public static void Main(string[] args) { int val = 123456789; Stopwatch watch = new Stopwatch(); watch.Start(); for (int i = 0; i \\\u0026lt; UPTO; i++) { List\\\u0026lt;int\\\u0026gt; digits = GetDigits(val); } watch.Stop(); Console.WriteLine(\"GetDigit took {0}ms\", watch.ElapsedMilliseconds); watch.Start(); for (int j = 0; j \\\u0026lt; UPTO; j++) { List\\\u0026lt;int\\\u0026gt; digits2 = GetDigitsUsingConversion(val); } watch.Stop(); Console.WriteLine(\"GetDigitsUsingConversion took {0}ms\", watch.ElapsedMilliseconds); }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eResult:\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eGetDigit took 754ms GetDigitsUsingConversion took 1468ms\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eThe source code is available on \u003ca href=\"https://github.com/dance2die/Demo.LearnByDoing/blob/master/Demo.LearnByDoing.General/ParsingNumbersPerDigitProgram.cs\"\u003eGitHub\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eBy using simple math, you can extract digits from a number.\u003c/p\u003e\n\n\u003cp\u003eIt requires no type conversion thus saving run time.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/03/11/parsing-number-digits/\"\u003eParsing a number into digits\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: Parsing a number into digits\r\npublished: false\r\ntags: Blog Entry,Programming\r\ncanonical_url: https://www.slightedgecoder.com/2017/03/11/parsing-number-digits/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/yyo3fibkwk6aitb4runi.jpg\r\n---\r\n\r\n\\* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/powerset/1287236163/in/photolist-2XKqsX-92tLtK-83awUM-74vSFm-7uWvED-7oGauR-2m1HqN-6H8tfZ-6zV2qz-cX55Hb-5s8uxu-6YD2sU-9Ckr5z-rkAHXL-8dE8fG-gpH3Nw-i1Tfc-ifzWGW-aWh9jr-fKg1cH-7YJRQz-a78NC6-hCHGeB-k7M1Az-cnwmV7-7mCDZp-fq5rFC-8bd4ez-ifzZnA-kFQUjG-ifAqcT-4qwvGw-a7bFGA-679Fqh-huZnpg-36Kp9w-7vMS1s-5x36nq-4BbU8N-pkmtPi-r4exaS-5aHJVB-8f5q6X-5fwSs7-7iJCNf-9szExx-dpsK2Y-39C2hH-JXPcEf-BCo4q\"\u003eMiss South Carolina Powerset Parse\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/powerset/\"\u003eofficial_powerset\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by-sa/2.0/\"\u003eBY SA\u003c/a\u003e / Dropped Quality to 80% from original\u003c/small\u003e\r\n\r\nI’ve run into situations where I had to parse a number into digits.\r\n\r\nAn easy way to do this is to convert a number into a string and returns a character array, and then convert each character into a number\r\n\r\nWhen dealing with large sets of long numbers, it simply is not optimal.\r\n\r\nThere is a simple way to convert a number into digits, which requires a simple math.\r\n\r\nGiven an integer  “val =213”, one might consider converting it to a string, breaking it to a character array and convert each character into an integer (it’s so simple in LINQ, it’s just tempting to implement it this way).\r\n\r\n```\r\nprivate static List\\\u003cint\\\u003e GetDigitsUsingConversion(int val) { return val.ToString().ToCharArray().Select(c =\\\u003e (int) c).ToList(); }\r\n```\r\n\r\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/03/conversion-cost-is-too-damn-high.jpg?resize=420%2C316\u0026ssl=1)\r\n\r\nThe cost of type conversion from an integer to a string, to an array, and then back to integer is too high.\r\n\r\nNow let’s take a look at another way using a simple math.\r\n\r\nGiven an integer 213, if you\r\n\r\n1. divide it by 1 and mod 10, you get 3\r\n2. divide it by 10 and mod 10, you get 1\r\n3. divide it by 100 and mod 10, you get 2\r\n\r\nIf you look at the returned result, it’s each digit returned in reverse order. There is a useful data structure, for holding data in reverse order, Stack.\r\n\r\nAn algorithm is fairly simple.\r\n\r\nWhile the given number is greater than 0, divide it by 10^digit, put the digit into a stack, and lastly return the stack as a list.\r\n\r\n```\r\nprivate static List\\\u003cint\\\u003e GetDigits(int val) { Stack\\\u003cint\\\u003e stack = new Stack\\\u003cint\\\u003e(); int number = val; while (number \\\u003e 0) { var digit = number % 10; stack.Push(digit); number /= 10; } return stack.ToList(); }\r\n```\r\n\r\nDuring each iteration, “number” is divided by 10 so it is equivalent to dividing by 10^digit.\r\n\r\nI did a simple benchmarking (contrived but works for a simple demo) and the one requiring a type conversion to a string ran about 2x as long.\r\n\r\n```\r\nprivate const int UPTO = 1000000; public static void Main(string[] args) { int val = 123456789; Stopwatch watch = new Stopwatch(); watch.Start(); for (int i = 0; i \\\u003c UPTO; i++) { List\\\u003cint\\\u003e digits = GetDigits(val); } watch.Stop(); Console.WriteLine(\"GetDigit took {0}ms\", watch.ElapsedMilliseconds); watch.Start(); for (int j = 0; j \\\u003c UPTO; j++) { List\\\u003cint\\\u003e digits2 = GetDigitsUsingConversion(val); } watch.Stop(); Console.WriteLine(\"GetDigitsUsingConversion took {0}ms\", watch.ElapsedMilliseconds); }\r\n```\r\n\r\nResult:\r\n\r\n```\r\nGetDigit took 754ms GetDigitsUsingConversion took 1468ms\r\n```\r\n\r\nThe source code is available on [GitHub](https://github.com/dance2die/Demo.LearnByDoing/blob/master/Demo.LearnByDoing.General/ParsingNumbersPerDigitProgram.cs).\r\n\r\n### Conclusion\r\n\r\nBy using simple math, you can extract digits from a number.\r\n\r\nIt requires no type conversion thus saving run time.\r\n\r\n \r\n\r\nThe post [Parsing a number into digits](https://www.slightedgecoder.com/2017/03/11/parsing-number-digits/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/03/11/parsing-number-digits/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/03/11/parsing-number-digits/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming",
    "path": "/dance2die/parsing-a-number-into-digits-6pf-temp-slug-2258361",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-03-11T17:00:43.000Z"
  },
  {
    "title": "Removing Duplicates from an Array (Using C#)",
    "slug": "removing-duplicates-from-an-array-using-c-1fl",
    "created_at": "2018-07-07T01:41:35.502Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/vlybei9ftsdzlgsbg2ij.jpg",
    "description": "\n\n* Featured Image – “removed.jpg” by Don Crowley, used under BY SA\n\nThis article...",
    "published": true,
    "published_at": "2017-03-18T18:36:28.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/doncrowley/2194796278/in/photolist-4kWUt9-7nJpV8-7t4XtP-8yCe1C-5iFzwq-8yCd2u-247GL-2hZHyH-247Er-j7z7T-b5fzx-4vqboo-h8DgpC-4WH8Lw-Re2ChR-jnfYUr-4WHaDw-4ZRqzt-247GT-247GS-4Ky6xK-247GN-247Gz-247GK-arm2re-6Vb9QA-5XRyEq-b3d2BD-G9oA9n-e4VTdH-dvgarU-dkRhkT-bsfoE5-8ZmUAd-5bWCeC-6aAXSt-jKr7zA-baHzmc-4WCR5x-syW9C5-jnfXcD-dg8w16-4WCVQp-4WCUsF-4ZRqex-4WHbmu-nN3hSJ-6icUnS-SSCTUz-8jAAex\"\u003eremoved.jpg\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/doncrowley/\"\u003eDon Crowley\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by-sa/2.0/\"\u003eBY SA\u003c/a\u003e\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eThis article is from \u003cem\u003elast year\u003c/em\u003e but after reading \u003ca href=\"https://dev.to/saigowthamr\"\u003eSai\u003c/a\u003e's article,\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag__link\"\u003e\n        \u003ca href=\"/saigowthamr\" class=\"ltag__link__link\"\u003e\n          \u003cdiv class=\"ltag__link__pic\"\u003e\n            \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--q9k15hbM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--vIY4cnmO--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://thepracticaldev.s3.amazonaws.com/uploads/user/profile_image/65999/331e9a13-33ed-4811-9c3b-a75a88fdbbf4.jpeg\" alt=\"saigowthamr image\"\u003e\n          \u003c/div\u003e\u003c/a\u003e\n          \u003ca href=\"/saigowthamr/how-to-remove-duplicate-elements-from-array-javascript-2135\" class=\"ltag__link__link\"\u003e\n            \u003cdiv class=\"ltag__link__content\"\u003e\n              \u003ch2\u003eHow to remove duplicate elements from array javascript\u003c/h2\u003e\n              \u003ch3\u003eSai gowtham\u003c/h3\u003e\n              \u003cdiv class=\"ltag__link__taglist\"\u003e\n\u003cspan class=\"ltag__link__tag\"\u003e#javascript\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#beginners\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#webdev\u003c/span\u003e\n\u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/a\u003e\n      \u003c/div\u003e\n\n\n\u003cp\u003e(\u003cem\u003ego check it 👆 out~ it's good\u003c/em\u003e)\u003c/p\u003e\n\n\u003cp\u003eI wanted to share a C# version.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eI’ve experimented a few different ways to remove duplicate items in an array.\u003c/p\u003e\n\n\u003cp\u003eAn array could be either ordered or not.\u003c/p\u003e\n\n\u003cp\u003eThere are many solutions to this problem and I will show two different ways for “unordered” array, and one for the ordered one.\u003c/p\u003e\n\n\u003cp\u003eLet’s take care of the easy one first.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"case-1-removing-duplicates-from-an-ordered-array\" href=\"#case-1-removing-duplicates-from-an-ordered-array\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eCase 1 –\u003c/strong\u003e  Removing duplicates from an \u003cem\u003eordered\u003c/em\u003e array.\n\u003c/h4\u003e\n\n\u003cp\u003eSupposed that you are given an array, \u003ccode\u003e{1, 2, 2, 3, 4, 4, 4, 5}\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eSince an array is ordered, you can simply check if a next item is same as the current item being checked against. Here is the function, which implements the algorithm.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight csharp\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eprivate\u003c/span\u003e \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"nf\"\u003eRemoveDuplicatesByCheckingPreviousElement\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;();\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"m\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eLength\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u003c/span\u003e \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e++)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"p\"\u003e+\u003c/span\u003e \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAdd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAdd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eLength\u003c/span\u003e \u003cspan class=\"p\"\u003e-\u003c/span\u003e \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eToArray\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eYou only add the current item, if the next one is not the same as the current one. E.g.)\u003c/p\u003e\n\n\u003cp\u003eE.g.) While on the 3rd item, “2”, then the next item is “3”, so we know that we have passed through all possible duplicates since the array is sorted.\u003cbr\u003e\u003cbr\u003e\nWe need to add the last item to the result because the last one doesn’t have the next element to check for a duplicate (line #12).\u003c/p\u003e\n\n\u003cp\u003eYou can find more details on this YouTube video, \u003ca href=\"https://youtu.be/kdAiCZQVuvI\"\u003eHow to remove duplicates from a sorted array in C/C++\u003c/a\u003e.\u003cbr\u003e\u003cbr\u003e\nThe source is in C++ but I translated it to C#.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"case-21-removing-duplicates-from-an-unordered-array-using-a-set\" href=\"#case-21-removing-duplicates-from-an-unordered-array-using-a-set\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eCase 2.1\u003c/strong\u003e – Removing duplicates from an \u003cem\u003eunordered\u003c/em\u003e array using a set.\n\u003c/h4\u003e\n\n\u003cp\u003eBy definition, a set doesn’t allow duplicate value. So in .NET, instantiating a HashSet object by passing an array would have removed duplicates automatically.\u003cbr\u003e\u003cbr\u003e\nBut the point of this exercise is to do so manually. I am using \u003ca href=\"https://msdn.microsoft.com/en-us/library/bb359438(v=vs.110).aspx\"\u003eHashSet\u003c/a\u003e because it has an O(1) lookup time while an array has an O(N) time complexity.\u003c/p\u003e\n\n\u003cp\u003eThe algorithm is simple. While going through each item in the array, if the current item has not been seen, we add it to the set as demonstrated in following code snippet.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight csharp\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eprivate\u003c/span\u003e \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"nf\"\u003eRemoveDuplicatesUsingHashTable\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eHashSet\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ealreadySeen\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eHashSet\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;();\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eforeach\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eitem\u003c/span\u003e \u003cspan class=\"k\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(!\u003c/span\u003e\u003cspan class=\"n\"\u003ealreadySeen\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eContains\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n            \u003cspan class=\"n\"\u003ealreadySeen\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAdd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ealreadySeen\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eToArray\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eYou can find details on this YouTube video, \u003ca href=\"https://youtu.be/H1TOX-TposY\"\u003e[\u003cstrong\u003eInterview\u003c/strong\u003e Question] Duplicate Integers in Array\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"case-22-removing-duplicates-from-an-unordered-array-by-sorting-it-and-check-for-next-element-for-duplicates\" href=\"#case-22-removing-duplicates-from-an-unordered-array-by-sorting-it-and-check-for-next-element-for-duplicates\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eCase 2.2\u003c/strong\u003e – Removing duplicates from an \u003cem\u003eunordered\u003c/em\u003e array by sorting it and check for next element for duplicates.\n\u003c/h4\u003e\n\n\u003cp\u003eThe algorithm is to sort the current array and apply case 1 algorithm.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight csharp\"\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eprivate\u003c/span\u003e \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"nf\"\u003eRemoveDuplicatesBySortingFirst\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eArray\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nf\"\u003eRemoveDuplicatesByCheckingPreviousElement\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eNote that \u003ccode\u003eRemoveDuplicatesByCheckingPreviousElement\u003c/code\u003e is the function name from case 1.\u003c/p\u003e\n\n\u003cp\u003eSorting the array takes O(N log N) time and case 1, O(N), which results in O(N) total time complexity.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eWhen you were asked to solve this problem in an interview, ask the interviewer if the array is sorted or not. Use any algorithms above depending on the context;\u003c/p\u003e\n\n\u003cp\u003eIf the array is ordered, then use case 1 algorithm, else either 2.1 or 2.2. But be aware that case 2.2 returns an array in different order from the original one.\u003c/p\u003e\n\n\u003cp\u003eE.g.)  Given an array \u003ccode\u003ea = {8, 1, 1, 3, 2, 2}\u003c/code\u003e,\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight csharp\"\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003eRemoveDuplicatesBySortingFirst\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eAbove function returns \u003ccode\u003e{1, 2, 3, 8}\u003c/code\u003e, \u003cstrong\u003enot\u003c/strong\u003e \u003ccode\u003e{8, 1, 3, 2}\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eFull working source code can be found on \u003ca href=\"https://github.com/dance2die/Demo.LearnByDoing/blob/master/Demo.LearnByDoing.General/RemoveDuplicatesProgram.cs\"\u003eGitHub\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/03/18/removing-duplicates-array-using-c/\"\u003eRemoving Duplicates from an Array (Using C#)\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: Removing Duplicates from an Array (Using C#)\r\npublished: true\r\ntags: csharp,tutorial\r\ncanonical_url: https://www.slightedgecoder.com/2017/03/18/removing-duplicates-array-using-c/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/vlybei9ftsdzlgsbg2ij.jpg\r\n---\r\n\r\n\\* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/doncrowley/2194796278/in/photolist-4kWUt9-7nJpV8-7t4XtP-8yCe1C-5iFzwq-8yCd2u-247GL-2hZHyH-247Er-j7z7T-b5fzx-4vqboo-h8DgpC-4WH8Lw-Re2ChR-jnfYUr-4WHaDw-4ZRqzt-247GT-247GS-4Ky6xK-247GN-247Gz-247GK-arm2re-6Vb9QA-5XRyEq-b3d2BD-G9oA9n-e4VTdH-dvgarU-dkRhkT-bsfoE5-8ZmUAd-5bWCeC-6aAXSt-jKr7zA-baHzmc-4WCR5x-syW9C5-jnfXcD-dg8w16-4WCVQp-4WCUsF-4ZRqex-4WHbmu-nN3hSJ-6icUnS-SSCTUz-8jAAex\"\u003eremoved.jpg\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/doncrowley/\"\u003eDon Crowley\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by-sa/2.0/\"\u003eBY SA\u003c/a\u003e\u003c/small\u003e\r\n\r\nThis article is from _last year_ but after reading [Sai](https://dev.to/saigowthamr)'s article,\r\n\r\n{% link https://dev.to/saigowthamr/how-to-remove-duplicate-elements-from-array-javascript-2135 %}\r\n\r\n(_go check it 👆 out~ it's good_)\r\n\r\nI wanted to share a C# version.\r\n\r\n_____\r\n\r\nI’ve experimented a few different ways to remove duplicate items in an array.\r\n\r\nAn array could be either ordered or not.\r\n\r\nThere are many solutions to this problem and I will show two different ways for “unordered” array, and one for the ordered one.\r\n\r\nLet’s take care of the easy one first.\r\n\r\n#### **Case 1 –**  Removing duplicates from an _ordered_ array.\r\n\r\nSupposed that you are given an array, `{1, 2, 2, 3, 4, 4, 4, 5}`.\r\n\r\nSince an array is ordered, you can simply check if a next item is same as the current item being checked against. Here is the function, which implements the algorithm.\r\n\r\n```csharp\r\nprivate static int[] RemoveDuplicatesByCheckingPreviousElement(int[] a)\r\n{\r\n\tList\u003cint\u003e result = new List\u003cint\u003e();\r\n\tfor (int i = 0; i \u003c a.Length - 1; i++)\r\n\t{\r\n\t\tif (a[i] != a[i + 1])\r\n\t\t{\r\n\t\t\tresult.Add(a[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tresult.Add(a[a.Length - 1]);\r\n\treturn result.ToArray();\r\n}\r\n```\r\n\r\nYou only add the current item, if the next one is not the same as the current one. E.g.)\r\n\r\nE.g.) While on the 3rd item, “2”, then the next item is “3”, so we know that we have passed through all possible duplicates since the array is sorted.  \r\nWe need to add the last item to the result because the last one doesn’t have the next element to check for a duplicate (line #12).\r\n\r\nYou can find more details on this YouTube video, [How to remove duplicates from a sorted array in C/C++](https://youtu.be/kdAiCZQVuvI).  \r\nThe source is in C++ but I translated it to C#.\r\n\r\n#### **Case 2.1** – Removing duplicates from an _unordered_ array using a set.\r\n\r\nBy definition, a set doesn’t allow duplicate value. So in .NET, instantiating a HashSet object by passing an array would have removed duplicates automatically.  \r\nBut the point of this exercise is to do so manually. I am using [HashSet](https://msdn.microsoft.com/en-us/library/bb359438(v=vs.110).aspx) because it has an O(1) lookup time while an array has an O(N) time complexity.\r\n\r\nThe algorithm is simple. While going through each item in the array, if the current item has not been seen, we add it to the set as demonstrated in following code snippet.\r\n\r\n```csharp\r\nprivate static int[] RemoveDuplicatesUsingHashTable(int[] a)\r\n{\r\n\tHashSet\u003cint\u003e alreadySeen = new HashSet\u003cint\u003e();\r\n\tforeach (int item in a)\r\n\t{\r\n\t\tif (!alreadySeen.Contains(item))\r\n\t\t\talreadySeen.Add(item);\r\n\t}\r\n\treturn alreadySeen.ToArray();\r\n}\r\n```\r\n\r\nYou can find details on this YouTube video, [[**Interview** Question] Duplicate Integers in Array](https://youtu.be/H1TOX-TposY).\r\n\r\n#### **Case 2.2** – Removing duplicates from an _unordered_ array by sorting it and check for next element for duplicates.\r\n\r\nThe algorithm is to sort the current array and apply case 1 algorithm.\r\n\r\n```csharp\r\nprivate static int[] RemoveDuplicatesBySortingFirst(int[] a)\r\n{\r\n\tArray.Sort(a);\r\n\treturn RemoveDuplicatesByCheckingPreviousElement(a);\r\n}\r\n```\r\n\r\nNote that `RemoveDuplicatesByCheckingPreviousElement` is the function name from case 1.\r\n\r\nSorting the array takes O(N log N) time and case 1, O(N), which results in O(N) total time complexity.\r\n\r\n### Conclusion\r\n\r\nWhen you were asked to solve this problem in an interview, ask the interviewer if the array is sorted or not. Use any algorithms above depending on the context;\r\n\r\nIf the array is ordered, then use case 1 algorithm, else either 2.1 or 2.2. But be aware that case 2.2 returns an array in different order from the original one.\r\n\r\nE.g.)  Given an array `a = {8, 1, 1, 3, 2, 2}`,\r\n\r\n```csharp\r\nRemoveDuplicatesBySortingFirst(a)\r\n```\r\n\r\nAbove function returns `{1, 2, 3, 8}`, **not** `{8, 1, 3, 2}`.\r\n\r\nFull working source code can be found on [GitHub](https://github.com/dance2die/Demo.LearnByDoing/blob/master/Demo.LearnByDoing.General/RemoveDuplicatesProgram.cs).\r\n\r\n\r\n_The post [Removing Duplicates from an Array (Using C#)](https://www.slightedgecoder.com/2017/03/18/removing-duplicates-array-using-c/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com)._",
    "canonical_url": "https://www.slightedgecoder.com/2017/03/18/removing-duplicates-array-using-c/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 2,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/03/18/removing-duplicates-array-using-c/",
    "positive_reactions_count": 10,
    "edited_at": null,
    "crossposted_at": "2018-11-25T03:11:13.127Z",
    "language": "en",
    "cached_tag_list": "csharp, tutorial",
    "path": "/dance2die/removing-duplicates-from-an-array-using-c-1fl",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-11-26T17:51:37.840Z"
  },
  {
    "title": "Depth-First Tree Traversal",
    "slug": "depth-first-tree-traversal-4l55-temp-slug-4675321",
    "created_at": "2018-07-07T01:41:36.321Z",
    "main_image": null,
    "description": "\n\n* Featured Image – “tree” by AmishHomo, used under CC BY 2.0\n\n* The full workin...",
    "published": false,
    "published_at": "2017-03-26T11:45:29.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/kenorwig/33051659145/in/photolist-SmEoLa-8ayiD4-dqarfG-5DC811-7eKKLj-9qrnoZ-9B2Lor-84hd8L-doRPFa-qGa6NE-m2Afgp-2193x-9GU4BC-bVnUAS-8iFmBG-e712bc-pebv7p-69THJB-cXskaJ-oncXE-8hhqUP-RPEM3-njFjSY-hBt2TR-4VoKTV-iPayWm-ciKgxW-d8udC9-9tXNXQ-efxZPy-Ek8Wh-h17NPK-oZHbQr-m9qs9-4G8yY4-5Rnvwp-AKZmA-RAs4FJ-qiAzi8-g2u2y-5eyFVz-bbh1ZT-ntNFQF-4FLXz1-hU7rUY-pUbruw-SZqaFe-9z2uWL-93SbqU-hjce93\"\u003etree\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/powerset/\"\u003eAmishHomo\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by/2.0/\"\u003eCC BY 2.0\u003c/a\u003e\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003e* The full working source code is available on \u003ca href=\"https://github.com/dance2die/Demo.LearnByDoing/tree/master/Demo.LearnByDoing.General/Tree\"\u003eGitHub\u003c/a\u003e *\u003c/p\u003e\n\n\u003cp\u003eI’ve forgotten most of the data structure concepts, especially a Tree structure. So I’ve been re-learning these concepts and would like to share how to traverse a Tree object.\u003c/p\u003e\n\n\u003cp\u003eThere are two search methods, depth-first, and breath-first. I will only talk about depth-first search methods operating on a binary tree. A binary search tree is where “left node \u0026lt; parent \u0026lt; right node” as shown below.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--0EzI2AbK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/03/Binary-Search-Tree.jpg%3Fresize%3D1170%252C556%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--0EzI2AbK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/03/Binary-Search-Tree.jpg%3Fresize%3D1170%252C556%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThere are three depth-first search methods; In-order, Pre-order, and Post-order.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"inorder\" href=\"#inorder\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  In-Order\n\u003c/h4\u003e\n\n\u003cp\u003eThis is a most common case of traversing. In-Order in the order the nodes are stored. For the tree above, the list would contain “1 2 3 4 5 6 7”.\u003c/p\u003e\n\n\u003cp\u003eThe implementation looks like the following.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eprivate static void InOrderTraversal(TreeNode\\\u0026lt;int\\\u0026gt; node, List\\\u0026lt;int\\\u0026gt; list) { if (node == null) return; InOrderTraversal(node.Left, list); list.Add(node.Value); InOrderTraversal(node.Right, list); }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eThe function processes left, parent, and then right nodes.\u003c/p\u003e\n\n\u003cp\u003eThe first processed node is the leftmost leaf and the last one, rightmost leaf.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"preorder\" href=\"#preorder\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Pre-Order\n\u003c/h4\u003e\n\n\u003cp\u003ePre-order traverses parent, left, then right, so the list would contain “4 2 1 3 6 5 7”.\u003c/p\u003e\n\n\u003cp\u003eThe code looks like following.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eprivate static void PreOrderTraversal(TreeNode node, List list) { if (node == null) return; list.Add(node.Value); PreOrderTraversal(node.Left, list); PreOrderTraversal(node.Right, list); }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eThe function processes parent, left, and then right nodes.\u003c/p\u003e\n\n\u003cp\u003eThe first processed is the root, while the last one is the rightmost leaf.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"postorder\" href=\"#postorder\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Post-Order\n\u003c/h4\u003e\n\n\u003cp\u003ePost-order traverses left, right, then parent so the list contains “1 3 2 5 7 6 4”.\u003c/p\u003e\n\n\u003cp\u003eFollowing implements the post-order traversal using recursion.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eprivate static void PostOrderTraversal(TreeNode\\\u0026lt;int\\\u0026gt; node, List\\\u0026lt;int\\\u0026gt; list) { if (node == null) return; PostOrderTraversal(node.Left, list); PostOrderTraversal(node.Right, list); list.Add(node.Value); }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eThe function processes left, right, and then the parent nodes.\u003c/p\u003e\n\n\u003cp\u003eThe first to be processed is the leftmost leaf, and the last one is root.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eTypical use cases for\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e*\u003cem\u003eIn-Order: *\u003c/em\u003e You’d typically use this method to sort or search a value inside a tree\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003ePre-Order:\u003c/strong\u003e  I don’t see much use cases for this other than converting a math notation to a prefix notation, which I don’t see many use cases for.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003ePost-Order:\u003c/strong\u003e  You’d typically use this when you need to access leaves first.\n\n\u003col\u003e\n\u003cli\u003eA use case is when you process a post-fix notation equation.\u003c/li\u003e\n\u003cli\u003eYou can also use this to delete references in, say, dependency injection tree. You need to delete child references and then their parents so that no memory would be leaked.\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/03/26/depth-first-tree-traversal/\"\u003eDepth-First Tree Traversal\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Depth-First Tree Traversal\npublished: false\ntags: Blog Entry,Programming,inorder,postorder\ncanonical_url: https://www.slightedgecoder.com/2017/03/26/depth-first-tree-traversal/\n---\n\n\\* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/kenorwig/33051659145/in/photolist-SmEoLa-8ayiD4-dqarfG-5DC811-7eKKLj-9qrnoZ-9B2Lor-84hd8L-doRPFa-qGa6NE-m2Afgp-2193x-9GU4BC-bVnUAS-8iFmBG-e712bc-pebv7p-69THJB-cXskaJ-oncXE-8hhqUP-RPEM3-njFjSY-hBt2TR-4VoKTV-iPayWm-ciKgxW-d8udC9-9tXNXQ-efxZPy-Ek8Wh-h17NPK-oZHbQr-m9qs9-4G8yY4-5Rnvwp-AKZmA-RAs4FJ-qiAzi8-g2u2y-5eyFVz-bbh1ZT-ntNFQF-4FLXz1-hU7rUY-pUbruw-SZqaFe-9z2uWL-93SbqU-hjce93\"\u003etree\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/powerset/\"\u003eAmishHomo\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by/2.0/\"\u003eCC BY 2.0\u003c/a\u003e\u003c/small\u003e\n\n\\* The full working source code is available on [GitHub](https://github.com/dance2die/Demo.LearnByDoing/tree/master/Demo.LearnByDoing.General/Tree) \\*\n\nI’ve forgotten most of the data structure concepts, especially a Tree structure. So I’ve been re-learning these concepts and would like to share how to traverse a Tree object.\n\nThere are two search methods, depth-first, and breath-first. I will only talk about depth-first search methods operating on a binary tree. A binary search tree is where “left node \\\u003c parent \\\u003c right node” as shown below.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/03/Binary-Search-Tree.jpg?resize=1170%2C556\u0026ssl=1)\n\nThere are three depth-first search methods; In-order, Pre-order, and Post-order.\n\n#### In-Order\n\nThis is a most common case of traversing. In-Order in the order the nodes are stored. For the tree above, the list would contain “1 2 3 4 5 6 7”.\n\nThe implementation looks like the following.\n\n```\nprivate static void InOrderTraversal(TreeNode\\\u003cint\\\u003e node, List\\\u003cint\\\u003e list) { if (node == null) return; InOrderTraversal(node.Left, list); list.Add(node.Value); InOrderTraversal(node.Right, list); }\n```\n\nThe function processes left, parent, and then right nodes.\n\nThe first processed node is the leftmost leaf and the last one, rightmost leaf.\n\n#### Pre-Order\n\nPre-order traverses parent, left, then right, so the list would contain “4 2 1 3 6 5 7”.\n\nThe code looks like following.\n\n```\nprivate static void PreOrderTraversal(TreeNode node, List list) { if (node == null) return; list.Add(node.Value); PreOrderTraversal(node.Left, list); PreOrderTraversal(node.Right, list); }\n```\n\nThe function processes parent, left, and then right nodes.\n\nThe first processed is the root, while the last one is the rightmost leaf.\n\n#### Post-Order\n\nPost-order traverses left, right, then parent so the list contains “1 3 2 5 7 6 4”.\n\nFollowing implements the post-order traversal using recursion.\n\n```\nprivate static void PostOrderTraversal(TreeNode\\\u003cint\\\u003e node, List\\\u003cint\\\u003e list) { if (node == null) return; PostOrderTraversal(node.Left, list); PostOrderTraversal(node.Right, list); list.Add(node.Value); }\n```\n\nThe function processes left, right, and then the parent nodes.\n\nThe first to be processed is the leftmost leaf, and the last one is root.\n\n### Conclusion\n\nTypical use cases for\n\n1. **In-Order: ** You’d typically use this method to sort or search a value inside a tree\n2. **Pre-Order:**  I don’t see much use cases for this other than converting a math notation to a prefix notation, which I don’t see many use cases for.\n3. **Post-Order:**  You’d typically use this when you need to access leaves first.\n  1. A use case is when you process a post-fix notation equation.\n  2. You can also use this to delete references in, say, dependency injection tree. You need to delete child references and then their parents so that no memory would be leaked.\n\nThe post [Depth-First Tree Traversal](https://www.slightedgecoder.com/2017/03/26/depth-first-tree-traversal/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/03/26/depth-first-tree-traversal/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/03/26/depth-first-tree-traversal/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, inorder, postorder",
    "path": "/dance2die/depth-first-tree-traversal-4l55-temp-slug-4675321",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-03-26T11:45:29.000Z"
  },
  {
    "title": "Explaining OOP keywords to CSO",
    "slug": "explaining-oop-keywords-to-cso-2fp5-temp-slug-8961987",
    "created_at": "2018-07-07T01:41:36.901Z",
    "main_image": null,
    "description": "\n\n* Featured Image – “thought” by Henadz Freshphoto.ru, used under CC BY 2.0 / Dr...",
    "published": false,
    "published_at": "2017-04-01T18:02:29.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/fresh_photo/3479598520/in/photolist-6itRpW-8YV4K5-cbFuP-6nB9e7-pese9F-fZq5k-boP9f-33uSN8-36dp5A-CvkE9i-eqgjAZ-9xFSCY-5pGeQz-oW7kV-2qiyY-5ohott-7MqMb9-8Cty3b-wuTaa-9kSzg-5Qxk7D-S9cyEx-LkM3u-5xgQBY-Qwyaau-4PuREH-EvADN-51BgCF-7twbdi-y3FRQ-66HNpY-mSzh2-2RUC4-h4S9Jo-RxT8e9-7biKoj-oyHheo-4DC4Af-b5wD6k-38oAT-oVFdt1-9bMCiU-82STq-3X3G8G-dMtDHi-5QqfY2-RhZgsm-2TC9gp-8JD5NQ-68Jnd5\"\u003ethought\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/fresh_photo/\"\u003eHenadz Freshphoto.ru\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by/2.0/\"\u003eCC BY 2.0\u003c/a\u003e / Dropped Quality to 60\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eI was called into CSO (Chief Strategy Officer)’s office one day and out of nowhere to explain some C# keywords. I wasn’t sure if he was asking me because he didn’t know or to test me. far as I know, He had a technical background and was a programmer himself at one point in his career.\u003c/p\u003e\n\n\u003cp\u003eThe C# keywords in questions were “\u003ca href=\"https://msdn.microsoft.com/en-us/library/7c5ka91b.aspx\"\u003einternal\u003c/a\u003e“, “\u003ca href=\"https://msdn.microsoft.com/en-us/library/st6sy9xe.aspx\"\u003eprivate\u003c/a\u003e“, and “\u003ca href=\"https://msdn.microsoft.com/en-us/library/bcd5672a.aspx\"\u003eprotected\u003c/a\u003e” (“keywords” hereafter).\u003c/p\u003e\n\n\u003cp\u003eIf you know OOP (Object Oriented Programming), you are bound to run into the keywords many times. But explaining \u003cstrong\u003eWHY\u003c/strong\u003e they are created was something totally different.\u003cbr\u003e\u003cbr\u003e\n \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--OF-FLT9M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/04/why.jpg%3Fresize%3D345%252C259%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--OF-FLT9M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/04/why.jpg%3Fresize%3D345%252C259%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\n* \u003csmall\u003eImage – “\u003ca href=\"https://www.flickr.com/photos/teflon/128827389/in/photolist-cogTT-2Fe52-2Fea6-2Fe85-ebK7ri-kLFg-9yaos5-c5RFo-8jxPcU-5mRVt7-5mRVzf-NzcYg-6Bm1xS-5RTAYN-5mRVKY-6CaRNc-adWDJ7-eHPQRX-4N137b-c9GE7w-7oLZc5-5GKNcU-obNEX1-5mRVcb-sCmzUS-5mRVNb-5mRVDm-5o5Ga8-5vYzTD-5mMFrv-4BWetp-7f6H73-5mRVGY-5mRVgo-4BWeDV-5mMFfX-9iMK47-e6r1Q7-7XvXtS-pg8efy-51DcAc-bQJ7C4-djnqHW-stvmRg-SiQ3F8-sjf9Yx-5Y5kW-mg6Ree-9H3aSr-ofmEhH\"\u003eWHY?\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/teflon/\"\u003eMartin Deutsch\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by-nc-nd/2.0/\"\u003eCC BY-NC-ND 2.0\u003c/a\u003e / Dropped Quality to 60\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eHe asked me, why they are used and create in the first place.\u003c/p\u003e\n\n\u003cp\u003eAs a first attempt, I explained to him that the keywords were to encapsulate data and to prevent users from accessing functionalities in code. The response was that he didn’t get it.\u003c/p\u003e\n\n\u003cp\u003eThe second attempt was to be more \u003cstrong\u003especific\u003c/strong\u003e by showing him that “internal” hides a class/method outside current DLL while “protected” hides data/methods from other classes not deriving from it, and “private” from any other classes.\u003c/p\u003e\n\n\u003cp\u003eBut alas, he wanted a simpler answer. I was started to feel dejected.\u003c/p\u003e\n\n\u003cp\u003eBefore my next attempt, I mulled over it while blankly staring at the whiteboard. After few minutes, a light bulb finally went off in my head.\u003c/p\u003e\n\n\u003cp\u003eThose keywords were created to do the same thing; they just work on different levels of abstractions. “Internal” is for package level, while “private” \u0026amp; “protected” for class levels.\u003c/p\u003e\n\n\u003cp\u003eHe finally gave me an OK and let me go.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eI’ve reached a deeper understanding of those keywords after a short meeting.\u003c/p\u003e\n\n\u003cp\u003eThe CSO probably called to teach me how to think and reach to an understanding, not to learn about C# keywords.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/04/01/explaining-oop-keywords-cso/\"\u003eExplaining OOP keywords to CSO\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Explaining OOP keywords to CSO\npublished: false\ntags: Blog Entry,TIL,cso,explanation\ncanonical_url: https://www.slightedgecoder.com/2017/04/01/explaining-oop-keywords-cso/\n---\n\n\\* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/fresh_photo/3479598520/in/photolist-6itRpW-8YV4K5-cbFuP-6nB9e7-pese9F-fZq5k-boP9f-33uSN8-36dp5A-CvkE9i-eqgjAZ-9xFSCY-5pGeQz-oW7kV-2qiyY-5ohott-7MqMb9-8Cty3b-wuTaa-9kSzg-5Qxk7D-S9cyEx-LkM3u-5xgQBY-Qwyaau-4PuREH-EvADN-51BgCF-7twbdi-y3FRQ-66HNpY-mSzh2-2RUC4-h4S9Jo-RxT8e9-7biKoj-oyHheo-4DC4Af-b5wD6k-38oAT-oVFdt1-9bMCiU-82STq-3X3G8G-dMtDHi-5QqfY2-RhZgsm-2TC9gp-8JD5NQ-68Jnd5\"\u003ethought\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/fresh_photo/\"\u003eHenadz Freshphoto.ru\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by/2.0/\"\u003eCC BY 2.0\u003c/a\u003e / Dropped Quality to 60\u003c/small\u003e\n\nI was called into CSO (Chief Strategy Officer)’s office one day and out of nowhere to explain some C# keywords. I wasn’t sure if he was asking me because he didn’t know or to test me. far as I know, He had a technical background and was a programmer himself at one point in his career.\n\nThe C# keywords in questions were “[internal](https://msdn.microsoft.com/en-us/library/7c5ka91b.aspx)“, “[private](https://msdn.microsoft.com/en-us/library/st6sy9xe.aspx)“, and “[protected](https://msdn.microsoft.com/en-us/library/bcd5672a.aspx)” (“keywords” hereafter).\n\nIf you know OOP (Object Oriented Programming), you are bound to run into the keywords many times. But explaining **WHY** they are created was something totally different.  \n ![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/04/why.jpg?resize=345%2C259\u0026ssl=1)  \n\\* \u003csmall\u003eImage – “\u003ca href=\"https://www.flickr.com/photos/teflon/128827389/in/photolist-cogTT-2Fe52-2Fea6-2Fe85-ebK7ri-kLFg-9yaos5-c5RFo-8jxPcU-5mRVt7-5mRVzf-NzcYg-6Bm1xS-5RTAYN-5mRVKY-6CaRNc-adWDJ7-eHPQRX-4N137b-c9GE7w-7oLZc5-5GKNcU-obNEX1-5mRVcb-sCmzUS-5mRVNb-5mRVDm-5o5Ga8-5vYzTD-5mMFrv-4BWetp-7f6H73-5mRVGY-5mRVgo-4BWeDV-5mMFfX-9iMK47-e6r1Q7-7XvXtS-pg8efy-51DcAc-bQJ7C4-djnqHW-stvmRg-SiQ3F8-sjf9Yx-5Y5kW-mg6Ree-9H3aSr-ofmEhH\"\u003eWHY?\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/teflon/\"\u003eMartin Deutsch\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by-nc-nd/2.0/\"\u003eCC BY-NC-ND 2.0\u003c/a\u003e / Dropped Quality to 60\u003c/small\u003e\n\nHe asked me, why they are used and create in the first place.\n\nAs a first attempt, I explained to him that the keywords were to encapsulate data and to prevent users from accessing functionalities in code. The response was that he didn’t get it.\n\nThe second attempt was to be more **specific** by showing him that “internal” hides a class/method outside current DLL while “protected” hides data/methods from other classes not deriving from it, and “private” from any other classes.\n\nBut alas, he wanted a simpler answer. I was started to feel dejected.\n\nBefore my next attempt, I mulled over it while blankly staring at the whiteboard. After few minutes, a light bulb finally went off in my head.\n\nThose keywords were created to do the same thing; they just work on different levels of abstractions. “Internal” is for package level, while “private” \u0026 “protected” for class levels.\n\nHe finally gave me an OK and let me go.\n\n### Conclusion\n\nI’ve reached a deeper understanding of those keywords after a short meeting.\n\nThe CSO probably called to teach me how to think and reach to an understanding, not to learn about C# keywords.\n\nThe post [Explaining OOP keywords to CSO](https://www.slightedgecoder.com/2017/04/01/explaining-oop-keywords-cso/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/04/01/explaining-oop-keywords-cso/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/04/01/explaining-oop-keywords-cso/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, todayilearned, cso, explanation",
    "path": "/dance2die/explaining-oop-keywords-to-cso-2fp5-temp-slug-8961987",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-04-01T18:02:29.000Z"
  },
  {
    "title": "BREADTH-FIRST TREE TRAVERSAL",
    "slug": "breadth-first-tree-traversal-3a0p-temp-slug-7196339",
    "created_at": "2018-07-07T01:41:37.383Z",
    "main_image": null,
    "description": "\n\n* Featured Image – “Trees” by RichardBH, used under CC BY 2.0\n\nIn the previous ...",
    "published": false,
    "published_at": "2017-04-08T11:41:59.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/rbh/14431865903/in/photolist-nZi5Wc-iPaKKA-5vsbCi-7T27xW-qwXZNW-cA254b-v7KBR-cGHLy5-eYcLS9-5nwc5b-7ZddkJ-S4PqiP-rwhx6n-b2x1Fz-k9T9qu-7WdxCi-5v6DBH-69THJB-9a83Tc-qLj55Z-dR7NWS-9YF3Su-bUurhS-9ierJ3-b2x5TV-howvfr-4rawjf-9xwTPZ-rkhaxS-5DC811-7eKKLj-RLksUu-9qrnoZ-9B2Lor-doRPFa-pebv7p-2193x-m2Afgp-9GU4BC-bVnUAS-e712bc-cXskaJ-8hhqUP-RPEM3-hBt2TR-njFjSY-d8udC9-9tXNXQ-h17NPK-oZHbQr\"\u003eTrees\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/rbh/\"\u003eRichardBH\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by/2.0/\"\u003eCC BY 2.0\u003c/a\u003e\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eIn the previous article, \u003ca href=\"https://dev.to/dance2die/depth-first-tree-traversal-4l55-temp-slug-4675321\"\u003eDepth-First Tree Traversal\u003c/a\u003e, I wrote about how to traverse trees with Depth-first approaches;In-Order, Pre-Order, and Post-Order traversals.\u003c/p\u003e\n\n\u003cp\u003eIn this article, I will talk about the algorithm and an implementation for a breadth-first version.\u003c/p\u003e\n\n\u003cp\u003eAs a spoiler, you don’t have a use a recursion and it needs a familiar data structure.\u003c/p\u003e\n\n\u003cp\u003eI am going to use the same tree structure I used in the previous article.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--0EzI2AbK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/03/Binary-Search-Tree.jpg%3Fresize%3D1170%252C556%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--0EzI2AbK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/03/Binary-Search-Tree.jpg%3Fresize%3D1170%252C556%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003eBreadth-first traverse means going through each node from the root of the tree, then next level down and down until you reach the maximum height the tree.\u003c/p\u003e\n\n\u003cp\u003eWhen traversing a tree above, an algorithm needs to go from 4 2 6 1 3 5 7 from top down, left to right;4 is the root, next level down on the left, it’s 2, then the node on the same depth, 6, and so on.\u003c/p\u003e\n\n\u003cp\u003eAs you pass over each level, you need to keep a track of all the nodes sharing the same depth.\u003c/p\u003e\n\n\u003cp\u003eFrom the description, it looks like we need to process whichever node we encountered first in each depth. This is where a \u003ca href=\"https://en.wikipedia.org/wiki/Queue_(abstract_data_type)\"\u003equeue\u003c/a\u003ecomes into play.\u003c/p\u003e\n\n\u003cp\u003eThe algorithm is fairly simple.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAdd the root to the queue\u003c/p\u003e\n\n\u003cp\u003eWhile the queue is not empty,\u003c/p\u003e\n\n\u003cp\u003eDequeue a node\u003c/p\u003e\n\n\u003cp\u003eProcess the node\u003c/p\u003e\n\n\u003cp\u003eQueue left node of the node for further processing\u003c/p\u003e\n\n\u003cp\u003eQueue right node of the node for further processing\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eHere is the implementation in C#.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eprivate static void TraverseBreadthFirst(TreeNode\\\u0026lt;int\\\u0026gt; root, List\\\u0026lt;int\\\u0026gt; list) { if (root == null) return; Queue\\\u0026lt;TreeNode\\\u0026lt;int\\\u0026gt;\\\u0026gt; queue = new Queue\\\u0026lt;TreeNode\\\u0026lt;int\\\u0026gt;\\\u0026gt;(); queue.Enqueue(root); while (queue.Count \\\u0026gt; 0) { var node = queue.Dequeue(); list.Add(node.Value); if (node.Left != null) queue.Enqueue(node.Left); if (node.Right != null) queue.Enqueue(node.Right); } }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eThe implementation follows the algorithm almost word by word except for the simple validation guard clause in the first line.\u003c/p\u003e\n\n\u003cp\u003eAfter the method exits, the list will contain 4 2 6 1 3 5 7.\u003c/p\u003e\n\n\u003cp\u003eThe working source is available on \u003ca href=\"https://github.com/dance2die/Demo.LearnByDoing/blob/master/Demo.LearnByDoing.General/Tree/BreadthFirstTraversal.cs\"\u003eGitHub\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eConclusion\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eI’ve covered bothDepth-first and Breadth-first traversals in two entries.\u003c/p\u003e\n\n\u003cp\u003eBreadth-first traversal is less intuitive to implement than depth-first traversals but still easy to do so using a queue abstract data structure.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/04/08/breadth-first-tree-traversal/\"\u003eBREADTH-FIRST TREE TRAVERSAL\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: BREADTH-FIRST TREE TRAVERSAL\npublished: false\ntags: Blog Entry,Programming,breadth-first,traversal\ncanonical_url: https://www.slightedgecoder.com/2017/04/08/breadth-first-tree-traversal/\n---\n\n\\* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/rbh/14431865903/in/photolist-nZi5Wc-iPaKKA-5vsbCi-7T27xW-qwXZNW-cA254b-v7KBR-cGHLy5-eYcLS9-5nwc5b-7ZddkJ-S4PqiP-rwhx6n-b2x1Fz-k9T9qu-7WdxCi-5v6DBH-69THJB-9a83Tc-qLj55Z-dR7NWS-9YF3Su-bUurhS-9ierJ3-b2x5TV-howvfr-4rawjf-9xwTPZ-rkhaxS-5DC811-7eKKLj-RLksUu-9qrnoZ-9B2Lor-doRPFa-pebv7p-2193x-m2Afgp-9GU4BC-bVnUAS-e712bc-cXskaJ-8hhqUP-RPEM3-hBt2TR-njFjSY-d8udC9-9tXNXQ-h17NPK-oZHbQr\"\u003eTrees\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/rbh/\"\u003eRichardBH\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by/2.0/\"\u003eCC BY 2.0\u003c/a\u003e\u003c/small\u003e\n\nIn the previous article, [Depth-First Tree Traversal](https://dev.to/dance2die/depth-first-tree-traversal-4l55-temp-slug-4675321), I wrote about how to traverse trees with Depth-first approaches;In-Order, Pre-Order, and Post-Order traversals.\n\nIn this article, I will talk about the algorithm and an implementation for a breadth-first version.\n\nAs a spoiler, you don’t have a use a recursion and it needs a familiar data structure.\n\nI am going to use the same tree structure I used in the previous article.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/03/Binary-Search-Tree.jpg?resize=1170%2C556\u0026ssl=1)Breadth-first traverse means going through each node from the root of the tree, then next level down and down until you reach the maximum height the tree.\n\nWhen traversing a tree above, an algorithm needs to go from 4 2 6 1 3 5 7 from top down, left to right;4 is the root, next level down on the left, it’s 2, then the node on the same depth, 6, and so on.\n\nAs you pass over each level, you need to keep a track of all the nodes sharing the same depth.\n\nFrom the description, it looks like we need to process whichever node we encountered first in each depth. This is where a [queue](https://en.wikipedia.org/wiki/Queue_(abstract_data_type))comes into play.\n\nThe algorithm is fairly simple.\n\n\u003e Add the root to the queue\n\u003e \n\u003e While the queue is not empty,\n\u003e \n\u003e Dequeue a node\n\u003e \n\u003e Process the node\n\u003e \n\u003e Queue left node of the node for further processing\n\u003e \n\u003e Queue right node of the node for further processing\n\nHere is the implementation in C#.\n\n```\nprivate static void TraverseBreadthFirst(TreeNode\\\u003cint\\\u003e root, List\\\u003cint\\\u003e list) { if (root == null) return; Queue\\\u003cTreeNode\\\u003cint\\\u003e\\\u003e queue = new Queue\\\u003cTreeNode\\\u003cint\\\u003e\\\u003e(); queue.Enqueue(root); while (queue.Count \\\u003e 0) { var node = queue.Dequeue(); list.Add(node.Value); if (node.Left != null) queue.Enqueue(node.Left); if (node.Right != null) queue.Enqueue(node.Right); } }\n```\n\n \n\nThe implementation follows the algorithm almost word by word except for the simple validation guard clause in the first line.\n\nAfter the method exits, the list will contain 4 2 6 1 3 5 7.\n\nThe working source is available on [GitHub](https://github.com/dance2die/Demo.LearnByDoing/blob/master/Demo.LearnByDoing.General/Tree/BreadthFirstTraversal.cs).\n\n**Conclusion**\n\nI’ve covered bothDepth-first and Breadth-first traversals in two entries.\n\nBreadth-first traversal is less intuitive to implement than depth-first traversals but still easy to do so using a queue abstract data structure.\n\n \n\n \n\n \n\nThe post [BREADTH-FIRST TREE TRAVERSAL](https://www.slightedgecoder.com/2017/04/08/breadth-first-tree-traversal/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/04/08/breadth-first-tree-traversal/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/04/08/breadth-first-tree-traversal/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, breadthfirst, traversal",
    "path": "/dance2die/breadth-first-tree-traversal-3a0p-temp-slug-7196339",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-04-08T11:41:59.000Z"
  },
  {
    "title": "My journey on Implementing Dijkstra’s algorithm",
    "slug": "my-journey-on-implementing-dijkstras-algorithm-a9h-temp-slug-689662",
    "created_at": "2018-07-07T01:41:38.312Z",
    "main_image": null,
    "description": "\n\n* Featured Image of Edsger Wybe Dijkstra from Wikipedia, used under CC BY 3.0.\n...",
    "published": false,
    "published_at": "2017-04-20T15:40:02.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e* \u003csmall\u003eFeatured Image of Edsger Wybe Dijkstra from \u003ca href=\"https://en.wikipedia.org/wiki/Edsger_W._Dijkstra#/media/File:Edsger_Wybe_Dijkstra.jpg\"\u003eWikipedia\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by-sa/3.0/\"\u003eCC BY 3.0\u003c/a\u003e.\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eI’ve spent about 3 days trying to implement Dijkstra’s algorithm after watching a YouTube video.\u003c/p\u003e\n\n\u003cp\u003eI’ve implemented three times (once a day) but on the 3rd day, I finally succeeded.\u003c/p\u003e\n\n\u003cp\u003eThis entry is neither going to be about what Dijkstra’s algorithm is nor how the implementation works. I will just talk about steps I took to implement it and post the full source link on the bottom.\u003c/p\u003e\n\n\u003cp\u003eHere is how I spent each day.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"day-1\" href=\"#day-1\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eDay 1\u003c/strong\u003e\n\u003c/h4\u003e\n\n\u003cp\u003eI used \u003ca href=\"https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm#Pseudocode\"\u003epseudocode on Wikipedia page\u003c/a\u003e and some other algorithms I found elsewhere. I failed splendidly because I didn’t understand how the algorithm worked behind the scenes.\u003c/p\u003e\n\n\u003cp\u003eHere is the failed implementation.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epublic List\\\u0026lt;T\\\u0026gt; GetPathBetween(Node\\\u0026lt;T\\\u0026gt; fromNode, Node\\\u0026lt;T\\\u0026gt; toNode) { List\\\u0026lt;T\\\u0026gt; path = new List\\\u0026lt;T\\\u0026gt;(); var dist = new Dictionary\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;, int\\\u0026gt;(); // unvisited nodes var fringe = new List\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;\\\u0026gt;(); foreach (KeyValuePair\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;, Edge\\\u0026lt;T\\\u0026gt;[]\\\u0026gt; vertext in \\_vertices) { // Unknown distance from source to v dist[vertext.Key] = int.MaxValue; // int.MaxValue =\\\u0026gt; infinity foreach (Edge\\\u0026lt;T\\\u0026gt; edge in vertext.Value) { dist[edge.Node] = int.MaxValue; } // All nodes initially in Q (unvisited nodes) fringe.Add(vertext.Key); } // Distance from source to source //KeyValuePair\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;, int\\\u0026gt; first = dist.FirstOrDefault(pair =\\\u0026gt; pair.Value == fromNode.Value); KeyValuePair\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;, int\\\u0026gt; first = dist.FirstOrDefault(pair =\\\u0026gt; pair.Key.Value.Equals(fromNode.Value)); dist[first.Key] = 0; // distance from itself is 0 while (fringe.Count \\\u0026gt; 0) { // shortest path var processed = dist.Where(pair =\\\u0026gt; !path.Contains(pair.Key.Value)).ToList(); Node\\\u0026lt;T\\\u0026gt; m = processed.FirstOrDefault(pair =\\\u0026gt; pair.Value == processed.Min(p =\\\u0026gt; p.Value)).Key; int mDist = dist[m]; fringe.Remove(m); if (!\\_vertices.ContainsKey(m)) { dist.Remove(m); continue; } foreach (Edge\\\u0026lt;T\\\u0026gt; w in \\_vertices[m]) { if (dist[w.Node] == int.MaxValue) { dist[w.Node] = mDist + (mDist + w.Weight); fringe.Add(w.Node); } else { dist[w.Node] = Math.Min(dist[w.Node], mDist + (mDist + w.Weight)); } } path.Add(m.Value); } return path; }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eIt’s basically a hodgepodge of a mess (the last implementation looks ugly as well by the way) and doesn’t work at all. I knew that I was lacking knowledge on how the algorithm worked.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"day-2\" href=\"#day-2\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Day 2\n\u003c/h4\u003e\n\n\u003cp\u003eAfter understanding how the algorithm works was important, I found a \u003ca href=\"https://youtu.be/zXfDYaahsNA\"\u003egreat video\u003c/a\u003e on YouTube by \u003ca href=\"https://www.youtube.com/channel/UC3QLHt6mHfmg4x_h2am7ecg\"\u003eSesh Venugopal\u003c/a\u003e and watched it before implementing another version.  \u003c/p\u003e\n\n\u003cp\u003eThe video explains \u003cstrong\u003evisually\u003c/strong\u003e how the algorithm works. The video also explains its own version of the algorithm. I decided to use the algorithm in the video to implement for the second time.\u003c/p\u003e\n\n\u003cp\u003eBut I failed beautifully again because I couldn’t get the Wikipedia and other versions of algorithms out of my head.\u003c/p\u003e\n\n\u003cp\u003eHere is the 2nd failed attempt.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epublic List\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;\\\u0026gt; GetPathBetween2(Node\\\u0026lt;T\\\u0026gt; fromNode, Node\\\u0026lt;T\\\u0026gt; toNode) { var s = \\_vertices; var dist = new Dictionary\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;, int\\\u0026gt;(); var prev = new Dictionary\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;, T\\\u0026gt;(); var Q = new List\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;\\\u0026gt;(); var processed = new List\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;\\\u0026gt;(); // Initial KeyValuePair\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;, Edge\\\u0026lt;T\\\u0026gt;[]\\\u0026gt; first = s.First(pair =\\\u0026gt; pair.Key.Value.Equals(fromNode.Value)); foreach (var v in \\_vertices.Where(pair =\\\u0026gt; !pair.Key.Value.Equals(first.Key.Value))) { foreach (Edge\\\u0026lt;T\\\u0026gt; edge in v.Value) { dist[edge.Node] = int.MaxValue; // inifinity Q.Add(edge.Node); } } foreach (Edge\\\u0026lt;T\\\u0026gt; edge in first.Value) { dist[edge.Node] = edge.Weight; Q.Add(edge.Node); } dist[first.Key] = 0; prev[first.Key] = first.Key.Value; Q.Add(first.Key); while (Q.Count \\\u0026gt; 0) { var notProcessed = dist.Where(pair =\\\u0026gt; !processed.Contains(pair.Key)).ToList(); if (notProcessed.Count == 0) break; // Remove the minimum distance vertex, say m, from the fringe // (it is done, the shortest path to it has been found) Node\\\u0026lt;T\\\u0026gt; u = Q.First(node =\\\u0026gt; { var min = notProcessed.Min(pair =\\\u0026gt; pair.Value); return dist[node].Equals(min); }); Q.Remove(u); if (\\_vertices.ContainsKey(u)) { foreach (Edge\\\u0026lt;T\\\u0026gt; v in \\_vertices[u]) { var alt = dist[u] + v.Weight; if (alt \\\u0026lt; dist[v.Node]) { dist[v.Node] = alt; if (!prev.Values.Contains(u.Value)) prev[v.Node] = u.Value; } } } if (u.Value.Equals(toNode.Value)) { prev[toNode] = toNode.Value; return new List\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;\\\u0026gt;(prev.Distinct().Select(pair =\\\u0026gt; new Node\\\u0026lt;T\\\u0026gt;(pair.Value))); } processed.Add(u); } return prev.Select(pair =\\\u0026gt; pair.Key).ToList(); }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003ch4\u003e\n  \u003ca name=\"day-3\" href=\"#day-3\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Day 3\n\u003c/h4\u003e\n\n\u003cp\u003eI read Wikipedia pseudocode again. I was armed with the knowledge of how the algorithm worked after watching the video, I decided to read Wikipedia algorithm and give it one more try.\u003c/p\u003e\n\n\u003cp\u003eAfter some struggle here and there, I’ve finally completed the implementation.\u003c/p\u003e\n\n\u003cp\u003eIt’s kind of funny that, after watching it work, I felt ecstatic and felt a jolt in my head. “Ah, this is why I decided to learn to program” was my first thought after realizing what happened.\u003c/p\u003e\n\n\u003cp\u003eHere is the 3rd working implementation.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epublic List\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;\\\u0026gt; GetPathBetween3(Node\\\u0026lt;T\\\u0026gt; fromNode, Node\\\u0026lt;T\\\u0026gt; toNode) { var dist = new Dictionary\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;, int\\\u0026gt;(); var prev = new Dictionary\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;, Node\\\u0026lt;T\\\u0026gt;\\\u0026gt;(); var Q = new HashSet\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;\\\u0026gt;(); foreach (KeyValuePair\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;, Edge\\\u0026lt;T\\\u0026gt;[]\\\u0026gt; v in \\_vertices) { foreach (Edge\\\u0026lt;T\\\u0026gt; edge in v.Value) { // Unknown distance from source to v dist[edge.Node] = int.MaxValue; // Previous node in optimal path from source prev[edge.Node] = null; Q.Add(edge.Node); } } // Distance from source to source dist[fromNode] = 0; Q.Add(fromNode); // while Q is not empty: while (Q.Count \\\u0026gt; 0) { // Node with the Least distance will be selected // Note that order is not guaranteed. Node\\\u0026lt;T\\\u0026gt; u = (from distance in dist where Q.Contains(distance.Key) \u0026amp;\u0026amp; distance.Value == dist.Where(pair =\\\u0026gt; Q.Contains(pair.Key)).Min(pair =\\\u0026gt; pair.Value) select distance.Key).FirstOrDefault(); if (u.Value.Equals(toNode.Value)) { var S = new Stack\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;\\\u0026gt;(); while (prev.ContainsKey(u)) { S.Push(u); u = prev[u]; } S.Push(u); return S.ToList(); } Q.Remove(u); if (!\\_vertices.ContainsKey(u)) continue; foreach (Edge\\\u0026lt;T\\\u0026gt; v in \\_vertices[u]) { var alt = dist[u] + v.Weight; if (alt \\\u0026lt; dist[v.Node]) { dist[v.Node] = alt; prev[v.Node] = u; } } } return null; }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eIt’s by no means production ready, so copy/paste at your own risk. I’d never release this to production without heavy testing and refactoring first.\u003c/p\u003e\n\n\u003cp\u003eHere is the full source (including Main, Node, Graph implementations) on \u003ca href=\"https://github.com/dance2die/Demo.LearnByDoing/tree/master/Demo.LearnByDoing.General/Algorithms/Dijkstra\"\u003eGitHub\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eAlso, check out \u003ca href=\"https://github.com/mburst\"\u003eMax Burstein\u003c/a\u003e‘s \u003ca href=\"https://github.com/mburst/dijkstras-algorithm/blob/master/dijkstras.cs\"\u003eC# implementation\u003c/a\u003e on GitHub. I found Max’s implementation much cleaner and easier to understand.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eThe journey was tough but was quite worth it. It has given me more confidence as a developer.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/04/20/my-journey-on-implementing-dijkstras-algorithm/\"\u003eMy journey on Implementing Dijkstra’s algorithm\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: My journey on Implementing Dijkstra’s algorithm\npublished: false\ntags: Blog Entry,Programming,algorithm,dijkstra's algorithm\ncanonical_url: https://www.slightedgecoder.com/2017/04/20/my-journey-on-implementing-dijkstras-algorithm/\n---\n\n\\* \u003csmall\u003eFeatured Image of Edsger Wybe Dijkstra from \u003ca href=\"https://en.wikipedia.org/wiki/Edsger_W._Dijkstra#/media/File:Edsger_Wybe_Dijkstra.jpg\"\u003eWikipedia\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by-sa/3.0/\"\u003eCC BY 3.0\u003c/a\u003e.\u003c/small\u003e\n\nI’ve spent about 3 days trying to implement Dijkstra’s algorithm after watching a YouTube video.\n\nI’ve implemented three times (once a day) but on the 3rd day, I finally succeeded.\n\nThis entry is neither going to be about what Dijkstra’s algorithm is nor how the implementation works. I will just talk about steps I took to implement it and post the full source link on the bottom.\n\nHere is how I spent each day.\n\n#### **Day 1**\n\nI used [pseudocode on Wikipedia page](https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm#Pseudocode) and some other algorithms I found elsewhere. I failed splendidly because I didn’t understand how the algorithm worked behind the scenes.\n\nHere is the failed implementation.\n\n```\npublic List\\\u003cT\\\u003e GetPathBetween(Node\\\u003cT\\\u003e fromNode, Node\\\u003cT\\\u003e toNode) { List\\\u003cT\\\u003e path = new List\\\u003cT\\\u003e(); var dist = new Dictionary\\\u003cNode\\\u003cT\\\u003e, int\\\u003e(); // unvisited nodes var fringe = new List\\\u003cNode\\\u003cT\\\u003e\\\u003e(); foreach (KeyValuePair\\\u003cNode\\\u003cT\\\u003e, Edge\\\u003cT\\\u003e[]\\\u003e vertext in \\_vertices) { // Unknown distance from source to v dist[vertext.Key] = int.MaxValue; // int.MaxValue =\\\u003e infinity foreach (Edge\\\u003cT\\\u003e edge in vertext.Value) { dist[edge.Node] = int.MaxValue; } // All nodes initially in Q (unvisited nodes) fringe.Add(vertext.Key); } // Distance from source to source //KeyValuePair\\\u003cNode\\\u003cT\\\u003e, int\\\u003e first = dist.FirstOrDefault(pair =\\\u003e pair.Value == fromNode.Value); KeyValuePair\\\u003cNode\\\u003cT\\\u003e, int\\\u003e first = dist.FirstOrDefault(pair =\\\u003e pair.Key.Value.Equals(fromNode.Value)); dist[first.Key] = 0; // distance from itself is 0 while (fringe.Count \\\u003e 0) { // shortest path var processed = dist.Where(pair =\\\u003e !path.Contains(pair.Key.Value)).ToList(); Node\\\u003cT\\\u003e m = processed.FirstOrDefault(pair =\\\u003e pair.Value == processed.Min(p =\\\u003e p.Value)).Key; int mDist = dist[m]; fringe.Remove(m); if (!\\_vertices.ContainsKey(m)) { dist.Remove(m); continue; } foreach (Edge\\\u003cT\\\u003e w in \\_vertices[m]) { if (dist[w.Node] == int.MaxValue) { dist[w.Node] = mDist + (mDist + w.Weight); fringe.Add(w.Node); } else { dist[w.Node] = Math.Min(dist[w.Node], mDist + (mDist + w.Weight)); } } path.Add(m.Value); } return path; }\n```\n\nIt’s basically a hodgepodge of a mess (the last implementation looks ugly as well by the way) and doesn’t work at all. I knew that I was lacking knowledge on how the algorithm worked.\n\n#### Day 2\n\nAfter understanding how the algorithm works was important, I found a [great video](https://youtu.be/zXfDYaahsNA) on YouTube by [Sesh Venugopal](https://www.youtube.com/channel/UC3QLHt6mHfmg4x_h2am7ecg) and watched it before implementing another version.  \n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/zXfDYaahsNA\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"\u003e\u003c/iframe\u003e\n\nThe video explains **visually** how the algorithm works. The video also explains its own version of the algorithm. I decided to use the algorithm in the video to implement for the second time.\n\nBut I failed beautifully again because I couldn’t get the Wikipedia and other versions of algorithms out of my head.\n\nHere is the 2nd failed attempt.\n\n```\npublic List\\\u003cNode\\\u003cT\\\u003e\\\u003e GetPathBetween2(Node\\\u003cT\\\u003e fromNode, Node\\\u003cT\\\u003e toNode) { var s = \\_vertices; var dist = new Dictionary\\\u003cNode\\\u003cT\\\u003e, int\\\u003e(); var prev = new Dictionary\\\u003cNode\\\u003cT\\\u003e, T\\\u003e(); var Q = new List\\\u003cNode\\\u003cT\\\u003e\\\u003e(); var processed = new List\\\u003cNode\\\u003cT\\\u003e\\\u003e(); // Initial KeyValuePair\\\u003cNode\\\u003cT\\\u003e, Edge\\\u003cT\\\u003e[]\\\u003e first = s.First(pair =\\\u003e pair.Key.Value.Equals(fromNode.Value)); foreach (var v in \\_vertices.Where(pair =\\\u003e !pair.Key.Value.Equals(first.Key.Value))) { foreach (Edge\\\u003cT\\\u003e edge in v.Value) { dist[edge.Node] = int.MaxValue; // inifinity Q.Add(edge.Node); } } foreach (Edge\\\u003cT\\\u003e edge in first.Value) { dist[edge.Node] = edge.Weight; Q.Add(edge.Node); } dist[first.Key] = 0; prev[first.Key] = first.Key.Value; Q.Add(first.Key); while (Q.Count \\\u003e 0) { var notProcessed = dist.Where(pair =\\\u003e !processed.Contains(pair.Key)).ToList(); if (notProcessed.Count == 0) break; // Remove the minimum distance vertex, say m, from the fringe // (it is done, the shortest path to it has been found) Node\\\u003cT\\\u003e u = Q.First(node =\\\u003e { var min = notProcessed.Min(pair =\\\u003e pair.Value); return dist[node].Equals(min); }); Q.Remove(u); if (\\_vertices.ContainsKey(u)) { foreach (Edge\\\u003cT\\\u003e v in \\_vertices[u]) { var alt = dist[u] + v.Weight; if (alt \\\u003c dist[v.Node]) { dist[v.Node] = alt; if (!prev.Values.Contains(u.Value)) prev[v.Node] = u.Value; } } } if (u.Value.Equals(toNode.Value)) { prev[toNode] = toNode.Value; return new List\\\u003cNode\\\u003cT\\\u003e\\\u003e(prev.Distinct().Select(pair =\\\u003e new Node\\\u003cT\\\u003e(pair.Value))); } processed.Add(u); } return prev.Select(pair =\\\u003e pair.Key).ToList(); }\n```\n\n#### Day 3\n\nI read Wikipedia pseudocode again. I was armed with the knowledge of how the algorithm worked after watching the video, I decided to read Wikipedia algorithm and give it one more try.\n\nAfter some struggle here and there, I’ve finally completed the implementation.\n\nIt’s kind of funny that, after watching it work, I felt ecstatic and felt a jolt in my head. “Ah, this is why I decided to learn to program” was my first thought after realizing what happened.\n\nHere is the 3rd working implementation.\n\n```\npublic List\\\u003cNode\\\u003cT\\\u003e\\\u003e GetPathBetween3(Node\\\u003cT\\\u003e fromNode, Node\\\u003cT\\\u003e toNode) { var dist = new Dictionary\\\u003cNode\\\u003cT\\\u003e, int\\\u003e(); var prev = new Dictionary\\\u003cNode\\\u003cT\\\u003e, Node\\\u003cT\\\u003e\\\u003e(); var Q = new HashSet\\\u003cNode\\\u003cT\\\u003e\\\u003e(); foreach (KeyValuePair\\\u003cNode\\\u003cT\\\u003e, Edge\\\u003cT\\\u003e[]\\\u003e v in \\_vertices) { foreach (Edge\\\u003cT\\\u003e edge in v.Value) { // Unknown distance from source to v dist[edge.Node] = int.MaxValue; // Previous node in optimal path from source prev[edge.Node] = null; Q.Add(edge.Node); } } // Distance from source to source dist[fromNode] = 0; Q.Add(fromNode); // while Q is not empty: while (Q.Count \\\u003e 0) { // Node with the Least distance will be selected // Note that order is not guaranteed. Node\\\u003cT\\\u003e u = (from distance in dist where Q.Contains(distance.Key) \u0026\u0026 distance.Value == dist.Where(pair =\\\u003e Q.Contains(pair.Key)).Min(pair =\\\u003e pair.Value) select distance.Key).FirstOrDefault(); if (u.Value.Equals(toNode.Value)) { var S = new Stack\\\u003cNode\\\u003cT\\\u003e\\\u003e(); while (prev.ContainsKey(u)) { S.Push(u); u = prev[u]; } S.Push(u); return S.ToList(); } Q.Remove(u); if (!\\_vertices.ContainsKey(u)) continue; foreach (Edge\\\u003cT\\\u003e v in \\_vertices[u]) { var alt = dist[u] + v.Weight; if (alt \\\u003c dist[v.Node]) { dist[v.Node] = alt; prev[v.Node] = u; } } } return null; }\n```\n\nIt’s by no means production ready, so copy/paste at your own risk. I’d never release this to production without heavy testing and refactoring first.\n\nHere is the full source (including Main, Node, Graph implementations) on [GitHub](https://github.com/dance2die/Demo.LearnByDoing/tree/master/Demo.LearnByDoing.General/Algorithms/Dijkstra).\n\nAlso, check out [Max Burstein](https://github.com/mburst)‘s [C# implementation](https://github.com/mburst/dijkstras-algorithm/blob/master/dijkstras.cs) on GitHub. I found Max’s implementation much cleaner and easier to understand.\n\n### Conclusion\n\nThe journey was tough but was quite worth it. It has given me more confidence as a developer.\n\n \n\n \n\nThe post [My journey on Implementing Dijkstra’s algorithm](https://www.slightedgecoder.com/2017/04/20/my-journey-on-implementing-dijkstras-algorithm/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/04/20/my-journey-on-implementing-dijkstras-algorithm/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/04/20/my-journey-on-implementing-dijkstras-algorithm/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, algorithm, dijkstrasalgorithm",
    "path": "/dance2die/my-journey-on-implementing-dijkstras-algorithm-a9h-temp-slug-689662",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-04-20T15:40:02.000Z"
  },
  {
    "title": "Review of the Clean Coder (by Uncle Bob)",
    "slug": "review-of-the-clean-coder-by-uncle-bob-22jj-temp-slug-3368055",
    "created_at": "2018-07-07T01:41:39.174Z",
    "main_image": null,
    "description": "\n\n_ The Clean Coder _ by Robert C. Martin (aka Uncle Bob) is a book about how a p...",
    "published": false,
    "published_at": "2017-04-24T16:40:26.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e_ \u003cstrong\u003eThe Clean Coder\u003c/strong\u003e _ by \u003ca href=\"http://www.cleancoder.com\"\u003eRobert C. Martin\u003c/a\u003e (aka \u003ca href=\"https://en.wikipedia.org/wiki/Robert_Cecil_Martin\"\u003eUncle Bob\u003c/a\u003e) is a book about how a professional should conduct or what one needs to do to become one. The book consists of 14 chapters.\u003c/p\u003e\n\n\u003cp\u003eThere are some technical bits here and there but the majority of the content deals with what one needs to do to become a “professional” (the word Uncle Bob stressed a lot in the book as the subtitle of the book is “A Code of Conduct for Professional Developers”) developer.\u003c/p\u003e\n\n\u003cp\u003eFor more coding oriented content, you might want to refer to his previous book, _ \u003cstrong\u003eClean Code\u003c/strong\u003e _, which was also a phenomenal book.\u003c/p\u003e\n\n\u003cp\u003eHere is the table of contents.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003col\u003e\n\u003cli\u003eProfessionalism\n\u003c/li\u003e\n\u003cli\u003eSaying No\n\u003c/li\u003e\n\u003cli\u003eSaying Yes\n\u003c/li\u003e\n\u003cli\u003eCoding\n\u003c/li\u003e\n\u003cli\u003eTest Driven Development\n\u003c/li\u003e\n\u003cli\u003ePracticing\n\u003c/li\u003e\n\u003cli\u003eAcceptance Testing\n\u003c/li\u003e\n\u003cli\u003eTesting Strategies\n\u003c/li\u003e\n\u003cli\u003eTime Management\n\u003c/li\u003e\n\u003cli\u003eEstimation\n\u003c/li\u003e\n\u003cli\u003ePressure\n\u003c/li\u003e\n\u003cli\u003eCollaboration\n\u003c/li\u003e\n\u003cli\u003eTeams and Projects\n\u003c/li\u003e\n\u003cli\u003eMentoring, Apprenticeship, and Craftsmanship\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eUncle Bob starts by defining what “Professionalism” is.\u003c/p\u003e\n\n\u003cp\u003eThen he describes the situation when a professional should say “Yes” and “No”. When someone constantly asks you to do “try” something, you don’t give up and say that you will “try”, which is same as admitting that you can get it done within said time constraint. Uncle Bob argues that saying “Yes” when you know that you can get something done within the time constraint put on your project is unprofessional. You should say “No” and be consistent about it.\u003c/p\u003e\n\n\u003cp\u003eAs another renowned engineer Ken Beck did in _ \u003cstrong\u003eExtreme Programming Explained\u003c/strong\u003e _, the Clean Coder dedicates a chapter on Test Driven Development (TDD). TDD is something one does not abandon during crunch time.  One should actually do more of it, Uncle Bob writes because doing so would prevent a developer from writing bad code, which would cause more debugging time thus slowing down the progress.\u003c/p\u003e\n\n\u003cp\u003eWhen Kent Beck stressed the importance of pair programming, I just didn’t buy it. But when Uncle Bob mentioned that one would code in pairs during the time of crisis, why would not one want to do a pair programming during normal time, it struck me hard. I often ask my coworkers to look at my code when pressure is cooking and I can’t see what’s wrong with my code.\u003c/p\u003e\n\n\u003cp\u003eHow should a professional develop her/his skills? Uncle Bob compares professional development with what martial arts and other professionals in different fields do; \u003cstrong\u003ePracticing\u003c/strong\u003e. He brings up many concepts such as\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eKata\u003c/li\u003e\n\u003cli\u003eWasa\u003c/li\u003e\n\u003cli\u003eRandori\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eHe then moves toward how to do testing and how it should be done.\u003c/p\u003e\n\n\u003cp\u003eAs I mentioned before, one should not say “Yes” when you cannot get something done in time. How do we know that we have enough time or not before saying “Yes”? Uncle Bob talks about how to manage time and make estimations to find out when to say yes or no.\u003c/p\u003e\n\n\u003cp\u003eThe rest of chapters are dedicated on how to deal with pressures and work with other developers on a project.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eI had a great time reading the book as I was reading hours without noticing. If you wonder about how to conduct and grow as a professional developer, this is the book for you.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/04/24/review-clean-coder-uncle-bob/\"\u003eReview of the Clean Coder (by Uncle Bob)\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Review of the Clean Coder (by Uncle Bob)\npublished: false\ntags: Blog Entry,book review,extreme programming ,kent beck\ncanonical_url: https://www.slightedgecoder.com/2017/04/24/review-clean-coder-uncle-bob/\n---\n\n_ **The Clean Coder** _ by [Robert C. Martin](http://www.cleancoder.com) (aka [Uncle Bob](https://en.wikipedia.org/wiki/Robert_Cecil_Martin)) is a book about how a professional should conduct or what one needs to do to become one. The book consists of 14 chapters.\n\nThere are some technical bits here and there but the majority of the content deals with what one needs to do to become a “professional” (the word Uncle Bob stressed a lot in the book as the subtitle of the book is “A Code of Conduct for Professional Developers”) developer.\n\nFor more coding oriented content, you might want to refer to his previous book, _ **Clean Code** _, which was also a phenomenal book.\n\nHere is the table of contents.\n\n\u003e 1. Professionalism  \n\u003e 2. Saying No  \n\u003e 3. Saying Yes  \n\u003e 4. Coding  \n\u003e 5. Test Driven Development  \n\u003e 6. Practicing  \n\u003e 7. Acceptance Testing  \n\u003e 8. Testing Strategies  \n\u003e 9. Time Management  \n\u003e 10. Estimation  \n\u003e 11. Pressure  \n\u003e 12. Collaboration  \n\u003e 13. Teams and Projects  \n\u003e 14. Mentoring, Apprenticeship, and Craftsmanship\n\nUncle Bob starts by defining what “Professionalism” is.\n\nThen he describes the situation when a professional should say “Yes” and “No”. When someone constantly asks you to do “try” something, you don’t give up and say that you will “try”, which is same as admitting that you can get it done within said time constraint. Uncle Bob argues that saying “Yes” when you know that you can get something done within the time constraint put on your project is unprofessional. You should say “No” and be consistent about it.\n\nAs another renowned engineer Ken Beck did in _ **Extreme Programming Explained** _, the Clean Coder dedicates a chapter on Test Driven Development (TDD). TDD is something one does not abandon during crunch time.  One should actually do more of it, Uncle Bob writes because doing so would prevent a developer from writing bad code, which would cause more debugging time thus slowing down the progress.\n\nWhen Kent Beck stressed the importance of pair programming, I just didn’t buy it. But when Uncle Bob mentioned that one would code in pairs during the time of crisis, why would not one want to do a pair programming during normal time, it struck me hard. I often ask my coworkers to look at my code when pressure is cooking and I can’t see what’s wrong with my code.\n\nHow should a professional develop her/his skills? Uncle Bob compares professional development with what martial arts and other professionals in different fields do; **Practicing**. He brings up many concepts such as\n\n- Kata\n- Wasa\n- Randori\n\nHe then moves toward how to do testing and how it should be done.\n\nAs I mentioned before, one should not say “Yes” when you cannot get something done in time. How do we know that we have enough time or not before saying “Yes”? Uncle Bob talks about how to manage time and make estimations to find out when to say yes or no.\n\nThe rest of chapters are dedicated on how to deal with pressures and work with other developers on a project.\n\n### Conclusion\n\nI had a great time reading the book as I was reading hours without noticing. If you wonder about how to conduct and grow as a professional developer, this is the book for you.\n\nThe post [Review of the Clean Coder (by Uncle Bob)](https://www.slightedgecoder.com/2017/04/24/review-clean-coder-uncle-bob/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/04/24/review-clean-coder-uncle-bob/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/04/24/review-clean-coder-uncle-bob/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, bookreview, extremeprogramming, kentbeck",
    "path": "/dance2die/review-of-the-clean-coder-by-uncle-bob-22jj-temp-slug-3368055",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-04-24T16:40:26.000Z"
  },
  {
    "title": "Implementation of Bellman-Ford Algorithm",
    "slug": "implementation-of-bellman-ford-algorithm-451b-temp-slug-7501564",
    "created_at": "2018-07-07T01:41:40.547Z",
    "main_image": null,
    "description": "\n\nI’ve already implemented Dijkstra’s algorithmand was looking for another way to...",
    "published": false,
    "published_at": "2017-05-07T20:06:01.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI’ve already \u003ca href=\"https://dev.to/dance2die/my-journey-on-implementing-dijkstras-algorithm-a9h-temp-slug-689662\"\u003eimplemented Dijkstra’s algorithm\u003c/a\u003eand was looking for another way to find the shortest path between two nodes in a graph. I found a simpler algorithm based on relaxation called “Bellman-Ford” algorithm.\u003c/p\u003e\n\n\u003cp\u003eI just implemented the algorithm in C# and would like to share it.\u003c/p\u003e\n\n\u003cp\u003eI had many troubles implementing Dijkstra’s algorithm because I didn’t have a good understanding of how it worked. So this time, I watched more videos on the Bellman-Ford algorithm to grasp the idea behind it.\u003c/p\u003e\n\n\u003cp\u003eHere are the videos I found helpful.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=9PHkk0UavIM\"\u003eBellman-Ford in 4 minutes — Theory\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://youtu.be/obWXjtg0L64\"\u003eBellman-Ford in 5 minutes — Step by step example\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWatch the Theory video first before diving into example video.\u003c/p\u003e\n\n\u003cp\u003eTheory and examples behind Bellman-Ford are very well explained in the videos and on \u003ca href=\"https://en.wikipedia.org/wiki/Bellman%E2%80%93Ford_algorithm\"\u003eWikipedia \u003c/a\u003eso I won’t go over them. I will only show a concrete implementation in C#. The implementation is based purely on algorithm listed in Wikipedia.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eWikipedia Pseudo Code\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eThis is the pseudo code I will base my implementation.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003efunction BellmanFord(list vertices, list edges, vertex source) ::distance[],predecessor[] // This implementation takes in a graph, represented as // lists of vertices and edges, and fills two arrays // (distance and predecessor) with shortest-path // (less cost/distance/metric) information // Step 1: initialize graph for each vertex v in vertices: distance[v] := inf // At the beginning , all vertices have a weight of infinity predecessor[v] := null // And a null predecessor distance[source] := 0 // Except for the Source, where the Weight is zero // Step 2: relax edges repeatedly for i from 1 to size(vertices)-1: for each edge (u, v) with weight w in edges: if distance[u] + w \\\u0026lt; distance[v]: distance[v] := distance[u] + w predecessor[v] := u // Step 3: check for negative-weight cycles for each edge (u, v) with weight w in edges: if distance[u] + w \\\u0026lt; distance[v]: error \"Graph contains a negative-weight cycle\" return distance[], predecessor[]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eBefore showing my implementation, I need to show you the data structure of Graph and its associated classes, Node, and Edge because the declaration of the implementing method looks different from that of the pseudo code.\u003c/p\u003e\n\n\u003cp\u003eHere is my \u003cem\u003eGraph\u003c/em\u003e data structure.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epublic class Graph\\\u0026lt;T\\\u0026gt; { public List\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;\\\u0026gt; Nodes { get; set; } public Dictionary\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;, Edge\\\u0026lt;T\\\u0026gt;[]\\\u0026gt; Vertices { get; } = new Dictionary\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;, Edge\\\u0026lt;T\\\u0026gt;[]\\\u0026gt;(); public void AddVertex(Node\\\u0026lt;T\\\u0026gt; node, Edge\\\u0026lt;T\\\u0026gt;[] edges) { if (!Vertices.ContainsKey(node)) Vertices.Add(node, edges); } ... }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eAnd \u003cem\u003eNode\u003c/em\u003e class representing a node in a graph.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epublic class Node\\\u0026lt;T\\\u0026gt; { public T Value { get; set; } public Node(T value) { Value = value; } ... }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eAnd also, my implementation of the graph has a class called “Edge” which is a line between two nodes and contains a weight and a linked node.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epublic class Edge\\\u0026lt;T\\\u0026gt; { public int Weight { get; set; } public Node\\\u0026lt;T\\\u0026gt; Node { get; set; } public Edge(int weight, Node\\\u0026lt;T\\\u0026gt; node) { Weight = weight; Node = node; } ... }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003ch4\u003e\n  \u003ca name=\"actual-implementation\" href=\"#actual-implementation\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Actual Implementation\n\u003c/h4\u003e\n\n\u003cp\u003eHere is the implementing method definition.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epublic Tuple\\\u0026lt;Dictionary\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;, int\\\u0026gt;, Dictionary\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;, Node\\\u0026lt;T\\\u0026gt;\\\u0026gt;\\\u0026gt; GetPathInfoUsingBellmanFordAlgorithm(Node\\\u0026lt;T\\\u0026gt; sourceNode)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eCurrently, the method \u003ccode\u003eGetPathInfoUsingBellmanFordAlgorithm\u003c/code\u003e belongs to “Graph” (I will refactor it later), which contains vertices and edges so only “sourceNode” is passed to it (thus leaving out “vertices” and “edges” parameter declarations in pseudo code).\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e::distance[],predecessor[]\u003c/code\u003e is implemented as two dictionaries as shown.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003evar distance = new Dictionary\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;, int\\\u0026gt;(); var predecessor = new Dictionary\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;, Node\\\u0026lt;T\\\u0026gt;\\\u0026gt;();\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003e\u003cem\u003edistance\u003c/em\u003e represents distances from source to the node being checked while \u003cem\u003epredecessor\u003c/em\u003e holds paths between nodes.\u003c/p\u003e\n\n\u003cp\u003eEach step in pseudo code is implemented as following.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eStep 1: initialize graph\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e// Step 1: initialize graph foreach (KeyValuePair\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;, Edge\\\u0026lt;T\\\u0026gt;[]\\\u0026gt; vertex in this.Vertices) { // At the beginning , all vertices have a weight of infinity distance[vertex.Key] = int.MaxValue; // And a null predecessor predecessor[vertex.Key] = null; // initialize nodes in edges foreach (var edge in vertex.Value) { distance[edge.Node] = int.MaxValue; predecessor[edge.Node] = null; } } // Except for the Source, where the Weight is zero distance[sourceNode] = 0;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eNotice that I am initializing all vertices as well as nodes associated with each vertex because my implementation of \u003cem\u003evertices\u003c/em\u003e contains only vertices that have an outbound link(s) to another node.\u003c/p\u003e\n\n\u003cp\u003eThe code is not yet optimized (since each edge can contain nodes that are already initialized) for demonstration purposes only to show 1 to 1 matching between my implementation and the Wikipedia pseudo code.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eStep 2: relax edges repeatedly\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e// Step 2: relax edges repeatedly for (int i = 1; i \\\u0026lt; this.Vertices.Count; i++) { foreach (KeyValuePair\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;, Edge\\\u0026lt;T\\\u0026gt;[]\\\u0026gt; vertex in this.Vertices) { var u = vertex.Key; foreach (Edge\\\u0026lt;T\\\u0026gt; edge in vertex.Value) { var v = edge.Node; var w = edge.Weight; if (distance[u] + w \\\u0026lt; distance[v]) { distance[v] = distance[u] + w; predecessor[v] = u; } } } }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eIn the pseudo code, there are only two for loops but the implementation has three due to the not-so-optimal data structure.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eStep 3: check for negative-weight cycles\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e// Step 3: check for negative-weight cycles foreach (KeyValuePair\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;, Edge\\\u0026lt;T\\\u0026gt;[]\\\u0026gt; vertex in this.Vertices) { var u = vertex.Key; foreach (Edge\\\u0026lt;T\\\u0026gt; edge in vertex.Value) { var v = edge.Node; var w = edge.Weight; if (distance[u] + w \\\u0026lt; distance[v]) throw new InvalidOperationException(\"Graph contains a negative-weight cycle\"); } }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eAs it was the case for step 2, this implementation has additional “foreach” loop to iterate over each edge in each vertex.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eStep 4: return result\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003ereturn Tuple.Create(distance, predecessor);\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eSince C# doesn’t allow returning multiple values from a method, I am returning the distance and the predecessor as a tuple. I will refactor it later wrapping the result in another class object.\u003c/p\u003e\n\n\u003cp\u003eNow the question is, \u003cstrong\u003ehow do you determine the shortest path between two nodes\u003c/strong\u003e  from the return value?\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"finding-the-shortest-path\" href=\"#finding-the-shortest-path\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Finding the shortest path\n\u003c/h4\u003e\n\n\u003cp\u003eOne of the return values, \u003cem\u003epredecessor\u003c/em\u003e, contains information on how to traverse between two nodes.\u003c/p\u003e\n\n\u003cp\u003eLet’s use this weighted graph as an example (Example is from \u003ca href=\"https://youtu.be/zXfDYaahsNA\"\u003ethis YouTube video\u003c/a\u003e.)\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--PrcdY2PE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/graph.jpg%3Fresize%3D743%252C436%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--PrcdY2PE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/graph.jpg%3Fresize%3D743%252C436%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe shortest path between “A” and “F” is “A-\u0026gt;B-\u0026gt;E-\u0026gt;G-\u0026gt;F”.\u003c/p\u003e\n\n\u003cp\u003eThe \u003cem\u003epredecessor\u003c/em\u003e returned by the method, \u003ccode\u003eGetPathInfoUsingBellmanFordAlgorithm\u003c/code\u003e looks like this.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ljTzEmZ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/predecessor.jpg%3Fresize%3D238%252C157%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ljTzEmZ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/predecessor.jpg%3Fresize%3D238%252C157%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eTo find the shortest path, we need to traverse from the destination back to the source node.\u003c/p\u003e\n\n\u003cp\u003eSo when we start from 6th item(where index is 5 {[F,G]}), the value in the dictionary is “G”. Next, we look for an item where “G” is the key in the predecessor. We find that the 7th item ({[G,E]}) has “G” as the key. Then iterate until we reach the source node, “A”. Since we are traversing backward, it seems like a stack would do the job to return the result in LIFO order.\u003c/p\u003e\n\n\u003cp\u003eThe implementation of a method that returns the shortest path looks like this.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epublic List\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;\\\u0026gt; GetShortestPathUsingBellmanFordAlgorithm(Node\\\u0026lt;T\\\u0026gt; fromNode, Node\\\u0026lt;T\\\u0026gt; toNode) { // Get the predecessor Tuple\\\u0026lt;Dictionary\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;, int\\\u0026gt;, Dictionary\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;, Node\\\u0026lt;T\\\u0026gt;\\\u0026gt;\\\u0026gt; pathInfo = GetPathInfoUsingBellmanFordAlgorithm(fromNode); var predecessors = pathInfo.Item2; // Initialize the stack with start node, which is the destination Stack\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;\\\u0026gt; result = new Stack\\\u0026lt;Node\\\u0026lt;T\\\u0026gt;\\\u0026gt;(); var startNode = toNode; result.Push(startNode); // Traverse the predecessor hashtable until we find do { var node = predecessors[startNode]; result.Push(node); // if we reached the source, then we are done. if (node.Value.Equals(fromNode.Value)) break; // Move to the next node startNode = node; } while (true); return result.ToList(); }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eAfter the getting the predecessor from “GetPathInfoUsingBellmanFordAlgorithm”, the code simply traverses the predecessor hash table in reverse order and stores each step in a stack.\u003c/p\u003e\n\n\u003cp\u003eI can’t stress enough that the code is not production ready because it’s just a demo implementation. The full source is available on \u003ca href=\"https://github.com/dance2die/Demo.LearnByDoing/tree/master/Demo.LearnByDoing.General/Algorithms/Graph\"\u003eGitHub\u003c/a\u003e. You can copy it, modify it, use it, distribute it any way you want/need to.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eI’ve described how Bellman-Ford algorithm is implemented in C#.  I am planning to refactor it to be more readable and structure the code properly and will push the updated code on GitHub.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/05/07/implementation-bellman-ford-algorithm/\"\u003eImplementation of Bellman-Ford Algorithm\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Implementation of Bellman-Ford Algorithm\npublished: false\ntags: Blog Entry,Programming,bellman-ford,c#\ncanonical_url: https://www.slightedgecoder.com/2017/05/07/implementation-bellman-ford-algorithm/\n---\n\nI’ve already [implemented Dijkstra’s algorithm](https://dev.to/dance2die/my-journey-on-implementing-dijkstras-algorithm-a9h-temp-slug-689662)and was looking for another way to find the shortest path between two nodes in a graph. I found a simpler algorithm based on relaxation called “Bellman-Ford” algorithm.\n\nI just implemented the algorithm in C# and would like to share it.\n\nI had many troubles implementing Dijkstra’s algorithm because I didn’t have a good understanding of how it worked. So this time, I watched more videos on the Bellman-Ford algorithm to grasp the idea behind it.\n\nHere are the videos I found helpful.\n\n- [Bellman-Ford in 4 minutes — Theory](https://www.youtube.com/watch?v=9PHkk0UavIM)\n- [Bellman-Ford in 5 minutes — Step by step example](https://youtu.be/obWXjtg0L64)\n\nWatch the Theory video first before diving into example video.\n\nTheory and examples behind Bellman-Ford are very well explained in the videos and on [Wikipedia ](https://en.wikipedia.org/wiki/Bellman%E2%80%93Ford_algorithm)so I won’t go over them. I will only show a concrete implementation in C#. The implementation is based purely on algorithm listed in Wikipedia.\n\n**Wikipedia Pseudo Code**\n\nThis is the pseudo code I will base my implementation.\n\n```\nfunction BellmanFord(list vertices, list edges, vertex source) ::distance[],predecessor[] // This implementation takes in a graph, represented as // lists of vertices and edges, and fills two arrays // (distance and predecessor) with shortest-path // (less cost/distance/metric) information // Step 1: initialize graph for each vertex v in vertices: distance[v] := inf // At the beginning , all vertices have a weight of infinity predecessor[v] := null // And a null predecessor distance[source] := 0 // Except for the Source, where the Weight is zero // Step 2: relax edges repeatedly for i from 1 to size(vertices)-1: for each edge (u, v) with weight w in edges: if distance[u] + w \\\u003c distance[v]: distance[v] := distance[u] + w predecessor[v] := u // Step 3: check for negative-weight cycles for each edge (u, v) with weight w in edges: if distance[u] + w \\\u003c distance[v]: error \"Graph contains a negative-weight cycle\" return distance[], predecessor[]\n```\n\nBefore showing my implementation, I need to show you the data structure of Graph and its associated classes, Node, and Edge because the declaration of the implementing method looks different from that of the pseudo code.\n\nHere is my _Graph_ data structure.\n\n```\npublic class Graph\\\u003cT\\\u003e { public List\\\u003cNode\\\u003cT\\\u003e\\\u003e Nodes { get; set; } public Dictionary\\\u003cNode\\\u003cT\\\u003e, Edge\\\u003cT\\\u003e[]\\\u003e Vertices { get; } = new Dictionary\\\u003cNode\\\u003cT\\\u003e, Edge\\\u003cT\\\u003e[]\\\u003e(); public void AddVertex(Node\\\u003cT\\\u003e node, Edge\\\u003cT\\\u003e[] edges) { if (!Vertices.ContainsKey(node)) Vertices.Add(node, edges); } ... }\n```\n\nAnd _Node_ class representing a node in a graph.\n\n```\npublic class Node\\\u003cT\\\u003e { public T Value { get; set; } public Node(T value) { Value = value; } ... }\n```\n\nAnd also, my implementation of the graph has a class called “Edge” which is a line between two nodes and contains a weight and a linked node.\n\n```\npublic class Edge\\\u003cT\\\u003e { public int Weight { get; set; } public Node\\\u003cT\\\u003e Node { get; set; } public Edge(int weight, Node\\\u003cT\\\u003e node) { Weight = weight; Node = node; } ... }\n```\n\n#### Actual Implementation\n\nHere is the implementing method definition.\n\n```\npublic Tuple\\\u003cDictionary\\\u003cNode\\\u003cT\\\u003e, int\\\u003e, Dictionary\\\u003cNode\\\u003cT\\\u003e, Node\\\u003cT\\\u003e\\\u003e\\\u003e GetPathInfoUsingBellmanFordAlgorithm(Node\\\u003cT\\\u003e sourceNode)\n```\n\nCurrently, the method `GetPathInfoUsingBellmanFordAlgorithm` belongs to “Graph” (I will refactor it later), which contains vertices and edges so only “sourceNode” is passed to it (thus leaving out “vertices” and “edges” parameter declarations in pseudo code).\n\n`::distance[],predecessor[]` is implemented as two dictionaries as shown.\n\n```\nvar distance = new Dictionary\\\u003cNode\\\u003cT\\\u003e, int\\\u003e(); var predecessor = new Dictionary\\\u003cNode\\\u003cT\\\u003e, Node\\\u003cT\\\u003e\\\u003e();\n```\n\n_distance_ represents distances from source to the node being checked while _predecessor_ holds paths between nodes.\n\nEach step in pseudo code is implemented as following.\n\n**Step 1: initialize graph**\n\n```\n// Step 1: initialize graph foreach (KeyValuePair\\\u003cNode\\\u003cT\\\u003e, Edge\\\u003cT\\\u003e[]\\\u003e vertex in this.Vertices) { // At the beginning , all vertices have a weight of infinity distance[vertex.Key] = int.MaxValue; // And a null predecessor predecessor[vertex.Key] = null; // initialize nodes in edges foreach (var edge in vertex.Value) { distance[edge.Node] = int.MaxValue; predecessor[edge.Node] = null; } } // Except for the Source, where the Weight is zero distance[sourceNode] = 0;\n```\n\nNotice that I am initializing all vertices as well as nodes associated with each vertex because my implementation of _vertices_ contains only vertices that have an outbound link(s) to another node.\n\nThe code is not yet optimized (since each edge can contain nodes that are already initialized) for demonstration purposes only to show 1 to 1 matching between my implementation and the Wikipedia pseudo code.\n\n**Step 2: relax edges repeatedly**\n\n```\n// Step 2: relax edges repeatedly for (int i = 1; i \\\u003c this.Vertices.Count; i++) { foreach (KeyValuePair\\\u003cNode\\\u003cT\\\u003e, Edge\\\u003cT\\\u003e[]\\\u003e vertex in this.Vertices) { var u = vertex.Key; foreach (Edge\\\u003cT\\\u003e edge in vertex.Value) { var v = edge.Node; var w = edge.Weight; if (distance[u] + w \\\u003c distance[v]) { distance[v] = distance[u] + w; predecessor[v] = u; } } } }\n```\n\nIn the pseudo code, there are only two for loops but the implementation has three due to the not-so-optimal data structure.\n\n**Step 3: check for negative-weight cycles**\n\n```\n// Step 3: check for negative-weight cycles foreach (KeyValuePair\\\u003cNode\\\u003cT\\\u003e, Edge\\\u003cT\\\u003e[]\\\u003e vertex in this.Vertices) { var u = vertex.Key; foreach (Edge\\\u003cT\\\u003e edge in vertex.Value) { var v = edge.Node; var w = edge.Weight; if (distance[u] + w \\\u003c distance[v]) throw new InvalidOperationException(\"Graph contains a negative-weight cycle\"); } }\n```\n\nAs it was the case for step 2, this implementation has additional “foreach” loop to iterate over each edge in each vertex.\n\n**Step 4: return result**\n\n```\nreturn Tuple.Create(distance, predecessor);\n```\n\nSince C# doesn’t allow returning multiple values from a method, I am returning the distance and the predecessor as a tuple. I will refactor it later wrapping the result in another class object.\n\nNow the question is, **how do you determine the shortest path between two nodes**  from the return value?\n\n#### Finding the shortest path\n\nOne of the return values, _predecessor_, contains information on how to traverse between two nodes.\n\nLet’s use this weighted graph as an example (Example is from [this YouTube video](https://youtu.be/zXfDYaahsNA).)\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/graph.jpg?resize=743%2C436\u0026ssl=1)\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nThe shortest path between “A” and “F” is “A-\\\u003eB-\\\u003eE-\\\u003eG-\\\u003eF”.\n\nThe _predecessor_ returned by the method, `GetPathInfoUsingBellmanFordAlgorithm` looks like this.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/predecessor.jpg?resize=238%2C157\u0026ssl=1)\n\nTo find the shortest path, we need to traverse from the destination back to the source node.\n\nSo when we start from 6th item(where index is 5 {[F,G]}), the value in the dictionary is “G”. Next, we look for an item where “G” is the key in the predecessor. We find that the 7th item ({[G,E]}) has “G” as the key. Then iterate until we reach the source node, “A”. Since we are traversing backward, it seems like a stack would do the job to return the result in LIFO order.\n\nThe implementation of a method that returns the shortest path looks like this.\n\n```\npublic List\\\u003cNode\\\u003cT\\\u003e\\\u003e GetShortestPathUsingBellmanFordAlgorithm(Node\\\u003cT\\\u003e fromNode, Node\\\u003cT\\\u003e toNode) { // Get the predecessor Tuple\\\u003cDictionary\\\u003cNode\\\u003cT\\\u003e, int\\\u003e, Dictionary\\\u003cNode\\\u003cT\\\u003e, Node\\\u003cT\\\u003e\\\u003e\\\u003e pathInfo = GetPathInfoUsingBellmanFordAlgorithm(fromNode); var predecessors = pathInfo.Item2; // Initialize the stack with start node, which is the destination Stack\\\u003cNode\\\u003cT\\\u003e\\\u003e result = new Stack\\\u003cNode\\\u003cT\\\u003e\\\u003e(); var startNode = toNode; result.Push(startNode); // Traverse the predecessor hashtable until we find do { var node = predecessors[startNode]; result.Push(node); // if we reached the source, then we are done. if (node.Value.Equals(fromNode.Value)) break; // Move to the next node startNode = node; } while (true); return result.ToList(); }\n```\n\nAfter the getting the predecessor from “GetPathInfoUsingBellmanFordAlgorithm”, the code simply traverses the predecessor hash table in reverse order and stores each step in a stack.\n\nI can’t stress enough that the code is not production ready because it’s just a demo implementation. The full source is available on [GitHub](https://github.com/dance2die/Demo.LearnByDoing/tree/master/Demo.LearnByDoing.General/Algorithms/Graph). You can copy it, modify it, use it, distribute it any way you want/need to.\n\n### Conclusion\n\nI’ve described how Bellman-Ford algorithm is implemented in C#.  I am planning to refactor it to be more readable and structure the code properly and will push the updated code on GitHub.\n\n \n\nThe post [Implementation of Bellman-Ford Algorithm](https://www.slightedgecoder.com/2017/05/07/implementation-bellman-ford-algorithm/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/05/07/implementation-bellman-ford-algorithm/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/05/07/implementation-bellman-ford-algorithm/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, bellmanford, c",
    "path": "/dance2die/implementation-of-bellman-ford-algorithm-451b-temp-slug-7501564",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-05-07T20:06:01.000Z"
  },
  {
    "title": "Union-Find Algorithm",
    "slug": "union-find-algorithm-2fi0-temp-slug-2042490",
    "created_at": "2018-07-07T01:41:41.281Z",
    "main_image": null,
    "description": "\n\n* Featured Image – “Union St. Street Sign in Bodie” by m01229, used under CC BY...",
    "published": false,
    "published_at": "2017-05-13T13:37:30.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/39908901@N06/14815502318/in/photolist-ozcjF9-nrKv69-a3tpyD-3fSBwq-a4wb5c-aLmjVz-pfSRLp-9qyvtR-myYQ7T-nA4G5s-ptfmGt-dh5bf2-gtf6dZ-db4Vqo-9YYbF1-a7d8AL-8FA6cF-freTSE-oLyZYY-coggGb-bT6Mkk-9QJjyk-2Si9ig-aNmeLa-7oSdMS-9yXosF-nGqW7x-cvdzP1-oRpHsX-dH3t8z-aou2qc-svQKHc-9kTby1-eeUcL8-83Fd5K-LFGHJ-4hdkBZ-aEvL7W-8PAyxv-iHZ35u-e8iHdf-agAMsy-9xsrSf-bji9xB-dd2kHq-ae26nH-wQRgYr-dfTsmM-dknx5Z-qHMjuV\"\u003eUnion St. Street Sign in Bodie\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/39908901@N06/\"\u003em01229\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by-nc/2.0/\"\u003eCC BY-NC 2.0\u003c/a\u003e (Medium sized image)\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eThere is a really cool course on Coursera regarding \u003ca href=\"https://www.coursera.org/learn/algorithms-part1/supplement/aYr6R/overview\"\u003eUnion-Find\u003c/a\u003e. The course was quite refreshing because I was never exposed to this simple concept before.\u003c/p\u003e\n\n\u003cp\u003eI just wanted to share the link for those learning graph theory as I am.\u003c/p\u003e\n\n\u003cp\u003eNow comes the boring stuff (how I found out about it and what I did with it).\u003c/p\u003e\n\n\u003cp\u003eI ran into a problem solving a question, \u003ca href=\"https://www.hackerrank.com/contests/rookierank-3/challenges/maximal-tourism\"\u003eMaximal Tourism\u003c/a\u003e on HackerRank. The problem is about getting most connected node counts in a graph given sets of connected nodes per line.\u003c/p\u003e\n\n\u003cp\u003eIt seemed like a very simple problem but I had trouble due to timeouts. I wanted to get some tips on how to solve the problem so I decided to check Discussion forum (I try to solve myself for hours or days before resorting to this usually).\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.hackerrank.com/mikesmnx?hr_r=1\"\u003eMikhail\u003c/a\u003e(@mikesmnx) posted a link to a Coursera course for those having a problem solving the problem. I was hesitant at first but decided to watch the video. After the first video in the course, I started digging it. After finishing the course, I screamed, “\u003ca href=\"https://youtu.be/6vMO3XmNXe4\"\u003eI know Kung-Fu\u003c/a\u003e“.\u003c/p\u003e\n\n\u003cp\u003eUnion-Find made me realize the flaw in my approach that I was just busy finding ways to build graphs. The better way was to caching or keeping track of connected nodes as I am building the graph. Using a tree structure never came into my mind during my attempts to solve it before watching the course.\u003c/p\u003e\n\n\u003cp\u003eHere is the C# version of Union-Find converted from Java (using Improved algorithm, which tracks sizes)\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eI was able to solve the problem with this code without any timeouts. Learning a new algorithm will make your day as well!\u003c/p\u003e\n\n\u003cp\u003eThe full source for the Maximal Tourism answer is posted on \u003ca href=\"https://github.com/dance2die/Problems.HackerRank/blob/master/ProblemsHackerRank.Contests.HourRank17/RookieRank%203/MaximalTourism.cs\"\u003eGitHub\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eConclusion\u003c/strong\u003e\n\u003c/h3\u003e\n\n\u003cp\u003eCheck out Union-Find and see how you can integrate it into your existing code base.\u003c/p\u003e\n\n\u003cp\u003eYou can find Union-Find algorithm applications in the \u003ca href=\"https://www.coursera.org/learn/algorithms-part1/lecture/OLXM8/union-find-applications\"\u003elast video\u003c/a\u003e in the course.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/05/13/union-find-algorithm/\"\u003eUnion-Find Algorithm\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Union-Find Algorithm\npublished: false\ntags: Blog Entry,Programming,TIL,algorithm\ncanonical_url: https://www.slightedgecoder.com/2017/05/13/union-find-algorithm/\n---\n\n\\* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/39908901@N06/14815502318/in/photolist-ozcjF9-nrKv69-a3tpyD-3fSBwq-a4wb5c-aLmjVz-pfSRLp-9qyvtR-myYQ7T-nA4G5s-ptfmGt-dh5bf2-gtf6dZ-db4Vqo-9YYbF1-a7d8AL-8FA6cF-freTSE-oLyZYY-coggGb-bT6Mkk-9QJjyk-2Si9ig-aNmeLa-7oSdMS-9yXosF-nGqW7x-cvdzP1-oRpHsX-dH3t8z-aou2qc-svQKHc-9kTby1-eeUcL8-83Fd5K-LFGHJ-4hdkBZ-aEvL7W-8PAyxv-iHZ35u-e8iHdf-agAMsy-9xsrSf-bji9xB-dd2kHq-ae26nH-wQRgYr-dfTsmM-dknx5Z-qHMjuV\"\u003eUnion St. Street Sign in Bodie\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/39908901@N06/\"\u003em01229\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by-nc/2.0/\"\u003eCC BY-NC 2.0\u003c/a\u003e (Medium sized image)\u003c/small\u003e\n\nThere is a really cool course on Coursera regarding [Union-Find](https://www.coursera.org/learn/algorithms-part1/supplement/aYr6R/overview). The course was quite refreshing because I was never exposed to this simple concept before.\n\nI just wanted to share the link for those learning graph theory as I am.\n\nNow comes the boring stuff (how I found out about it and what I did with it).\n\nI ran into a problem solving a question, [Maximal Tourism](https://www.hackerrank.com/contests/rookierank-3/challenges/maximal-tourism) on HackerRank. The problem is about getting most connected node counts in a graph given sets of connected nodes per line.\n\nIt seemed like a very simple problem but I had trouble due to timeouts. I wanted to get some tips on how to solve the problem so I decided to check Discussion forum (I try to solve myself for hours or days before resorting to this usually).\n\n[Mikhail](https://www.hackerrank.com/mikesmnx?hr_r=1)(@mikesmnx) posted a link to a Coursera course for those having a problem solving the problem. I was hesitant at first but decided to watch the video. After the first video in the course, I started digging it. After finishing the course, I screamed, “[I know Kung-Fu](https://youtu.be/6vMO3XmNXe4)“.\n\nUnion-Find made me realize the flaw in my approach that I was just busy finding ways to build graphs. The better way was to caching or keeping track of connected nodes as I am building the graph. Using a tree structure never came into my mind during my attempts to solve it before watching the course.\n\nHere is the C# version of Union-Find converted from Java (using Improved algorithm, which tracks sizes)\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nI was able to solve the problem with this code without any timeouts. Learning a new algorithm will make your day as well!\n\nThe full source for the Maximal Tourism answer is posted on [GitHub](https://github.com/dance2die/Problems.HackerRank/blob/master/ProblemsHackerRank.Contests.HourRank17/RookieRank%203/MaximalTourism.cs).\n\n### **Conclusion**\n\nCheck out Union-Find and see how you can integrate it into your existing code base.\n\nYou can find Union-Find algorithm applications in the [last video](https://www.coursera.org/learn/algorithms-part1/lecture/OLXM8/union-find-applications) in the course.\n\nThe post [Union-Find Algorithm](https://www.slightedgecoder.com/2017/05/13/union-find-algorithm/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/05/13/union-find-algorithm/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/05/13/union-find-algorithm/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, todayilearned, algorithm",
    "path": "/dance2die/union-find-algorithm-2fi0-temp-slug-2042490",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-05-13T13:37:30.000Z"
  },
  {
    "title": "Setting up an ES6 Environment for ASP.NET MVC 5",
    "slug": "setting-up-an-es6-environment-for-aspnet-mvc-5-11mj-temp-slug-5475884",
    "created_at": "2018-07-07T01:41:42.445Z",
    "main_image": null,
    "description": "\n\nI still haven’t moved to ASP.NET Core and still use ASP.NET MVC. As I am learni...",
    "published": false,
    "published_at": "2017-05-22T11:09:11.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI still haven’t moved to ASP.NET Core and still use ASP.NET MVC. As I am learning ES6 features I’ve been looking for articles for setting up an environment for ES6 for ASP.NET MVC.\u003c/p\u003e\n\n\u003cp\u003eUnfortunately, all the articles I’ve run into dealt with ASP.NET Core and had to come up with my own way after combining all the resources I’ve been reading and watching.\u003c/p\u003e\n\n\u003cp\u003eThis article with show you how to set up ASP.NET MVC 5 to enable ES6 javascript development using \u003ca href=\"https://webpack.github.io/\"\u003eWebpack\u003c/a\u003eand \u003ca href=\"https://babeljs.io/\"\u003eBabel\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e** \u003cstrong\u003eUPDATE\u003c/strong\u003e : 6/13/2018 **\u003cbr\u003e\u003cbr\u003e\n\u003ca href=\"https://www.slightedgecoder.com/2017/05/22/setting-es6-environment-asp-net-mvc-5/#comment-3943320423\"\u003eWorks for Webpack 4\u003c/a\u003e – Thank you, \u003ca href=\"https://disqus.com/by/brentlabasan/\"\u003eBrent Labasan\u003c/a\u003e \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--kVSRdbMS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f601.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--kVSRdbMS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f601.png\" alt=\"😁\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e** \u003cstrong\u003eUPDATE\u003c/strong\u003e : 1/13/2018 **\u003cbr\u003e\u003cbr\u003e\nAdded \u003ccode\u003enpm-watch\u003c/code\u003e to make the refreshing easier (Thank you, \u003ca href=\"https://disqus.com/by/disqus_IDFdu7rgFV/\"\u003edigiface\u003c/a\u003e \u0026amp; \u003ca href=\"https://disqus.com/by/disqus_udhcEu1mWd/\"\u003eFrank Nguyen\u003c/a\u003e for the feedback \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GAmW9dcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f44d.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GAmW9dcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f44d.png\" alt=\"👍\"\u003e\u003c/a\u003e)\u003c/p\u003e\n\n\u003cp\u003e** \u003cstrong\u003eUPDATE\u003c/strong\u003e : 1/7/2018 **\u003cbr\u003e\u003cbr\u003e\nBabel preset used changed from \u003ca href=\"https://babeljs.io/docs/plugins/preset-es2015/\"\u003ebabel-preset-es2015\u003c/a\u003e to \u003ca href=\"https://babeljs.io/env/\"\u003ebabel-preset-env\u003c/a\u003e according to Babel’s recommendation.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--1ZfBF_Md--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/babel-preset-es2015-to-babel-preset-env.jpg%3Fresize%3D871%252C432%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--1ZfBF_Md--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/babel-preset-es2015-to-babel-preset-env.jpg%3Fresize%3D871%252C432%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e** \u003cstrong\u003eUPDATE\u003c/strong\u003e : 9/22/2017 **\u003c/p\u003e\n\n\u003cp\u003eI created a 5-minute walkthrough \u003ca href=\"https://youtu.be/wbZnl93g_3I\"\u003evideo\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"step-by-step-guide\" href=\"#step-by-step-guide\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Step by Step Guide\n\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003eSet up ASP.NET MVC 5\u003c/li\u003e\n\u003cli\u003eSet up NPM configuration and packages\u003c/li\u003e\n\u003cli\u003eInstall Webpack and Babel\u003c/li\u003e\n\u003cli\u003eCreate some ES6 javascript files\u003c/li\u003e\n\u003cli\u003eCreate an ASP.NET Controller and a View\u003c/li\u003e\n\u003cli\u003eConfigure Webpack\u003c/li\u003e\n\u003cli\u003eConfigure Babel\u003c/li\u003e\n\u003cli\u003eRun ASP.NET MVC\u003c/li\u003e\n\u003cli\u003eMonitoring file changes with \u003ca href=\"https://www.npmjs.com/package/npm-watch\"\u003enpm-watch\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"1-set-up-aspnet-mvc-5\" href=\"#1-set-up-aspnet-mvc-5\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  1. Set up ASP.NET MVC 5\n\u003c/h5\u003e\n\n\u003cp\u003eCreate a new solution in Visual Studio. I am using VS 2015 Professional.\u003c/p\u003e\n\n\u003cp\u003eCreate a new ASP.NET MVC 5 project.\u003c/p\u003e\n\n\u003cp\u003eRight click on Solution and then “Add -\u0026gt; New Project”.\u003c/p\u003e\n\n\u003cp\u003eSelect an “Empty” template with “MVC” option.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Utr2yrMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/ASP.NET-Template.jpg%3Fresize%3D786%252C613%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Utr2yrMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/ASP.NET-Template.jpg%3Fresize%3D786%252C613%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"2-set-up-npm-configuration-and-packages\" href=\"#2-set-up-npm-configuration-and-packages\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  2. Set up NPM configuration and packages\n\u003c/h5\u003e\n\n\u003cp\u003eOpen cmd and go to the root of the project.\u003c/p\u003e\n\n\u003cp\u003eCreate a new “package.json” configuration file for NPM by running following command.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003enpm init -y\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003e“-y” option creates a new file without prompting the user.\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"3-install-webpack-and-babel\" href=\"#3-install-webpack-and-babel\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  3. Install Webpack and Babel\n\u003c/h5\u003e\n\n\u003cp\u003eRun the following command in cmd.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003enpm install --save-dev webpack babel-core babel-loader babel-polyfill babel-preset-env\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eAbove command will install necessary packages for Babel and Webpack.\u003c/p\u003e\n\n\u003cp\u003eNow let’s include \u003ccode\u003epackage.json\u003c/code\u003e in VS Solution Explorer.\u003cbr\u003e\u003cbr\u003e\nGo to “Solution Explorer”, and click on “Show All Files” button.\u003c/p\u003e\n\n\u003cp\u003e“package.json” will show up in the explorer.\u003c/p\u003e\n\n\u003cp\u003eRight click on “package.json” and include it in the project.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--9vNLtIej--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/Show-all-files.jpg%3Fresize%3D310%252C465%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--9vNLtIej--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/Show-all-files.jpg%3Fresize%3D310%252C465%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TZDQtPw2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/include-in-project.jpg%3Fresize%3D445%252C407%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TZDQtPw2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/include-in-project.jpg%3Fresize%3D445%252C407%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eIf you open up “package.json”, you can see that “devDependencies” section has references to Babel and Webpack.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\"devDependencies\": { \"babel-core\": \"^6.26.0\", \"babel-loader\": \"^7.1.2\", \"babel-polyfill\": \"^6.26.0\", \"babel-preset-env\": \"^1.6.1\", \"webpack\": \"^3.10.0\" }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003ch5\u003e\n  \u003ca name=\"4-create-some-es6-javascript-files\" href=\"#4-create-some-es6-javascript-files\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  4. Create some ES6 javascript files\n\u003c/h5\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--H2o9LHKE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/Script-folder.jpg%3Fresize%3D161%252C235%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--H2o9LHKE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/Script-folder.jpg%3Fresize%3D161%252C235%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003eLet’s create some javascript files to transpile for a test.\u003c/p\u003e\n\n\u003cp\u003eUnder project root, create a folder “Scripts” if one doesn’t exist.\u003c/p\u003e\n\n\u003cp\u003eCreate two more folders, “build” and “es6” under “Scripts”.\u003c/p\u003e\n\n\u003cp\u003eCreate two javascript files under “es6” folder.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eperson.js: contains “Person” class.\u003c/li\u003e\n\u003cli\u003emain.js: main entry point for the application.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cstrong\u003eperson.js\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eexport default class Person { constructor(name, age) { this.name = name; this.age = age; } speak() { console.log(`Hi I'm ${this.name} and ${this.age} years old and I am awesome`); } }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003e\u003cstrong\u003emain.js\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eimport Person from './person'; var person = new Person(\"David\", 20); person.speak();\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003ch5\u003e\n  \u003ca name=\"5-create-an-aspnet-controller-and-a-view\" href=\"#5-create-an-aspnet-controller-and-a-view\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  5. Create an ASP.NET Controller and a View\n\u003c/h5\u003e\n\n\u003cp\u003eRight click on “Controllers” folder, and create an empty controller named, “HomeController”.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--KAOlaqi2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/add-controller.jpg%3Fresize%3D649%252C292%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--KAOlaqi2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/add-controller.jpg%3Fresize%3D649%252C292%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eRight click on “View()” and click on “Add View”.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--DF5go8p7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/add-view.jpg%3Fresize%3D586%252C328%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--DF5go8p7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/add-view.jpg%3Fresize%3D586%252C328%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAdd a script tag in “Views/Shared/_Layout.cshtml”.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\\\u0026lt;script src=\"~/Scripts/build/bundle.js\"\\\u0026gt;\\\u0026lt;/script\\\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--KyMXROJ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/bundle.js-script-file.jpg%3Fresize%3D463%252C97%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--KyMXROJ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/bundle.js-script-file.jpg%3Fresize%3D463%252C97%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"6-configure-webpack\" href=\"#6-configure-webpack\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  6. Configure Webpack\n\u003c/h5\u003e\n\n\u003cp\u003eCreate \u003ccode\u003ewebpack.config.js\u003c/code\u003e on project root.\u003cbr\u003e\u003cbr\u003e\nAdd following configuration option in the file.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e“entry” indicates files for webpack to work on.\u003c/li\u003e\n\u003cli\u003e“output” specifies which folder (“path”) to write to while “filename” specifies what the result file name should be.\u003c/li\u003e\n\u003cli\u003e“module” instructs webpack to use Babel to transpile.\u003c/li\u003e\n\u003cli\u003e“test” tells webpack to include all files with “.js” extension while “exclude” leaves out “node_module” folder.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003e** IMPORTANT **\u003c/strong\u003e : If you are using Webpack 2 or above, replace \u003ccode\u003eloaders\u003c/code\u003e  with \u003ccode\u003erules\u003c/code\u003e in \u003ccode\u003ewebpack.config.js\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eRefer to \u003ca href=\"https://javascriptplayground.com/blog/2016/10/moving-to-webpack-2/#moduleloaders--modulerules\"\u003ethis article\u003c/a\u003e on migrating from Webpack 1 to Webpack 2.\u003c/p\u003e\n\n\u003cp\u003eNow let’s update “package.json” to instruct NPM to call webpack.\u003c/p\u003e\n\n\u003cp\u003eAdd a “scripts” section.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\"scripts\": { \"build\": \"webpack\" },\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eWe can configure Visual Studio to run \u003ccode\u003enpm run build\u003c/code\u003e during compile time.\u003c/p\u003e\n\n\u003cp\u003eRight-click on the project and select “properties” and go to “Build Events”.\u003c/p\u003e\n\n\u003cp\u003eIn the “Pre-build event command line:” enter following code snippet to run webpack when you compile the project.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003enpm run build --prefix $(ProjectDir)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003ch5\u003e\n  \u003ca name=\"\" href=\"#\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Fbntx_ZF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/build-events.jpg%3Fresize%3D619%252C325%26ssl%3D1\" alt=\"\"\u003e\n\u003c/h5\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"7-configure-babel\" href=\"#7-configure-babel\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  7. Configure Babel\n\u003c/h5\u003e\n\n\u003cp\u003eOpen “package.json” and add Babel Preset.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\"babel\": { \"presets\": [\"env\"] },\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003ePresets are basically a set of plugins so that you don’t have to specify every plugin that are needed by Babel one by one. I will use ES2015 preset, which includes all Babel plugins listed here.\u003c/p\u003e\n\n\u003cp\u003eYou can find a list of all Official Babel Presets in this \u003ca href=\"https://babeljs.io/docs/plugins/#presets-official-presets\"\u003elink\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"8-run-aspnet-mvc\" href=\"#8-run-aspnet-mvc\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  8. Run ASP.NET MVC\n\u003c/h5\u003e\n\n\u003cp\u003eRun the project by pressing “F5”.\u003c/p\u003e\n\n\u003cp\u003eIf you see “Hi I’m David and 20 years old and I am awesome”, then it’s set up properly.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Q_AOEA-x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/running-result.jpg%3Fresize%3D646%252C402%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Q_AOEA-x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/running-result.jpg%3Fresize%3D646%252C402%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"9-monitoring-file-changes-with-npmwatch\" href=\"#9-monitoring-file-changes-with-npmwatch\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  9. Monitoring file changes with npm-watch\n\u003c/h5\u003e\n\n\u003cp\u003eEverything up and running now but the problem is that when you make a file change and refresh the browser, the change would not take an effect.\u003c/p\u003e\n\n\u003cp\u003eThere are many ways to monitor files changes but I will show you how to install and configure \u003ca href=\"https://www.npmjs.com/package/npm-watch\"\u003enpm-watch\u003c/a\u003e to do so.\u003cbr\u003e\u003cbr\u003e\nLet’s install the \u003ccode\u003enpm-watch\u003c/code\u003e via NPM command.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003enpm install --save-dev npm-watch\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eWe need to add a configuration for the command installed in \u003ccode\u003epackage.json\u003c/code\u003e.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003e\"watch\": { \"build\": \"Scripts/es6/\\*.js\" }, \"scripts\": { \"watch\": \"npm-watch\", \"build\": \"webpack\" },\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eNow run \u003ccode\u003enpm run watch\u003c/code\u003e in the command line window after changing to the project directory where \u003ccode\u003epackage.json\u003c/code\u003e is located (You can also run the command while the Visual Studio is in the debug/run mode).\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--I2BwWJPW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/npm-run-watch.jpg%3Fresize%3D854%252C354%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--I2BwWJPW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/npm-run-watch.jpg%3Fresize%3D854%252C354%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe command will watch for the javascript file changes.\u003cbr\u003e\u003cbr\u003e\nLet’s update the \u003ccode\u003espeak()\u003c/code\u003e method in  \u003ccode\u003eperson.js\u003c/code\u003e file while the Visual Studio is in debug mode.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eexport default class Person { //... constructor... speak() { console.log(`Hi I'm ${this.name} and ${this.age} years old and I love CodingBlocks podcast!`); } ...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eRefresh the browser and you will see that the content has changed without restarting Visual Studio.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--hExzH_FH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/result-after-refreshing-browser.jpg%3Fresize%3D477%252C78%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--hExzH_FH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/result-after-refreshing-browser.jpg%3Fresize%3D477%252C78%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\nYou can see that \u003ccode\u003enpm-watch\u003c/code\u003e monitored the javascript file change and ran the build/webpack command automatically.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jyCWCRCC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/npm-watch-updates-automatically.jpg%3Fresize%3D856%252C605%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jyCWCRCC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/npm-watch-updates-automatically.jpg%3Fresize%3D856%252C605%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eIf you are using \u003ccode\u003enpm-watch\u003c/code\u003e, you can clear the “Pre-build event command line” command added in step 6 (because \u003ccode\u003enpm-watch\u003c/code\u003e runs the \u003ccode\u003ebuild\u003c/code\u003e script, which calls \u003ccode\u003ewebpack\u003c/code\u003e in turn).\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--qaxswwmn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/clear-pre-build-event-comamnd-line.jpg%3Fresize%3D685%252C381%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--qaxswwmn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/clear-pre-build-event-comamnd-line.jpg%3Fresize%3D685%252C381%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eI described how to set up ASP.NET MVC 5 web application for ES6 using Webpack and Babel. The “ceremony” seems too much of trouble. If you are ready to move on to ASP.NET Core, it’d be easier to do so (even though most of the steps would be the same) and you can find much more resources on how to do so.\u003c/p\u003e\n\n\u003cp\u003eThe full source for this demo is avaialble on \u003ca href=\"https://github.com/dance2die/Blog.SlightEdgeCoder.AspNet.WebPackES6/tree/master/BlogDemo\"\u003eGitHub\u003c/a\u003e.\u003cbr\u003e\u003cbr\u003e\nThe new source using \u003ccode\u003ebabel-preset-env\u003c/code\u003e is on the same repository but in different folder \u003ca href=\"https://github.com/dance2die/Blog.SlightEdgeCoder.AspNet.WebPackES6/tree/master/AspNetMvc5_BabelPresetEnv\"\u003eAspNetMvc5_BabelPresetEnv.\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/05/22/setting-es6-environment-asp-net-mvc-5/\"\u003eSetting up an ES6 Environment for ASP.NET MVC 5\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Setting up an ES6 Environment for ASP.NET MVC 5\npublished: false\ntags: Blog Entry,Programming,asp.net mvc,asp.net mvc 5\ncanonical_url: https://www.slightedgecoder.com/2017/05/22/setting-es6-environment-asp-net-mvc-5/\n---\n\nI still haven’t moved to ASP.NET Core and still use ASP.NET MVC. As I am learning ES6 features I’ve been looking for articles for setting up an environment for ES6 for ASP.NET MVC.\n\nUnfortunately, all the articles I’ve run into dealt with ASP.NET Core and had to come up with my own way after combining all the resources I’ve been reading and watching.\n\nThis article with show you how to set up ASP.NET MVC 5 to enable ES6 javascript development using [Webpack](https://webpack.github.io/)and [Babel](https://babeljs.io/).\n\n\\*\\* **UPDATE** : 6/13/2018 \\*\\*  \n[Works for Webpack 4](https://www.slightedgecoder.com/2017/05/22/setting-es6-environment-asp-net-mvc-5/#comment-3943320423) – Thank you, [Brent Labasan](https://disqus.com/by/brentlabasan/) ![😁](https://s.w.org/images/core/emoji/2.4/72x72/1f601.png)\n\n\\*\\* **UPDATE** : 1/13/2018 \\*\\*  \nAdded `npm-watch` to make the refreshing easier (Thank you, [digiface](https://disqus.com/by/disqus_IDFdu7rgFV/) \u0026 [Frank Nguyen](https://disqus.com/by/disqus_udhcEu1mWd/) for the feedback ![👍](https://s.w.org/images/core/emoji/2.4/72x72/1f44d.png))\n\n\\*\\* **UPDATE** : 1/7/2018 \\*\\*  \nBabel preset used changed from [babel-preset-es2015](https://babeljs.io/docs/plugins/preset-es2015/) to [babel-preset-env](https://babeljs.io/env/) according to Babel’s recommendation.\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/babel-preset-es2015-to-babel-preset-env.jpg?resize=871%2C432\u0026ssl=1)\n\n\\*\\* **UPDATE** : 9/22/2017 \\*\\*\n\nI created a 5-minute walkthrough [video](https://youtu.be/wbZnl93g_3I).\n\n\u003ciframe type=\"text/html\" width=\"1170\" height=\"689\" src=\"https://www.youtube.com/embed/wbZnl93g_3I?version=3\u0026amp;rel=1\u0026amp;fs=1\u0026amp;autohide=2\u0026amp;showsearch=0\u0026amp;showinfo=1\u0026amp;iv_load_policy=1\u0026amp;wmode=transparent\" allowfullscreen=\"true\" style=\"border:0;\"\u003e\u003c/iframe\u003e\n\n \n\n## Step by Step Guide\n\n1. Set up ASP.NET MVC 5\n2. Set up NPM configuration and packages\n3. Install Webpack and Babel\n4. Create some ES6 javascript files\n5. Create an ASP.NET Controller and a View\n6. Configure Webpack\n7. Configure Babel\n8. Run ASP.NET MVC\n9. Monitoring file changes with [npm-watch](https://www.npmjs.com/package/npm-watch)\n\n##### 1. Set up ASP.NET MVC 5\n\nCreate a new solution in Visual Studio. I am using VS 2015 Professional.\n\nCreate a new ASP.NET MVC 5 project.\n\nRight click on Solution and then “Add -\\\u003e New Project”.\n\nSelect an “Empty” template with “MVC” option.\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/ASP.NET-Template.jpg?resize=786%2C613\u0026ssl=1)\n\n##### 2. Set up NPM configuration and packages\n\nOpen cmd and go to the root of the project.\n\nCreate a new “package.json” configuration file for NPM by running following command.\n\n```\nnpm init -y\n```\n\n“-y” option creates a new file without prompting the user.\n\n##### 3. Install Webpack and Babel\n\nRun the following command in cmd.\n\n```\nnpm install --save-dev webpack babel-core babel-loader babel-polyfill babel-preset-env\n```\n\nAbove command will install necessary packages for Babel and Webpack.\n\nNow let’s include `package.json` in VS Solution Explorer.  \nGo to “Solution Explorer”, and click on “Show All Files” button.\n\n“package.json” will show up in the explorer.\n\nRight click on “package.json” and include it in the project.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/Show-all-files.jpg?resize=310%2C465\u0026ssl=1) ![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/include-in-project.jpg?resize=445%2C407\u0026ssl=1)\n\nIf you open up “package.json”, you can see that “devDependencies” section has references to Babel and Webpack.\n\n```\n\"devDependencies\": { \"babel-core\": \"^6.26.0\", \"babel-loader\": \"^7.1.2\", \"babel-polyfill\": \"^6.26.0\", \"babel-preset-env\": \"^1.6.1\", \"webpack\": \"^3.10.0\" }\n```\n\n##### 4. Create some ES6 javascript files\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/Script-folder.jpg?resize=161%2C235\u0026ssl=1)Let’s create some javascript files to transpile for a test.\n\nUnder project root, create a folder “Scripts” if one doesn’t exist.\n\nCreate two more folders, “build” and “es6” under “Scripts”.\n\nCreate two javascript files under “es6” folder.\n\n1. person.js: contains “Person” class.\n2. main.js: main entry point for the application.\n\n**person.js**\n\n```\nexport default class Person { constructor(name, age) { this.name = name; this.age = age; } speak() { console.log(`Hi I'm ${this.name} and ${this.age} years old and I am awesome`); } }\n```\n\n**main.js**\n\n```\nimport Person from './person'; var person = new Person(\"David\", 20); person.speak();\n```\n\n##### 5. Create an ASP.NET Controller and a View\n\nRight click on “Controllers” folder, and create an empty controller named, “HomeController”.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/add-controller.jpg?resize=649%2C292\u0026ssl=1)\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nRight click on “View()” and click on “Add View”.\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/add-view.jpg?resize=586%2C328\u0026ssl=1)\n\nAdd a script tag in “Views/Shared/\\_Layout.cshtml”.\n\n```\n\\\u003cscript src=\"~/Scripts/build/bundle.js\"\\\u003e\\\u003c/script\\\u003e\n```\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/bundle.js-script-file.jpg?resize=463%2C97\u0026ssl=1)\n\n##### 6. Configure Webpack\n\nCreate `webpack.config.js` on project root.  \nAdd following configuration option in the file.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n- “entry” indicates files for webpack to work on.\n- “output” specifies which folder (“path”) to write to while “filename” specifies what the result file name should be.\n- “module” instructs webpack to use Babel to transpile.\n- “test” tells webpack to include all files with “.js” extension while “exclude” leaves out “node\\_module” folder.\n\n**\\*\\* IMPORTANT \\*\\*** : If you are using Webpack 2 or above, replace `loaders`  with `rules` in `webpack.config.js`.\n\nRefer to [this article](https://javascriptplayground.com/blog/2016/10/moving-to-webpack-2/#moduleloaders--modulerules) on migrating from Webpack 1 to Webpack 2.\n\nNow let’s update “package.json” to instruct NPM to call webpack.\n\nAdd a “scripts” section.\n\n```\n\"scripts\": { \"build\": \"webpack\" },\n```\n\nWe can configure Visual Studio to run `npm run build` during compile time.\n\nRight-click on the project and select “properties” and go to “Build Events”.\n\nIn the “Pre-build event command line:” enter following code snippet to run webpack when you compile the project.\n\n```\nnpm run build --prefix $(ProjectDir)\n```\n\n##### ![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/build-events.jpg?resize=619%2C325\u0026ssl=1)\n\n##### 7. Configure Babel\n\nOpen “package.json” and add Babel Preset.\n\n```\n\"babel\": { \"presets\": [\"env\"] },\n```\n\nPresets are basically a set of plugins so that you don’t have to specify every plugin that are needed by Babel one by one. I will use ES2015 preset, which includes all Babel plugins listed here.\n\nYou can find a list of all Official Babel Presets in this [link](https://babeljs.io/docs/plugins/#presets-official-presets).\n\n##### 8. Run ASP.NET MVC\n\nRun the project by pressing “F5”.\n\nIf you see “Hi I’m David and 20 years old and I am awesome”, then it’s set up properly.\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/running-result.jpg?resize=646%2C402\u0026ssl=1)\n\n##### 9. Monitoring file changes with npm-watch\n\nEverything up and running now but the problem is that when you make a file change and refresh the browser, the change would not take an effect.\n\nThere are many ways to monitor files changes but I will show you how to install and configure [npm-watch](https://www.npmjs.com/package/npm-watch) to do so.  \nLet’s install the `npm-watch` via NPM command.\n\n```\nnpm install --save-dev npm-watch\n```\n\nWe need to add a configuration for the command installed in `package.json`.\n\n```\n\"watch\": { \"build\": \"Scripts/es6/\\*.js\" }, \"scripts\": { \"watch\": \"npm-watch\", \"build\": \"webpack\" },\n```\n\nNow run `npm run watch` in the command line window after changing to the project directory where `package.json` is located (You can also run the command while the Visual Studio is in the debug/run mode).\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/npm-run-watch.jpg?resize=854%2C354\u0026ssl=1)\n\nThe command will watch for the javascript file changes.  \nLet’s update the `speak()` method in  `person.js` file while the Visual Studio is in debug mode.\n\n```\nexport default class Person { //... constructor... speak() { console.log(`Hi I'm ${this.name} and ${this.age} years old and I love CodingBlocks podcast!`); } ...\n```\n\nRefresh the browser and you will see that the content has changed without restarting Visual Studio.\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/result-after-refreshing-browser.jpg?resize=477%2C78\u0026ssl=1)  \nYou can see that `npm-watch` monitored the javascript file change and ran the build/webpack command automatically.\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/npm-watch-updates-automatically.jpg?resize=856%2C605\u0026ssl=1)\n\nIf you are using `npm-watch`, you can clear the “Pre-build event command line” command added in step 6 (because `npm-watch` runs the `build` script, which calls `webpack` in turn).\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/05/clear-pre-build-event-comamnd-line.jpg?resize=685%2C381\u0026ssl=1)\n\n## Conclusion\n\nI described how to set up ASP.NET MVC 5 web application for ES6 using Webpack and Babel. The “ceremony” seems too much of trouble. If you are ready to move on to ASP.NET Core, it’d be easier to do so (even though most of the steps would be the same) and you can find much more resources on how to do so.\n\nThe full source for this demo is avaialble on [GitHub](https://github.com/dance2die/Blog.SlightEdgeCoder.AspNet.WebPackES6/tree/master/BlogDemo).  \nThe new source using `babel-preset-env` is on the same repository but in different folder [AspNetMvc5\\_BabelPresetEnv.](https://github.com/dance2die/Blog.SlightEdgeCoder.AspNet.WebPackES6/tree/master/AspNetMvc5_BabelPresetEnv)\n\nThe post [Setting up an ES6 Environment for ASP.NET MVC 5](https://www.slightedgecoder.com/2017/05/22/setting-es6-environment-asp-net-mvc-5/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/05/22/setting-es6-environment-asp-net-mvc-5/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/05/22/setting-es6-environment-asp-net-mvc-5/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, aspnetmvc, aspnetmvc5",
    "path": "/dance2die/setting-up-an-es6-environment-for-aspnet-mvc-5-11mj-temp-slug-5475884",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-05-22T11:09:11.000Z"
  },
  {
    "title": "Parsing a number into digits – Reprise",
    "slug": "parsing-a-number-into-digits--reprise-1h8m-temp-slug-9793260",
    "created_at": "2018-07-07T01:41:43.020Z",
    "main_image": null,
    "description": "\n\n* Featured Image – “Numbers” by Kevin Dooley, used under CC BY 2.0\n\nOn 3/11/201...",
    "published": false,
    "published_at": "2017-05-28T00:09:17.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/pagedooley/33012371924/in/photolist-Sic33h-axZ5BR-fmHjf2-ftyZh-cdkHVG-bVYosr-cdkHUd-bVYomR-cdkJaU-cdkJ9W-bVYooZ-cdkJ3L-bVYoo4-cdkJ33-cdkJ4A-cdkHWU-7XEruh-6aoKMB-58TTn-7pMfPC-5BCf-6cJTod-7mVfDM-bVYopD-DNnYH-7Dpz8d-jWGuhC-7ixpfM-pnNLmy-9A6rSx-pEgSWu-pnMNrB-oHqqL6-eoTrMt-6Smdj9-fYfgZq-6358Sy-a1DxLo-9mqFmA-m3CPo-mTjBQ-6q7D14-5pf3JR-9v4CfC-buw58e-qJyamo-9tM3Lx-9tQ1qE-iQhVK-kwYL7\"\u003eNumbers\u003c/a\u003e” by \u003ca title=\"Go to Kevin Dooley's photostream\" href=\"https://www.flickr.com/photos/pagedooley/\"\u003eKevin Dooley\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by/2.0/\"\u003eCC BY 2.0\u003c/a\u003e\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eOn 3/11/2017, I wrote a blog entry \u003ca href=\"https://dev.to/dance2die/parsing-a-number-into-digits-6pf-temp-slug-2258361\"\u003eParsing a Number into Digits\u003c/a\u003e. While it’s not hard to implement the method to parse a number into digits, I wanted a simpler way for quick tests.\u003c/p\u003e\n\n\u003cp\u003eAfter solving a problem, \u003ca href=\"https://www.hackerrank.com/challenges/recursive-digit-sum\"\u003eRecursive Digit Sum\u003c/a\u003e, I fiddled around with a few different ways.\u003c/p\u003e\n\n\u003cp\u003eI will discuss the implementation as well as dis/advantage of it.\u003c/p\u003e\n\n\u003cp\u003eBefore posting the 3/11 blog, I used to parse each digit at a time using \u003ca href=\"https://msdn.microsoft.com/en-us/library/b3h1hf19(v=vs.110).aspx\"\u003eint.Parse()\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eprivate static IEnumerable\\\u0026lt;int\\\u0026gt; GetArray2(int value) { if (value \\\u0026lt; 0) value \\*= -1; // or Math.Abs string text = value.ToString(); for (int i = 0; i \\\u0026lt; text.Length; i++) { yield return int.Parse(text[i].ToString()); } }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eWhile reading the problem discussion forum, I ran into this \u003ca href=\"https://www.hackerrank.com/challenges/recursive-digit-sum/forum/comments/293394\"\u003eGO implementation of digit sum\u003c/a\u003e of a number by \u003ca href=\"https://www.hackerrank.com/sei40kr\"\u003esei40kr\u003c/a\u003e. I noticed that he simply subtracted a number character by ‘0’. It’s just a simple ASCII algebra but that thought never occurred to me.\u003c/p\u003e\n\n\u003cp\u003eBy the way, here is how the ASCII subtraction works.\u003c/p\u003e\n\n\u003cp\u003eE.g.) Ascii value of ‘1’ is 49, ‘0’ is 48, ‘2’ is 50 and ‘9’ is 57.  So basically subtracting an ASCII value of current number character with ‘0’ becomes the number.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e‘1’ – ‘0’ = 1 (49 – 48)\u003cbr\u003e\u003cbr\u003e\n‘2’ – ‘0’ = 2 (50 – 48)\u003cbr\u003e\u003cbr\u003e\n…\u003cbr\u003e\u003cbr\u003e\n‘9’ – ‘0’ = 9 (57 – 48)\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThis implementation was faster than the “int.parse” one but still slower than the stack version. But the advantage is that it’s easier to implement, more intuitive thus less error prone.\u003c/p\u003e\n\n\u003cp\u003eThe implementation is the same as \u003ccode\u003eGetArray2\u003c/code\u003e and the only difference is that \u003ccode\u003eGetArray3\u003c/code\u003e returns an integer using subtraction (line# 8).\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eprivate static IEnumerable\\\u0026lt;int\\\u0026gt; GetArray3(int value) { if (value \\\u0026lt; 0) value \\*= -1; // or Math.Abs string text = value.ToString(); for (int i = 0; i \\\u0026lt; text.Length; i++) { yield return text[i] - '0'; } }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eASCII subtraction version is about 2~3 times faster than the int.parse version.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eFor a quick testing, I’d use the int.parse version but for production code, I’d use the stack implementation.\u003c/p\u003e\n\n\u003cp\u003eWhile the former is easier to implement and less error prone, the latter is still much faster by the fact of two (Stack version is about 5~6 times faster than int.parse version).\u003c/p\u003e\n\n\u003cp\u003eA contrived benchmarking result came out as follows.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eImplementation using Stack: 00:00:04.0093535\u003cbr\u003e\u003cbr\u003e\nImplementation using int.parse: 00:00:22.2908904\u003cbr\u003e\u003cbr\u003e\nImplementation using ordinal number: 00:00:08.3212206\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe source for this test is on \u003ca href=\"https://github.com/dance2die/Demo.LearnByDoing/blob/66cb2da206d195f9989124bd160045890ca57276/Demo.LearnByDoing.General/ConvertIntegerToArrayProgram.cs\"\u003eGitHub\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/05/27/parsing-number-digits-reprise/\"\u003eParsing a number into digits – Reprise\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Parsing a number into digits – Reprise\npublished: false\ntags: Blog Entry,Programming,c#,digits\ncanonical_url: https://www.slightedgecoder.com/2017/05/27/parsing-number-digits-reprise/\n---\n\n\\* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/pagedooley/33012371924/in/photolist-Sic33h-axZ5BR-fmHjf2-ftyZh-cdkHVG-bVYosr-cdkHUd-bVYomR-cdkJaU-cdkJ9W-bVYooZ-cdkJ3L-bVYoo4-cdkJ33-cdkJ4A-cdkHWU-7XEruh-6aoKMB-58TTn-7pMfPC-5BCf-6cJTod-7mVfDM-bVYopD-DNnYH-7Dpz8d-jWGuhC-7ixpfM-pnNLmy-9A6rSx-pEgSWu-pnMNrB-oHqqL6-eoTrMt-6Smdj9-fYfgZq-6358Sy-a1DxLo-9mqFmA-m3CPo-mTjBQ-6q7D14-5pf3JR-9v4CfC-buw58e-qJyamo-9tM3Lx-9tQ1qE-iQhVK-kwYL7\"\u003eNumbers\u003c/a\u003e” by \u003ca title=\"Go to Kevin Dooley's photostream\" href=\"https://www.flickr.com/photos/pagedooley/\" data-track=\"attributionNameClick\" data-rapid_p=\"61\"\u003eKevin Dooley\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by/2.0/\"\u003eCC BY 2.0\u003c/a\u003e\u003c/small\u003e\n\nOn 3/11/2017, I wrote a blog entry [Parsing a Number into Digits](https://dev.to/dance2die/parsing-a-number-into-digits-6pf-temp-slug-2258361). While it’s not hard to implement the method to parse a number into digits, I wanted a simpler way for quick tests.\n\nAfter solving a problem, [Recursive Digit Sum](https://www.hackerrank.com/challenges/recursive-digit-sum), I fiddled around with a few different ways.\n\nI will discuss the implementation as well as dis/advantage of it.\n\nBefore posting the 3/11 blog, I used to parse each digit at a time using [int.Parse()](https://msdn.microsoft.com/en-us/library/b3h1hf19(v=vs.110).aspx).\n\n```\nprivate static IEnumerable\\\u003cint\\\u003e GetArray2(int value) { if (value \\\u003c 0) value \\*= -1; // or Math.Abs string text = value.ToString(); for (int i = 0; i \\\u003c text.Length; i++) { yield return int.Parse(text[i].ToString()); } }\n```\n\nWhile reading the problem discussion forum, I ran into this [GO implementation of digit sum](https://www.hackerrank.com/challenges/recursive-digit-sum/forum/comments/293394) of a number by [sei40kr](https://www.hackerrank.com/sei40kr). I noticed that he simply subtracted a number character by ‘0’. It’s just a simple ASCII algebra but that thought never occurred to me.\n\nBy the way, here is how the ASCII subtraction works.\n\nE.g.) Ascii value of ‘1’ is 49, ‘0’ is 48, ‘2’ is 50 and ‘9’ is 57.  So basically subtracting an ASCII value of current number character with ‘0’ becomes the number.\n\n\u003e ‘1’ – ‘0’ = 1 (49 – 48)  \n\u003e ‘2’ – ‘0’ = 2 (50 – 48)  \n\u003e …  \n\u003e ‘9’ – ‘0’ = 9 (57 – 48)\n\nThis implementation was faster than the “int.parse” one but still slower than the stack version. But the advantage is that it’s easier to implement, more intuitive thus less error prone.\n\nThe implementation is the same as `GetArray2` and the only difference is that `GetArray3` returns an integer using subtraction (line# 8).\n\n```\nprivate static IEnumerable\\\u003cint\\\u003e GetArray3(int value) { if (value \\\u003c 0) value \\*= -1; // or Math.Abs string text = value.ToString(); for (int i = 0; i \\\u003c text.Length; i++) { yield return text[i] - '0'; } }\n```\n\nASCII subtraction version is about 2~3 times faster than the int.parse version.\n\n### Conclusion\n\nFor a quick testing, I’d use the int.parse version but for production code, I’d use the stack implementation.\n\nWhile the former is easier to implement and less error prone, the latter is still much faster by the fact of two (Stack version is about 5~6 times faster than int.parse version).\n\nA contrived benchmarking result came out as follows.\n\n\u003e Implementation using Stack: 00:00:04.0093535  \n\u003e Implementation using int.parse: 00:00:22.2908904  \n\u003e Implementation using ordinal number: 00:00:08.3212206\n\nThe source for this test is on [GitHub](https://github.com/dance2die/Demo.LearnByDoing/blob/66cb2da206d195f9989124bd160045890ca57276/Demo.LearnByDoing.General/ConvertIntegerToArrayProgram.cs).\n\n \n\nThe post [Parsing a number into digits – Reprise](https://www.slightedgecoder.com/2017/05/27/parsing-number-digits-reprise/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/05/27/parsing-number-digits-reprise/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/05/27/parsing-number-digits-reprise/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, c, digits",
    "path": "/dance2die/parsing-a-number-into-digits--reprise-1h8m-temp-slug-9793260",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-05-28T00:09:17.000Z"
  },
  {
    "title": "Dynamically Resize Signature Field in Word Template (Like a Web Developer)",
    "slug": "dynamically-resize-signature-field-in-word-template-like-a-web-developer-217p-temp-slug-702109",
    "created_at": "2018-07-07T01:41:43.644Z",
    "main_image": null,
    "description": "\n\nSuppose that you were working on merging client data with a Microsoft Word temp...",
    "published": false,
    "published_at": "2017-06-04T13:41:25.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eSuppose that you were working on merging client data with a Microsoft Word template and everything went well. And then \u003cstrong\u003eboom\u003c/strong\u003e , a week later, you are notified from a user that there was an issue with the generated Word file.\u003c/p\u003e\n\n\u003cp\u003eThe template file contains a signature field, in which you merge a client’s names. The issue is that some clients’ names are so long, the signature field overflows into next line. This causes the rest of documents to create another page, thus wasting the formatting of the document as well as a paper unnecessarily.\u003c/p\u003e\n\n\u003cp\u003eIf you are a Front-end/Web developer, you will understand the solution that I came up with.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eI used C# and Word Interop. But the concept applies to any language.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eIf you have used CSS, the solution is quite simple; You right align a container (like a \u003ccode\u003ediv\u003c/code\u003e) and left align the content in the container and the table size increases automatically. So here are the steps of resolution.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWrap the signature field in a Word table\u003c/li\u003e\n\u003cli\u003eRight align the table\u003c/li\u003e\n\u003cli\u003eLeft align contents inside the table\u003c/li\u003e\n\u003cli\u003eAnd change table properties.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThat’s basically all the prep work required for the dynamically resizing table in Word template. All that’s left is to calculate the signature field width and increase the table width with that of signature width if it’s longer.\u003c/p\u003e\n\n\u003cp\u003eNow let’s see the Word template.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--d4gxvBqz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/06/Word-Template.jpg%3Fresize%3D780%252C539%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--d4gxvBqz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/06/Word-Template.jpg%3Fresize%3D780%252C539%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eIt’s a simple Word file with two bookmarks (two signature fields for comparisons).\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eBookmark \u003cem\u003esigner1\u003c/em\u003e is to show that when the name is long, the name overflows into next line.\u003c/li\u003e\n\u003cli\u003eBookmark \u003cem\u003esigner2\u003c/em\u003e” is for dynamically moving the content to the left so that it doesn’t overflow into next line.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThere are two table properties that need to be changed/checked first.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eRight click on the table and select “Table Properties” \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--XEDGrcLy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/06/Word-Template-Table-Properties.jpg%3Fresize%3D342%252C459%26ssl%3D1\" alt=\"\"\u003e\n\u003c/li\u003e\n\u003cli\u003eSelect the “Option” button and check off the “Automatically resize to fit contents” \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--VArpImir--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/06/Word-Template-table-options.jpg%3Fresize%3D425%252C444%26ssl%3D1\" alt=\"\"\u003e\n\u003c/li\u003e\n\u003cli\u003eGo to “Cells” tab, and click on “Option” and set following options \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--vNdPoFqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/06/Word-Template-cell-options.jpg%3Fresize%3D425%252C444%26ssl%3D1\" alt=\"\"\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eNow let’s dig into the code (At work, I used a library called \u003ca href=\"https://www.aspose.com/products/words/net\"\u003eAspose Word for .NET\u003c/a\u003e to do the job, but since it’s not free, I used Word Interop references in this demo).\u003c/p\u003e\n\n\u003cp\u003eHere is what the code does.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eOpen the word template\u003c/li\u003e\n\u003cli\u003ePopulate bookmarks\u003c/li\u003e\n\u003cli\u003eFind widths of the table, and the signer’s name text (bookmark text width)\u003c/li\u003e\n\u003cli\u003eIf the bookmark text width is longer, then increase the table width\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eAnd the \u003ccode\u003eMain\u003c/code\u003e  function looks as follows.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epublic static void Main(string[] args) { Application word = null; Document document = null; try { // Open Document word = new Application(); var templatePath = Path.Combine(Directory.GetCurrentDirectory(), \"BookmarkTest.docx\"); document = word.Documents.Open(templatePath); // Populate bookmarks. const string signer = \"Anna Bertha Cecilia Diana Emily Fanny Gertrude Hypatia Inez Jane \"; SetSignerBookmarks(word, document.Bookmarks, signer); // Find table and get table width (in Word, table collection is 1-based) var table = document.Tables[1]; double tableWidth = GetTableWidth(table); // calculate text width var textWidth = CalculateTextWidth(signer); // increase the table size if (textWidth \\\u0026gt; tableWidth) UpdateTableWidth(table, textWidth); } finally { document?.Close(); word?.Quit(WdSaveOptions.wdSaveChanges, WdOriginalFormat.wdOriginalDocumentFormat); } }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eNow the moment of truth. The output Word file looks like the following.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--SakUvKCd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/06/Word-Template-output.jpg%3Fresize%3D843%252C453%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--SakUvKCd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/06/Word-Template-output.jpg%3Fresize%3D843%252C453%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eYou can see that the 2nd signature line moved to the left to make a room for the long signature while the first one overflowed into next line.\u003c/p\u003e\n\n\u003cp\u003eThe table border was left around to show you how it worked so remove the table border when you implement it.\u003c/p\u003e\n\n\u003cp\u003eThe full source (the template file is included in the source as part of the solution) on \u003ca href=\"https://github.com/dance2die/Blog.WordTemplateBookmark\"\u003eGitHub\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eThe Word template hack was no difference from the Front-End solution. If you ever have a trouble dealing with Word templates, put your front-end knowledge into work.\u003c/p\u003e\n\n\u003cp\u003eThe steps involved for this seems a bit cumbersome so I’d appreciate it if anyone can suggest me a lazier way to do this.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/06/04/dynamically-resize-signature-field-word-template/\"\u003eDynamically Resize Signature Field in Word Template (Like a Web Developer)\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Dynamically Resize Signature Field in Word Template (Like a Web Developer)\npublished: false\ntags: Blog Entry,Programming,c#,interop\ncanonical_url: https://www.slightedgecoder.com/2017/06/04/dynamically-resize-signature-field-word-template/\n---\n\nSuppose that you were working on merging client data with a Microsoft Word template and everything went well. And then **boom** , a week later, you are notified from a user that there was an issue with the generated Word file.\n\nThe template file contains a signature field, in which you merge a client’s names. The issue is that some clients’ names are so long, the signature field overflows into next line. This causes the rest of documents to create another page, thus wasting the formatting of the document as well as a paper unnecessarily.\n\nIf you are a Front-end/Web developer, you will understand the solution that I came up with.\n\n```\nI used C# and Word Interop. But the concept applies to any language.\n```\n\nIf you have used CSS, the solution is quite simple; You right align a container (like a `div`) and left align the content in the container and the table size increases automatically. So here are the steps of resolution.\n\n1. Wrap the signature field in a Word table\n2. Right align the table\n3. Left align contents inside the table\n4. And change table properties.\n\nThat’s basically all the prep work required for the dynamically resizing table in Word template. All that’s left is to calculate the signature field width and increase the table width with that of signature width if it’s longer.\n\nNow let’s see the Word template.\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/06/Word-Template.jpg?resize=780%2C539\u0026ssl=1)\n\nIt’s a simple Word file with two bookmarks (two signature fields for comparisons).\n\n- Bookmark _signer1_ is to show that when the name is long, the name overflows into next line.\n- Bookmark _signer2_” is for dynamically moving the content to the left so that it doesn’t overflow into next line.\n\nThere are two table properties that need to be changed/checked first.\n\n1. Right click on the table and select “Table Properties” ![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/06/Word-Template-Table-Properties.jpg?resize=342%2C459\u0026ssl=1)\n2. Select the “Option” button and check off the “Automatically resize to fit contents” ![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/06/Word-Template-table-options.jpg?resize=425%2C444\u0026ssl=1)\n3. Go to “Cells” tab, and click on “Option” and set following options ![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/06/Word-Template-cell-options.jpg?resize=425%2C444\u0026ssl=1)\n\nNow let’s dig into the code (At work, I used a library called [Aspose Word for .NET](https://www.aspose.com/products/words/net) to do the job, but since it’s not free, I used Word Interop references in this demo).\n\nHere is what the code does.\n\n1. Open the word template\n2. Populate bookmarks\n3. Find widths of the table, and the signer’s name text (bookmark text width)\n4. If the bookmark text width is longer, then increase the table width\n\nAnd the `Main`  function looks as follows.\n\n```\npublic static void Main(string[] args) { Application word = null; Document document = null; try { // Open Document word = new Application(); var templatePath = Path.Combine(Directory.GetCurrentDirectory(), \"BookmarkTest.docx\"); document = word.Documents.Open(templatePath); // Populate bookmarks. const string signer = \"Anna Bertha Cecilia Diana Emily Fanny Gertrude Hypatia Inez Jane \"; SetSignerBookmarks(word, document.Bookmarks, signer); // Find table and get table width (in Word, table collection is 1-based) var table = document.Tables[1]; double tableWidth = GetTableWidth(table); // calculate text width var textWidth = CalculateTextWidth(signer); // increase the table size if (textWidth \\\u003e tableWidth) UpdateTableWidth(table, textWidth); } finally { document?.Close(); word?.Quit(WdSaveOptions.wdSaveChanges, WdOriginalFormat.wdOriginalDocumentFormat); } }\n```\n\nNow the moment of truth. The output Word file looks like the following.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/06/Word-Template-output.jpg?resize=843%2C453\u0026ssl=1)\n\nYou can see that the 2nd signature line moved to the left to make a room for the long signature while the first one overflowed into next line.\n\nThe table border was left around to show you how it worked so remove the table border when you implement it.\n\nThe full source (the template file is included in the source as part of the solution) on [GitHub](https://github.com/dance2die/Blog.WordTemplateBookmark).\n\n### Conclusion\n\nThe Word template hack was no difference from the Front-End solution. If you ever have a trouble dealing with Word templates, put your front-end knowledge into work.\n\nThe steps involved for this seems a bit cumbersome so I’d appreciate it if anyone can suggest me a lazier way to do this.\n\nThe post [Dynamically Resize Signature Field in Word Template (Like a Web Developer)](https://www.slightedgecoder.com/2017/06/04/dynamically-resize-signature-field-word-template/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/06/04/dynamically-resize-signature-field-word-template/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/06/04/dynamically-resize-signature-field-word-template/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, c, interop",
    "path": "/dance2die/dynamically-resize-signature-field-in-word-template-like-a-web-developer-217p-temp-slug-702109",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-06-04T13:41:25.000Z"
  },
  {
    "title": "How Refactoring Helps Dealing with Legacy Code",
    "slug": "how-refactoring-helps-dealing-with-legacy-code-433g-temp-slug-4737771",
    "created_at": "2018-07-07T01:41:44.389Z",
    "main_image": null,
    "description": "\n\nYou are writing code either professionally or for fun. A lot of times, we think...",
    "published": false,
    "published_at": "2017-06-11T13:36:50.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eYou are writing code either professionally or for fun. A lot of times, we think that our code will never change.\u003c/p\u003e\n\n\u003cp\u003eBut then we run into many situations where that’s not the case.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eClients/business partners call you and ask to update business logic and add more functionalities.\u003c/li\u003e\n\u003cli\u003eYou are working on a personal project and you want to add a new feature as fast as possible.\u003c/li\u003e\n\u003cli\u003eA bug is reported and it’s not easy to test your code thus requires changing the code for the sake of testing.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWhat would help you to mitigate these issues?\u003c/p\u003e\n\n\u003cp\u003eI recently read \u003ca href=\"https://pragprog.com/book/dblegacy/beyond-legacy-code\"\u003eBeyond Legacy Code: Nine Practices to Extend the Life (and Value) of Your Software\u003c/a\u003e by \u003ca href=\"https://tobeagile.com/about/\"\u003eDavid Scott Berstein\u003c/a\u003e. The book is about how to deal with codes that are hard to maintain and test. Chapter 13 deals with a practice of \u003ca href=\"https://en.wikipedia.org/wiki/Code_refactoring\"\u003erefactoring\u003c/a\u003e. When you constantly refactor your code, it becomes more understandable and testable.\u003c/p\u003e\n\n\u003cp\u003e“Beyond Legacy Code” discusses why refactoring is necessary but a concrete implementation example is not present. I’d like you to be familiarized with steps necessary to make a method more maintainable and testable after a series of refactorings.\u003c/p\u003e\n\n\u003cp\u003eLet’s implement a method, \u003ccode\u003eGetIndexAfterFoundWord\u003c/code\u003e, which searches a word within a text and returns an index after the found word.\u003c/p\u003e\n\n\u003cp\u003eE.g.) If you search for a word “\u003cem\u003elong\u003c/em\u003e” in “\u003cem\u003eThis is a long text to be searched\u003c/em\u003e“. “\u003cem\u003elong\u003c/em\u003e” is found at index 10 (zero-based) and the method returns an index after found word. In this case, the method returns 14 (index 10 + 4, which is the length of “\u003cem\u003elong\u003c/em\u003e“).\u003c/p\u003e\n\n\u003cp\u003e\\ \u003cem\u003e**Note\u003c/em\u003e* : Don’t try to understand the code. Just skim through and imagine how hard it’d be to update the code.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eprivate static int GetIndexAfterFoundWord(string text, string searchWord) { // Build Prefix KMP Table int j = 0; int i = j + 1; int[] T = Enumerable.Repeat(0, searchWord.Length).ToArray(); T[0] = 0; while (i \\\u0026lt; searchWord.Length) { if (searchWord[i] == searchWord[j]) { T[i] = j + 1; j++; i++; } else { while (j \\\u0026gt;= 1 \u0026amp;\u0026amp; searchWord[j] != searchWord[i]) { j = T[j - 1]; if (j == 0) break; } if (searchWord[j] == searchWord[i]) T[i] = j + 1; i++; } } // Search searchWord using the table. int wi = 0; // index position for searchWord int m = 0; // index position for text List\\\u0026lt;int\\\u0026gt; found = new List\\\u0026lt;int\\\u0026gt;(); while (m + wi \\\u0026lt; text.Length) { if (text[m + wi] == searchWord[wi]) { wi++; if (wi == searchWord.Length) { found.Add(m); m = m + wi - T[wi - 1]; wi = T[wi - 1]; } } else { if (T[wi] == 0) { m = m + wi + 1; wi = 0; } else { m = m + wi; wi = (wi - 1) \\\u0026lt; 0 ? 0 : T[wi - 1]; } } } // return the index after found word return found.First() + searchWord.Length; }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eIt uses \u003ca href=\"https://en.wikipedia.org/wiki/Knuth%2525E2%252580%252593Morris%2525E2%252580%252593Pratt_algorithm\"\u003eKnuth-Morris-Pratt (KMP) algorithm\u003c/a\u003e to return found indices and simply returns found index + search word length.\u003c/p\u003e\n\n\u003cp\u003eThe problem is that \u003ccode\u003eGetIndexAfterFoundWord\u003c/code\u003e is very hard to read and also hard to make changes. It doesn’t have to know about building a prefix table. The method only needs to know \u003cstrong\u003ewhat\u003c/strong\u003e  KMP does and doesn’t need to know \u003cstrong\u003ehow\u003c/strong\u003e  it works.\u003c/p\u003e\n\n\u003cp\u003eLet’s abstract table building and search code into methods by using \u003ca href=\"https://refactoring.com/catalog/extractMethod.html\"\u003eExtract Method\u003c/a\u003e refactoring.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"first-refactoring\" href=\"#first-refactoring\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  First Refactoring\n\u003c/h4\u003e\n\n\u003cp\u003eHere is \u003ccode\u003eGetIndexAfterFoundWord2\u003c/code\u003e after the refactoring.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eprivate static int GetIndexAfterFoundWord2(string text, string searchWord) { int[] prefixTable = BuildPrefixTable(searchWord); int[] found = SearchByKmp(text, searchWord, prefixTable); return found.First() + searchWord.Length; }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eNow the code is more intention revealing and the code is self-documenting (at this point, comments are redundant since the method name shows what each line does).\u003c/p\u003e\n\n\u003cp\u003eBut the problem mentioned before refactor still exists.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eGetIndexAfterFoundWord2\u003c/code\u003e still knows too much about the internals of KMP thus not operating at the same level of abstraction of \u003ccode\u003eGetIndexAfterFoundWord2\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eLet’s wrap the KMP search logic in a class using \u003ca href=\"https://refactoring.com/catalog/extractClass.html\"\u003eExtract Class\u003c/a\u003e refactoring.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"second-refactoring\" href=\"#second-refactoring\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Second Refactoring\n\u003c/h4\u003e\n\n\u003cp\u003eHere is \u003ccode\u003eGetIndexAfterFoundWord3\u003c/code\u003e after 2nd refactoring.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eprivate static int GetIndexAfterFoundWord3(string text, string searchWord) { KmpSearch kmpSearch = new KmpSearch(); int[] found = kmpSearch.Find(text, searchWord); return found.First() + searchWord.Length; }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eNow KMP code can be reused and the abstraction level is the same. KMP algorithm is now reusable.\u003c/p\u003e\n\n\u003cp\u003eThe last problem is that, if we need to test \u003ccode\u003eGetIndexAfterFoundWord3\u003c/code\u003e or make changes to the underlying implementation of the search algorithm, then we need to update \u003ccode\u003eGetIndexAfterFoundWord3\u003c/code\u003e, which violates the \u003ca href=\"https://en.wikipedia.org/wiki/Open/closed_principle\"\u003eOpen-Close Principle\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eOpen-Close Principle states that\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003esoftware entities (classes, modules, functions, etc.) should be open for extension, but closed for modification\u003c/em\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ccode\u003eGetIndexAfterFoundWord3\u003c/code\u003e doesn’t need to know which algorithm it is using so let’s abstract one more time by creating an interface and interact with search code via the interface (\u003ca href=\"https://refactoring.com/catalog/extractInterface.html\"\u003eExtract Interface Refactoring\u003c/a\u003e).\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"third-refactoring\" href=\"#third-refactoring\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Third Refactoring\n\u003c/h4\u003e\n\n\u003cp\u003eHere is \u003ccode\u003eGetIndexAfterFoundWord4\u003c/code\u003e after Extract Interface Refactoring.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eprivate static int GetIndexAfterFoundWord4(string text, string searchWord, ITextSearch textSearch) { int[] found = textSearch.Find(text, searchWord); return found.First() + searchWord.Length; }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eNow \u003ccode\u003eGetIndexAfterFoundWord4\u003c/code\u003e doesn’t know \u003cstrong\u003ehow\u003c/strong\u003e  text search functionality is implemented. It just knows that \u003ccode\u003etextSearch\u003c/code\u003e returns an index and that’s all \u003ccode\u003eGetIndexAfterFoundWord4\u003c/code\u003e has to know about.\u003c/p\u003e\n\n\u003cp\u003eThis method is easily  \u003cstrong\u003etestable\u003c/strong\u003e  because you can mock out \u003ccode\u003eITextSearch\u003c/code\u003e and pass any object you need to.\u003c/p\u003e\n\n\u003cp\u003eLet me show you how easy it is to replace the algorithm.\u003c/p\u003e\n\n\u003cp\u003eI created a class, \u003ccode\u003eSlowSearch\u003c/code\u003e that implements \u003ccode\u003eITextSearch\u003c/code\u003e.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epublic static void Main(string[] args) { string text = \"This is a long text to be searched\"; // A word to search within \"text\". string searchWord = \"long\"; int nextIndex = GetIndexAfterFoundWord4(text, searchWord, new KmpSearch()); Console.WriteLine(\"Result of GetIndexAfterFoundWord4 using KmpSearch = \" + nextIndex); nextIndex = GetIndexAfterFoundWord4(text, searchWord, new SlowSearch()); Console.WriteLine(\"Result of GetIndexAfterFoundWord4 using SlowSearch = \" + nextIndex); }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eBoth of them return the same result using different search algorithm.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003eResult of GetIndexAfterFoundWord4 using KmpSearch = 14 Result of GetIndexAfterFoundWord4 using SlowSearch = 14\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eI’ve implemented this demo in a console application so the method is static and accepts all parameters. But if \u003ccode\u003eGetIndexAfterFoundWord4\u003c/code\u003e were a class method, you can inject ITextSearch into a method using a \u003ca href=\"https://en.wikipedia.org/wiki/Strategy_pattern\"\u003eStrategy Pattern\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"last-refactoring\" href=\"#last-refactoring\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Last Refactoring\n\u003c/h4\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight plaintext\"\u003e\u003ccode\u003epublic class IndexIterator { private readonly ITextSearch \\_textSearch; public IndexIterator(ITextSearch textSearch) { \\_textSearch = textSearch; } public int GetIndexAfterFoundWord(string text, string searchWord) { int[] found = \\_textSearch.Find(text, searchWord); return found.First() + searchWord.Length; } }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eYou can either mock out ITextSearch object instance in a test using a mock or pass an instance using a \u003ca href=\"https://en.wikipedia.org/wiki/Dependency_injection\"\u003eDependency Injection\u003c/a\u003e using a framework like \u003ca href=\"http://www.ninject.org/\"\u003eNinject\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eAfter reaching the final step, \u003ccode\u003eGetIndexAfterFoundWord\u003c/code\u003e is\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eeasy to read and understand the logic\u003c/li\u003e\n\u003cli\u003eeasily testable\u003c/li\u003e\n\u003cli\u003eeasy to find bugs\u003c/li\u003e\n\u003cli\u003eeasily extendable\u003c/li\u003e\n\u003cli\u003eoperating on the same level of abstraction\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eAnd lastly, it does one thing and one thing well (\u003ca href=\"https://en.wikipedia.org/wiki/Single_responsibility_principle\"\u003eSingle Responsibility Principle\u003c/a\u003e).\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eAfter series of refactorings, we achieved, more modular, reusable code, and also easily testable.\u003c/p\u003e\n\n\u003cp\u003eI hope you can now see why refactoring helps improving legacy code.\u003c/p\u003e\n\n\u003cp\u003eIf you want to know more about refactoring, check out Martin Fowler’s book, \u003ca href=\"https://martinfowler.com/books/refactoring.html\"\u003eRefactoring Improving the Design of Existing Code\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe code is available on \u003ca href=\"https://github.com/dance2die/Blog.RefactorDemo\"\u003eGitHub\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/06/11/refactoring-helps-dealing-legacy-code/\"\u003eHow Refactoring Helps Dealing with Legacy Code\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: How Refactoring Helps Dealing with Legacy Code\npublished: false\ntags: Blog Entry,Programming,beyond legacy code,book\ncanonical_url: https://www.slightedgecoder.com/2017/06/11/refactoring-helps-dealing-legacy-code/\n---\n\nYou are writing code either professionally or for fun. A lot of times, we think that our code will never change.\n\nBut then we run into many situations where that’s not the case.\n\n- Clients/business partners call you and ask to update business logic and add more functionalities.\n- You are working on a personal project and you want to add a new feature as fast as possible.\n- A bug is reported and it’s not easy to test your code thus requires changing the code for the sake of testing.\n\nWhat would help you to mitigate these issues?\n\nI recently read [Beyond Legacy Code: Nine Practices to Extend the Life (and Value) of Your Software](https://pragprog.com/book/dblegacy/beyond-legacy-code) by [David Scott Berstein](https://tobeagile.com/about/). The book is about how to deal with codes that are hard to maintain and test. Chapter 13 deals with a practice of [refactoring](https://en.wikipedia.org/wiki/Code_refactoring). When you constantly refactor your code, it becomes more understandable and testable.\n\n“Beyond Legacy Code” discusses why refactoring is necessary but a concrete implementation example is not present. I’d like you to be familiarized with steps necessary to make a method more maintainable and testable after a series of refactorings.\n\nLet’s implement a method, `GetIndexAfterFoundWord`, which searches a word within a text and returns an index after the found word.\n\nE.g.) If you search for a word “_long_” in “_This is a long text to be searched_“. “_long_” is found at index 10 (zero-based) and the method returns an index after found word. In this case, the method returns 14 (index 10 + 4, which is the length of “_long_“).\n\n\\ ***Note** : Don’t try to understand the code. Just skim through and imagine how hard it’d be to update the code.\n\n```\nprivate static int GetIndexAfterFoundWord(string text, string searchWord) { // Build Prefix KMP Table int j = 0; int i = j + 1; int[] T = Enumerable.Repeat(0, searchWord.Length).ToArray(); T[0] = 0; while (i \\\u003c searchWord.Length) { if (searchWord[i] == searchWord[j]) { T[i] = j + 1; j++; i++; } else { while (j \\\u003e= 1 \u0026\u0026 searchWord[j] != searchWord[i]) { j = T[j - 1]; if (j == 0) break; } if (searchWord[j] == searchWord[i]) T[i] = j + 1; i++; } } // Search searchWord using the table. int wi = 0; // index position for searchWord int m = 0; // index position for text List\\\u003cint\\\u003e found = new List\\\u003cint\\\u003e(); while (m + wi \\\u003c text.Length) { if (text[m + wi] == searchWord[wi]) { wi++; if (wi == searchWord.Length) { found.Add(m); m = m + wi - T[wi - 1]; wi = T[wi - 1]; } } else { if (T[wi] == 0) { m = m + wi + 1; wi = 0; } else { m = m + wi; wi = (wi - 1) \\\u003c 0 ? 0 : T[wi - 1]; } } } // return the index after found word return found.First() + searchWord.Length; }\n```\n\nIt uses [Knuth-Morris-Pratt (KMP) algorithm](https://en.wikipedia.org/wiki/Knuth%2525E2%252580%252593Morris%2525E2%252580%252593Pratt_algorithm) to return found indices and simply returns found index + search word length.\n\nThe problem is that `GetIndexAfterFoundWord` is very hard to read and also hard to make changes. It doesn’t have to know about building a prefix table. The method only needs to know **what**  KMP does and doesn’t need to know **how**  it works.\n\nLet’s abstract table building and search code into methods by using [Extract Method](https://refactoring.com/catalog/extractMethod.html) refactoring.\n\n#### First Refactoring\n\nHere is `GetIndexAfterFoundWord2` after the refactoring.\n\n```\nprivate static int GetIndexAfterFoundWord2(string text, string searchWord) { int[] prefixTable = BuildPrefixTable(searchWord); int[] found = SearchByKmp(text, searchWord, prefixTable); return found.First() + searchWord.Length; }\n```\n\nNow the code is more intention revealing and the code is self-documenting (at this point, comments are redundant since the method name shows what each line does).\n\nBut the problem mentioned before refactor still exists.\n\n`GetIndexAfterFoundWord2` still knows too much about the internals of KMP thus not operating at the same level of abstraction of `GetIndexAfterFoundWord2`.\n\nLet’s wrap the KMP search logic in a class using [Extract Class](https://refactoring.com/catalog/extractClass.html) refactoring.\n\n#### Second Refactoring\n\nHere is `GetIndexAfterFoundWord3` after 2nd refactoring.\n\n```\nprivate static int GetIndexAfterFoundWord3(string text, string searchWord) { KmpSearch kmpSearch = new KmpSearch(); int[] found = kmpSearch.Find(text, searchWord); return found.First() + searchWord.Length; }\n```\n\nNow KMP code can be reused and the abstraction level is the same. KMP algorithm is now reusable.\n\nThe last problem is that, if we need to test `GetIndexAfterFoundWord3` or make changes to the underlying implementation of the search algorithm, then we need to update `GetIndexAfterFoundWord3`, which violates the [Open-Close Principle](https://en.wikipedia.org/wiki/Open/closed_principle).\n\nOpen-Close Principle states that\n\n\u003e _software entities (classes, modules, functions, etc.) should be open for extension, but closed for modification_\n\n`GetIndexAfterFoundWord3` doesn’t need to know which algorithm it is using so let’s abstract one more time by creating an interface and interact with search code via the interface ([Extract Interface Refactoring](https://refactoring.com/catalog/extractInterface.html)).\n\n#### Third Refactoring\n\nHere is `GetIndexAfterFoundWord4` after Extract Interface Refactoring.\n\n```\nprivate static int GetIndexAfterFoundWord4(string text, string searchWord, ITextSearch textSearch) { int[] found = textSearch.Find(text, searchWord); return found.First() + searchWord.Length; }\n```\n\nNow `GetIndexAfterFoundWord4` doesn’t know **how**  text search functionality is implemented. It just knows that `textSearch` returns an index and that’s all `GetIndexAfterFoundWord4` has to know about.\n\nThis method is easily  **testable**  because you can mock out `ITextSearch` and pass any object you need to.\n\n \n\nLet me show you how easy it is to replace the algorithm.\n\nI created a class, `SlowSearch` that implements `ITextSearch`.\n\n```\npublic static void Main(string[] args) { string text = \"This is a long text to be searched\"; // A word to search within \"text\". string searchWord = \"long\"; int nextIndex = GetIndexAfterFoundWord4(text, searchWord, new KmpSearch()); Console.WriteLine(\"Result of GetIndexAfterFoundWord4 using KmpSearch = \" + nextIndex); nextIndex = GetIndexAfterFoundWord4(text, searchWord, new SlowSearch()); Console.WriteLine(\"Result of GetIndexAfterFoundWord4 using SlowSearch = \" + nextIndex); }\n```\n\nBoth of them return the same result using different search algorithm.\n\n```\nResult of GetIndexAfterFoundWord4 using KmpSearch = 14 Result of GetIndexAfterFoundWord4 using SlowSearch = 14\n```\n\nI’ve implemented this demo in a console application so the method is static and accepts all parameters. But if `GetIndexAfterFoundWord4` were a class method, you can inject ITextSearch into a method using a [Strategy Pattern](https://en.wikipedia.org/wiki/Strategy_pattern).\n\n#### Last Refactoring\n\n```\npublic class IndexIterator { private readonly ITextSearch \\_textSearch; public IndexIterator(ITextSearch textSearch) { \\_textSearch = textSearch; } public int GetIndexAfterFoundWord(string text, string searchWord) { int[] found = \\_textSearch.Find(text, searchWord); return found.First() + searchWord.Length; } }\n```\n\nYou can either mock out ITextSearch object instance in a test using a mock or pass an instance using a [Dependency Injection](https://en.wikipedia.org/wiki/Dependency_injection) using a framework like [Ninject](http://www.ninject.org/).\n\nAfter reaching the final step, `GetIndexAfterFoundWord` is\n\n1. easy to read and understand the logic\n2. easily testable\n3. easy to find bugs\n4. easily extendable\n5. operating on the same level of abstraction\n\nAnd lastly, it does one thing and one thing well ([Single Responsibility Principle](https://en.wikipedia.org/wiki/Single_responsibility_principle)).\n\n### Conclusion\n\nAfter series of refactorings, we achieved, more modular, reusable code, and also easily testable.\n\nI hope you can now see why refactoring helps improving legacy code.\n\nIf you want to know more about refactoring, check out Martin Fowler’s book, [Refactoring Improving the Design of Existing Code](https://martinfowler.com/books/refactoring.html).\n\nThe code is available on [GitHub](https://github.com/dance2die/Blog.RefactorDemo).\n\n \n\n \n\nThe post [How Refactoring Helps Dealing with Legacy Code](https://www.slightedgecoder.com/2017/06/11/refactoring-helps-dealing-legacy-code/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/06/11/refactoring-helps-dealing-legacy-code/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/06/11/refactoring-helps-dealing-legacy-code/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, beyondlegacycode, book",
    "path": "/dance2die/how-refactoring-helps-dealing-with-legacy-code-433g-temp-slug-4737771",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-06-11T13:36:50.000Z"
  },
  {
    "title": "How to call GoodReads API using YQL",
    "slug": "how-to-call-goodreads-api-using-yql-4kl9-temp-slug-8645020",
    "created_at": "2018-07-07T01:41:45.105Z",
    "main_image": null,
    "description": "\n\n* Featured Image – “Reading” by Sam Greenhalgh, used under CC BY 2.0\n\nI have be...",
    "published": false,
    "published_at": "2017-06-20T23:53:58.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/zapthedingbat/3591108120\"\u003eReading\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/zapthedingbat/\"\u003eSam Greenhalgh\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by/2.0/\"\u003eCC BY 2.0\u003c/a\u003e\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eI have been trying to use \u003ca href=\"https://www.goodreads.com/\"\u003eGoodReads\u003c/a\u003edata to display my reading statistics and to find patterns using Javascript.\u003c/p\u003e\n\n\u003cp\u003eThe problem is that GoodReads API did not enable \u003ca href=\"https://en.wikipedia.org/wiki/Cross-origin_resource_sharing\"\u003eCross-origin resource sharing\u003c/a\u003e (CORS) headers thus AjAX calls were failing.\u003c/p\u003e\n\n\u003cp\u003eHow can we get around the issue?\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"1st-hurdle\" href=\"#1st-hurdle\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  1st Hurdle\n\u003c/h4\u003e\n\n\u003cp\u003eHere is the code for the first attempt.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eAbove code returns following error message.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eXMLHttpRequest cannot load \u003ca href=\"https://www.goodreads.com/shelf/list.xml?key=%5C\"\u003ehttps://www.goodreads.com/shelf/list.xml?key=\\\u003c/a\u003e\u0026amp;user_id=25927588\u0026amp;page=1\u0026amp;format=json. No ‘Access-Control-Allow-Origin’ header is present on the requested resource. Origin ‘\u003ca href=\"http://localhost:8080%E2%80%99\"\u003ehttp://localhost:8080’\u003c/a\u003e is therefore not allowed access.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThis GoodReads Developer \u003ca href=\"https://www.goodreads.com/topic/show/17893514-cors-access-control-allow-origin\"\u003eforum post\u003c/a\u003e shows that other people are having the same issue.\u003c/p\u003e\n\n\u003cp\u003eThere is a workaround found in this \u003ca href=\"https://www.goodreads.com/topic/show/17893514-cors-access-control-allow-origin#comment_159292838\"\u003epost\u003c/a\u003ethat one of the workarounds is to use a proxy server.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"2nd-hurdle\" href=\"#2nd-hurdle\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  2nd Hurdle\n\u003c/h4\u003e\n\n\u003cp\u003eIf you have never set up a proxy server, you’d need to search for documentations and read them and so on.\u003c/p\u003e\n\n\u003cp\u003eInstead of setting up your own proxy server, you can use Yahoo’s \u003ca href=\"https://developer.yahoo.com/yql/\"\u003eYQL\u003c/a\u003e (Yahoo Query Language) as an external proxy.\u003c/p\u003e\n\n\u003cp\u003eThe following code snippet wraps a GoodReads URL using \u003ccode\u003eYqlAjax\u003c/code\u003e, which does an AJAX request and returns a promise. \u003ccode\u003esecondAttempt\u003c/code\u003e runs without an issue and returns a record from GoodReads.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"3rd-hurdle\" href=\"#3rd-hurdle\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  3rd Hurdle\n\u003c/h4\u003e\n\n\u003cp\u003eThe last problem is that it’s quite a pain to generate a YQL URL and is error prone. Creating another Javascript file (\u003ca href=\"https://github.com/dance2die/Blog.Javascript.GoodReadsAPI/blob/master/js/yql_ajax.js\"\u003eyql_ajax.js\u003c/a\u003e) seems unnecessary.\u003c/p\u003e\n\n\u003cp\u003eThere is an NPM package called \u003ca href=\"https://www.npmjs.com/package/proxify-url\"\u003eproxify-url\u003c/a\u003e, which returns a new YQL URL given any URL. Now the code becomes simpler and you have one less file to create/maintain.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eOne thing to note is that GoodReads API returns data in XML format instead of JSON. So you need to pass \u003ccode\u003e{ inputFormat: 'xml' }\u003c/code\u003e as an option to \u003ccode\u003eproxyfy\u003c/code\u003e method.\u003c/p\u003e\n\n\u003cp\u003eThe code is now much more readable using existing library.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eUsing Yahoo Proxy with YQL, we can circumvent CORS restriction and query GoodReads API.\u003c/p\u003e\n\n\u003cp\u003e\u003csmall\u003eYou can find the source code on \u003ca href=\"https://github.com/dance2die/Blog.Javascript.GoodReadsAPI\"\u003ehere\u003c/a\u003e. Refer to the \u003ca href=\"https://github.com/dance2die/Blog.Javascript.GoodReadsAPI/blob/master/README.md\"\u003eREADME.md\u003c/a\u003e file on how to set up the project and run it.\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/06/20/call-goodreads-api-using-yql/\"\u003eHow to call GoodReads API using YQL\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: How to call GoodReads API using YQL\npublished: false\ntags: Blog Entry,Programming,TIL,es6\ncanonical_url: https://www.slightedgecoder.com/2017/06/20/call-goodreads-api-using-yql/\n---\n\n\\* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/zapthedingbat/3591108120\"\u003eReading\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/zapthedingbat/\"\u003eSam Greenhalgh\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by/2.0/\"\u003eCC BY 2.0\u003c/a\u003e\u003c/small\u003e\n\nI have been trying to use [GoodReads](https://www.goodreads.com/)data to display my reading statistics and to find patterns using Javascript.\n\nThe problem is that GoodReads API did not enable [Cross-origin resource sharing](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing) (CORS) headers thus AjAX calls were failing.\n\nHow can we get around the issue?\n\n#### 1st Hurdle\n\nHere is the code for the first attempt.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nAbove code returns following error message.\n\n\u003e XMLHttpRequest cannot load https://www.goodreads.com/shelf/list.xml?key=\\\u003csecret\\\u003e\u0026user\\_id=25927588\u0026page=1\u0026format=json. No ‘Access-Control-Allow-Origin’ header is present on the requested resource. Origin ‘http://localhost:8080’ is therefore not allowed access.\n\nThis GoodReads Developer [forum post](https://www.goodreads.com/topic/show/17893514-cors-access-control-allow-origin) shows that other people are having the same issue.\n\nThere is a workaround found in this [post](https://www.goodreads.com/topic/show/17893514-cors-access-control-allow-origin#comment_159292838)that one of the workarounds is to use a proxy server.\n\n#### 2nd Hurdle\n\nIf you have never set up a proxy server, you’d need to search for documentations and read them and so on.\n\nInstead of setting up your own proxy server, you can use Yahoo’s [YQL](https://developer.yahoo.com/yql/) (Yahoo Query Language) as an external proxy.\n\nThe following code snippet wraps a GoodReads URL using `YqlAjax`, which does an AJAX request and returns a promise. `secondAttempt` runs without an issue and returns a record from GoodReads.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n#### 3rd Hurdle\n\nThe last problem is that it’s quite a pain to generate a YQL URL and is error prone. Creating another Javascript file ([yql\\_ajax.js](https://github.com/dance2die/Blog.Javascript.GoodReadsAPI/blob/master/js/yql_ajax.js)) seems unnecessary.\n\nThere is an NPM package called [proxify-url](https://www.npmjs.com/package/proxify-url), which returns a new YQL URL given any URL. Now the code becomes simpler and you have one less file to create/maintain.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nOne thing to note is that GoodReads API returns data in XML format instead of JSON. So you need to pass `{ inputFormat: 'xml' }` as an option to `proxyfy` method.\n\nThe code is now much more readable using existing library.\n\n### Conclusion\n\nUsing Yahoo Proxy with YQL, we can circumvent CORS restriction and query GoodReads API.\n\n\u003csmall\u003eYou can find the source code on \u003ca href=\"https://github.com/dance2die/Blog.Javascript.GoodReadsAPI\"\u003ehere\u003c/a\u003e. Refer to the \u003ca href=\"https://github.com/dance2die/Blog.Javascript.GoodReadsAPI/blob/master/README.md\"\u003eREADME.md\u003c/a\u003e file on how to set up the project and run it.\u003c/small\u003e\n\nThe post [How to call GoodReads API using YQL](https://www.slightedgecoder.com/2017/06/20/call-goodreads-api-using-yql/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/06/20/call-goodreads-api-using-yql/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/06/20/call-goodreads-api-using-yql/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, todayilearned, es6",
    "path": "/dance2die/how-to-call-goodreads-api-using-yql-4kl9-temp-slug-8645020",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-06-20T23:53:58.000Z"
  },
  {
    "title": "Opening Reddit Links using Chrome Plugin",
    "slug": "opening-reddit-links-using-chrome-plugin-1ca8-temp-slug-1092245",
    "created_at": "2018-07-07T01:41:45.696Z",
    "main_image": null,
    "description": "\n\nIt was Saturday night. I had a lot of time on my hands so I decided to browse R...",
    "published": false,
    "published_at": "2017-06-25T15:00:56.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eIt was Saturday night. I had a lot of time on my hands so I decided to browse \u003ca href=\"https://www.reddit.com/\"\u003eReddit\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eReddit has so many links, clicking on each link manually was a burden to my hands and wasn’t time efficient.\u003c/p\u003e\n\n\u003cp\u003eI decided to automate opening each link.\u003c/p\u003e\n\n\u003cp\u003eAs mentioned, the first problem is that, I had to manually click each link on a page.  \u003c/p\u003e\n\n\u003cp\u003eSo I wrote a simple JavaScript to open links in Chrome developer console.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eBut \u003ca href=\"https://stackoverflow.com/a/16757736/4035\"\u003eChrome prevents JavaScript from opening multiple tabs\u003c/a\u003e. So I used Internet Explorer, which allows JavaScript to open multiple tabs.  \u003c/p\u003e\n\n\u003cp\u003eA problem occurred when I went to other Sub-Reddits in a new tabs. I had to open developer console again and paste JavaScript.\u003c/p\u003e\n\n\u003cp\u003eI found out that Chrome Plugin allows opening multiple tabs using JavaScript. After implementing a\u003ca href=\"https://github.com/dance2die/Chrome.Plugin.OpenRedditLinks\"\u003esimple plugin\u003c/a\u003e, I was able to open links with a click of a button.  \u003c/p\u003e\n\n\u003cp\u003eThe last problem is that, I didn’t want to click the plugin every time. So I decided to bind the plugin with a keyboard shortcut.  \u003c/p\u003e\n\n\u003cp\u003eNow I can open all links with a keyboard shortcut, \u003ccode\u003eCtrl+Alt+F\u003c/code\u003e.  \u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eI was able to browse Reddit much faster than I could have had than clicking on each link manually.\u003c/p\u003e\n\n\u003cp\u003eThere is already a Chrome plugin called \u003ca href=\"http://redditenhancementsuite.com/\"\u003eReddit Enhancement Suite\u003c/a\u003e (RES), which was pointed out by “Aaron C” on Coding Blocks Slack Channel.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--P5ITDQoE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/06/slack_2017-06-25_09-15-15.png%3Fresize%3D546%252C85%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--P5ITDQoE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/06/slack_2017-06-25_09-15-15.png%3Fresize%3D546%252C85%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThis is a real handy plugin, which toggles all images in the main feed.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/06/25/opening-reddit-links-using-chrome-plugin/\"\u003eOpening Reddit Links using Chrome Plugin\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Opening Reddit Links using Chrome Plugin\npublished: false\ntags: Blog Entry,Programming,TIL,automation\ncanonical_url: https://www.slightedgecoder.com/2017/06/25/opening-reddit-links-using-chrome-plugin/\n---\n\nIt was Saturday night. I had a lot of time on my hands so I decided to browse [Reddit](https://www.reddit.com/).\n\nReddit has so many links, clicking on each link manually was a burden to my hands and wasn’t time efficient.\n\nI decided to automate opening each link.\n\nAs mentioned, the first problem is that, I had to manually click each link on a page.  \n\u003ciframe style=\"border: 1px solid black;\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/5oIhFixcm8Q\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"\u003e\u003c/iframe\u003e\n\n \n\nSo I wrote a simple JavaScript to open links in Chrome developer console.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nBut [Chrome prevents JavaScript from opening multiple tabs](https://stackoverflow.com/a/16757736/4035). So I used Internet Explorer, which allows JavaScript to open multiple tabs.  \n\u003ciframe style=\"border: 1px solid black;\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/1gFCtkylShU\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"\u003e\u003c/iframe\u003e\n\nA problem occurred when I went to other Sub-Reddits in a new tabs. I had to open developer console again and paste JavaScript.\n\nI found out that Chrome Plugin allows opening multiple tabs using JavaScript. After implementing a[simple plugin](https://github.com/dance2die/Chrome.Plugin.OpenRedditLinks), I was able to open links with a click of a button.  \n\u003ciframe style=\"border: 1px solid black;\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/zo8Lp1XbURE\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"\u003e\u003c/iframe\u003e\n\nThe last problem is that, I didn’t want to click the plugin every time. So I decided to bind the plugin with a keyboard shortcut.  \n\u003ciframe style=\"border: 1px solid black;\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/u6Uy_EoPc6A\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"\u003e\u003c/iframe\u003e\n\nNow I can open all links with a keyboard shortcut, `Ctrl+Alt+F`.  \n\u003ciframe style=\"border: 1px solid black;\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/MVxDNaq_muo\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"\u003e\u003c/iframe\u003e\n\n \n\n### Conclusion\n\nI was able to browse Reddit much faster than I could have had than clicking on each link manually.\n\nThere is already a Chrome plugin called [Reddit Enhancement Suite](http://redditenhancementsuite.com/) (RES), which was pointed out by “Aaron C” on Coding Blocks Slack Channel.\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/06/slack_2017-06-25_09-15-15.png?resize=546%2C85\u0026ssl=1)\n\n \n\n \n\n \n\nThis is a real handy plugin, which toggles all images in the main feed.\n\nThe post [Opening Reddit Links using Chrome Plugin](https://www.slightedgecoder.com/2017/06/25/opening-reddit-links-using-chrome-plugin/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/06/25/opening-reddit-links-using-chrome-plugin/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/06/25/opening-reddit-links-using-chrome-plugin/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, todayilearned, automation",
    "path": "/dance2die/opening-reddit-links-using-chrome-plugin-1ca8-temp-slug-1092245",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-06-25T15:00:56.000Z"
  },
  {
    "title": "Hiding API Keys on GitHub",
    "slug": "hiding-api-keys-on-github-33g0-temp-slug-8107843",
    "created_at": "2018-07-07T01:41:46.465Z",
    "main_image": null,
    "description": "\n\nYou have come up with a cool idea, decided to make an open source project, and ...",
    "published": false,
    "published_at": "2017-07-08T23:52:58.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eYou have come up with a cool idea, decided to make an open source project, and share it on \u003ca href=\"https://github.com/\"\u003eGitHub\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe most popular language on GitHub nowadays is \u003ca href=\"http://githut.info/\"\u003eJavaScript\u003c/a\u003e, and many of those who use JavaScript access Web API.\u003c/p\u003e\n\n\u003cp\u003eMost of Web APIs nowadays require developer API key, but your “Open Source” project source is made public as the name suggests.\u003c/p\u003e\n\n\u003cp\u003eNow the question is, how can we hide the API keys?\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"hide-using-gitignore-file\" href=\"#hide-using-gitignore-file\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Hide Using .gitignore File\n\u003c/h3\u003e\n\n\u003cp\u003eSince JavaScript is most common language, I will talk about how to hide API keys for a web project.\u003c/p\u003e\n\n\u003cp\u003eCreate an external JavaScript file: Name it however you want but I usually use apiKeys.js.\u003c/p\u003e\n\n\u003cp\u003eAdd an object containing API keys and export it.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eAdd an entry in \u003ccode\u003e.gitignore\u003c/code\u003e the name of file you created.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eYou can now access API keys in other JavaScript files simply by importing/requiring it.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003ch5\u003e\n  \u003ca name=\"advantage\" href=\"#advantage\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Advantage\n\u003c/h5\u003e\n\n\u003cp\u003eIt’s easy to migrate between machines since all that’s required is to copy files from machine to machine.\u003c/p\u003e\n\u003ch5\u003e\n  \u003ca name=\"disadvantage\" href=\"#disadvantage\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Disadvantage\n\u003c/h5\u003e\n\n\u003cp\u003eEach web project requires its own copy of API keys and it’s not easy to sync unless the file is shared in a common location.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"hide-using-a-partial-class\" href=\"#hide-using-a-partial-class\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Hide Using a Partial Class\n\u003c/h3\u003e\n\n\u003cp\u003eNow for a back-end language, I will use C# as an example since I am most familiar with it.\u003c/p\u003e\n\n\u003cp\u003eC# has a concept of \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/partial-classes-and-methods\"\u003e\u003cem\u003epartial class\u003c/em\u003e\u003c/a\u003e.  Partial classes are used widely for adding new functionalities to codes that are generated by tools without the tool overwriting it.\u003c/p\u003e\n\n\u003cp\u003eYou can use this concept to create a partial class that contains API keys exposed as properties.\u003c/p\u003e\n\n\u003cp\u003eFirst step is to create a partial class, and commit to GitHub without adding API key properties.\u003c/p\u003e\n\n\u003cp\u003eAnd then you mark the partial class file as not updatable using git.\u003c/p\u003e\n\n\u003cp\u003eI have learned of this method after reading a \u003ca href=\"https://gist.github.com/aloisdg/38a6a09b614d8455b6d1e685a77a5eba\"\u003egist\u003c/a\u003eposted by \u003ca href=\"https://github.com/aloisdg\"\u003eAlois\u003c/a\u003e on GitHub.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003ch5\u003e\n  \u003ca name=\"advantage\" href=\"#advantage\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Advantage\n\u003c/h5\u003e\n\n\u003cp\u003eRe-usability of partial class within a solution.\u003c/p\u003e\n\u003ch5\u003e\n  \u003ca name=\"disadvantage\" href=\"#disadvantage\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Disadvantage\n\u003c/h5\u003e\n\n\u003cp\u003eSteps involved is a bit cumbersome and it’s language dependent.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"hide-using-environment-variables\" href=\"#hide-using-environment-variables\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Hide Using Environment Variables\n\u003c/h3\u003e\n\n\u003cp\u003eThe last method is to use \u003cem\u003eenvironment variables\u003c/em\u003e. Create new environment variables per each key and access it from your code.\u003c/p\u003e\n\n\u003cp\u003eFirst, create environment variables for your system (I am using Windows 10 as an example here).\u003c/p\u003e\n\n\u003cp\u003eI created \u003ccode\u003eProject_MyAnimeList.Password\u003c/code\u003e \u0026amp; \u003ccode\u003eProject_MyAnimeList.UserName\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--AGiUqks7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/07/Environment-Variable.png%3Fresize%3D618%252C287%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--AGiUqks7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/07/Environment-Variable.png%3Fresize%3D618%252C287%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eIn your code, simply access environment variable to fetch secret information (\u003ca href=\"https://github.com/dance2die/MyAnimeListSharp/blob/master/Project.MyAnimeList/Project.MyAnimeList/Auth/CredentialContext.cs\"\u003eCredentialContext.cs\u003c/a\u003e).\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003ch5\u003e\n  \u003ca name=\"advantage\" href=\"#advantage\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Advantage\n\u003c/h5\u003e\n\n\u003cp\u003eIt’s easy easily shareable/accessible from several different projects from a computer.\u003c/p\u003e\n\u003ch5\u003e\n  \u003ca name=\"disadvantage\" href=\"#disadvantage\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Disadvantage\n\u003c/h5\u003e\n\n\u003cp\u003eIf you are working on a project using the environment variable from different machines (work computer and laptop at home), you need to create environment variable in each of those machine. It’s harder than just copying files from machine to machine\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAs a side note, I chose environment variable option for \u003ca href=\"https://github.com/dance2die/MyAnimeListSharp\"\u003eMyAnimeListSharp\u003c/a\u003e because the project was developed only on my laptop while working on different branches.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e** Update **\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.gaprogman.com/\"\u003eJamie Taylor\u003c/a\u003e kindly explained to me on \u003ca href=\"https://www.codingblocks.net/slack/\"\u003eCodingBlocks Slack Channel\u003c/a\u003e that .NET Core has a built-in support for storing and accessing configuration secrets.\u003c/p\u003e\n\n\u003cp\u003eCheck out this Microsoft Documentation, \u003ca href=\"https://docs.microsoft.com/en-us/aspnet/core/security/app-secrets\"\u003eSafe storage of app secrets during development\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"takeaway\" href=\"#takeaway\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Takeaway\n\u003c/h3\u003e\n\n\u003cp\u003eThere is no one method that’s better than the other. Choose a different method of hiding API keys depending on your current situation.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/07/08/hiding-api-keys-github/\"\u003eHiding API Keys on GitHub\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Hiding API Keys on GitHub\npublished: false\ntags: Blog Entry,Programming,.ignore,backend\ncanonical_url: https://www.slightedgecoder.com/2017/07/08/hiding-api-keys-github/\n---\n\nYou have come up with a cool idea, decided to make an open source project, and share it on [GitHub](https://github.com/).\n\nThe most popular language on GitHub nowadays is [JavaScript](http://githut.info/), and many of those who use JavaScript access Web API.\n\nMost of Web APIs nowadays require developer API key, but your “Open Source” project source is made public as the name suggests.\n\nNow the question is, how can we hide the API keys?\n\n### Hide Using .gitignore File\n\nSince JavaScript is most common language, I will talk about how to hide API keys for a web project.\n\nCreate an external JavaScript file: Name it however you want but I usually use apiKeys.js.\n\nAdd an object containing API keys and export it.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nAdd an entry in `.gitignore` the name of file you created.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nYou can now access API keys in other JavaScript files simply by importing/requiring it.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003e ##### Advantage\n\u003e \n\u003e It’s easy to migrate between machines since all that’s required is to copy files from machine to machine.\n\u003e \n\u003e ##### Disadvantage\n\u003e \n\u003e Each web project requires its own copy of API keys and it’s not easy to sync unless the file is shared in a common location.\n\n \n\n### Hide Using a Partial Class\n\nNow for a back-end language, I will use C# as an example since I am most familiar with it.\n\nC# has a concept of [_partial class_](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/partial-classes-and-methods).  Partial classes are used widely for adding new functionalities to codes that are generated by tools without the tool overwriting it.\n\nYou can use this concept to create a partial class that contains API keys exposed as properties.\n\nFirst step is to create a partial class, and commit to GitHub without adding API key properties.\n\nAnd then you mark the partial class file as not updatable using git.\n\nI have learned of this method after reading a [gist](https://gist.github.com/aloisdg/38a6a09b614d8455b6d1e685a77a5eba)posted by [Alois](https://github.com/aloisdg) on GitHub.\n\n\u003e ##### Advantage\n\u003e \n\u003e Re-usability of partial class within a solution.\n\u003e \n\u003e ##### Disadvantage\n\u003e \n\u003e Steps involved is a bit cumbersome and it’s language dependent.\n\n \n\n### Hide Using Environment Variables\n\nThe last method is to use _environment variables_. Create new environment variables per each key and access it from your code.\n\nFirst, create environment variables for your system (I am using Windows 10 as an example here).\n\nI created `Project_MyAnimeList.Password` \u0026 `Project_MyAnimeList.UserName`.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/07/Environment-Variable.png?resize=618%2C287\u0026ssl=1)\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nIn your code, simply access environment variable to fetch secret information ([CredentialContext.cs](https://github.com/dance2die/MyAnimeListSharp/blob/master/Project.MyAnimeList/Project.MyAnimeList/Auth/CredentialContext.cs)).\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n\u003e ##### Advantage\n\u003e \n\u003e It’s easy easily shareable/accessible from several different projects from a computer.\n\u003e \n\u003e ##### Disadvantage\n\u003e \n\u003e If you are working on a project using the environment variable from different machines (work computer and laptop at home), you need to create environment variable in each of those machine. It’s harder than just copying files from machine to machine\n\nAs a side note, I chose environment variable option for [MyAnimeListSharp](https://github.com/dance2die/MyAnimeListSharp) because the project was developed only on my laptop while working on different branches.\n\n \n\n**\\*\\* Update \\*\\***\n\n[Jamie Taylor](https://www.gaprogman.com/) kindly explained to me on [CodingBlocks Slack Channel](https://www.codingblocks.net/slack/) that .NET Core has a built-in support for storing and accessing configuration secrets.\n\nCheck out this Microsoft Documentation, [Safe storage of app secrets during development](https://docs.microsoft.com/en-us/aspnet/core/security/app-secrets).\n\n \n\n### Takeaway\n\nThere is no one method that’s better than the other. Choose a different method of hiding API keys depending on your current situation.\n\nThe post [Hiding API Keys on GitHub](https://www.slightedgecoder.com/2017/07/08/hiding-api-keys-github/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/07/08/hiding-api-keys-github/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/07/08/hiding-api-keys-github/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, ignore, backend",
    "path": "/dance2die/hiding-api-keys-on-github-33g0-temp-slug-8107843",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-07-08T23:52:58.000Z"
  },
  {
    "title": "TIL – While Reading the Phoenix Project",
    "slug": "til--while-reading-the-phoenix-project-1o4g-temp-slug-5453968",
    "created_at": "2018-07-07T01:41:47.020Z",
    "main_image": null,
    "description": "\n\nWarning : This is just going to be a random blog entry written with whatever is...",
    "published": false,
    "published_at": "2017-07-22T13:19:38.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cstrong\u003eWarning\u003c/strong\u003e : This is just going to be a random blog entry written with whatever is coming out of my mind.\u003c/p\u003e\n\n\u003cp\u003eI am reading \u003ca href=\"https://www.amazon.com/Phoenix-Project-DevOps-Helping-Business/dp/0988262509/ref=sr_1_1?ie=UTF8\u0026amp;qid=1500728685\u0026amp;sr=8-1\u0026amp;keywords=the+phoenix+project\"\u003eThe Phoenix Project\u003c/a\u003e. It’s a book about an IT manager, Bill Palmer, who was promoted to a CIO and undertaking on the “Phoenix Project”, which is crucial for the company’s survival.\u003c/p\u003e\n\n\u003cp\u003eI recently read this on page 121, and Bill says\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e… We need the people doing the work to know what the hell they’re doing, not enable more people to hoard knowledge\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eIt was said due to a guy named Brent, an able lead engineer, who is a major bottleneck in WIP (Work in Progress) of all the projects because he is just good at what he is doing and requested by everyone to fix a problem.\u003c/p\u003e\n\n\u003cp\u003eThat sentence was stuck in my head because I was able to relate to it.\u003c/p\u003e\n\n\u003cp\u003eThere is an engineer, (Mr. G). in my department who is very much like him. Without him, many problems couldn’t be solved since he knows internals and workflows of how company works and he is technically savvy.\u003c/p\u003e\n\n\u003cp\u003eHere is what happened recently.\u003c/p\u003e\n\n\u003cp\u003eI was assigned for an important update in an Accounting System. Because I have no idea what needed to be done, it was mostly likely that I had to bring in Mr G from the get-go and have him check my work constantly to see if I am going in right direction. That’d make him a bottleneck in WIP for all other projects. So I took a different approach after being reminded of what Bill said.\u003c/p\u003e\n\n\u003cp\u003eInstead of Mr. G. “hoarding knowledge”, I decided to take 10 minutes of his time asking about, \u003cstrong\u003ewho\u003c/strong\u003e I am making a change, \u003cstrong\u003ewhy\u003c/strong\u003e the update is needed, and \u003cstrong\u003ewhat\u003c/strong\u003e need to be changed (I forgot from which book I learned this concept from…).\u003c/p\u003e\n\n\u003cp\u003eWhen I got to ask him “why” questions, he then gave me a \u003cem\u003estory\u003c/em\u003e of how the change request came to be. When he explained to me the end-user workflow, I then found a way to “validate” my own work without having to ask Mr. G to verify the correctness of the changes made. Now he doesn’t have to be involved with my changes and he can move on.\u003c/p\u003e\n\n\u003cp\u003eMr. G. spending 10 minutes sharing his knowledge helped him free his time as well as mine in the long run. Another benefit I got out of is that I have a better understanding of what needs to be done and where the change fits in a bigger scale.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eCredit\u003c/strong\u003e : Motivated by \u003ca href=\"http://swyx.io/\"\u003eShawn Wang\u003c/a\u003e (\u003ca class=\"comment-mentioned-user\" href=\"https://dev.to/swyx\"\u003e@swyx\u003c/a\u003e\n) on \u003ca href=\"https://www.codingblocks.net/slack/\"\u003eCoding Blocks Slack Channel\u003c/a\u003e in \u003cem\u003e#blogging\u003c/em\u003e and decided to write something.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--lzR9l_7f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/07/swyx-motivation.jpg%3Fresize%3D920%252C49%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--lzR9l_7f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/07/swyx-motivation.jpg%3Fresize%3D920%252C49%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/07/22/til-reading-phoenix-project/\"\u003eTIL – While Reading the Phoenix Project\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: TIL – While Reading the Phoenix Project\npublished: false\ntags: TIL\ncanonical_url: https://www.slightedgecoder.com/2017/07/22/til-reading-phoenix-project/\n---\n\n **Warning** : This is just going to be a random blog entry written with whatever is coming out of my mind.\n\nI am reading [The Phoenix Project](https://www.amazon.com/Phoenix-Project-DevOps-Helping-Business/dp/0988262509/ref=sr_1_1?ie=UTF8\u0026qid=1500728685\u0026sr=8-1\u0026keywords=the+phoenix+project). It’s a book about an IT manager, Bill Palmer, who was promoted to a CIO and undertaking on the “Phoenix Project”, which is crucial for the company’s survival.\n\nI recently read this on page 121, and Bill says\n\n\u003e … We need the people doing the work to know what the hell they’re doing, not enable more people to hoard knowledge\n\nIt was said due to a guy named Brent, an able lead engineer, who is a major bottleneck in WIP (Work in Progress) of all the projects because he is just good at what he is doing and requested by everyone to fix a problem.\n\nThat sentence was stuck in my head because I was able to relate to it.\n\nThere is an engineer, (Mr. G). in my department who is very much like him. Without him, many problems couldn’t be solved since he knows internals and workflows of how company works and he is technically savvy.\n\nHere is what happened recently.\n\nI was assigned for an important update in an Accounting System. Because I have no idea what needed to be done, it was mostly likely that I had to bring in Mr G from the get-go and have him check my work constantly to see if I am going in right direction. That’d make him a bottleneck in WIP for all other projects. So I took a different approach after being reminded of what Bill said.\n\nInstead of Mr. G. “hoarding knowledge”, I decided to take 10 minutes of his time asking about, **who** I am making a change, **why** the update is needed, and **what** need to be changed (I forgot from which book I learned this concept from…).\n\nWhen I got to ask him “why” questions, he then gave me a _story_ of how the change request came to be. When he explained to me the end-user workflow, I then found a way to “validate” my own work without having to ask Mr. G to verify the correctness of the changes made. Now he doesn’t have to be involved with my changes and he can move on.\n\nMr. G. spending 10 minutes sharing his knowledge helped him free his time as well as mine in the long run. Another benefit I got out of is that I have a better understanding of what needs to be done and where the change fits in a bigger scale.\n\n \n\n**Credit** : Motivated by [Shawn Wang](http://swyx.io/) (@swyx) on [Coding Blocks Slack Channel](https://www.codingblocks.net/slack/) in _#blogging_ and decided to write something.\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/07/swyx-motivation.jpg?resize=920%2C49\u0026ssl=1)\n\nThe post [TIL – While Reading the Phoenix Project](https://www.slightedgecoder.com/2017/07/22/til-reading-phoenix-project/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/07/22/til-reading-phoenix-project/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/07/22/til-reading-phoenix-project/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "todayilearned",
    "path": "/dance2die/til--while-reading-the-phoenix-project-1o4g-temp-slug-5453968",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-07-22T13:19:38.000Z"
  },
  {
    "title": "Getting over Insomnia",
    "slug": "getting-over-insomnia-12i7-temp-slug-9133801",
    "created_at": "2018-07-07T01:41:47.351Z",
    "main_image": null,
    "description": "\n\n* Featured Image – “not asleep – not awake” by Aaron Edwards, used under CC BY-...",
    "published": false,
    "published_at": "2017-07-29T17:22:35.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/evill1/31534763/in/photolist-3MCbP-858FCF-4y4tQS-4JUkjn-4JUkfD-aSacvX-69RAH-9K6bru-W1weV9-UXiN5q-7Qm8vA-2NU2Ay-G7KcM-98jATK-6ZrURC-d7Ru6L-4YQyao-4V9MqY-4v1UcX-9ysdXL-8fij1j-5EqZMx-8SpcDq-6ZHubB-5xB8Sn-7RULBk-7jRAXm-rykK7H-9iYvE9-52Jr54-2i4CK-584ju8-4Y1yQQ-4EZ49J-b5hQr-6KHt8e-62qmeZ-3g8ZPU-6ttCwZ-cWhHJS-sauRw-8nEJi6-a7ta7C-5ZgWDW-BnTty-7mMwe-7wk11Y-kW2v3A-4dG2yZ-axrJS6\"\u003enot asleep – not awake\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/evill1/\"\u003eAaron Edwards\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by-nc/2.0/\"\u003eCC BY-NC 2.0\u003c/a\u003e.\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eIt takes me at least an hour to fall asleep. It is not as bad as to call it an insomnia.\u003c/p\u003e\n\n\u003cp\u003eBut I’ve been able to fall asleep easier nowadays.\u003c/p\u003e\n\n\u003cp\u003eI’d like to share the simple changes I made before going to bed.\u003c/p\u003e\n\n\u003cp\u003eOne day I was thinking why it takes so long to fall asleep before going to bed. The problem seemed to be that my mind was filled with what I did today and worries about tomorrow.\u003c/p\u003e\n\n\u003cp\u003eSo for about three weeks, I decided to reflect on my thoughts and worries before physically lying down on my bed. My mind became tired and was able to fall asleep quicker more often.\u003c/p\u003e\n\n\u003cp\u003eBut then I learned from this post that, writing down on a piece of paper actually clears your mind. Refer to this blog article \u003ca href=\"http://www.lifehack.org/articles/lifestyle/how-writing-things-down-can-change-your-life.html\"\u003eHow Writing Things Down Can Change Your Life.\u003c/a\u003e So I decided to write down whatever was flowing in my mind in my journal. My mind somehow was cleared and stop thinking/worrying about things I wrote down. Might be a placebo effect but it seemed to work for me.\u003c/p\u003e\n\n\u003cp\u003e(Sorry, I can’t share what I wrote before bed since they are a bit too personal…)\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eSo if you have trouble sleeping, why don’t you giving “reflection” or “writing down” your worries/thoughts” on a piece of paper before hitting the sack? Or you can probably keep a diary or meditate before bed.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/07/29/getting-over-insomnia/\"\u003eGetting over Insomnia\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Getting over Insomnia\npublished: false\ntags: TIL,diary,insomnia,reflection\ncanonical_url: https://www.slightedgecoder.com/2017/07/29/getting-over-insomnia/\n---\n\n\\* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/evill1/31534763/in/photolist-3MCbP-858FCF-4y4tQS-4JUkjn-4JUkfD-aSacvX-69RAH-9K6bru-W1weV9-UXiN5q-7Qm8vA-2NU2Ay-G7KcM-98jATK-6ZrURC-d7Ru6L-4YQyao-4V9MqY-4v1UcX-9ysdXL-8fij1j-5EqZMx-8SpcDq-6ZHubB-5xB8Sn-7RULBk-7jRAXm-rykK7H-9iYvE9-52Jr54-2i4CK-584ju8-4Y1yQQ-4EZ49J-b5hQr-6KHt8e-62qmeZ-3g8ZPU-6ttCwZ-cWhHJS-sauRw-8nEJi6-a7ta7C-5ZgWDW-BnTty-7mMwe-7wk11Y-kW2v3A-4dG2yZ-axrJS6\"\u003enot asleep – not awake\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/evill1/\"\u003eAaron Edwards\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by-nc/2.0/\"\u003eCC BY-NC 2.0\u003c/a\u003e.\u003c/small\u003e\n\nIt takes me at least an hour to fall asleep. It is not as bad as to call it an insomnia.\n\nBut I’ve been able to fall asleep easier nowadays.\n\nI’d like to share the simple changes I made before going to bed.\n\nOne day I was thinking why it takes so long to fall asleep before going to bed. The problem seemed to be that my mind was filled with what I did today and worries about tomorrow.\n\nSo for about three weeks, I decided to reflect on my thoughts and worries before physically lying down on my bed. My mind became tired and was able to fall asleep quicker more often.\n\nBut then I learned from this post that, writing down on a piece of paper actually clears your mind. Refer to this blog article [How Writing Things Down Can Change Your Life.](http://www.lifehack.org/articles/lifestyle/how-writing-things-down-can-change-your-life.html) So I decided to write down whatever was flowing in my mind in my journal. My mind somehow was cleared and stop thinking/worrying about things I wrote down. Might be a placebo effect but it seemed to work for me.\n\n(Sorry, I can’t share what I wrote before bed since they are a bit too personal…)\n\n### Conclusion\n\nSo if you have trouble sleeping, why don’t you giving “reflection” or “writing down” your worries/thoughts” on a piece of paper before hitting the sack? Or you can probably keep a diary or meditate before bed.\n\nThe post [Getting over Insomnia](https://www.slightedgecoder.com/2017/07/29/getting-over-insomnia/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/07/29/getting-over-insomnia/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/07/29/getting-over-insomnia/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "todayilearned, diary, insomnia, reflection",
    "path": "/dance2die/getting-over-insomnia-12i7-temp-slug-9133801",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-07-29T17:22:35.000Z"
  },
  {
    "title": "TIL – An Epiphany while reading The Richest Man in Babylon",
    "slug": "til--an-epiphany-while-reading-the-richest-man-in-babylon-7hl-temp-slug-2046812",
    "created_at": "2018-07-07T01:41:47.892Z",
    "main_image": null,
    "description": "\n\nI started reading The Richest Man in Babylon a few days ago.\n\nOne of my coworke...",
    "published": false,
    "published_at": "2017-08-05T16:51:01.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI started reading \u003ca href=\"https://en.wikipedia.org/wiki/The_Richest_Man_in_Babylon_(book)\"\u003eThe Richest Man in Babylon\u003c/a\u003e a few days ago.\u003c/p\u003e\n\n\u003cp\u003eOne of my coworkers is a voracious reader so I was telling him how enticing the book was.\u003c/p\u003e\n\n\u003cp\u003eWhile having a conversation, I had an epiphany\u003c/p\u003e\n\n\u003cp\u003eI’ve been putting 100% at work and sometimes work extra hours over the weekend. I was always tired and had low motivation to develop my technical skills, which resulted in downward spiral of inefficiency. Then during a conversation with my coworker, something hit me hard.\u003c/p\u003e\n\n\u003cp\u003eThe book is a parable with a richest man named “Arkad” in ancient Babylon about building wealth. Arkad teaches students that one should set aside 10% of what they earn and invest it to fatten their “wallets”.\u003c/p\u003e\n\n\u003cp\u003eThe \u003cstrong\u003eepiphany\u003c/strong\u003e was that, _ \u003cstrong\u003eI could apply the same concept of building wealth in my work/life balance\u003c/strong\u003e _.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eInstead of giving 100% at work, I should set aside minimum of 10% of energy for my own development\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAfter coming back from work, I used to always feel exhausted and had low motivation to learn anything new.\u003c/p\u003e\n\n\u003cp\u003eIt’s quite funny that I ran into this podcast \u003ca href=\"http://cynicaldeveloper.com/podcast/35/\"\u003eepisode #35 – Working Hours\u003c/a\u003e by James Studdart, \u003ca href=\"http://cynicaldeveloper.com/\"\u003ethe Cynical Developer\u003c/a\u003e (check out this awesome developer podcast) after the epiphany.\u003c/p\u003e\n\n\u003cp\u003eTo rephrase James,\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePut extra hours if you slacked off but don’t do so unless you have to\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAnd also, \u003ca href=\"https://www.gaprogman.com/\"\u003eJamie\u003c/a\u003e (@GaProgMan) has also given me advices on how to distribute one’s effort on \u003ca href=\"https://www.codingblocks.net/slack/\"\u003eCoding Blocks Slack channel\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eHere is the conversation on \u003cstrong\u003e#books\u003c/strong\u003e channel (posted with a permission from Jamie)\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Vy7pppnT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/08/Coding-Blocks-books-GaProgMan.jpg%3Fresize%3D748%252C718%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Vy7pppnT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/08/Coding-Blocks-books-GaProgMan.jpg%3Fresize%3D748%252C718%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"what-i-learned-today\" href=\"#what-i-learned-today\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  What I learned Today\n\u003c/h3\u003e\n\n\u003cp\u003eI should set aside self-development time of my own.\u003c/p\u003e\n\n\u003cp\u003eDoing so would not only help me relax and also improve my work/life balance\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/08/05/til-epiphany-reading-richest-man-babylon/\"\u003eTIL – An Epiphany while reading The Richest Man in Babylon\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: TIL – An Epiphany while reading The Richest Man in Babylon\npublished: false\ntags: TIL,book,epiphany,the richest man in b\ncanonical_url: https://www.slightedgecoder.com/2017/08/05/til-epiphany-reading-richest-man-babylon/\n---\n\nI started reading [The Richest Man in Babylon](https://en.wikipedia.org/wiki/The_Richest_Man_in_Babylon_(book)) a few days ago.\n\nOne of my coworkers is a voracious reader so I was telling him how enticing the book was.\n\nWhile having a conversation, I had an epiphany\n\nI’ve been putting 100% at work and sometimes work extra hours over the weekend. I was always tired and had low motivation to develop my technical skills, which resulted in downward spiral of inefficiency. Then during a conversation with my coworker, something hit me hard.\n\nThe book is a parable with a richest man named “Arkad” in ancient Babylon about building wealth. Arkad teaches students that one should set aside 10% of what they earn and invest it to fatten their “wallets”.\n\nThe **epiphany** was that, _ **I could apply the same concept of building wealth in my work/life balance** _.\n\n\u003e Instead of giving 100% at work, I should set aside minimum of 10% of energy for my own development\n\nAfter coming back from work, I used to always feel exhausted and had low motivation to learn anything new.\n\nIt’s quite funny that I ran into this podcast [episode #35 – Working Hours](http://cynicaldeveloper.com/podcast/35/) by James Studdart, [the Cynical Developer](http://cynicaldeveloper.com/) (check out this awesome developer podcast) after the epiphany.\n\nTo rephrase James,\n\n\u003e Put extra hours if you slacked off but don’t do so unless you have to\n\nAnd also, [Jamie](https://www.gaprogman.com/) (@GaProgMan) has also given me advices on how to distribute one’s effort on [Coding Blocks Slack channel](https://www.codingblocks.net/slack/).\n\nHere is the conversation on **#books** channel (posted with a permission from Jamie)\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/08/Coding-Blocks-books-GaProgMan.jpg?resize=748%2C718\u0026ssl=1)\n\n \n\n \n\n### What I learned Today\n\nI should set aside self-development time of my own.\n\nDoing so would not only help me relax and also improve my work/life balance\n\n \n\nThe post [TIL – An Epiphany while reading The Richest Man in Babylon](https://www.slightedgecoder.com/2017/08/05/til-epiphany-reading-richest-man-babylon/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/08/05/til-epiphany-reading-richest-man-babylon/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/08/05/til-epiphany-reading-richest-man-babylon/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "todayilearned, book, epiphany, therichestmaninb",
    "path": "/dance2die/til--an-epiphany-while-reading-the-richest-man-in-babylon-7hl-temp-slug-2046812",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-08-05T16:51:01.000Z"
  },
  {
    "title": "Flexbox Learning Path",
    "slug": "flexbox-learning-path-3lka-temp-slug-958640",
    "created_at": "2018-07-07T01:41:48.787Z",
    "main_image": null,
    "description": "\n\nI was reading Pure-React by David Ceddia and I was working on an exercise to cr...",
    "published": false,
    "published_at": "2017-08-13T18:51:27.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI was reading \u003ca href=\"https://daveceddia.com/pure-react/\"\u003ePure-React\u003c/a\u003e by David Ceddia and I was working on an exercise to create an email component.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--mPsv5rKR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/08/Pure-react-email-component.jpg%3Fresize%3D779%252C84%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--mPsv5rKR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/08/Pure-react-email-component.jpg%3Fresize%3D779%252C84%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eI remembered listening to the Cynical Developer (\u003ca href=\"http://cynicaldeveloper.com/About\"\u003eJames Studdart\u003c/a\u003e) podcast episode 28, \u003ca href=\"http://cynicaldeveloper.com/podcast/28/\"\u003eHtml 5 and Flexbox\u003c/a\u003e, which reminded me to try out \u003ca href=\"https://www.w3.org/TR/css-flexbox-1/\"\u003eFlexbox\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eBut I was having a hard time with Flexbox after reading a few articles online before diving into using it.\u003c/p\u003e\n\n\u003cp\u003eSo I will share a learning path that has worked for me.\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"flexboxio-by-wes-bos\" href=\"#flexboxio-by-wes-bos\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Flexbox.io by Wes Bos\n\u003c/h5\u003e\n\n\u003cp\u003eAs a \u003ca href=\"https://en.wikipedia.org/wiki/Visual_learning\"\u003evisual learner\u003c/a\u003e, I researched and found \u003ca href=\"https://flexbox.io/\"\u003eFlexbox.io\u003c/a\u003e by \u003ca href=\"http://wesbos.com/\"\u003eWes Bos\u003c/a\u003e. He has created a tutorial for free for the course and he has used many different scenarios on how one might use Flexbox.\u003c/p\u003e\n\n\u003cp\u003eI watched all the videos and tried to implement the email component in React using Flexbox. But it was tougher than I had anticipated. The main reason was due to inconsistent naming conventions used.\u003c/p\u003e\n\n\u003cp\u003eWhen you first use Flexbox, the hardest part is to get used to following properties\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content\"\u003ejustify-content\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/align-items\"\u003ealign-items\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/align-content\"\u003ealign-content\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"having-fun-with-flexbox-froggy\" href=\"#having-fun-with-flexbox-froggy\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Having fun with Flexbox Froggy\n\u003c/h5\u003e\n\n\u003cp\u003eWhat has helped me to understand those concepts, I played a game on \u003ca href=\"http://flexboxfroggy.com/\"\u003eFlexbox Froggy\u003c/a\u003e brought up by \u003ca class=\"comment-mentioned-user\" href=\"https://dev.to/robert\"\u003e@robert\u003c/a\u003e\n from \u003ca href=\"https://www.codingblocks.net/slack/\"\u003eCoding Blocks slack\u003c/a\u003e channel.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--FNXQd2Vr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/08/slack-learning_teaching-%40robert.jpg%3Fresize%3D460%252C85%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--FNXQd2Vr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/08/slack-learning_teaching-%40robert.jpg%3Fresize%3D460%252C85%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe game consists of 24 stages, each stage featuring different Flexbox properties. On first try it took me 30 minutes to get to 23rd stage and additional 10 minutes for 24th (last) stage. After going through the game 5 times (24 stages x 5 times) until I didn’t have to read any instructions, I was able to understand Flexbox.\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"rewatch-flexboxio\" href=\"#rewatch-flexboxio\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Rewatch Flexbox.io\n\u003c/h5\u003e\n\n\u003cp\u003eAfter getting more confidence, I watched Wes’ course one more time. I was able to get much more out of his videos.\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"video-summary\" href=\"#video-summary\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Video Summary\n\u003c/h5\u003e\n\n\u003cp\u003eLastly, I went through a \u003ca href=\"https://gist.github.com/sw-yx/cdd85db3e92f070d5ba164cf05cfd428\"\u003esummary\u003c/a\u003e on Flexbox.io courses written by \u003ca href=\"http://swyx.io/\"\u003eShawn\u003c/a\u003e on Github.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"takeaway\" href=\"#takeaway\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Takeaway\n\u003c/h3\u003e\n\n\u003cp\u003eHere is the summary of Flexbox Learning Path.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eListen to the Cynical Developer podcast Episode 28, \u003ca href=\"http://cynicaldeveloper.com/podcast/28/\"\u003eHtml5 and Flexbox\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eWatch \u003ca href=\"https://flexbox.io/\"\u003eFlexbox.io\u003c/a\u003e videos.\u003c/li\u003e\n\u003cli\u003ePlay around with \u003ca href=\"http://flexboxfroggy.com/\"\u003eFroggy \u003c/a\u003euntil you can solve all questions without reading instructions.\u003c/li\u003e\n\u003cli\u003eWatch Flexbox.io videos again.\u003c/li\u003e\n\u003cli\u003eReview the \u003ca href=\"https://gist.github.com/sw-yx/cdd85db3e92f070d5ba164cf05cfd428\"\u003esummary\u003c/a\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/08/13/flexbox-learning-path/\"\u003eFlexbox Learning Path\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Flexbox Learning Path\npublished: false\ntags: Blog Entry,Programming,css,flexbox\ncanonical_url: https://www.slightedgecoder.com/2017/08/13/flexbox-learning-path/\n---\n\nI was reading [Pure-React](https://daveceddia.com/pure-react/) by David Ceddia and I was working on an exercise to create an email component.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/08/Pure-react-email-component.jpg?resize=779%2C84\u0026ssl=1)\n\nI remembered listening to the Cynical Developer ([James Studdart](http://cynicaldeveloper.com/About)) podcast episode 28, [Html 5 and Flexbox](http://cynicaldeveloper.com/podcast/28/), which reminded me to try out [Flexbox](https://www.w3.org/TR/css-flexbox-1/).\n\nBut I was having a hard time with Flexbox after reading a few articles online before diving into using it.\n\nSo I will share a learning path that has worked for me.\n\n##### Flexbox.io by Wes Bos\n\nAs a [visual learner](https://en.wikipedia.org/wiki/Visual_learning), I researched and found [Flexbox.io](https://flexbox.io/) by [Wes Bos](http://wesbos.com/). He has created a tutorial for free for the course and he has used many different scenarios on how one might use Flexbox.\n\nI watched all the videos and tried to implement the email component in React using Flexbox. But it was tougher than I had anticipated. The main reason was due to inconsistent naming conventions used.\n\nWhen you first use Flexbox, the hardest part is to get used to following properties\n\n1. [justify-content](https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content)\n2. [align-items](https://developer.mozilla.org/en-US/docs/Web/CSS/align-items)\n3. [align-content](https://developer.mozilla.org/en-US/docs/Web/CSS/align-content)\n\n##### Having fun with Flexbox Froggy\n\nWhat has helped me to understand those concepts, I played a game on [Flexbox Froggy](http://flexboxfroggy.com/) brought up by @robert from [Coding Blocks slack](https://www.codingblocks.net/slack/) channel.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/08/slack-learning_teaching-@robert.jpg?resize=460%2C85\u0026ssl=1)\n\n \n\n \n\n \n\n \n\nThe game consists of 24 stages, each stage featuring different Flexbox properties. On first try it took me 30 minutes to get to 23rd stage and additional 10 minutes for 24th (last) stage. After going through the game 5 times (24 stages x 5 times) until I didn’t have to read any instructions, I was able to understand Flexbox.\n\n##### Rewatch Flexbox.io\n\nAfter getting more confidence, I watched Wes’ course one more time. I was able to get much more out of his videos.\n\n##### Video Summary\n\nLastly, I went through a [summary](https://gist.github.com/sw-yx/cdd85db3e92f070d5ba164cf05cfd428) on Flexbox.io courses written by [Shawn](http://swyx.io/) on Github.\n\n### Takeaway\n\nHere is the summary of Flexbox Learning Path.\n\n1. Listen to the Cynical Developer podcast Episode 28, [Html5 and Flexbox](http://cynicaldeveloper.com/podcast/28/).\n2. Watch [Flexbox.io](https://flexbox.io/) videos.\n3. Play around with [Froggy ](http://flexboxfroggy.com/)until you can solve all questions without reading instructions.\n4. Watch Flexbox.io videos again.\n5. Review the [summary](https://gist.github.com/sw-yx/cdd85db3e92f070d5ba164cf05cfd428).\n\nThe post [Flexbox Learning Path](https://www.slightedgecoder.com/2017/08/13/flexbox-learning-path/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/08/13/flexbox-learning-path/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/08/13/flexbox-learning-path/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, css, flexbox",
    "path": "/dance2die/flexbox-learning-path-3lka-temp-slug-958640",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-08-13T18:51:27.000Z"
  },
  {
    "title": "An Experience with a Phishing Scammer",
    "slug": "an-experience-with-a-phishing-scammer-3cnc-temp-slug-3326016",
    "created_at": "2018-07-07T01:41:49.305Z",
    "main_image": null,
    "description": "\n\nLast Tuesday (8/22/2017) I got a call from unrecognized number at work.\n\nThe ca...",
    "published": false,
    "published_at": "2017-08-26T21:18:48.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eLast Tuesday (8/22/2017) I got a call from unrecognized number at work.\u003c/p\u003e\n\n\u003cp\u003eThe call was from a rep from PluralSight, supposedly.\u003c/p\u003e\n\n\u003cp\u003eBut the conversation I had was a bit bizarre.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"prologue\" href=\"#prologue\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Prologue\n\u003c/h4\u003e\n\n\u003cp\u003eThe rep hurriedly introduced himself with a thick Indian accent so I wasn’t able to catch his name.\u003c/p\u003e\n\n\u003cp\u003eAnd he moved on to asking questions as if he was reading from a script.\u003c/p\u003e\n\n\u003cp\u003eHe wanted to confirm if my name and email matched what he had on file.\u003c/p\u003e\n\n\u003cp\u003eI was ready to give him my info since I had signed up for PluralSight Business trial before with my work email.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"something-fishy\" href=\"#something-fishy\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Something Fishy\n\u003c/h4\u003e\n\n\u003cp\u003eBut the name and the email he mentioned were only partially correct. The email domain was indeed my work domain but for some reason he had my email wrong.\u003c/p\u003e\n\n\u003cp\u003eThat was when I felt a fishy vibe from him since he would have a correct email address as well as the name I had used to sign up if he was indeed calling from PluralSight.\u003c/p\u003e\n\n\u003cp\u003eHe asked for my positions at work, what I do, and other personal information.\u003c/p\u003e\n\n\u003cp\u003eHe started \u003cem\u003eraising his voice\u003c/em\u003e when I reused to give away my info.\u003c/p\u003e\n\n\u003cp\u003eI hung up not long after.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"afterwards\" href=\"#afterwards\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Afterwards\n\u003c/h4\u003e\n\n\u003cp\u003eMy coworker also received a same phone call a few minutes later and hung up agitated few minutes later.\u003c/p\u003e\n\n\u003cp\u003eI then decided to email PluralSight support. A \u003cstrong\u003ereal\u003c/strong\u003e rep, \u003ca href=\"https://twitter.com/pluralsghtpaddy\"\u003ePaddy\u003c/a\u003e, has responded and told me that PluralSight reps only follow up on “a potential renewal or if the call had been requested from one of our contact us forms”.\u003c/p\u003e\n\n\u003cp\u003eI found out that my work email has been *pwned* according to \u003ca href=\"https://haveibeenpwned.com/\"\u003eHaveIBeenPwned\u003c/a\u003e by Troy Hunt\u003c/p\u003e\n\n\u003cp\u003eAnd also, Troy generously has reached out to me on Twitter to pass on the details of my account to PluralSight.\u003c/p\u003e\n\n\u003cp\u003e\\ \u003cem\u003e**update\u003c/em\u003e* *: \u003ca href=\"http://swyx.io/\"\u003eShawn\u003c/a\u003ehas brought up a very interesting point on \u003ca href=\"https://www.codingblocks.net/slack/\"\u003eCoding Blocks Slack channel\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--lHp8psJ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/08/swyx-comment.jpg%3Fresize%3D570%252C77%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--lHp8psJ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/08/swyx-comment.jpg%3Fresize%3D570%252C77%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe disconnect that Shawn mentioned was that I used correct work email address to look up \u003ca href=\"https://haveibeenpwned.com/\"\u003eHave I Been Pwned\u003c/a\u003e but the scammer had a different email address.\u003c/p\u003e\n\n\u003cp\u003eI need to compile the list of where phone # has been leaked.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"takeaway\" href=\"#takeaway\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Takeaway\n\u003c/h3\u003e\n\n\u003cp\u003eIf you receive a call asking for your personal info, don’t give it away!\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/08/26/experience-phishing-scammer/\"\u003eAn Experience with a Phishing Scammer\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: An Experience with a Phishing Scammer\npublished: false\ntags: Blog Entry,Uncategorized,experience,phisher\ncanonical_url: https://www.slightedgecoder.com/2017/08/26/experience-phishing-scammer/\n---\n\nLast Tuesday (8/22/2017) I got a call from unrecognized number at work.\n\nThe call was from a rep from PluralSight, supposedly.\n\nBut the conversation I had was a bit bizarre.\n\n#### Prologue\n\nThe rep hurriedly introduced himself with a thick Indian accent so I wasn’t able to catch his name.\n\nAnd he moved on to asking questions as if he was reading from a script.\n\nHe wanted to confirm if my name and email matched what he had on file.\n\nI was ready to give him my info since I had signed up for PluralSight Business trial before with my work email.\n\n#### Something Fishy\n\nBut the name and the email he mentioned were only partially correct. The email domain was indeed my work domain but for some reason he had my email wrong.\n\nThat was when I felt a fishy vibe from him since he would have a correct email address as well as the name I had used to sign up if he was indeed calling from PluralSight.\n\nHe asked for my positions at work, what I do, and other personal information.\n\nHe started _raising his voice_ when I reused to give away my info.\n\nI hung up not long after.\n\n#### Afterwards\n\nMy coworker also received a same phone call a few minutes later and hung up agitated few minutes later.\n\nI then decided to email PluralSight support. A **real** rep, [Paddy](https://twitter.com/pluralsghtpaddy), has responded and told me that PluralSight reps only follow up on “a potential renewal or if the call had been requested from one of our contact us forms”.\n\nI found out that my work email has been \\*pwned\\* according to [HaveIBeenPwned](https://haveibeenpwned.com/) by Troy Hunt\n\nAnd also, Troy generously has reached out to me on Twitter to pass on the details of my account to PluralSight.\n\n \n\n\\ ***update** \\*: [Shawn](http://swyx.io/)has brought up a very interesting point on [Coding Blocks Slack channel](https://www.codingblocks.net/slack/).\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/08/swyx-comment.jpg?resize=570%2C77\u0026ssl=1)\n\n \n\n### \n\n### \n\nThe disconnect that Shawn mentioned was that I used correct work email address to look up [Have I Been Pwned](https://haveibeenpwned.com/) but the scammer had a different email address.\n\nI need to compile the list of where phone # has been leaked.\n\n \n\n### Takeaway\n\nIf you receive a call asking for your personal info, don’t give it away!\n\nThe post [An Experience with a Phishing Scammer](https://www.slightedgecoder.com/2017/08/26/experience-phishing-scammer/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/08/26/experience-phishing-scammer/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/08/26/experience-phishing-scammer/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, uncategorized, experience, phisher",
    "path": "/dance2die/an-experience-with-a-phishing-scammer-3cnc-temp-slug-3326016",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-08-26T21:18:48.000Z"
  },
  {
    "title": "Throwaway Code: Don’t recycle, throw it away!",
    "slug": "throwaway-code-dont-recycle-throw-it-away-104e-temp-slug-6196383",
    "created_at": "2018-07-07T01:41:49.873Z",
    "main_image": null,
    "description": "\n\nOK, you are working on a side programming project, and it’s not progressing.\n\nP...",
    "published": false,
    "published_at": "2017-09-05T13:00:17.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eOK, you are working on a side programming project, and it’s not progressing.\u003c/p\u003e\n\n\u003cp\u003eProbably you aren’t the only one. I’ve been working on a side project using React and ran into a problem.\u003c/p\u003e\n\n\u003cp\u003eThis is just one of the many ways of that will help you to advance your project.\u003c/p\u003e\n\n\u003cp\u003eTLDL; Exercise often with “Throwaway” code.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"context\" href=\"#context\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Context\n\u003c/h3\u003e\n\n\u003cp\u003eI’ve watched many online courses (Udemy/PluralSight) and read many blog article on React. I had a fun idea for a side project and decided to get started.\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"problem-faced\" href=\"#problem-faced\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Problem Faced\n\u003c/h5\u003e\n\n\u003cp\u003eI muddled through and made progresses. But the project stalled because I was constantly having problems with simple React errors. Eventually I was spending more time on debugging React issues than on the project itself.\u003c/p\u003e\n\n\u003cp\u003eThere is an idiom in Korean,\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe belly button is bigger than the belly (배보다 배꼽이 더크다).\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eIt basically means that your priority has been reversed. In my case, I was spending more time on fixing React issues than making a project progress.\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"what-i-did\" href=\"#what-i-did\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  What I Did\n\u003c/h5\u003e\n\n\u003cp\u003eI decided to focus purely on React and found a book called \u003ca href=\"https://daveceddia.com/pure-react/\"\u003ePure React\u003c/a\u003e by Dave Ceddia.\u003c/p\u003e\n\n\u003cp\u003eDave instructed to create _ \u003cstrong\u003eThrowaway codes\u003c/strong\u003e _ for each exercises in the book. Until learning into this concept, I’ve been doing useless ceremony of setting up a \u003ca href=\"https://github.com/dance2die?utf8=%E2%9C%93\u0026amp;tab=repositories\u0026amp;q=demo.\u0026amp;type=\u0026amp;language=\"\u003eGitHub repos\u003c/a\u003e with “Demo.*” prefix, which hindered me to do quick and dirty prototyping.\u003c/p\u003e\n\n\u003cp\u003eI created a myriad of throwaway codes for each exercise.\u003c/p\u003e\n\n\u003ch5\u003e\n  \u003ca name=\"result\" href=\"#result\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Result\n\u003c/h5\u003e\n\n\u003cp\u003eI showed one my exercises (GitHub clone) with fake data to one of my friends (Please overlook CSS issues…)\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--nPsqaMl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/09/GitHub-clone.jpg%3Fresize%3D499%252C515%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--nPsqaMl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/09/GitHub-clone.jpg%3Fresize%3D499%252C515%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eHe then asked me if I can use a real live news data. I thought, “Challenge Accepted”.\u003c/p\u003e\n\n\u003cp\u003eAfter creating so many throwaway codes, I was able to quickly create a prototype in about 30 minutes and shared it with \u003ca href=\"https://www.npmjs.com/package/localtunnel\"\u003eLocalTunnel\u003c/a\u003e. (Please pardon my CSS skills, again…)\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--QgwcJjkS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/09/CNN-localhost.jpg%3Fresize%3D449%252C436%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--QgwcJjkS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/09/CNN-localhost.jpg%3Fresize%3D449%252C436%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe friend? Blown away.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"takeaway\" href=\"#takeaway\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Takeaway\n\u003c/h3\u003e\n\n\u003cp\u003eWhen having a coding problem, practice as many time as possible with throwaway codes.\u003c/p\u003e\n\n\u003cp\u003eYou just learn the concept and throw it away.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/09/05/throwaway-code-dont-recycle-throw-away/\"\u003eThrowaway Code: Don’t recycle, throw it away!\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Throwaway Code: Don’t recycle, throw it away!\npublished: false\ntags: Blog Entry,Programming,slight edge,TIL\ncanonical_url: https://www.slightedgecoder.com/2017/09/05/throwaway-code-dont-recycle-throw-away/\n---\n\nOK, you are working on a side programming project, and it’s not progressing.\n\nProbably you aren’t the only one. I’ve been working on a side project using React and ran into a problem.\n\nThis is just one of the many ways of that will help you to advance your project.\n\nTLDL; Exercise often with “Throwaway” code.\n\n### Context\n\nI’ve watched many online courses (Udemy/PluralSight) and read many blog article on React. I had a fun idea for a side project and decided to get started.\n\n##### Problem Faced\n\nI muddled through and made progresses. But the project stalled because I was constantly having problems with simple React errors. Eventually I was spending more time on debugging React issues than on the project itself.\n\nThere is an idiom in Korean,\n\n\u003e The belly button is bigger than the belly (배보다 배꼽이 더크다).\n\nIt basically means that your priority has been reversed. In my case, I was spending more time on fixing React issues than making a project progress.\n\n##### What I Did\n\nI decided to focus purely on React and found a book called [Pure React](https://daveceddia.com/pure-react/) by Dave Ceddia.\n\nDave instructed to create _ **Throwaway codes** _ for each exercises in the book. Until learning into this concept, I’ve been doing useless ceremony of setting up a [GitHub repos](https://github.com/dance2die?utf8=%E2%9C%93\u0026tab=repositories\u0026q=demo.\u0026type=\u0026language=) with “Demo.\\*” prefix, which hindered me to do quick and dirty prototyping.\n\nI created a myriad of throwaway codes for each exercise.\n\n##### Result\n\nI showed one my exercises (GitHub clone) with fake data to one of my friends (Please overlook CSS issues…)\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/09/GitHub-clone.jpg?resize=499%2C515\u0026ssl=1)\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nHe then asked me if I can use a real live news data. I thought, “Challenge Accepted”.\n\nAfter creating so many throwaway codes, I was able to quickly create a prototype in about 30 minutes and shared it with [LocalTunnel](https://www.npmjs.com/package/localtunnel). (Please pardon my CSS skills, again…)\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/09/CNN-localhost.jpg?resize=449%2C436\u0026ssl=1)\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nThe friend? Blown away.\n\n### Takeaway\n\nWhen having a coding problem, practice as many time as possible with throwaway codes.\n\nYou just learn the concept and throw it away.\n\n \n\nThe post [Throwaway Code: Don’t recycle, throw it away!](https://www.slightedgecoder.com/2017/09/05/throwaway-code-dont-recycle-throw-away/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/09/05/throwaway-code-dont-recycle-throw-away/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/09/05/throwaway-code-dont-recycle-throw-away/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": null,
    "cached_tag_list": "blogentry, programming, slightedge, todayilearned",
    "path": "/dance2die/throwaway-code-dont-recycle-throw-it-away-104e-temp-slug-6196383",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-09-05T13:00:17.000Z"
  },
  {
    "title": "Passing an API Key to Heroku Node Application",
    "slug": "passing-an-api-key-to-heroku-node-application-1lk8-temp-slug-7197644",
    "created_at": "2018-07-07T01:41:50.514Z",
    "main_image": null,
    "description": "\n\nI was learning how to publish a node app, GitHub Traffic View(source on GitHub)...",
    "published": false,
    "published_at": "2017-09-09T19:57:04.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI was learning \u003ca href=\"https://devcenter.heroku.com/articles/getting-started-with-nodejs#introduction\"\u003ehow to publish a node app\u003c/a\u003e, \u003ca href=\"https://github-traffic-dance2die.herokuapp.com/?user=dance2die\"\u003eGitHub Traffic View\u003c/a\u003e(source on \u003ca href=\"https://github.com/dance2die/github-traffic-views\"\u003eGitHub\u003c/a\u003e), which requires a GitHub API key to be passed to Heroku application.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"problem\" href=\"#problem\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Problem\n\u003c/h3\u003e\n\n\u003cp\u003eInitially, the API key is stored in a file, which is untracked by Git. It was fine until when I found out that Heroku requires files to be published to be tracked by Git.\u003c/p\u003e\n\n\u003cp\u003eI didn’t want to expose my secret string to GitHub, which is very easily searchable as Jamie Taylor points out in his blog post, \u003ca href=\"https://dotnetcore.gaprogman.com/2017/09/07/user-secrets-what-are-they-and-why-do-i-need-them/\"\u003eUser Secrets – What Are They And Why Do I Need Them?\u003c/a\u003e (Jamie talks about how to use User Secrets, please refer to it if you are dealing with .NET Core).\u003c/p\u003e\n\n\u003cp\u003eSo the alternative is to use an environment variable and make it available on Heroku.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"recap-of-accessing-api-key-locally\" href=\"#recap-of-accessing-api-key-locally\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Recap of Accessing API key locally\n\u003c/h3\u003e\n\n\u003cp\u003eIn a previous blog post, \u003ca href=\"https://dev.to/dance2die/hiding-api-keys-on-github-33g0-temp-slug-8107843\"\u003eHiding API Keys on GitHub\u003c/a\u003e, I wrote about how to hide an API using an environment variable.\u003c/p\u003e\n\n\u003cp\u003eSuppose that your node app access a key via an environment variable, \u003ccode\u003eprocess.env.GITHUB_DEVELOPER_KEY\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eIn Windows, you can set the environment variable as follows\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eBut the problem is that, \u003ccode\u003eGITHUB_DEVELOPER_KEY\u003c/code\u003e is available only in your local machine and won’t be available after publishing to Heroku.\u003c/p\u003e\n\n\u003cp\u003eSo after publishing your application to Heroku, you need to set an environment variable for \u003ccode\u003eGITHUB_DEVELOPER_KEY\u003c/code\u003e on deployed Heroku application, as well.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"how-do-we-set-the-environment-variable-on-heroku\" href=\"#how-do-we-set-the-environment-variable-on-heroku\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  How do we set the environment variable on Heroku?\n\u003c/h3\u003e\n\n\u003cp\u003eWhen publishing to Heroku, you need to use \u003ca href=\"https://devcenter.heroku.com/articles/heroku-cli\"\u003eHeroku CLI\u003c/a\u003e. One of the options for the command is to set a configuration variable.\u003c/p\u003e\n\n\u003cp\u003eThe command is \u003ccode\u003eheroku config:set\u0026lt;ENVIRONMENT_VARIABLE\u0026gt;=\u0026lt;VALUE\u0026gt;\u003c/code\u003e and the documentation is available on \u003ca href=\"https://devcenter.heroku.com/articles/config-vars\"\u003eHeroku Dev Center page\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eAfter deploying the node application, just set the configuration variable as shown below.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eheroku config:set\u003c/code\u003e lets you set an environment variable on Heroku application, while\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eheroku config:get\u003c/code\u003e retrieves the environment variable value.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eheroku config\u003c/code\u003e will return all the configuration values set for the application.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eNow your node app will use that config var value set on Heroku application.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eI just showed you one of the ways to use Heroku config vars, which is to hide an API key.\u003c/p\u003e\n\n\u003cp\u003eYou can use it to configure your app differently or pass other sensitive information such as database connection string.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/09/09/passing-api-key-heroku-node-application/\"\u003ePassing an API Key to Heroku Node Application\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Passing an API Key to Heroku Node Application\npublished: false\ntags: Blog Entry,Programming,api key,deployment\ncanonical_url: https://www.slightedgecoder.com/2017/09/09/passing-api-key-heroku-node-application/\n---\n\nI was learning [how to publish a node app](https://devcenter.heroku.com/articles/getting-started-with-nodejs#introduction), [GitHub Traffic View](https://github-traffic-dance2die.herokuapp.com/?user=dance2die)(source on [GitHub](https://github.com/dance2die/github-traffic-views)), which requires a GitHub API key to be passed to Heroku application.\n\n### Problem\n\nInitially, the API key is stored in a file, which is untracked by Git. It was fine until when I found out that Heroku requires files to be published to be tracked by Git.\n\nI didn’t want to expose my secret string to GitHub, which is very easily searchable as Jamie Taylor points out in his blog post, [User Secrets – What Are They And Why Do I Need Them?](https://dotnetcore.gaprogman.com/2017/09/07/user-secrets-what-are-they-and-why-do-i-need-them/) (Jamie talks about how to use User Secrets, please refer to it if you are dealing with .NET Core).\n\nSo the alternative is to use an environment variable and make it available on Heroku.\n\n### Recap of Accessing API key locally\n\nIn a previous blog post, [Hiding API Keys on GitHub](https://dev.to/dance2die/hiding-api-keys-on-github-33g0-temp-slug-8107843), I wrote about how to hide an API using an environment variable.\n\nSuppose that your node app access a key via an environment variable, `process.env.GITHUB_DEVELOPER_KEY`\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nIn Windows, you can set the environment variable as follows\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nBut the problem is that, `GITHUB_DEVELOPER_KEY` is available only in your local machine and won’t be available after publishing to Heroku.\n\nSo after publishing your application to Heroku, you need to set an environment variable for `GITHUB_DEVELOPER_KEY` on deployed Heroku application, as well.\n\n### How do we set the environment variable on Heroku?\n\nWhen publishing to Heroku, you need to use [Heroku CLI](https://devcenter.heroku.com/articles/heroku-cli). One of the options for the command is to set a configuration variable.\n\nThe command is `heroku config:set\u003cENVIRONMENT_VARIABLE\u003e=\u003cVALUE\u003e` and the documentation is available on [Heroku Dev Center page](https://devcenter.heroku.com/articles/config-vars).\n\nAfter deploying the node application, just set the configuration variable as shown below.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n- `heroku config:set` lets you set an environment variable on Heroku application, while\n- `heroku config:get` retrieves the environment variable value.\n- `heroku config` will return all the configuration values set for the application.\n\nNow your node app will use that config var value set on Heroku application.\n\n### Conclusion\n\nI just showed you one of the ways to use Heroku config vars, which is to hide an API key.\n\nYou can use it to configure your app differently or pass other sensitive information such as database connection string.\n\n \n\n \n\n \n\n \n\nThe post [Passing an API Key to Heroku Node Application](https://www.slightedgecoder.com/2017/09/09/passing-api-key-heroku-node-application/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/09/09/passing-api-key-heroku-node-application/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/09/09/passing-api-key-heroku-node-application/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, apikey, deployment",
    "path": "/dance2die/passing-an-api-key-to-heroku-node-application-1lk8-temp-slug-7197644",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-09-09T19:57:04.000Z"
  },
  {
    "title": "Expression Bodied Collection Property Initialization Gotcha in C#",
    "slug": "expression-bodied-collection-property-initialization-gotcha-in-c-6nc",
    "created_at": "2018-07-07T01:41:51.137Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/ttwsqna026rj7dr79t9o.jpg",
    "description": "\n\nThis is a post from 2017 but as I was re-learning Trie I read it over and made ...",
    "published": true,
    "published_at": "2017-09-16T15:54:21.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003eThis is a post from 2017 but as I was re-learning Trie I read it over and made it available here 🙂\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eI was implementing a \u003ca href=\"https://en.wikipedia.org/wiki/Trie\"\u003etrie,\u003c/a\u003e which is a tree data structure, usually for storing strings for searching. Since it’s a tree, it has a “Children” for holding child nodes.\u003c/p\u003e\n\n\u003cp\u003eBut then I ran into a problem where simply calls to adding children to a collection (Line# 9) didn’t work.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/57e7aa68fcef7a7fe8cc983d0c922422.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eAfter 30 minutes of debugging, I was like…\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Th_dOesg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/media.giphy.com/media/11dR2hEgtN5KoM/giphy.gif%3Fresize%3D328%252C343%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Th_dOesg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/media.giphy.com/media/11dR2hEgtN5KoM/giphy.gif%3Fresize%3D328%252C343%26ssl%3D1\" alt=\"cat banging head on the table\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eJust what the h**l happened?\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"tldr\" href=\"#tldr\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  TL;DR\n\u003c/h3\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAuto Property initialization creates a backing field while Expression Bodied property one does not\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"%E2%96%AC-introduction-%E2%96%AC\" href=\"#%E2%96%AC-introduction-%E2%96%AC\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ▬ Introduction ▬\n\u003c/h3\u003e\n\n\u003cp\u003eAccording to \u003ca href=\"https://en.wikipedia.org/wiki/Trie#Algorithms\"\u003eWikpedia\u003c/a\u003e, you can declare a trie like this (in Haskell).\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/7255d7236b1eed8d2dd287607cdaa88d.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eSo I created a \u003ccode\u003eTrieNode\u003c/code\u003e class as shown below.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/5b29a64f8f5ab7a880255b7e043e057f.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003cem\u003e*If you are an astute reader, you might have already spotted the problem. Congratulations!*\u003c/em\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"%E2%96%AC-problem-%E2%96%AC\" href=\"#%E2%96%AC-problem-%E2%96%AC\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ▬ Problem ▬\n\u003c/h3\u003e\n\n\u003cp\u003eThe complete source for building a trie, \u003ccode\u003eTrieBuilder\u003c/code\u003e is declared as below.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/dd97d22fce289dd3359f307fb2c67364.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eGiven a list of words passed to \u003ccode\u003eBuildTrie\u003c/code\u003e method, it populates a trie and returns an object instance.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eInsert\u003c/code\u003e method simply checks for an existence of a character and maps current character to a node to the trie object instance , \u003ccode\u003ecurrent\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis is where the \u003cstrong\u003eproblem\u003c/strong\u003e occurred. \u003ccode\u003ecurrent.Children.Add(...)\u003c/code\u003e wasn’t adding  \u003ccode\u003enode\u003c/code\u003e object instance.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"%E2%96%AC-investigation-%E2%96%AC\" href=\"#%E2%96%AC-investigation-%E2%96%AC\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ▬ Investigation ▬\n\u003c/h3\u003e\n\n\u003cp\u003eLater on, I found out a StackOverflow \u003ca href=\"https://stackoverflow.com/a/33235639/4035\"\u003eanswer\u003c/a\u003e explanating that declaring a property with \u003ccode\u003e=\u0026gt;\u003c/code\u003e syntax (introduced in C# 6) does \u003cstrong\u003eNOT\u003c/strong\u003e create a backing field.\u003c/p\u003e\n\n\u003cp\u003eSo my declaration below,\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/72ae994cff4f452330a732c53945d845.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eis equivalent to\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/e90747c077f43de460b13d0aeeccf512.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003ereturning a new array whenever \u003ccode\u003eChildren\u003c/code\u003e property was accessed, thus not adding a new node to it.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"%E2%96%AC-solution-%E2%96%AC\" href=\"#%E2%96%AC-solution-%E2%96%AC\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ▬ Solution ▬\n\u003c/h3\u003e\n\n\u003cp\u003eThe fix is simple. Declare Children with a backing field or use an auto property initialization syntax.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/bca476ec22b64a031b8b6539572599df.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eAbove declaration is equivalent to\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/8cee8a9abcd8fcec8ce6f5c35789705e.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eThat was all it took to make me a happy camper ?.\u003c/p\u003e\n\n\u003ch1\u003e\n  \u003ca name=\"\" href=\"#\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--R4FRPuZR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/media.giphy.com/media/Ve20ojrMWiTo4/giphy.gif%3Fw%3D1170%26ssl%3D1\" alt=\"a happy camper\"\u003e\n\u003c/h1\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"%E2%96%AC-takeaway-%E2%96%AC\" href=\"#%E2%96%AC-takeaway-%E2%96%AC\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ▬ Takeaway ▬\n\u003c/h3\u003e\n\n\u003cp\u003eAuto Property initialization creates a backing field while Expression Bodied property one does not.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/09/16/expression-bodied-collection-property-initialization-gotcha-c/\"\u003eExpression Bodied Collection Property Initialization Gotcha in C#\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: Expression Bodied Collection Property Initialization Gotcha in C#\r\npublished: true\r\ntags: csharp, datastructures, computerscience\r\ncanonical_url: https://www.slightedgecoder.com/2017/09/16/expression-bodied-collection-property-initialization-gotcha-c/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/ttwsqna026rj7dr79t9o.jpg\r\n---\r\n\r\n_This is a post from 2017 but as I was re-learning Trie I read it over and made it available here 🙂_\r\n\r\nI was implementing a [trie,](https://en.wikipedia.org/wiki/Trie) which is a tree data structure, usually for storing strings for searching. Since it’s a tree, it has a “Children” for holding child nodes.\r\n\r\nBut then I ran into a problem where simply calls to adding children to a collection (Line# 9) didn’t work.\r\n\r\n{% gist https://gist.github.com/dance2die/57e7aa68fcef7a7fe8cc983d0c922422 %}\r\n\r\nAfter 30 minutes of debugging, I was like…\r\n\r\n![cat banging head on the table](https://i0.wp.com/media.giphy.com/media/11dR2hEgtN5KoM/giphy.gif?resize=328%2C343\u0026ssl=1)\r\n\r\nJust what the h\\*\\*l happened?\r\n\r\n### TL;DR\r\n\r\n\u003e Auto Property initialization creates a backing field while Expression Bodied property one does not\r\n\r\n### \r\n\r\n### ▬ Introduction ▬\r\n\r\nAccording to [Wikpedia](https://en.wikipedia.org/wiki/Trie#Algorithms), you can declare a trie like this (in Haskell).\r\n\r\n{% gist https://gist.github.com/dance2die/7255d7236b1eed8d2dd287607cdaa88d %}\r\n\r\nSo I created a `TrieNode` class as shown below.\r\n\r\n{% gist https://gist.github.com/dance2die/5b29a64f8f5ab7a880255b7e043e057f %}\r\n\r\n_\\*If you are an astute reader, you might have already spotted the problem. Congratulations!\\*_\r\n\r\n### \r\n\r\n### ▬ Problem ▬\r\n\r\nThe complete source for building a trie, `TrieBuilder` is declared as below.\r\n\r\n{% gist https://gist.github.com/dance2die/dd97d22fce289dd3359f307fb2c67364 %}\r\n\r\nGiven a list of words passed to `BuildTrie` method, it populates a trie and returns an object instance.\r\n\r\n`Insert` method simply checks for an existence of a character and maps current character to a node to the trie object instance , `current`.\r\n\r\nThis is where the **problem** occurred. `current.Children.Add(...)` wasn’t adding  `node` object instance.\r\n\r\n### \r\n\r\n### ▬ Investigation ▬\r\n\r\nLater on, I found out a StackOverflow [answer](https://stackoverflow.com/a/33235639/4035) explanating that declaring a property with `=\u003e` syntax (introduced in C# 6) does **NOT** create a backing field.\r\n\r\nSo my declaration below,\r\n\r\n{% gist https://gist.github.com/dance2die/72ae994cff4f452330a732c53945d845 %}\r\n\r\nis equivalent to\r\n\r\n{% gist https://gist.github.com/dance2die/e90747c077f43de460b13d0aeeccf512 %}\r\n\r\nreturning a new array whenever `Children` property was accessed, thus not adding a new node to it.\r\n\r\n### \r\n\r\n### ▬ Solution ▬\r\n\r\nThe fix is simple. Declare Children with a backing field or use an auto property initialization syntax.\r\n\r\n{% gist https://gist.github.com/dance2die/bca476ec22b64a031b8b6539572599df %}\r\n\r\nAbove declaration is equivalent to\r\n\r\n{% gist https://gist.github.com/dance2die/8cee8a9abcd8fcec8ce6f5c35789705e %}\r\n\r\nThat was all it took to make me a happy camper ?.\r\n\r\n# ![a happy camper](https://i2.wp.com/media.giphy.com/media/Ve20ojrMWiTo4/giphy.gif?w=1170\u0026ssl=1)\r\n\r\n### \r\n\r\n### ▬ Takeaway ▬\r\n\r\nAuto Property initialization creates a backing field while Expression Bodied property one does not.\r\n\r\n_The post [Expression Bodied Collection Property Initialization Gotcha in C#](https://www.slightedgecoder.com/2017/09/16/expression-bodied-collection-property-initialization-gotcha-c/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com)._",
    "canonical_url": "https://www.slightedgecoder.com/2017/09/16/expression-bodied-collection-property-initialization-gotcha-c/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/09/16/expression-bodied-collection-property-initialization-gotcha-c/",
    "positive_reactions_count": 7,
    "edited_at": null,
    "crossposted_at": "2019-04-20T05:39:05.990Z",
    "language": "en",
    "cached_tag_list": "csharp, datastructures, computerscience",
    "path": "/dance2die/expression-bodied-collection-property-initialization-gotcha-in-c-6nc",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-09-16T15:54:21.000Z"
  },
  {
    "title": "Personal Landing Page (hosted on GitHub)",
    "slug": "personal-landing-page-hosted-on-github-1gnm-temp-slug-6174282",
    "created_at": "2018-07-07T01:41:51.756Z",
    "main_image": null,
    "description": "\n\nHI Guys,\n\nI had a lot of fun creating landing page today (9/17/2017) using GitH...",
    "published": false,
    "published_at": "2017-09-17T04:17:35.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eHI Guys,\u003c/p\u003e\n\n\u003cp\u003eI had a lot of fun creating landing page today (9/17/2017) using \u003ca href=\"https://pages.github.com/\"\u003eGitHub Pages\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eI added a custom domain, \u003ca href=\"http://www.sungkim.co/\"\u003esungkim.co\u003c/a\u003e to the page.\u003c/p\u003e\n\n\u003cp\u003e\u003csmall\u003eThe source is at \u003ca href=\"https://github.com/dance2die/dance2die.github.io\"\u003edance2die.github.io\u003c/a\u003e\u003c/small\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/09/16/personal-landing-page-hosted-github/\"\u003ePersonal Landing Page (hosted on GitHub)\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Personal Landing Page (hosted on GitHub)\npublished: false\ntags: Announcement,announcement,landing page,personal\ncanonical_url: https://www.slightedgecoder.com/2017/09/16/personal-landing-page-hosted-github/\n---\n\nHI Guys,\n\n \n\nI had a lot of fun creating landing page today (9/17/2017) using [GitHub Pages](https://pages.github.com/).\n\nI added a custom domain, [sungkim.co](http://www.sungkim.co/) to the page.\n\n \n\n \n\n\u003csmall\u003eThe source is at \u003ca href=\"https://github.com/dance2die/dance2die.github.io\"\u003edance2die.github.io\u003c/a\u003e\u003c/small\u003e.\n\nThe post [Personal Landing Page (hosted on GitHub)](https://www.slightedgecoder.com/2017/09/16/personal-landing-page-hosted-github/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/09/16/personal-landing-page-hosted-github/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/09/16/personal-landing-page-hosted-github/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "announcement, landingpage, personal",
    "path": "/dance2die/personal-landing-page-hosted-on-github-1gnm-temp-slug-6174282",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-09-17T04:17:35.000Z"
  },
  {
    "title": "Displaying Multiple Google Charts in React (react-google-charts)",
    "slug": "displaying-multiple-google-charts-in-react-react-google-charts-6np-temp-slug-2166785",
    "created_at": "2018-07-07T01:41:52.150Z",
    "main_image": null,
    "description": "\n\nI was working on displaying multiple GitHub traffic charts using a Google Chart...",
    "published": false,
    "published_at": "2017-09-21T15:19:34.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI was working on displaying multiple GitHub traffic charts using a Google Chart NPM package for React, \u003ca href=\"https://www.npmjs.com/package/react-google-charts\"\u003ereact-google-charts\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"problem\" href=\"#problem\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Problem\n\u003c/h3\u003e\n\n\u003cp\u003eOut of many charts, only the first one chart is populated.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"question\" href=\"#question\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Question\n\u003c/h3\u003e\n\n\u003cp\u003eHow do we fix it?\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"tldr\" href=\"#tldr\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  TL;DR\n\u003c/h3\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eUse a unique \u003ccode\u003egraph_id\u003c/code\u003e value.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"getting-started-by-copying-amp-pasting\" href=\"#getting-started-by-copying-amp-pasting\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Getting Started by Copying \u0026amp; Pasting\n\u003c/h3\u003e\n\n\u003cp\u003eHere is the sample code in Quick Start section.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eIn my case, I needed to display a line chart so updated \u003ccode\u003echartType\u003c/code\u003e to \u003ccode\u003eLineChart\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eSo the code for displaying multiple charts is as follows.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eBut for some reason, it was populating one graph.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--RhNEHGwQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/09/chrome_2017-09-21_10-01-50-1.png%3Fresize%3D670%252C499%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--RhNEHGwQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/09/chrome_2017-09-21_10-01-50-1.png%3Fresize%3D670%252C499%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"resolution\" href=\"#resolution\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Resolution\n\u003c/h3\u003e\n\n\u003cp\u003eAfter hours of researching and debugging, I found the problem.\u003c/p\u003e\n\n\u003cp\u003eHere you see that each chart had the same \u003ccode\u003eid=\"LineChart\"\u003c/code\u003e. \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s---91kuBo5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/09/chrome_2017-09-21_10-04-29.png%3Fresize%3D389%252C472%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s---91kuBo5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/09/chrome_2017-09-21_10-04-29.png%3Fresize%3D389%252C472%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eEach chart needs to have a unique ID. I chose an easy way out and used \u003ca href=\"https://www.npmjs.com/package/shortid\"\u003eshortid\u003c/a\u003e NPM package.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eEach \u003ccode\u003echart_id\u003c/code\u003e needs to be unique.\u003c/p\u003e\n\n\u003cp\u003eI hope you don’t struggle to populate multiple Google Chart graphs.\u003c/p\u003e\n\n\u003cp\u003eYou can find the \u003ca href=\"https://github.com/dance2die/github-traffic-views/commit/ec52a1849445268f2fca78310c54648436f85cf1#diff-f36f57d6970b0b90b039d04da7cda2f8L52\"\u003ecommit detail\u003c/a\u003e on GitHub in my code.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/09/21/displaying-multiple-google-charts-react-react-google-charts/\"\u003eDisplaying Multiple Google Charts in React (react-google-charts)\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Displaying Multiple Google Charts in React (react-google-charts)\npublished: false\ntags: Problem Solving,Programming\ncanonical_url: https://www.slightedgecoder.com/2017/09/21/displaying-multiple-google-charts-react-react-google-charts/\n---\n\nI was working on displaying multiple GitHub traffic charts using a Google Chart NPM package for React, [react-google-charts](https://www.npmjs.com/package/react-google-charts).\n\n### Problem\n\nOut of many charts, only the first one chart is populated.\n\n### Question\n\nHow do we fix it?\n\n### TL;DR\n\n\u003e Use a unique `graph_id` value.\n\u003e \n\u003e  \n\n### Getting Started by Copying \u0026 Pasting\n\nHere is the sample code in Quick Start section.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nIn my case, I needed to display a line chart so updated `chartType` to `LineChart`.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nSo the code for displaying multiple charts is as follows.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nBut for some reason, it was populating one graph.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/09/chrome_2017-09-21_10-01-50-1.png?resize=670%2C499\u0026ssl=1)\n\n \n\n### \n\n### \n\n### \n\n### \n\n### \n\n### \n\n### \n\n### \n\n### \n\n### \n\n### \n\n### \n\n### \n\n### Resolution\n\nAfter hours of researching and debugging, I found the problem.\n\nHere you see that each chart had the same `id=\"LineChart\"`. ![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/09/chrome_2017-09-21_10-04-29.png?resize=389%2C472\u0026ssl=1)\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nEach chart needs to have a unique ID. I chose an easy way out and used [shortid](https://www.npmjs.com/package/shortid) NPM package.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n### Conclusion\n\nEach `chart_id` needs to be unique.\n\nI hope you don’t struggle to populate multiple Google Chart graphs.\n\nYou can find the [commit detail](https://github.com/dance2die/github-traffic-views/commit/ec52a1849445268f2fca78310c54648436f85cf1#diff-f36f57d6970b0b90b039d04da7cda2f8L52) on GitHub in my code.\n\nThe post [Displaying Multiple Google Charts in React (react-google-charts)](https://www.slightedgecoder.com/2017/09/21/displaying-multiple-google-charts-react-react-google-charts/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/09/21/displaying-multiple-google-charts-react-react-google-charts/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/09/21/displaying-multiple-google-charts-react-react-google-charts/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "problemsolving, programming",
    "path": "/dance2die/displaying-multiple-google-charts-in-react-react-google-charts-6np-temp-slug-2166785",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-09-21T15:19:34.000Z"
  },
  {
    "title": "Push git cloned repository to your own on GitHub",
    "slug": "push-git-cloned-repository-to-your-own-on-github-1ili",
    "created_at": "2018-07-07T01:41:52.541Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/ogeiru3ocq2u3j20rhnm.jpg",
    "description": "\n\n** UPDATE: April 21, 2019 **\n\nBoth Eugene Karataev \u0026amp; Noah Pederson provided...",
    "published": true,
    "published_at": "2017-10-01T15:26:40.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e** \u003cstrong\u003eUPDATE\u003c/strong\u003e: April 21, 2019 **\u003c/p\u003e\n\n\u003cp\u003eBoth \u003ca href=\"https://dev.to/karataev\"\u003eEugene Karataev\u003c/a\u003e \u0026amp; \u003ca href=\"https://dev.to/chiefnoah\"\u003eNoah Pederson\u003c/a\u003e provided a better way than what's in this post.\u003c/p\u003e\n\n\u003cp\u003eCheck'em out below.\u003c/p\u003e\n\n\n\u003cdiv class=\"liquid-comment\"\u003e\n      \u003cdiv class=\"details\"\u003e\n        \u003ca href=\"/karataev\"\u003e\n          \u003cimg class=\"profile-pic\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--f7JDxJyl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--LcF2WjOl--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://thepracticaldev.s3.amazonaws.com/uploads/user/profile_image/156591/f1139a3c-ddc2-4633-a64c-25bfd24fd23e.jpeg\" alt=\"karataev profile image\"\u003e\n        \u003c/a\u003e\n        \u003ca href=\"/karataev\"\u003e\n          \u003cspan class=\"comment-username\"\u003eEugene Karataev\u003c/span\u003e\n        \u003c/a\u003e\n        \u003cdiv class=\"comment-date\" data-published-timestamp=\"2019-04-21T02:55:35Z\"\u003e\n          \u003ca href=\"/karataev/comment/a906\"\u003eApr 21\u003c/a\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n      \u003cdiv class=\"body\"\u003e\n        \n\n\u003cp\u003eIt's not necessary to remove old origin and create a new one. You can just change the existing origin url:\u003cbr\u003e\n\u003ccode\u003egit remote set-url origin NEW_URL\u003c/code\u003e\u003c/p\u003e\n\n\n\n      \u003c/div\u003e\n    \u003c/div\u003e\n\u003cbr\u003e\n    \u003cdiv class=\"liquid-comment\"\u003e\n      \u003cdiv class=\"details\"\u003e\n        \u003ca href=\"/chiefnoah\"\u003e\n          \u003cimg class=\"profile-pic\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Jy8iwoRR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--vVH1KcZA--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://thepracticaldev.s3.amazonaws.com/uploads/user/profile_image/93962/69ef7043-9192-4d7a-a532-69b788159436.jpg\" alt=\"chiefnoah profile image\"\u003e\n        \u003c/a\u003e\n        \u003ca href=\"/chiefnoah\"\u003e\n          \u003cspan class=\"comment-username\"\u003eNoah Pederson\u003c/span\u003e\n        \u003c/a\u003e\n        \u003cdiv class=\"comment-date\" data-published-timestamp=\"2019-04-21T02:42:00Z\"\u003e\n          \u003ca href=\"/chiefnoah/comment/a904\"\u003eApr 21\u003c/a\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n      \u003cdiv class=\"body\"\u003e\n        \n\n\u003cp\u003eInstead of creating a new repo, why not just create a fork then set the remote the same way? The git history should be the same, and GitHub will still track it as a forked repository\u003c/p\u003e\n\n\n\n      \u003c/div\u003e\n    \u003c/div\u003e\n\n\n\n\u003chr\u003e\n\n\u003cp\u003eYou git cloned a repository from GitHub without forking it.\u003c/p\u003e\n\n\u003cp\u003eThe problem is that you made a bunch of changes and want to publish it to a new GitHub repository.\u003c/p\u003e\n\n\u003cp\u003eWhat are the steps required to accomplish it?\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"tldr\" href=\"#tldr\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  TL;DR\n\u003c/h3\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eRemove original remote and add your own\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"scenario\" href=\"#scenario\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Scenario\n\u003c/h3\u003e\n\n\u003cp\u003eSuppose that you are taking an advantage of all javascript boilerplates floating around on GitHub since setting up Webpack and environment required manually for simple code is a bit too much.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"problem\" href=\"#problem\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Problem\n\u003c/h3\u003e\n\n\u003cp\u003eBut when you try to commit the code back to GitHub, you get an error message that you don’t have a permission since the cloned repo belongs to another user.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/841f50055b95318e29f31376e0bd18fa.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"how-to-commit-to-your-own-github-repository\" href=\"#how-to-commit-to-your-own-github-repository\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  How to commit to your own GitHub repository\n\u003c/h3\u003e\n\n\u003cp\u003eFirst, remove the remote repository associated using \u003ccode\u003egit remote rm origin\u003c/code\u003e.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/04273b00df9a7345bf4e3ee461816ac5.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eThen \u003ca href=\"https://help.github.com/articles/create-a-repo/\"\u003ecreate your own repository\u003c/a\u003e on GitHub.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--kBBcxosZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/create-a-new-repository.png%3Fresize%3D755%252C605\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--kBBcxosZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/create-a-new-repository.png%3Fresize%3D755%252C605\" alt=\"Crete a new repository\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAfter creating the repository, copy the repo URL.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Chtkn2wl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/copy-the-repo.png%3Fresize%3D1002%252C155\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Chtkn2wl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/copy-the-repo.png%3Fresize%3D1002%252C155\" alt=\"copy the repo\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eNow, add the URL to your repo.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/234f77836173c2271b4c63e3b45a2b2a.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eNow you can push/publish it to your own repository!\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/41dcb516ef61ba06ba75668923e54248.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eWolla! It’s committed to your GitHub repository.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--1CFNgR78--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/repo-updated.png%3Fresize%3D1014%252C624\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--1CFNgR78--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/repo-updated.png%3Fresize%3D1014%252C624\" alt=\"github page\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"alternative\" href=\"#alternative\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Alternative\n\u003c/h3\u003e\n\n\u003cp\u003eYou can simply download a zip version of the repository, \u003ccode\u003egit init\u003c/code\u003e, then add the remote yourself if you are uncomfortable with \u003ccode\u003egit clone\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"resources\" href=\"#resources\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Resources\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://help.github.com/articles/cloning-a-repository/\"\u003eCloning a Repo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://help.github.com/articles/create-a-repo/\"\u003eCreating a Repo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://git-scm.com/docs/git-remote\"\u003eGit Remote Documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://help.github.com/articles/adding-a-remote/\"\u003eAdding a Remote\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dance2die/es6\"\u003edance2die/es6\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"help-me-improve-this\" href=\"#help-me-improve-this\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Help me improve this~\n\u003c/h3\u003e\n\n\u003cp\u003eGit command is very flexible that there might be other ways to do it much easier. Please let me know if there is a way to do it without going through all these troubles 🙂.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/10/01/push-git-cloned-repository-github/\"\u003ePush git cloned repository to your own on GitHub\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: Push git cloned repository to your own on GitHub\r\npublished: true\r\ntags: git, github\r\ncanonical_url: https://www.slightedgecoder.com/2017/10/01/push-git-cloned-repository-github/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/ogeiru3ocq2u3j20rhnm.jpg\r\n---\r\n\r\n** **UPDATE**: April 21, 2019 **\r\n\r\nBoth [Eugene Karataev](https://dev.to/karataev) \u0026 [Noah Pederson](https://dev.to/chiefnoah) provided a better way than what's in this post.\r\n\r\nCheck'em out below.\r\n\r\n{% devcomment a906 %}\r\n{% devcomment a904 %}\r\n\r\n\r\n_____\r\n\r\nYou git cloned a repository from GitHub without forking it.\r\n\r\nThe problem is that you made a bunch of changes and want to publish it to a new GitHub repository.\r\n\r\nWhat are the steps required to accomplish it?\r\n\r\n### TL;DR\r\n\r\n\u003e Remove original remote and add your own\r\n\r\n### Scenario\r\n\r\nSuppose that you are taking an advantage of all javascript boilerplates floating around on GitHub since setting up Webpack and environment required manually for simple code is a bit too much.\r\n\r\n### Problem\r\n\r\nBut when you try to commit the code back to GitHub, you get an error message that you don’t have a permission since the cloned repo belongs to another user.\r\n\r\n{% gist https://gist.github.com/dance2die/841f50055b95318e29f31376e0bd18fa %}\r\n\r\n### How to commit to your own GitHub repository\r\n\r\nFirst, remove the remote repository associated using `git remote rm origin`.\r\n\r\n{% gist https://gist.github.com/dance2die/04273b00df9a7345bf4e3ee461816ac5 %}\r\n\r\nThen [create your own repository](https://help.github.com/articles/create-a-repo/) on GitHub.\r\n\r\n![Crete a new repository](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/create-a-new-repository.png?resize=755%2C605)\r\n\r\n \r\n\r\nAfter creating the repository, copy the repo URL.\r\n\r\n![copy the repo](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/copy-the-repo.png?resize=1002%2C155)\r\n\r\nNow, add the URL to your repo.\r\n\r\n{% gist https://gist.github.com/dance2die/234f77836173c2271b4c63e3b45a2b2a %}\r\n\r\nNow you can push/publish it to your own repository!\r\n\r\n{% gist https://gist.github.com/dance2die/41dcb516ef61ba06ba75668923e54248 %}\r\n\r\nWolla! It’s committed to your GitHub repository.\r\n\r\n![github page](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/repo-updated.png?resize=1014%2C624)\r\n\r\n### Alternative\r\n\r\nYou can simply download a zip version of the repository, `git init`, then add the remote yourself if you are uncomfortable with `git clone`.\r\n\r\n### Resources\r\n\r\n- [Cloning a Repo](https://help.github.com/articles/cloning-a-repository/)\r\n- [Creating a Repo](https://help.github.com/articles/create-a-repo/)\r\n- [Git Remote Documentation](https://git-scm.com/docs/git-remote)\r\n- [Adding a Remote](https://help.github.com/articles/adding-a-remote/)\r\n- [dance2die/es6](https://github.com/dance2die/es6)\r\n\r\n### Help me improve this~\r\n\r\nGit command is very flexible that there might be other ways to do it much easier. Please let me know if there is a way to do it without going through all these troubles 🙂.\r\n\r\n_The post [Push git cloned repository to your own on GitHub](https://www.slightedgecoder.com/2017/10/01/push-git-cloned-repository-github/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com)._",
    "canonical_url": "https://www.slightedgecoder.com/2017/10/01/push-git-cloned-repository-github/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 4,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/10/01/push-git-cloned-repository-github/",
    "positive_reactions_count": 38,
    "edited_at": "2019-04-21T04:18:10.614Z",
    "crossposted_at": "2019-04-20T05:55:17.981Z",
    "language": "en",
    "cached_tag_list": "git, github",
    "path": "/dance2die/push-git-cloned-repository-to-your-own-on-github-1ili",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-04-24T03:02:03.821Z"
  },
  {
    "title": "Filtering out a stray number in an array",
    "slug": "filtering-out-a-stray-number-in-an-array-5f2o",
    "created_at": "2018-07-07T01:41:53.065Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/vgxycrvlx0awr2yapg58.jpg",
    "description": "\n\nI solved a CodeWars (programming challenge site) question and compared my answe...",
    "published": true,
    "published_at": "2017-10-07T19:11:33.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI solved a \u003ca href=\"https://www.codewars.com\"\u003eCodeWars\u003c/a\u003e (programming challenge site) question and compared my answer to other solutions.\u003c/p\u003e\n\n\u003cp\u003eI was introduced to a different way of solving a question with a boolean operation.\u003c/p\u003e\n\n\u003cp\u003eBe prepared to be blown away.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eSPOILER ALERT!\u003c/strong\u003e : Answers are shown below so proceed at your own discretion (or try to solve the \u003ca href=\"https://www.codewars.com/kata/57f609022f4d534f05000024/\"\u003equestion\u003c/a\u003e yourself first before proceeding to compare your answer)\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"question-detail\" href=\"#question-detail\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Question Detail\n\u003c/h3\u003e\n\n\u003cp\u003eThe question, \u003ca href=\"https://www.codewars.com/kata/57f609022f4d534f05000024/\"\u003eFind the stray number\u003c/a\u003e, requires you to find a number in an odd-length array of numbers. There is only one element with length one.\u003c/p\u003e\n\n\u003cp\u003eAs an example, suppose that there is an array, \u003ccode\u003eint[] a = {1, 1, 2, 2, 3}\u003c/code\u003e and the stray number is \u003ccode\u003e3\u003c/code\u003e because \u003ccode\u003e1\u003c/code\u003e and \u003ccode\u003e2\u003c/code\u003e have an even length.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"typical-implementation\" href=\"#typical-implementation\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Typical Implementation\n\u003c/h3\u003e\n\n\u003cp\u003eOne would usually approach the problem by counting number of each element and find the one with odd count.\u003c/p\u003e\n\n\u003cp\u003eHere is my implementation submitted on CodeWars.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/c50e88d09b7782b974f9f6e1bbdc0d87.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eThe code above gets a count of each element(\u003ccode\u003eGroupBy\u003c/code\u003e then \u003ccode\u003eSelect\u003c/code\u003e) and returns an item with an odd number of counts (\u003ccode\u003eo.Count % 2 == 1\u003c/code\u003e).\u003c/p\u003e\n\n\u003cp\u003eWhen your answer is accepted on CodeWars, you can see solutions posted by others.\u003c/p\u003e\n\n\u003cp\u003eThen I spotted a one-liner using a XOR (Exclusive OR) bitwise operation by \u003ca href=\"https://www.codewars.com/users/Unnamed\"\u003eUnnamed\u003c/a\u003e (that’s a user ID).\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/886360849deeebb4664a3b982a7e5f80.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eNote that,\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003e.Aggregate\u003c/code\u003e in C# is to  \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce?v=a\"\u003eArray#reduce\u003c/a\u003e in Javascript as\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.Select\u003c/code\u003e is to  \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"\u003eArray#map\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"how-does-that-work\" href=\"#how-does-that-work\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  How does that work?\n\u003c/h3\u003e\n\n\u003cp\u003eIf you have been programming, you might have seldom used XOR. But to recap, XOR returns true if two inputs being compared are different (\u003ca href=\"https://en.wikipedia.org/wiki/Exclusive_or\"\u003eWikipedia\u003c/a\u003e).\u003c/p\u003e\n\n\u003cp\u003eSo for an even number of elements, they will all come out as 0 (false) and be left with the value of one element (true).\u003c/p\u003e\n\n\u003cp\u003eTo visualize what’s going on, I created a \u003ca href=\"https://github.com/dance2die/Blog.FindTheStrayNumber/blob/master/FindTheStrayNumber/Program.cs\"\u003esimple program\u003c/a\u003e below.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/8a9bc2ba9fa1c2e265b3e7b9a91e5412.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eIt’s just an iterative version of the one-liner answer by Unnamed.\u003c/p\u003e\n\n\u003cp\u003eSo for two arrays, \u003ccode\u003ea1\u003c/code\u003e \u0026amp; \u003ccode\u003ea2\u003c/code\u003e above, \u003ccode\u003en1\u003c/code\u003e would print 2 and \u003ccode\u003en2\u003c/code\u003e, 3.\u003c/p\u003e\n\n\u003cp\u003eI’ve added \u003ccode\u003eWriteLine\u003c/code\u003e to show what is going on more visually.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/01a645b87df47fb3c53f8fba728d93c3.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e : Numbers in parenthesis are binary representations.\u003c/p\u003e\n\n\u003cp\u003eAs you can see, even number elements are canceling each other out and what’s left is the stray number.\u003c/p\u003e\n\n\u003cp\u003eXOR trick work for an odd-length array where all other elements have even length and there is only one stray number.\u003c/p\u003e\n\n\u003cp\u003eE.g.) For an array “int[] a = {1, 1, 2, 2, 3}”, \u003ccode\u003eStray(a)\u003c/code\u003e would return 3.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eI hope you were surprised if you had solved the question before proceeding. It’s just surprising how a simple boolean operation can be used to solve a seemingly unrelated problem.\u003c/p\u003e\n\n\u003cp\u003eBut be aware that the one-liner was clever but it might cause too much cognitive load thus might not be readable.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eP.S.\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eWould you share any other use cases that you have found for XOR or boolean/bitwise operations?\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/10/07/filtering-stray-number-array/\"\u003eFiltering out a stray number in an array\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: Filtering out a stray number in an array\r\npublished: true\r\ntags: javascript, csharp\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/vgxycrvlx0awr2yapg58.jpg\r\ncanonical_url: https://www.slightedgecoder.com/2017/10/07/filtering-stray-number-array/\r\n---\r\n\r\nI solved a [CodeWars](https://www.codewars.com) (programming challenge site) question and compared my answer to other solutions.\r\n\r\nI was introduced to a different way of solving a question with a boolean operation.\r\n\r\nBe prepared to be blown away.\r\n\r\n**SPOILER ALERT!** : Answers are shown below so proceed at your own discretion (or try to solve the [question](https://www.codewars.com/kata/57f609022f4d534f05000024/) yourself first before proceeding to compare your answer)\r\n\r\n### Question Detail\r\n\r\nThe question, [Find the stray number](https://www.codewars.com/kata/57f609022f4d534f05000024/), requires you to find a number in an odd-length array of numbers. There is only one element with length one.\r\n\r\nAs an example, suppose that there is an array, `int[] a = {1, 1, 2, 2, 3}` and the stray number is `3` because `1` and `2` have an even length.\r\n\r\n### Typical Implementation\r\n\r\nOne would usually approach the problem by counting number of each element and find the one with odd count.\r\n\r\nHere is my implementation submitted on CodeWars.\r\n\r\n{% gist https://gist.github.com/dance2die/c50e88d09b7782b974f9f6e1bbdc0d87 %}\r\n\r\nThe code above gets a count of each element(`GroupBy` then `Select`) and returns an item with an odd number of counts (`o.Count % 2 == 1`).\r\n\r\nWhen your answer is accepted on CodeWars, you can see solutions posted by others.\r\n\r\nThen I spotted a one-liner using a XOR (Exclusive OR) bitwise operation by [Unnamed](https://www.codewars.com/users/Unnamed) (that’s a user ID).\r\n\r\n{% gist https://gist.github.com/dance2die/886360849deeebb4664a3b982a7e5f80 %}\r\n\r\nNote that,\r\n\r\n- `.Aggregate` in C# is to  [Array#reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce?v=a) in Javascript as\r\n- `.Select` is to  [Array#map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\r\n\r\n### How does that work?\r\n\r\nIf you have been programming, you might have seldom used XOR. But to recap, XOR returns true if two inputs being compared are different ([Wikipedia](https://en.wikipedia.org/wiki/Exclusive_or)).\r\n\r\nSo for an even number of elements, they will all come out as 0 (false) and be left with the value of one element (true).\r\n\r\nTo visualize what’s going on, I created a [simple program](https://github.com/dance2die/Blog.FindTheStrayNumber/blob/master/FindTheStrayNumber/Program.cs) below.\r\n\r\n{% gist https://gist.github.com/dance2die/8a9bc2ba9fa1c2e265b3e7b9a91e5412 %}\r\n\r\nIt’s just an iterative version of the one-liner answer by Unnamed.\r\n\r\nSo for two arrays, `a1` \u0026 `a2` above, `n1` would print 2 and `n2`, 3.\r\n\r\nI’ve added `WriteLine` to show what is going on more visually.\r\n\r\n{% gist https://gist.github.com/dance2die/01a645b87df47fb3c53f8fba728d93c3 %}\r\n\r\n**Note** : Numbers in parenthesis are binary representations.\r\n\r\nAs you can see, even number elements are canceling each other out and what’s left is the stray number.\r\n\r\nXOR trick work for an odd-length array where all other elements have even length and there is only one stray number.\r\n\r\nE.g.) For an array “int[] a = {1, 1, 2, 2, 3}”, `Stray(a)` would return 3.\r\n\r\n### Conclusion\r\n\r\nI hope you were surprised if you had solved the question before proceeding. It’s just surprising how a simple boolean operation can be used to solve a seemingly unrelated problem.\r\n\r\nBut be aware that the one-liner was clever but it might cause too much cognitive load thus might not be readable.\r\n\r\n**P.S.**\r\n\r\nWould you share any other use cases that you have found for XOR or boolean/bitwise operations?\r\n\r\nThe post [Filtering out a stray number in an array](https://www.slightedgecoder.com/2017/10/07/filtering-stray-number-array/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/10/07/filtering-stray-number-array/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 2,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/10/07/filtering-stray-number-array/",
    "positive_reactions_count": 14,
    "edited_at": "2018-07-29T20:54:08.329Z",
    "crossposted_at": "2018-07-29T06:31:28.803Z",
    "language": "en",
    "cached_tag_list": "javascript, csharp",
    "path": "/dance2die/filtering-out-a-stray-number-in-an-array-5f2o",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-07-29T22:23:19.352Z"
  },
  {
    "title": "Setting up ReactJS.org Environment for Open Source Contribution",
    "slug": "setting-up-reactjsorg-environment-for-open-source-contribution-1504-temp-slug-696895",
    "created_at": "2018-07-07T01:41:53.765Z",
    "main_image": null,
    "description": "\n\nI wanted to contribute to ReactJS.org website, (which is a new React JS documen...",
    "published": false,
    "published_at": "2017-10-15T21:51:45.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI wanted to contribute to \u003ca href=\"https://reactjs.org/\"\u003eReactJS.org\u003c/a\u003e website, (which is a new React JS documentation site announced on \u003ca href=\"https://twitter.com/reactjs/status/913797391307833344\"\u003eTwitter\u003c/a\u003e.) as a happy new React user.\u003c/p\u003e\n\n\u003cp\u003eSetting up ReactJS.org environment on Windows slightly challenging but quite worth it.\u003c/p\u003e\n\n\u003cp\u003eI’d like to show you how to get ReactJS.org page up and running on Windows 10.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"tldr\" href=\"#tldr\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  TL;DR\n\u003c/h3\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eDownload source code, install NPM packages and verify the site works.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"initial-steps-download-source-code\" href=\"#initial-steps-download-source-code\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Initial Steps – Download source code\n\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003eCreate a fork of ReactJS.org on GitHub.\n\n\u003col\u003e\n\u003cli\u003eGo to \u003ca href=\"https://github.com/reactjs/reactjs.org/\"\u003eReactJS.org GitHub page\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eCreate a new fork by clicking on the \u003ccode\u003eFork\u003c/code\u003e button on the right. \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jBBkppgi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/create-a-fork.png%3Fresize%3D896%252C110\" alt=\"\"\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003eGo to newly created fork\n\n\u003col\u003e\n\u003cli\u003e\n\u003ca href=\"https://github.com/%5C\"\u003ehttps://github.com/\\\u003c/a\u003e\u0026lt;\u0026lt;YOUR_GITHUB_ID\u0026gt;\u0026gt;/reactjs.org/\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003eClone the fork\n\n\u003col\u003e\n\u003cli\u003eby copying the repository path and,\u003c/li\u003e\n\u003cli\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--blsW7vLu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/clone-with-https.png%3Fresize%3D902%252C446\" alt=\"\"\u003e\u003c/li\u003e\n\u003cli\u003eand running \u003ccode\u003egit clone\u003c/code\u003e command – \u003ccode\u003egit clone https://github.com/\u0026lt;\u0026lt;YOUR_GITHUB_ID\u0026gt;\u0026gt;/reactjs.org.git\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eGo to the cloned directory – \u003ccode\u003ecd reactjs.org\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003eCheck out a branch – \u003ccode\u003egit checkout -b \u0026lt;\u0026lt;branch name\u0026gt;\u0026gt;\u003c/code\u003e\n.gist table { margin-bottom: 0; }\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"nodegyp-npm-package-installation-issue\" href=\"#nodegyp-npm-package-installation-issue\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Node-Gyp NPM package installation issue\n\u003c/h3\u003e\n\n\u003cp\u003eNow you got the source, let’s install NPM packages using \u003ccode\u003eyarn\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eBut it will fail due to \u003ca href=\"https://github.com/nodejs/node-gyp\"\u003enode-gyp\u003c/a\u003e issue.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e(In my case, I was missing Python 2.7)\u003c/p\u003e\n\n\u003cp\u003e“node-gyp” is required to run ReactJS.org. Luckily Node-Gyp \u003ca href=\"https://github.com/nodejs/node-gyp#on-windows\"\u003eWindows documentation\u003c/a\u003e provides two ways to install it.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/nodejs/node-gyp#option-1\"\u003eUsing NPM\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/nodejs/node-gyp#option-2\"\u003eManually install dependencies and configure\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eI recommend using NPM command since it’s easier.\u003c/p\u003e\n\n\u003cp\u003eAfter successfully installing “node-gyp”, run \u003ccode\u003eyarn\u003c/code\u003e again and it will install packages without an issue.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"verify-that-the-site-works\" href=\"#verify-that-the-site-works\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Verify that the site works\n\u003c/h3\u003e\n\n\u003cp\u003eNow to verify you need to run \u003ccode\u003eyarn check-all\u003c/code\u003e, which you need to run after making changes to the site.\u003c/p\u003e\n\n\u003cp\u003eBut let’s run it to make sure that the site is working.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eAfter making a change to the source code (pick and choose any \u003ca href=\"https://github.com/reactjs/reactjs.org/issues\"\u003eissues\u003c/a\u003e you can work on),\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"create-a-pull-request-pr\" href=\"#create-a-pull-request-pr\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Create a Pull Request (PR)\n\u003c/h3\u003e\n\n\u003cp\u003eA \u003ca href=\"https://yangsu.github.io/pull-request-tutorial/\"\u003ePull Request (PR)\u003c/a\u003e is a way of notifying the repository owner to merge your change into their source tree.\u003c/p\u003e\n\n\u003cp\u003eAfter a code change, stage it and commit it.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eBe as descriptive for the commit message by adding URL and what’s fixed as well as issue # you were working on.\u003c/p\u003e\n\n\u003cp\u003eNow, push the change to your fork.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003ePush steps are \u003ca href=\"https://github.com/reactjs/reactjs.org/#push-it\"\u003edocumented\u003c/a\u003e on ReactJS.org page.\u003c/p\u003e\n\n\u003cp\u003eIf everything went well, go to GitHub fork page and create a PR. If you are not unsure how to, refer to the official GitHub documentation, \u003ca href=\"https://help.github.com/articles/creating-a-pull-request/\"\u003eCreating a pull request – User Documentation\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eAfter generating a PR, you will see a PR on ReactJS.org Pull requests tab.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--iFz9ngRB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/chrome_2017-10-08_20-03-06.png%3Fresize%3D929%252C784\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--iFz9ngRB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/chrome_2017-10-08_20-03-06.png%3Fresize%3D929%252C784\" alt=\"\"\u003e\u003c/a\u003eMake sure to include a screenshot of what’s changed in your PR if your change is cosmetic.\u003c/p\u003e\n\n\u003cp\u003eNot long after your PR is created, a Facebook bot will ask you to sign a \u003ca href=\"https://code.facebook.com/cla\"\u003eContributor License Agreement\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--9G67aGcm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/chrome_2017-10-15_17-27-16.png%3Fresize%3D787%252C606\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--9G67aGcm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/chrome_2017-10-15_17-27-16.png%3Fresize%3D787%252C606\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAfter you sign the agreement, the bot will verify and leave another comment in about an hour.\u003c/p\u003e\n\n\u003cp\u003eOnce your change is accepted, it will be merged.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--L7Xqz-pF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/chrome_2017-10-08_22-03-17.png%3Fresize%3D826%252C427\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--L7Xqz-pF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/chrome_2017-10-08_22-03-17.png%3Fresize%3D826%252C427\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eCongratulations!\u003c/strong\u003e You’ve contributed to reactjs.org webpage! (I am not exactly sure how long it takes for the PR to go live, yet. Let me know if you know the cycle.)\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--tDaF-xfv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/chrome_2017-10-15_17-32-25.png%3Fresize%3D1071%252C477\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--tDaF-xfv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/chrome_2017-10-15_17-32-25.png%3Fresize%3D1071%252C477\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eSorry to scare you in the beginning of the post. But it’s actually as easy as forking a repository, install NPM packages, make a change, and create a PR.\u003c/p\u003e\n\n\u003cp\u003eThis post is based on the \u003ca href=\"https://github.com/reactjs/reactjs.org/issues/70#issuecomment-335047497\"\u003efeedback\u003c/a\u003eI left on GitHub after being asked by \u003ca href=\"http://www.briandavidvaughn.com/\"\u003eBrian Vaughn\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e**update on 10/16/2017**\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eyarn check-all\u003c/code\u003e now \u003ca href=\"https://github.com/reactjs/reactjs.org/pull/166\"\u003eworks on Windows\u003c/a\u003e, so that part of the post is removed, thus easier to set up now.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/10/15/setting-reactjs-org-environment-open-source-contribution/\"\u003eSetting up ReactJS.org Environment for Open Source Contribution\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Setting up ReactJS.org Environment for Open Source Contribution\npublished: false\ntags: Programming,git,GitHub,OpenSource\ncanonical_url: https://www.slightedgecoder.com/2017/10/15/setting-reactjs-org-environment-open-source-contribution/\n---\n\nI wanted to contribute to [ReactJS.org](https://reactjs.org/) website, (which is a new React JS documentation site announced on [Twitter](https://twitter.com/reactjs/status/913797391307833344).) as a happy new React user.\n\nSetting up ReactJS.org environment on Windows slightly challenging but quite worth it.\n\nI’d like to show you how to get ReactJS.org page up and running on Windows 10.\n\n### TL;DR\n\n\u003e Download source code, install NPM packages and verify the site works.\n\n### Initial Steps – Download source code\n\n1. Create a fork of ReactJS.org on GitHub.\n  1. Go to [ReactJS.org GitHub page](https://github.com/reactjs/reactjs.org/).\n  2. Create a new fork by clicking on the `Fork` button on the right. ![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/create-a-fork.png?resize=896%2C110)\n2. Go to newly created fork\n  1. https://github.com/\\\u003c\\\u003cYOUR\\_GITHUB\\_ID\\\u003e\\\u003e/reactjs.org/\n3. Clone the fork\n  1. by copying the repository path and,\n    1. ![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/clone-with-https.png?resize=902%2C446)\n    2. and running `git clone` command – `git clone https://github.com/\u003c\u003cYOUR_GITHUB_ID\u003e\u003e/reactjs.org.git`\n    3. Go to the cloned directory – `cd reactjs.org`\n4. Check out a branch – `git checkout -b \u003c\u003cbranch name\u003e\u003e`\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n### Node-Gyp NPM package installation issue\n\nNow you got the source, let’s install NPM packages using `yarn`.\n\nBut it will fail due to [node-gyp](https://github.com/nodejs/node-gyp) issue.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n(In my case, I was missing Python 2.7)\n\n“node-gyp” is required to run ReactJS.org. Luckily Node-Gyp [Windows documentation](https://github.com/nodejs/node-gyp#on-windows) provides two ways to install it.\n\n1. [Using NPM](https://github.com/nodejs/node-gyp#option-1)\n2. [Manually install dependencies and configure](https://github.com/nodejs/node-gyp#option-2)\n\nI recommend using NPM command since it’s easier.\n\nAfter successfully installing “node-gyp”, run `yarn` again and it will install packages without an issue.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n### Verify that the site works\n\nNow to verify you need to run `yarn check-all`, which you need to run after making changes to the site.\n\nBut let’s run it to make sure that the site is working.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n \n\nAfter making a change to the source code (pick and choose any [issues](https://github.com/reactjs/reactjs.org/issues) you can work on),\n\n### Create a Pull Request (PR)\n\nA [Pull Request (PR)](https://yangsu.github.io/pull-request-tutorial/) is a way of notifying the repository owner to merge your change into their source tree.\n\nAfter a code change, stage it and commit it.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nBe as descriptive for the commit message by adding URL and what’s fixed as well as issue # you were working on.\n\nNow, push the change to your fork.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nPush steps are [documented](https://github.com/reactjs/reactjs.org/#push-it) on ReactJS.org page.\n\nIf everything went well, go to GitHub fork page and create a PR. If you are not unsure how to, refer to the official GitHub documentation, [Creating a pull request – User Documentation](https://help.github.com/articles/creating-a-pull-request/).\n\nAfter generating a PR, you will see a PR on ReactJS.org Pull requests tab.\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/chrome_2017-10-08_20-03-06.png?resize=929%2C784)Make sure to include a screenshot of what’s changed in your PR if your change is cosmetic.\n\nNot long after your PR is created, a Facebook bot will ask you to sign a [Contributor License Agreement](https://code.facebook.com/cla).\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/chrome_2017-10-15_17-27-16.png?resize=787%2C606)\n\nAfter you sign the agreement, the bot will verify and leave another comment in about an hour.\n\nOnce your change is accepted, it will be merged.\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/chrome_2017-10-08_22-03-17.png?resize=826%2C427)\n\n**Congratulations!** You’ve contributed to reactjs.org webpage! (I am not exactly sure how long it takes for the PR to go live, yet. Let me know if you know the cycle.)\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/10/chrome_2017-10-15_17-32-25.png?resize=1071%2C477)\n\n### Conclusion\n\nSorry to scare you in the beginning of the post. But it’s actually as easy as forking a repository, install NPM packages, make a change, and create a PR.\n\nThis post is based on the [feedback](https://github.com/reactjs/reactjs.org/issues/70#issuecomment-335047497)I left on GitHub after being asked by [Brian Vaughn](http://www.briandavidvaughn.com/).\n\n \n\n\\*\\*update on 10/16/2017\\*\\*\n\n`yarn check-all` now [works on Windows](https://github.com/reactjs/reactjs.org/pull/166), so that part of the post is removed, thus easier to set up now.\n\nThe post [Setting up ReactJS.org Environment for Open Source Contribution](https://www.slightedgecoder.com/2017/10/15/setting-reactjs-org-environment-open-source-contribution/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/10/15/setting-reactjs-org-environment-open-source-contribution/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/10/15/setting-reactjs-org-environment-open-source-contribution/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "programming, git, github, opensource",
    "path": "/dance2die/setting-up-reactjsorg-environment-for-open-source-contribution-1504-temp-slug-696895",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-10-15T21:51:45.000Z"
  },
  {
    "title": "Eliminating a Switch statement",
    "slug": "eliminating-a-switch-statement-1dnl-temp-slug-9344528",
    "created_at": "2018-07-07T01:41:54.400Z",
    "main_image": null,
    "description": "\n\nI was solving Make the Deadfish Swim on CodeWars, which seemed to require many ...",
    "published": false,
    "published_at": "2017-10-28T15:20:31.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI was solving \u003ca href=\"https://www.codewars.com/kata/make-the-deadfish-swim/\"\u003eMake the Deadfish Swim\u003c/a\u003e on \u003ca href=\"https://www.codewars.com\"\u003eCodeWars\u003c/a\u003e, which seemed to require many if or switch (conditional) statements.\u003c/p\u003e\n\n\u003cp\u003eI was impressed with two Functional Programming in Javascript articles (\u003ca href=\"https://hackernoon.com/rethinking-javascript-the-if-statement-b158a61cd6cb\"\u003eRethinking JavaScript: The if statement\u003c/a\u003e \u0026amp; \u003ca href=\"https://hackernoon.com/rethinking-javascript-eliminate-the-switch-statement-for-better-code-5c81c044716d\"\u003eRethinking JavaScript: Eliminate the switch statement for better code\u003c/a\u003e), by \u003ca href=\"https://hackernoon.com/@joelthoms\"\u003eJoel Thoms\u003c/a\u003e so I wanted to give it a try without conditional statements.\u003c/p\u003e\n\n\u003cp\u003eWhat was involved to solve the question without \u003ccode\u003eswitch\u003c/code\u003e?\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"tldr\" href=\"#tldr\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  TL;DR\n\u003c/h3\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eUse a dictionary \u0026amp; a lambda expression\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"question\" href=\"#question\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Question?\n\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.codewars.com/kata/make-the-deadfish-swim/\"\u003eMake the Deadfish Swim\u003c/a\u003e is about parsing a string of commands and perform operations on an initial value of 0.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eWrite a simple parser that will parse and run Deadfish.\u003cbr\u003e\u003cbr\u003e\nDeadfish has 4 commands, each 1 character long.\u003cbr\u003e\u003cbr\u003e\n‘i’ will increment the value ( initially 0 ).\u003cbr\u003e\u003cbr\u003e\n‘d’ will decrement the value.\u003cbr\u003e\u003cbr\u003e\n‘s’ will square the value.\u003cbr\u003e\u003cbr\u003e\n‘o’ will output the value into the return array.\u003c/p\u003e\n\n\u003cp\u003eInvalid characters should be ignored.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eDeadfish.Parse(\"iiisdoso\") =\u0026gt; new int[] {8, 64};\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAt a glance, a simple \u003ccode\u003eifs\u003c/code\u003e or a  \u003ccode\u003eswitch\u003c/code\u003e would be required to solve it.\u003c/p\u003e\n\n\u003cp\u003eLet’s implement it using a \u003ccode\u003eswitch\u003c/code\u003e statement.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"with-switch\" href=\"#with-switch\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  “With” Switch\n\u003c/h3\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eIterative version \u003cstrong\u003ematches\u003c/strong\u003e against each command and performs \u003cstrong\u003eoperations\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003ecmd\u003c/code\u003e is a character in \u003ccode\u003edata\u003c/code\u003e, which is \u003ccode\u003e\"iiisdoso\"\u003c/code\u003e in the question.\u003c/p\u003e\n\n\u003cp\u003eThe code \u003cstrong\u003eiterates\u003c/strong\u003e  each command and operate on the \u003ccode\u003esum\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"how-do-we-get-rid-of-the-switch-statement\" href=\"#how-do-we-get-rid-of-the-switch-statement\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  How do we get rid of the switch statement?\n\u003c/h3\u003e\n\n\u003cp\u003eWe want to rid \u003ccode\u003eswitch\u003c/code\u003e and there are two aspects to consider.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWhat’d be a good \u003cstrong\u003eData Structure\u003c/strong\u003e (DS) for \u003cstrong\u003ematching\u003c/strong\u003e and getting a value?\u003c/li\u003e\n\u003cli\u003eHow do   \u003cstrong\u003eoperate\u003c/strong\u003e  on a value?\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eFor the first question, a hashtable/dictionary is a good fit because the time complexity for a key lookup is \u003ccode\u003eO(1)\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eFor the latter, \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/statements-expressions-operators/lambda-expressions\"\u003ea lambda/anonymous function\u003c/a\u003e would do the job. (I am using C#, which provides \u003ca href=\"https://msdn.microsoft.com/en-us/library/bb549151(v=vs.110).aspx\"\u003eFunc\u0026lt;T, TResult\u0026gt;\u003c/a\u003e).\u003c/p\u003e\n\n\u003cp\u003eWe all the pieces in place, let’s look at the version without the \u003ccode\u003eswitch\u003c/code\u003e statement.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"without-switch\" href=\"#without-switch\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  “Without” Switch\n\u003c/h3\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eThe first thing I did was to create a \u003ca href=\"https://msdn.microsoft.com/en-us/library/xfhwa508(v=vs.110).aspx\"\u003edictionary\u003c/a\u003e, \u003ccode\u003ecommands\u003c/code\u003e for a fast lookup.\u003c/p\u003e\n\n\u003cp\u003eAnd for the operation (values of \u003ccode\u003ecommands\u003c/code\u003e), a lambda expression (which accepts an integer and returns an integer) is used.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003edata\u003c/code\u003e operates on each character (command) and operates on the \u003ccode\u003evalue\u003c/code\u003eusing \u003ca href=\"https://msdn.microsoft.com/en-us/library/bb548891(v=vs.110).aspx\"\u003e\u003cstrong\u003eSelect\u003c/strong\u003e\u003c/a\u003eLINQ statement.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"why\" href=\"#why\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Why?\n\u003c/h3\u003e\n\n\u003cp\u003eFirst of all, why would I want to eliminate \u003ccode\u003eswitch\u003c/code\u003e?\u003c/p\u003e\n\n\u003cp\u003eInstead of instructing \u003cstrong\u003ehow\u003c/strong\u003e a problem needs to be solved, FP requires you to think in terms of \u003cstrong\u003ewhat\u003c/strong\u003e to solve.\u003c/p\u003e\n\n\u003cp\u003eI could’ve gone the whole nine yards and used a \u003ca href=\"https://en.wikipedia.org/wiki/Command_pattern\"\u003eCommand Design Pattern\u003c/a\u003e but it seemed like Object Oriented Programming trying to emulate Functional Programming (FP).\u003c/p\u003e\n\n\u003cp\u003eAnd also the problem is small enough to dabble with FP.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Parting Words\n\u003c/h3\u003e\n\n\u003cp\u003eI am just getting started with FP way of writing programs in C# and started using LINQ heavily.\u003c/p\u003e\n\n\u003cp\u003eStill wrapping my head around on FP so I’d appreciate it if you can provide me pointers on how to go further with FP.\u003c/p\u003e\n\n\u003cp\u003eThe source code is available on \u003ca href=\"https://github.com/dance2die/Demo.LearnByDoing/blob/master/Demo.LearnByDoing.Tests/CodeWars/Kyu6/MakeTheDeadFishSwimTest.cs\"\u003eGitHub\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/10/28/eliminating-switch-statement/\"\u003eEliminating a Switch statement\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Eliminating a Switch statement\npublished: false\ntags: Problem Solving,Programming\ncanonical_url: https://www.slightedgecoder.com/2017/10/28/eliminating-switch-statement/\n---\n\nI was solving [Make the Deadfish Swim](https://www.codewars.com/kata/make-the-deadfish-swim/) on [CodeWars](https://www.codewars.com), which seemed to require many if or switch (conditional) statements.\n\nI was impressed with two Functional Programming in Javascript articles ([Rethinking JavaScript: The if statement](https://hackernoon.com/rethinking-javascript-the-if-statement-b158a61cd6cb) \u0026 [Rethinking JavaScript: Eliminate the switch statement for better code](https://hackernoon.com/rethinking-javascript-eliminate-the-switch-statement-for-better-code-5c81c044716d)), by [Joel Thoms](https://hackernoon.com/@joelthoms) so I wanted to give it a try without conditional statements.\n\nWhat was involved to solve the question without `switch`?\n\n### TL;DR\n\n\u003e Use a dictionary \u0026 a lambda expression\n\n### Question?\n\n[Make the Deadfish Swim](https://www.codewars.com/kata/make-the-deadfish-swim/) is about parsing a string of commands and perform operations on an initial value of 0.\n\n\u003e Write a simple parser that will parse and run Deadfish.  \n\u003e Deadfish has 4 commands, each 1 character long.  \n\u003e ‘i’ will increment the value ( initially 0 ).  \n\u003e ‘d’ will decrement the value.  \n\u003e ‘s’ will square the value.  \n\u003e ‘o’ will output the value into the return array.\n\n \n\n\u003e Invalid characters should be ignored.\n\u003e \n\u003e `Deadfish.Parse(\"iiisdoso\") =\u003e new int[] {8, 64};`\n\nAt a glance, a simple `ifs` or a  `switch` would be required to solve it.\n\nLet’s implement it using a `switch` statement.\n\n### “With” Switch\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nIterative version **matches** against each command and performs **operations**.\n\n`cmd` is a character in `data`, which is `\"iiisdoso\"` in the question.\n\nThe code **iterates**  each command and operate on the `sum`.\n\n### How do we get rid of the switch statement?\n\nWe want to rid `switch` and there are two aspects to consider.\n\n1. What’d be a good **Data Structure** (DS) for **matching** and getting a value?\n2. How do   **operate**  on a value?\n\nFor the first question, a hashtable/dictionary is a good fit because the time complexity for a key lookup is `O(1)`.\n\nFor the latter, [a lambda/anonymous function](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/statements-expressions-operators/lambda-expressions) would do the job. (I am using C#, which provides [Func\\\u003cT, TResult\\\u003e](https://msdn.microsoft.com/en-us/library/bb549151(v=vs.110).aspx)).\n\nWe all the pieces in place, let’s look at the version without the `switch` statement.\n\n### “Without” Switch\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nThe first thing I did was to create a [dictionary](https://msdn.microsoft.com/en-us/library/xfhwa508(v=vs.110).aspx), `commands` for a fast lookup.\n\nAnd for the operation (values of `commands`), a lambda expression (which accepts an integer and returns an integer) is used.\n\n`data` operates on each character (command) and operates on the `value`using [**Select**](https://msdn.microsoft.com/en-us/library/bb548891(v=vs.110).aspx)LINQ statement.\n\n### Why?\n\nFirst of all, why would I want to eliminate `switch`?\n\nInstead of instructing **how** a problem needs to be solved, FP requires you to think in terms of **what** to solve.\n\nI could’ve gone the whole nine yards and used a [Command Design Pattern](https://en.wikipedia.org/wiki/Command_pattern) but it seemed like Object Oriented Programming trying to emulate Functional Programming (FP).\n\nAnd also the problem is small enough to dabble with FP.\n\n### Parting Words\n\nI am just getting started with FP way of writing programs in C# and started using LINQ heavily.\n\nStill wrapping my head around on FP so I’d appreciate it if you can provide me pointers on how to go further with FP.\n\nThe source code is available on [GitHub](https://github.com/dance2die/Demo.LearnByDoing/blob/master/Demo.LearnByDoing.Tests/CodeWars/Kyu6/MakeTheDeadFishSwimTest.cs).\n\n \n\nThe post [Eliminating a Switch statement](https://www.slightedgecoder.com/2017/10/28/eliminating-switch-statement/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/10/28/eliminating-switch-statement/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/10/28/eliminating-switch-statement/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "problemsolving, programming",
    "path": "/dance2die/eliminating-a-switch-statement-1dnl-temp-slug-9344528",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-10-28T15:20:31.000Z"
  },
  {
    "title": "Summary of Clean Architecture Part II “Starting with the Bricks: Programming Paradigms”",
    "slug": "summary-of-clean-architecture-part-ii-starting-with-the-bricks-programming-paradigms-1fl3-temp-slug-576039",
    "created_at": "2018-07-07T01:41:55.012Z",
    "main_image": null,
    "description": "\n\nAfter reading Clean Architecture, I’ve had a trouble understanding differences ...",
    "published": false,
    "published_at": "2017-11-05T20:35:28.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eAfter reading Clean Architecture, I’ve had a trouble understanding differences of each programming paradigm;\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://en.wikipedia.org/wiki/Structured_programming\"\u003eStructured Programming\u003c/a\u003e (SP)\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://en.wikipedia.org/wiki/Object-oriented_programming\"\u003eObject-oriented Programming\u003c/a\u003e (OOP)\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://en.wikipedia.org/wiki/Functional_programming\"\u003eFunctional Programming\u003c/a\u003e (FP)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eLet me share a summary of \u003ca href=\"https://www.goodreads.com/book/show/18043011-clean-architecture\"\u003e Clean Architecture\u003c/a\u003e Part II, \u003cstrong\u003eStarting with the Bricks: Programming Paradigms\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eFirstly, what is,\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"a-programming-paradigm\" href=\"#a-programming-paradigm\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  A Programming Paradigm?\n\u003c/h3\u003e\n\n\u003cp\u003eIt is a programming _ \u003cstrong\u003ediscipline\u003c/strong\u003e _, used to decide which form of programming structure (SP, OOP, FP) to use.\u003c/p\u003e\n\n\u003cp\u003eEach paradigm places a constraint on a programmer.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eNOTE\u003c/strong\u003e : “Paradigm” is pronounced as \u003ca href=\"http://www.dictionary.com/browse/paradigm\"\u003epar–uh-dahym\u003c/a\u003e  \u003cstrong\u003eNOT\u003c/strong\u003e  as \u003ca href=\"https://www.codingblocks.net/podcast/clean-architecture-programming-paradigms/\"\u003epar-uh-dig-uhms\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"disciplines-imposed-by-each-paradigm\" href=\"#disciplines-imposed-by-each-paradigm\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Disciplines imposed by each paradigm\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n##### Structured Programming\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eA direct transfer of control\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eExample\u003c/strong\u003e : \u003ccode\u003egoto\u003c/code\u003e statement is discouraged or removed.\u003c/p\u003e\n\n\u003cp\u003eInstead of using a \u003ccode\u003egoto\u003c/code\u003e statement for an unconstrainted control flow, programmers are forced to use (now familiar) constructs such as \u003ccode\u003eif/else\u003c/code\u003e, \u003ccode\u003efor/while\u003c/code\u003e loops.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n##### Object-oriented Programming\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAn indirect transfer of control\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eExample\u003c/strong\u003e : Function pointers are eliminated.\u003c/p\u003e\n\n\u003cp\u003eOOP provides a plug-in architecture with a use of polymorphism. Polymorphism also enables a programmer to change the code dependencies with \u003ca href=\"https://en.wikipedia.org/wiki/Dependency_inversion_principle\"\u003eDependency Inversion Principle\u003c/a\u003e.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n##### Functional Programming\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eA variable assignment\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eExample\u003c/strong\u003e : Cannot assign a new value to a variable.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"what-problems-each-paradigm-solves\" href=\"#what-problems-each-paradigm-solves\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  What problem(s) each paradigm solves\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n##### Structured Programming\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eSP causes noodlers (preventing \u003ca href=\"https://en.wikipedia.org/wiki/Spaghetti_code\"\u003espaghetti codes\u003c/a\u003e) to become an endangers species\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eHow?\u003c/strong\u003e   By discouraging the use of goto and encouraging functional decomposition and use of data structures.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n##### Object-oriented Programming\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eComplete control over code dependencies and flows.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eHow?\u003c/strong\u003e  By using dependency inversion with the use of \u003ca href=\"https://en.wikipedia.org/wiki/Polymorphism_(computer_science)\"\u003epolymorphism\u003c/a\u003e.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n##### Functional Programming\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAll race/deadlock conditions, and concurrent update problems.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eHow?\u003c/strong\u003e Problems mentioned above are caused by variable mutation. FP prevents variable assignment, thus those problems can’t occur.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"programming-paradigm-use-cases\" href=\"#programming-paradigm-use-cases\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Programming Paradigm Use Cases\n\u003c/h3\u003e\n\n\u003cp\u003eInitially, I thought about when to use each paradigm. When you consider a software architecture as a whole, it makes more sense to use each one appropriately.\u003c/p\u003e\n\n\u003cp\u003eSo as an example, write low-level methods with SP principles, and separate immutable components (written with FP) from mutable components to mitigate resource contention and control flows with OOP.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"surprises\" href=\"#surprises\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Surprises  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--uQEojgN---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f389.png\" alt=\"🎉\"\u003e\n\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003eScience theories and laws are not provable, only \u003cem\u003efalsifiable\u003c/em\u003e.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://en.wikipedia.org/wiki/Object-oriented_programming#Encapsulation\"\u003eEncapsulation\u003c/a\u003e, \u003ca href=\"https://en.wikipedia.org/wiki/Object-oriented_programming#Composition.2C_inheritance.2C_and_delegation\"\u003eInheritance\u003c/a\u003e, and \u003ca href=\"https://en.wikipedia.org/wiki/Object-oriented_programming#Polymorphism\"\u003ePolymorphism\u003c/a\u003e concepts are not introduced in OOP! – These concepts were available in C, but the usages were unsafe and OOP made it safer/easier to use.\u003c/li\u003e\n\u003cli\u003eAccess modifiers, \u003ccode\u003epublic\u003c/code\u003e\u003ccode\u003eprivate\u003c/code\u003e and \u003ccode\u003eprotected\u003c/code\u003e in OOP are just a \u003cem\u003ehack\u003c/em\u003e necessitated by technical reasons! – C header files hid member variables but C++ header files had to expose member variables because \u003ca href=\"https://stackoverflow.com/questions/4341570/\"\u003eC++ compilers have to know the size of the instances of each class\u003c/a\u003e. Even worse, modern OOP languages such as C#/Java do not separate a class declaration from its implementation therefore, those modifiers are necessary evils.\u003c/li\u003e\n\u003cli\u003eIn FP, variables do NOT vary!\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003eEach paradigm tells a programmer what NOT to do.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.goodreads.com/book/show/18043011-clean-architecture\"\u003eClean Architecture\u003c/a\u003e is a book written by Robert C. Martin, aka Uncle “Bob”.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.codingblocks.net/\"\u003eCoding Blocks\u003c/a\u003e guys talk about it in more detail in \u003ca href=\"https://www.codingblocks.net/podcast/clean-architecture-programming-paradigms/\"\u003eEpisode 69 – Clean Architecture – Programming Paradigms\u003c/a\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/11/05/summary-clean-architecture-part-ii-starting-bricks-programming-paradigms/\"\u003eSummary of Clean Architecture Part II “Starting with the Bricks: Programming Paradigms”\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Summary of Clean Architecture Part II “Starting with the Bricks: Programming Paradigms”\npublished: false\ntags: Blog Entry,book review,Programming,book\ncanonical_url: https://www.slightedgecoder.com/2017/11/05/summary-clean-architecture-part-ii-starting-bricks-programming-paradigms/\n---\n\nAfter reading Clean Architecture, I’ve had a trouble understanding differences of each programming paradigm;\n\n- [Structured Programming](https://en.wikipedia.org/wiki/Structured_programming) (SP)\n- [Object-oriented Programming](https://en.wikipedia.org/wiki/Object-oriented_programming) (OOP)\n- [Functional Programming](https://en.wikipedia.org/wiki/Functional_programming) (FP)\n\nLet me share a summary of [ Clean Architecture](https://www.goodreads.com/book/show/18043011-clean-architecture) Part II, **Starting with the Bricks: Programming Paradigms**.\n\nFirstly, what is,\n\n### A Programming Paradigm?\n\nIt is a programming _ **discipline** _, used to decide which form of programming structure (SP, OOP, FP) to use.\n\nEach paradigm places a constraint on a programmer.\n\n**NOTE** : “Paradigm” is pronounced as [par–uh-dahym](http://www.dictionary.com/browse/paradigm)  **NOT**  as [par-uh-dig-uhms](https://www.codingblocks.net/podcast/clean-architecture-programming-paradigms/).\n\n### Disciplines imposed by each paradigm\n\n- \n##### Structured Programming\n\n\u003e A direct transfer of control\n\n**Example** : `goto` statement is discouraged or removed.\n\nInstead of using a `goto` statement for an unconstrainted control flow, programmers are forced to use (now familiar) constructs such as `if/else`, `for/while` loops.\n\n- \n##### Object-oriented Programming\n\n\u003e An indirect transfer of control\n\n**Example** : Function pointers are eliminated.\n\nOOP provides a plug-in architecture with a use of polymorphism. Polymorphism also enables a programmer to change the code dependencies with [Dependency Inversion Principle](https://en.wikipedia.org/wiki/Dependency_inversion_principle).\n\n- \n##### Functional Programming\n\n\u003e A variable assignment\n\n**Example** : Cannot assign a new value to a variable.\n\n### What problem(s) each paradigm solves\n\n- \n##### Structured Programming\n\n\u003e SP causes noodlers (preventing [spaghetti codes](https://en.wikipedia.org/wiki/Spaghetti_code)) to become an endangers species\n\n**How?**   By discouraging the use of goto and encouraging functional decomposition and use of data structures.\n\n- \n##### Object-oriented Programming\n\n\u003e Complete control over code dependencies and flows.\n\n**How?**  By using dependency inversion with the use of [polymorphism](https://en.wikipedia.org/wiki/Polymorphism_(computer_science)).\n\n- \n##### Functional Programming\n\n\u003e All race/deadlock conditions, and concurrent update problems.\n\n**How?** Problems mentioned above are caused by variable mutation. FP prevents variable assignment, thus those problems can’t occur.\n\n### Programming Paradigm Use Cases\n\nInitially, I thought about when to use each paradigm. When you consider a software architecture as a whole, it makes more sense to use each one appropriately.\n\nSo as an example, write low-level methods with SP principles, and separate immutable components (written with FP) from mutable components to mitigate resource contention and control flows with OOP.\n\n### Surprises  ![🎉](https://s.w.org/images/core/emoji/2.4/72x72/1f389.png)\n\n1. Science theories and laws are not provable, only _falsifiable_.\n2. [Encapsulation](https://en.wikipedia.org/wiki/Object-oriented_programming#Encapsulation), [Inheritance](https://en.wikipedia.org/wiki/Object-oriented_programming#Composition.2C_inheritance.2C_and_delegation), and [Polymorphism](https://en.wikipedia.org/wiki/Object-oriented_programming#Polymorphism) concepts are not introduced in OOP! – These concepts were available in C, but the usages were unsafe and OOP made it safer/easier to use.\n3. Access modifiers, `public``private` and `protected` in OOP are just a _hack_ necessitated by technical reasons! – C header files hid member variables but C++ header files had to expose member variables because [C++ compilers have to know the size of the instances of each class](https://stackoverflow.com/questions/4341570/). Even worse, modern OOP languages such as C#/Java do not separate a class declaration from its implementation therefore, those modifiers are necessary evils.\n4. In FP, variables do NOT vary!\n\n### Conclusion\n\n1. Each paradigm tells a programmer what NOT to do.\n2. [Clean Architecture](https://www.goodreads.com/book/show/18043011-clean-architecture) is a book written by Robert C. Martin, aka Uncle “Bob”.\n3. [Coding Blocks](https://www.codingblocks.net/) guys talk about it in more detail in [Episode 69 – Clean Architecture – Programming Paradigms](https://www.codingblocks.net/podcast/clean-architecture-programming-paradigms/).\n\nThe post [Summary of Clean Architecture Part II “Starting with the Bricks: Programming Paradigms”](https://www.slightedgecoder.com/2017/11/05/summary-clean-architecture-part-ii-starting-bricks-programming-paradigms/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/11/05/summary-clean-architecture-part-ii-starting-bricks-programming-paradigms/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/11/05/summary-clean-architecture-part-ii-starting-bricks-programming-paradigms/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": null,
    "cached_tag_list": "blogentry, bookreview, programming, book",
    "path": "/dance2die/summary-of-clean-architecture-part-ii-starting-with-the-bricks-programming-paradigms-1fl3-temp-slug-576039",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-11-05T20:35:28.000Z"
  },
  {
    "title": "Tips on running React page with Node backend",
    "slug": "tips-on-running-react-page-with-node-backend-3fg6-temp-slug-6010876",
    "created_at": "2018-07-07T01:41:55.570Z",
    "main_image": null,
    "description": "\n\nAs I was learning React, I’ve run into a situation where I needed to use node a...",
    "published": false,
    "published_at": "2017-11-12T20:40:32.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eAs I was learning React, I’ve run into a situation where I needed to use node as a backend. I found this wonderful article \u003ca href=\"https://dev.to/dceddia/create-react-app-with-an-express-backend-d1m-temp-slug-462810\"\u003eCreate React App with an Express Backend\u003c/a\u003e by Dave Ceddia.\u003c/p\u003e\n\n\u003cp\u003eBut debugging required opening two command windows; One for node server, another for webpack dev server.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eSET PORT=3001 \u0026amp;\u0026amp; node bin/www\u003c/li\u003e\n\u003cli\u003eSET PORT=3000 \u0026amp;\u0026amp; yarn start\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eCan we do better?\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"tldr\" href=\"#tldr\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  TL;DR;\n\u003c/h3\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eUse \u003ccode\u003econcurrently\u003c/code\u003e \u0026amp; \u003ccode\u003enodemon\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"prereq-or-not\" href=\"#prereq-or-not\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Prereq or not…\n\u003c/h3\u003e\n\n\u003cp\u003ePlease read \u003ca href=\"https://dev.to/dceddia/create-react-app-with-an-express-backend-d1m-temp-slug-462810\"\u003eCreate React App with an Express Backend\u003c/a\u003e first on how to set up react page with node backend.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"problem\" href=\"#problem\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Problem\n\u003c/h3\u003e\n\n\u003cp\u003eWhen you chain commands together with \u003ccode\u003e\u0026amp;\u0026amp;\u003c/code\u003e or \u003ccode\u003e\u0026amp;\u003c/code\u003e (in Mac/Linux), command on the right-hand side doesn’t execute until the left-hand side finishes.\u003c/p\u003e\n\n\u003cp\u003eLet’s run following code in a command window.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://nodejs.org/api/cli.html\"\u003eNode CLI\u003c/a\u003e (\u003ccode\u003enode bin/www\u003c/code\u003e)doesn’t return until interrupted thus \u003ccode\u003eSET PORT=3000 \u0026amp;\u0026amp; yarn start\u003c/code\u003e doesn’t get a chance to run.\u003c/p\u003e\n\n\u003cp\u003eWe need a way to run both \u003ccode\u003enode\u003c/code\u003e and \u003ccode\u003eyarn\u003c/code\u003e “concurrently”.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"running-node-server-amp-webpack-dev-server-concurrently\" href=\"#running-node-server-amp-webpack-dev-server-concurrently\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Running node server \u0026amp; Webpack dev server “Concurrently”\n\u003c/h3\u003e\n\n\u003cp\u003eThis is where \u003ca href=\"https://www.npmjs.com/package/concurrently\"\u003econcurrently\u003c/a\u003e command comes into play. The NPM page describes the functionality as,\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eRun multiple commands concurrently\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eNow let’s install “concurrently” globally and locally for \u003ccode\u003ereact-backend\u003c/code\u003e site (not under “/client” but in the express project).\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e : I installed it globally as well to run the command before adding it to “package.json” file.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003econcurrently\u003c/code\u003e accepts a variable number of arguments in quotes separated by space.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eIn our case, we want to run node \u0026amp; webpack dev server, so the command to run looks like following.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eThe command line runs the node server and starts webpack dev server as shown below.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eAnd if the \u003ccode\u003ereact-scripts\u003c/code\u003e ran successfully as shown above, a browser will open and display the react page.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"another-problem\" href=\"#another-problem\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Another problem\n\u003c/h3\u003e\n\n\u003cp\u003eRefreshing the browser after updating a node file would not reflect the change you made as shown below.\u003c/p\u003e\n\n\u003cp\u003eTo monitor the change in node script changes, there are multiple options. To name a few,\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.npmjs.com/package/nodemon\"\u003enodemon\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.npmjs.com/package/supervisor\"\u003esupervisor\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.npmjs.com/package/lite-server\"\u003elite-server\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eI will use \u003ccode\u003enodemon\u003c/code\u003e since it lets me add only 3 characters (yes, I am lazy… but check out other commands that suits your needs).\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"watching-node-file-change\" href=\"#watching-node-file-change\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Watching node file change\n\u003c/h3\u003e\n\n\u003cp\u003eAll you need to do is to replace \u003ccode\u003enode\u003c/code\u003e with \u003ccode\u003enodemon\u003c/code\u003e within \u003ccode\u003econcurrently\u003c/code\u003e call.\u003c/p\u003e\n\n\u003cp\u003eSo let’s install \u003ccode\u003enodemon\u003c/code\u003e first (I am installing it globally again to test in command window).\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eNow the command becomes\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eYou can see that \u003ccode\u003enodemon\u003c/code\u003e starts monitoring and runs \u003ccode\u003ereact-scripts\u003c/code\u003e to start webpack dev server.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eIf you refresh the browser after making a change in the backend, the page will reflect the update.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"saving-private-ryan-keystrokes\" href=\"#saving-private-ryan-keystrokes\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Saving Private Ryan Keystrokes\n\u003c/h3\u003e\n\n\u003cp\u003eNow let’s get lazier and add the \u003ccode\u003econcurrent\u003c/code\u003e command to the “package.json” under express project root as \u003ccode\u003estartall\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e(You can use a single quote around \u003ccode\u003econcurrently\u003c/code\u003e in Mac/Linux not to escape double quotes but it won’t work on Windows. That was the case for ReactJS.org website so I had made a \u003ca href=\"https://github.com/reactjs/reactjs.org/pull/166\"\u003ePR\u003c/a\u003e to make it work on Windows).\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eNow you can run \u003ccode\u003econcurrently\u003c/code\u003e as shown below.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Parting Words\n\u003c/h3\u003e\n\n\u003cp\u003eI’ve blabbered a lot but it’s basically a two-step process.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eInstall concurrently \u0026amp; nodemon: \u003ccode\u003enpm i concurrently --dev \u0026amp;\u0026amp; npm i nodemon --only=dev\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eStart servers using \u003ccode\u003econcurrently\u003c/code\u003e by adding the \u003ccode\u003econcurrently\u003c/code\u003e command to package.json: \u003ccode\u003enpm run startall\u003c/code\u003e or \u003ccode\u003eyarn startall\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eI hope these two \u003cstrong\u003eextra\u003c/strong\u003e  steps save you time and money.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/11/12/tips-running-react-page-node-backend/\"\u003eTips on running React page with Node backend\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Tips on running React page with Node backend\npublished: false\ntags: Blog Entry,Problem Solving,Programming,backend\ncanonical_url: https://www.slightedgecoder.com/2017/11/12/tips-running-react-page-node-backend/\n---\n\nAs I was learning React, I’ve run into a situation where I needed to use node as a backend. I found this wonderful article [Create React App with an Express Backend](https://dev.to/dceddia/create-react-app-with-an-express-backend-d1m-temp-slug-462810) by Dave Ceddia.\n\nBut debugging required opening two command windows; One for node server, another for webpack dev server.\n\n- SET PORT=3001 \u0026\u0026 node bin/www\n- SET PORT=3000 \u0026\u0026 yarn start\n\nCan we do better?\n\n### TL;DR;\n\n\u003e Use `concurrently` \u0026 `nodemon`\n\n### Prereq or not…\n\nPlease read [Create React App with an Express Backend](https://dev.to/dceddia/create-react-app-with-an-express-backend-d1m-temp-slug-462810) first on how to set up react page with node backend.\n\n### Problem\n\nWhen you chain commands together with `\u0026\u0026` or `\u0026` (in Mac/Linux), command on the right-hand side doesn’t execute until the left-hand side finishes.\n\nLet’s run following code in a command window.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n[Node CLI](https://nodejs.org/api/cli.html) (`node bin/www`)doesn’t return until interrupted thus `SET PORT=3000 \u0026\u0026 yarn start` doesn’t get a chance to run.\n\nWe need a way to run both `node` and `yarn` “concurrently”.\n\n### Running node server \u0026 Webpack dev server “Concurrently”\n\nThis is where [concurrently](https://www.npmjs.com/package/concurrently) command comes into play. The NPM page describes the functionality as,\n\n\u003e Run multiple commands concurrently\n\nNow let’s install “concurrently” globally and locally for `react-backend` site (not under “/client” but in the express project).\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n**Note** : I installed it globally as well to run the command before adding it to “package.json” file.\n\n`concurrently` accepts a variable number of arguments in quotes separated by space.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nIn our case, we want to run node \u0026 webpack dev server, so the command to run looks like following.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nThe command line runs the node server and starts webpack dev server as shown below.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nAnd if the `react-scripts` ran successfully as shown above, a browser will open and display the react page.\n\n### Another problem\n\nRefreshing the browser after updating a node file would not reflect the change you made as shown below.\n\n\u003ciframe type=\"text/html\" width=\"1170\" height=\"689\" src=\"https://www.youtube.com/embed/fpe5E-OdZb4?version=3\u0026amp;rel=1\u0026amp;fs=1\u0026amp;autohide=2\u0026amp;showsearch=0\u0026amp;showinfo=1\u0026amp;iv_load_policy=1\u0026amp;wmode=transparent\" allowfullscreen=\"true\" style=\"border:0;\"\u003e\u003c/iframe\u003e\n\nTo monitor the change in node script changes, there are multiple options. To name a few,\n\n- [nodemon](https://www.npmjs.com/package/nodemon)\n- [supervisor](https://www.npmjs.com/package/supervisor)\n- [lite-server](https://www.npmjs.com/package/lite-server)\n\nI will use `nodemon` since it lets me add only 3 characters (yes, I am lazy… but check out other commands that suits your needs).\n\n### Watching node file change\n\nAll you need to do is to replace `node` with `nodemon` within `concurrently` call.\n\nSo let’s install `nodemon` first (I am installing it globally again to test in command window).\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nNow the command becomes\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nYou can see that `nodemon` starts monitoring and runs `react-scripts` to start webpack dev server.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nIf you refresh the browser after making a change in the backend, the page will reflect the update.\n\n\u003ciframe type=\"text/html\" width=\"1170\" height=\"689\" src=\"https://www.youtube.com/embed/Avqr8-8KCsM?version=3\u0026amp;rel=1\u0026amp;fs=1\u0026amp;autohide=2\u0026amp;showsearch=0\u0026amp;showinfo=1\u0026amp;iv_load_policy=1\u0026amp;wmode=transparent\" allowfullscreen=\"true\" style=\"border:0;\"\u003e\u003c/iframe\u003e\n\n### Saving Private Ryan Keystrokes\n\nNow let’s get lazier and add the `concurrent` command to the “package.json” under express project root as `startall`.\n\n(You can use a single quote around `concurrently` in Mac/Linux not to escape double quotes but it won’t work on Windows. That was the case for ReactJS.org website so I had made a [PR](https://github.com/reactjs/reactjs.org/pull/166) to make it work on Windows).\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nNow you can run `concurrently` as shown below.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n### Parting Words\n\nI’ve blabbered a lot but it’s basically a two-step process.\n\n1. Install concurrently \u0026 nodemon: `npm i concurrently --dev \u0026\u0026 npm i nodemon --only=dev`\n2. Start servers using `concurrently` by adding the `concurrently` command to package.json: `npm run startall` or `yarn startall`\n\nI hope these two **extra**  steps save you time and money.\n\nThe post [Tips on running React page with Node backend](https://www.slightedgecoder.com/2017/11/12/tips-running-react-page-node-backend/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/11/12/tips-running-react-page-node-backend/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/11/12/tips-running-react-page-node-backend/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, problemsolving, programming, backend",
    "path": "/dance2die/tips-on-running-react-page-with-node-backend-3fg6-temp-slug-6010876",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-11-12T20:40:32.000Z"
  },
  {
    "title": "Searching for Books in Command Line Interface (CLI)",
    "slug": "searching-for-books-in-command-line-interface-cli-2f42-temp-slug-2709291",
    "created_at": "2018-07-07T01:41:56.347Z",
    "main_image": null,
    "description": "\n\nFeatured Image Credit -Photo by Redd Angelo on Unsplash\n\n\nI’d like to show you ...",
    "published": false,
    "published_at": "2017-11-26T22:39:11.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003csmall\u003eFeatured Image Credit -Photo by \u003ca href=\"https://unsplash.com/photos/9o8YdYGTT64?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eRedd Angelo\u003c/a\u003e on \u003ca href=\"https://unsplash.com/?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\n\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eI’d like to show you a Node CLI (Command Line Interface), \u003ca href=\"https://www.npmjs.com/package/google-book-shell\"\u003eGoogle-Book-Shell\u003c/a\u003e I created from a \u003ca href=\"https://dev.to/dance2die/throwaway-code-dont-recycle-throw-it-away-104e-temp-slug-6196383\"\u003ethrowaway code\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eHere are the three things you can do with it.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eYou can search for a book from Google Books.\u003c/li\u003e\n\u003cli\u003eThe searched book detail can be viewed.\u003c/li\u003e\n\u003cli\u003eOpen the book on Google Books or Amazon page in a browser.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"background\" href=\"#background\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Background\n\u003c/h3\u003e\n\n\u003cp\u003eI am a voracious reader being a somewhat bibliophile. Searching for books online was slow due to an overhead of browser too slow. At the time, I was learning how to create a Node CLI application as well as ES6 syntax. I just decided to write a program on a whim.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"googlebookshell-in-action\" href=\"#googlebookshell-in-action\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Google-Book-Shell in Action\n\u003c/h3\u003e\n\n\u003cp\u003eOK, I’ve rambled on too much. Here is the CLI in action (It’s a GIF but click to go to YouTube video).\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.youtube.com/watch?v=XK4NgwJqw0s\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--8SqksYBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/i.imgur.com/YtI0HA0.gif%3Fresize%3D800%252C562%26ssl%3D1\" alt=\"\" title=\"Google Book Shell Demo Video\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eHere is the basic workflow.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eSearch for a book with a \u003ca href=\"https://github.com/dance2die/google-book-shell/blob/master/README.md#1-search\"\u003esearch\u003c/a\u003e command.\u003c/li\u003e\n\u003cli\u003eView the detail of a book with a \u003ca href=\"https://github.com/dance2die/google-book-shell/blob/master/README.md#3-view\"\u003eview\u003c/a\u003e command.\u003c/li\u003e\n\u003cli\u003eOptionally open the link in a browser (to Google Books or Amazon website) with an \u003ca href=\"https://github.com/dance2die/google-book-shell/blob/master/README.md#2-open\"\u003eopen\u003c/a\u003e command.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eHere is the \u003ca href=\"https://github.com/dance2die/google-book-shell/blob/master/README.md\"\u003eREADME\u003c/a\u003e, which covers how to install it and use it more thoroughly.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"notes-on-open-command\" href=\"#notes-on-open-command\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Notes on Open command\n\u003c/h3\u003e\n\n\u003cp\u003eWhen you open an Amazon page, the CLI queries Amazon’s \u003ca href=\"http://docs.aws.amazon.com/AWSECommerceService/latest/DG/Welcome.html\"\u003eProduct Advertising API\u003c/a\u003e (PAA) via Azure Functions. I didn’t want to expose my Amazon Product Key and Secret so I moved the PAA query functionality to Azure Functions (after failed attempt to use AWS Lambda…). Azure Functions sleeps after 5 minutes of inactivity so opening an Amazon page for the first time could take 10~30 seconds unfortunately for I have used a pay-per-use plan.\u003c/p\u003e\n\n\u003cp\u003ePAA requires a developer to sign up for Amazon Affiliate Program. Thus the Amazon link returned adds a finger print with my affiliate info. I’ve added a flag(\u003ccode\u003e--strip-amazon-affiliate\u003c/code\u003e or \u003ccode\u003e-s\u003c/code\u003e) in \u003ccode\u003eopen\u003c/code\u003e command to strip it out in case you do not want that info in the link.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e(Please don’t be mean to me \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--6P1koqO9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f61e.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--6P1koqO9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f61e.png\" alt=\"😞\"\u003e\u003c/a\u003e )\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Parting Words\n\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.npmjs.com/package/google-book-shell\"\u003eGoogle-Book-Shell\u003c/a\u003e will make your book searching easier. If you find any issues or suggestions, please leave a feedback on the GitHub \u003ca href=\"https://github.com/dance2die/google-book-shell/issues/new\"\u003enew issues page\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eI will write another entry on technical challenges I had as well as the architecture (and lack thereof).\u003c/p\u003e\n\n\u003cp\u003eWARNING: By the way, the source is very sloppy since it was built from a throwaway code while learning ES6 \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--PSgrvkwe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f60a.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--PSgrvkwe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f60a.png\" alt=\"😊\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/11/26/searching-books-command-line-interface-cli/\"\u003eSearching for Books in Command Line Interface (CLI)\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Searching for Books in Command Line Interface (CLI)\npublished: false\ntags: Announcement,Blog Entry,Programming,announcement\ncanonical_url: https://www.slightedgecoder.com/2017/11/26/searching-books-command-line-interface-cli/\n---\n\n\u003csmall\u003eFeatured Image Credit -Photo by \u003ca href=\"https://unsplash.com/photos/9o8YdYGTT64?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eRedd Angelo\u003c/a\u003e on \u003ca href=\"https://unsplash.com/?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003cbr\u003e\n\u003c/small\u003e\n\nI’d like to show you a Node CLI (Command Line Interface), [Google-Book-Shell](https://www.npmjs.com/package/google-book-shell) I created from a [throwaway code](https://dev.to/dance2die/throwaway-code-dont-recycle-throw-it-away-104e-temp-slug-6196383).\n\nHere are the three things you can do with it.\n\n1. You can search for a book from Google Books.\n2. The searched book detail can be viewed.\n3. Open the book on Google Books or Amazon page in a browser.\n\n### Background\n\nI am a voracious reader being a somewhat bibliophile. Searching for books online was slow due to an overhead of browser too slow. At the time, I was learning how to create a Node CLI application as well as ES6 syntax. I just decided to write a program on a whim.\n\n### Google-Book-Shell in Action\n\nOK, I’ve rambled on too much. Here is the CLI in action (It’s a GIF but click to go to YouTube video).\n\n[![](https://i2.wp.com/i.imgur.com/YtI0HA0.gif?resize=800%2C562\u0026ssl=1 \"Google Book Shell Demo Video\")](https://www.youtube.com/watch?v=XK4NgwJqw0s)\n\nHere is the basic workflow.\n\n- Search for a book with a [search](https://github.com/dance2die/google-book-shell/blob/master/README.md#1-search) command.\n- View the detail of a book with a [view](https://github.com/dance2die/google-book-shell/blob/master/README.md#3-view) command.\n- Optionally open the link in a browser (to Google Books or Amazon website) with an [open](https://github.com/dance2die/google-book-shell/blob/master/README.md#2-open) command.\n\nHere is the [README](https://github.com/dance2die/google-book-shell/blob/master/README.md), which covers how to install it and use it more thoroughly.\n\n### Notes on Open command\n\nWhen you open an Amazon page, the CLI queries Amazon’s [Product Advertising API](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/Welcome.html) (PAA) via Azure Functions. I didn’t want to expose my Amazon Product Key and Secret so I moved the PAA query functionality to Azure Functions (after failed attempt to use AWS Lambda…). Azure Functions sleeps after 5 minutes of inactivity so opening an Amazon page for the first time could take 10~30 seconds unfortunately for I have used a pay-per-use plan.\n\nPAA requires a developer to sign up for Amazon Affiliate Program. Thus the Amazon link returned adds a finger print with my affiliate info. I’ve added a flag(`--strip-amazon-affiliate` or `-s`) in `open` command to strip it out in case you do not want that info in the link.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n(Please don’t be mean to me ![😞](https://s.w.org/images/core/emoji/2.4/72x72/1f61e.png) )\n\n### Parting Words\n\n[Google-Book-Shell](https://www.npmjs.com/package/google-book-shell) will make your book searching easier. If you find any issues or suggestions, please leave a feedback on the GitHub [new issues page](https://github.com/dance2die/google-book-shell/issues/new).\n\nI will write another entry on technical challenges I had as well as the architecture (and lack thereof).\n\nWARNING: By the way, the source is very sloppy since it was built from a throwaway code while learning ES6 ![😊](https://s.w.org/images/core/emoji/2.4/72x72/1f60a.png)\n\nThe post [Searching for Books in Command Line Interface (CLI)](https://www.slightedgecoder.com/2017/11/26/searching-books-command-line-interface-cli/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/11/26/searching-books-command-line-interface-cli/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/11/26/searching-books-command-line-interface-cli/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "announcement, blogentry, programming",
    "path": "/dance2die/searching-for-books-in-command-line-interface-cli-2f42-temp-slug-2709291",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-11-26T22:39:11.000Z"
  },
  {
    "title": "Loading React Components Dynamically on Demand",
    "slug": "loading-react-components-dynamically-on-demand-1a56",
    "created_at": "2018-07-07T01:41:57.477Z",
    "main_image": null,
    "description": "\n\nI was looking for implementations for a Factory Pattern in JavaScript to get ri...",
    "published": true,
    "published_at": "2017-12-04T02:37:32.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI was looking for implementations for a \u003ca href=\"https://en.wikipedia.org/wiki/Factory_method_pattern\"\u003eFactory Pattern\u003c/a\u003e in JavaScript to get rid of a \u003ccode\u003eswitch\u003c/code\u003e statement when displaying React components.\u003c/p\u003e\n\n\u003cp\u003eThen I ran into a dynamic \u003ca href=\"https://hospodarets.com/native-ecmascript-modules-dynamic-import\"\u003eimport()\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eI will show you 3 ways to use \u003ccode\u003eimport()\u003c/code\u003e to dynamically load React Components.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ca href=\"#case-1-loading-react-components-dynamically\"\u003eLoading React Components Dynamically\u003c/a\u003e – \u003ca href=\"https://epic-chandrasekhar-a99744.netlify.com/\"\u003eDemo\u003c/a\u003e – \u003ca href=\"https://github.com/dance2die/Demo.React.ReactDynamicComponent\"\u003eSource Code\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#case-2-handling-different-data-types\"\u003eHandling Different Data Types\u003c/a\u003e – \u003ca href=\"https://pedantic-goldstine-aff0e1.netlify.com/\"\u003eDemo\u003c/a\u003e – \u003ca href=\"https://github.com/dance2die/Demo.React.ReactLoadOnDemand\"\u003eSource Code\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#case-3-loading-components-on-demand\"\u003eLoading Components on Demand\u003c/a\u003e – \u003ca href=\"https://hardcore-fermi-db1121.netlify.com/\"\u003eDemo\u003c/a\u003e – \u003ca href=\"https://github.com/dance2die/Demo.React.ReactLoadOnDemand\"\u003eSource Code\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eLet’s dive in 🏊~\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"case-1-loading-react-components-dynamically\" href=\"#case-1-loading-react-components-dynamically\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Case 1 – Loading React Components Dynamically\n\u003c/h3\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"problem\" href=\"#problem\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cstrong\u003eProblem\u003c/strong\u003e\n\u003c/h4\u003e\n\n\u003cp\u003eSuppose that you want to display differently for each event in an events array.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/630c7839758da7e0eb6dbd6c662e83e7.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eWithin \u003ccode\u003eIfApp.render()\u003c/code\u003e, one would use a \u003ccode\u003eif/switch\u003c/code\u003e statement to check what type of event it is and create a component as shown below.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/d0d80c06611346270116072d600f81ec.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eThere are \u003cstrong\u003etwo\u003c/strong\u003e issues with this approach.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eit quickly becomes a maintenance nightmare as new event gets created.\u003c/li\u003e\n\u003cli\u003eWe are importing components even if we don’t need it\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"alternative-approach\" href=\"#alternative-approach\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Alternative Approach\n\u003c/h4\u003e\n\n\u003cp\u003eWe can mitigate the problem if\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWe can import dynamically only the components we need, and\u003c/li\u003e\n\u003cli\u003ealso make it easier to maintain by getting rid of switch statement.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eI will use \u003ccode\u003eimport()\u003c/code\u003e statement to dynamically load event component (Please refer to this \u003ca href=\"https://hospodarets.com/native-ecmascript-modules-dynamic-import\"\u003eexcellent article\u003c/a\u003e by \u003ca href=\"https://twitter.com/malyw\"\u003eSerg Hospodarets\u003c/a\u003e for  \u003ccode\u003eimport()\u003c/code\u003e ).\u003c/p\u003e\n\n\u003cp\u003eHere is the demo code structure.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--YZwSTWL8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/React-Dynamic-Component-Code-Structure-Code_2017-12-03_17-40-48.png%3Fresize%3D210%252C288%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--YZwSTWL8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/React-Dynamic-Component-Code-Structure-Code_2017-12-03_17-40-48.png%3Fresize%3D210%252C288%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eHere is the method to add a component by type name (“PushEvent”, “ReleaseEvent”, and “StatusEvent”).\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/8ee075b26528ed72f61ffaecec891ea1.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eGiven a type name, \u003ccode\u003eaddComponent()\u003c/code\u003e imports a component file and adds it to \u003ccode\u003ethis.state.components\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eAnd also, if an unknown type is passed, it displays an error message in console.\u003c/p\u003e\n\n\u003cp\u003eAnd the method is called for each type within \u003ccode\u003ecomponentDidMount()\u003c/code\u003e.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/d33f5dee1d59b04c87411c9e20551559.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eWe render imported components as shown below.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/38d1a142aac8cb42770cc1589d2fb8cc.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003cem\u003eNote that you need to have a unique key for each \u003ccode\u003eComponent\u003c/code\u003e object instance, so I used \u003ca href=\"https://www.npmjs.com/package/shortid\"\u003eshortid\u003c/a\u003e to generate unique key for each component.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eThe full source for \u003ccode\u003eApp\u003c/code\u003e component is shown below.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/95259efdf4f883f1ceae62ca1346734a.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eNow the \u003ccode\u003eswitch\u003c/code\u003e statement within \u003ccode\u003erender()\u003c/code\u003e is gone and \u003ccode\u003eApp\u003c/code\u003e doesn’t need to change when a new type is added (refer to \u003ca href=\"https://en.wikipedia.org/wiki/Open/closed_principle\"\u003eOpen-Close Principle\u003c/a\u003e). When a new type is added, we just need to create a new component under \u003ccode\u003ecomponents\u003c/code\u003e folder.\u003c/p\u003e\n\n\u003cp\u003eAnd also, scripts get loaded dynamically as shown in the video below.\u003c/p\u003e\n\n\u003cp\u003e\u003ciframe width=\"710\" height=\"399\" src=\"https://www.youtube.com/embed/woficvbpOs0\" allowfullscreen\u003e \u003c/iframe\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://epic-chandrasekhar-a99744.netlify.com/\"\u003eLive Demo\u003c/a\u003e on Netlify\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"case-2-handling-different-data-types\" href=\"#case-2-handling-different-data-types\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Case 2 – Handling Different Data Types\n\u003c/h3\u003e\n\n\u003cp\u003eLet’s take a look at more advanced scenario. Now each type is associated with data having different schema.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/d086b0012e198bfb3bb5ac9062a0bb39.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eIt’s from an actual response from a public \u003ca href=\"https://api.github.com/users/codingblocks/events/public\"\u003eGitHub API call\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThere are \u003ca href=\"https://developer.github.com/v3/activity/events/types/\"\u003e37 types of events\u003c/a\u003e, which one having slightly different response schema.\u003c/p\u003e\n\n\u003cp\u003eAs it was the case in the Case 1, we could simply create an GitHub event handler component and let each one deal with different type of payload data.\u003c/p\u003e\n\n\u003cp\u003eFirst, the code structure looks like this.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--lmC6tnyH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/ReactFactory-Tree-Structure-Code_2017-12-03_19-44-12.png%3Fresize%3D242%252C309%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--lmC6tnyH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/ReactFactory-Tree-Structure-Code_2017-12-03_19-44-12.png%3Fresize%3D242%252C309%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eWe pass the JSON response to \u003ccode\u003eGitHubEventApp\u003c/code\u003e like following.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/8fc8e6e8d0b85392bfd6e8bf8d9bbbb5.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eThen we load components for each event in \u003ccode\u003ecomponentDidMount()\u003c/code\u003e.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/bb657a5c14121429cabbeee4c922860d.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eTwo things are worth mentioning here;\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eI am instantiating \u003ccode\u003eComponent\u003c/code\u003e within \u003ccode\u003ethis.setState\u003c/code\u003e. It is because to make component sorting easier later in \u003ccode\u003erender()\u003c/code\u003e(I’d appreciate it if anyone let me know instantiating here instead of in \u003ccode\u003erender()\u003c/code\u003e would cause a performance issue or not).\u003c/li\u003e\n\u003cli\u003eI am passing all event properties while instantiating a component (Each dynamically imported components can pick and choose props to use).\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/b5c44b3cca537caebe635ae32c66502f.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eNow let’s render the result in descending order (higher the ID, the later the event was created).\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/87c20876004c92c90bb5e536f90d4873.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eHere is the glorious result  🎉🎉🎉 (Please pardon the appearance…)\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--eSaAN3Fo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/firefox_2017-12-03_19-50-42.png%3Fresize%3D778%252C565%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--eSaAN3Fo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/firefox_2017-12-03_19-50-42.png%3Fresize%3D778%252C565%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eYou can see that each event are rendered differently.\u003c/p\u003e\n\n\u003cp\u003eComponent codes are listed here for the sake of completeness.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://pedantic-goldstine-aff0e1.netlify.com/\"\u003eLive Demo\u003c/a\u003e on Netlify\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eForkEvent.js\u003c/code\u003e\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/8b2d9681ce05983cddaa5b6e8fbcb3d5.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003eNullEvent.js\u003c/code\u003e\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/846e44d308a5455adf5df529f0f2b597.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003ePushEvent.js\u003c/code\u003e\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/d66860879a25f39701c663d80035e1a0.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003eWatchEvent.js\u003c/code\u003e\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/4fcdd430a41103986adfc616ce666f31.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"case-3-loading-components-on-demand\" href=\"#case-3-loading-components-on-demand\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Case 3 – Loading Components on Demand\n\u003c/h3\u003e\n\n\u003cp\u003eThe last case is when we want to display different views for the same input.\u003c/p\u003e\n\n\u003cp\u003eSuppose that given data, you can show it as a tabular form or as a graph.\u003c/p\u003e\n\n\u003cp\u003eCode structure looks like this.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--7COvF3Kc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/React-Load-On-Demand-Tree-Structure-Code_2017-12-03_20-01-21.jpg%3Fresize%3D195%252C312%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--7COvF3Kc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/React-Load-On-Demand-Tree-Structure-Code_2017-12-03_20-01-21.jpg%3Fresize%3D195%252C312%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eHere is the shared data we want to display in \u003cstrong\u003etabular\u003c/strong\u003e and/or \u003cstrong\u003egraph\u003c/strong\u003e representations.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/b5662196399a477f53e8f8c18d4ed76a.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eHere is how the result looks before digging into the implementation (Please pardon my CSS skills \u003cem\u003eagain\u003c/em\u003e).\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://hardcore-fermi-db1121.netlify.com/\"\u003eLive Demo\u003c/a\u003e on Netlify\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eApp\u003c/code\u003e component initializes state with following properties.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/b97b10aedb4760cde63b979069cdebd4.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ccode\u003eloadedComponents\u003c/code\u003e tracks what components have been added as not to load more than once.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ecomponents\u003c/code\u003e holds view components (tabular or graph).\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003ccode\u003erender()\u003c/code\u003e simply has 3 buttons and handles the click event.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/61360a0af8de638275743027dc979408.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eEach \u003ccode\u003eonClick\u003c/code\u003e events handlers adds a different view.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/9ad874a3950cfdc0412116d242db0094.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003eaddView\u003c/code\u003e imports a new view component by view name.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/38b39a57eecb9efd86ec8220bda5081b.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eHere are the views components.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eTableView.js\u003c/code\u003e – Formats data using HTML table.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/415c53ec7475ebb066373983c93ccc1e.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003eGraphView.js\u003c/code\u003e – Formats data graphically.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/bdce8b2e3e0948235d691fcebdbbb3ab.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003eNullView.js\u003c/code\u003e – Does nothing.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/1d2dae335321abda5d426dd0b52a17b2.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Parting Words\n\u003c/h3\u003e\n\n\u003cp\u003eI’ve discussed three cases.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eLoading React Components Dynamically – \u003ca href=\"https://epic-chandrasekhar-a99744.netlify.com/\"\u003eDemo\u003c/a\u003e – \u003ca href=\"https://github.com/dance2die/Demo.React.ReactDynamicComponent\"\u003eSource Code\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eHandling Different Data Types – \u003ca href=\"https://pedantic-goldstine-aff0e1.netlify.com/\"\u003eDemo\u003c/a\u003e – \u003ca href=\"https://github.com/dance2die/Demo.React.ReactLoadOnDemand\"\u003eSource Code\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eLoading Components on Demand – \u003ca href=\"https://hardcore-fermi-db1121.netlify.com/\"\u003eDemo\u003c/a\u003e – \u003ca href=\"https://github.com/dance2die/Demo.React.ReactLoadOnDemand\"\u003eSource Code\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eI’d appreciate it if you can point out any optimizations or improvements I can make.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/12/03/loading-react-components-dynamically-demand/\"\u003eLoading React Components Dynamically on Demand\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: Loading React Components Dynamically on Demand\r\npublished: true\r\ntags: react, JavaScript\r\ncanonical_url: https://www.slightedgecoder.com/2017/12/03/loading-react-components-dynamically-demand/\r\n---\r\n\r\nI was looking for implementations for a [Factory Pattern](https://en.wikipedia.org/wiki/Factory_method_pattern) in JavaScript to get rid of a `switch` statement when displaying React components.\r\n\r\nThen I ran into a dynamic [import()](https://hospodarets.com/native-ecmascript-modules-dynamic-import).\r\n\r\nI will show you 3 ways to use `import()` to dynamically load React Components.\r\n\r\n1. [Loading React Components Dynamically](#case-1-loading-react-components-dynamically) – [Demo](https://epic-chandrasekhar-a99744.netlify.com/) – [Source Code](https://github.com/dance2die/Demo.React.ReactDynamicComponent)\r\n2. [Handling Different Data Types](#case-2-handling-different-data-types) – [Demo](https://pedantic-goldstine-aff0e1.netlify.com/) – [Source Code](https://github.com/dance2die/Demo.React.ReactLoadOnDemand)\r\n3. [Loading Components on Demand](#case-3-loading-components-on-demand) – [Demo](https://hardcore-fermi-db1121.netlify.com/) – [Source Code](https://github.com/dance2die/Demo.React.ReactLoadOnDemand)\r\n\r\nLet’s dive in 🏊~\r\n\r\n### Case 1 – Loading React Components Dynamically\r\n\r\n#### **Problem**\r\n\r\nSuppose that you want to display differently for each event in an events array.\r\n\r\n{% gist https://gist.github.com/dance2die/630c7839758da7e0eb6dbd6c662e83e7 %}\r\n\r\nWithin `IfApp.render()`, one would use a `if/switch` statement to check what type of event it is and create a component as shown below.\r\n\r\n{% gist https://gist.github.com/dance2die/d0d80c06611346270116072d600f81ec %}\r\n\r\nThere are **two** issues with this approach.\r\n\r\n1. it quickly becomes a maintenance nightmare as new event gets created.\r\n2. We are importing components even if we don’t need it\r\n\r\n#### Alternative Approach\r\n\r\nWe can mitigate the problem if\r\n\r\n1. We can import dynamically only the components we need, and\r\n2. also make it easier to maintain by getting rid of switch statement.\r\n\r\nI will use `import()` statement to dynamically load event component (Please refer to this [excellent article](https://hospodarets.com/native-ecmascript-modules-dynamic-import) by [Serg Hospodarets](https://twitter.com/malyw) for  `import()` ).\r\n\r\nHere is the demo code structure.\r\n\r\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/React-Dynamic-Component-Code-Structure-Code_2017-12-03_17-40-48.png?resize=210%2C288\u0026ssl=1)\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n### \r\n\r\n### \r\n\r\n### \r\n\r\n### \r\n\r\nHere is the method to add a component by type name (“PushEvent”, “ReleaseEvent”, and “StatusEvent”).\r\n\r\n{% gist https://gist.github.com/dance2die/8ee075b26528ed72f61ffaecec891ea1 %}\r\n\r\nGiven a type name, `addComponent()` imports a component file and adds it to `this.state.components`.\r\n\r\nAnd also, if an unknown type is passed, it displays an error message in console.\r\n\r\nAnd the method is called for each type within `componentDidMount()`.\r\n\r\n{% gist https://gist.github.com/dance2die/d33f5dee1d59b04c87411c9e20551559 %}\r\n\r\nWe render imported components as shown below.\r\n\r\n{% gist https://gist.github.com/dance2die/38d1a142aac8cb42770cc1589d2fb8cc %}\r\n\r\n_Note that you need to have a unique key for each `Component` object instance, so I used [shortid](https://www.npmjs.com/package/shortid) to generate unique key for each component._\r\n\r\nThe full source for `App` component is shown below.\r\n\r\n{% gist https://gist.github.com/dance2die/95259efdf4f883f1ceae62ca1346734a %}\r\n\r\nNow the `switch` statement within `render()` is gone and `App` doesn’t need to change when a new type is added (refer to [Open-Close Principle](https://en.wikipedia.org/wiki/Open/closed_principle)). When a new type is added, we just need to create a new component under `components` folder.\r\n\r\nAnd also, scripts get loaded dynamically as shown in the video below.\r\n\r\n{% youtube woficvbpOs0 %}\r\n\r\n[Live Demo](https://epic-chandrasekhar-a99744.netlify.com/) on Netlify\r\n\r\n### \r\n\r\n### Case 2 – Handling Different Data Types\r\n\r\nLet’s take a look at more advanced scenario. Now each type is associated with data having different schema.\r\n\r\n{% gist https://gist.github.com/dance2die/d086b0012e198bfb3bb5ac9062a0bb39 %}\r\n\r\nIt’s from an actual response from a public [GitHub API call](https://api.github.com/users/codingblocks/events/public).\r\n\r\nThere are [37 types of events](https://developer.github.com/v3/activity/events/types/), which one having slightly different response schema.\r\n\r\nAs it was the case in the Case 1, we could simply create an GitHub event handler component and let each one deal with different type of payload data.\r\n\r\nFirst, the code structure looks like this.\r\n\r\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/ReactFactory-Tree-Structure-Code_2017-12-03_19-44-12.png?resize=242%2C309\u0026ssl=1)\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n### \r\n\r\n### \r\n\r\n### \r\n\r\n### \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nWe pass the JSON response to `GitHubEventApp` like following.\r\n\r\n{% gist https://gist.github.com/dance2die/8fc8e6e8d0b85392bfd6e8bf8d9bbbb5 %}\r\n\r\nThen we load components for each event in `componentDidMount()`.\r\n\r\n{% gist https://gist.github.com/dance2die/bb657a5c14121429cabbeee4c922860d %}\r\n\r\nTwo things are worth mentioning here;\r\n\r\n1. I am instantiating `Component` within `this.setState`. It is because to make component sorting easier later in `render()`(I’d appreciate it if anyone let me know instantiating here instead of in `render()` would cause a performance issue or not).\r\n2. I am passing all event properties while instantiating a component (Each dynamically imported components can pick and choose props to use).\r\n{% gist https://gist.github.com/dance2die/b5c44b3cca537caebe635ae32c66502f %}\r\n\r\nNow let’s render the result in descending order (higher the ID, the later the event was created).\r\n\r\n{% gist https://gist.github.com/dance2die/87c20876004c92c90bb5e536f90d4873 %}\r\n\r\nHere is the glorious result  🎉🎉🎉 (Please pardon the appearance…)\r\n\r\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/firefox_2017-12-03_19-50-42.png?resize=778%2C565\u0026ssl=1)\r\n\r\nYou can see that each event are rendered differently.\r\n\r\nComponent codes are listed here for the sake of completeness.\r\n\r\n[Live Demo](https://pedantic-goldstine-aff0e1.netlify.com/) on Netlify\r\n\r\n`ForkEvent.js`\r\n\r\n{% gist https://gist.github.com/dance2die/8b2d9681ce05983cddaa5b6e8fbcb3d5 %}\r\n\r\n`NullEvent.js`\r\n\r\n{% gist https://gist.github.com/dance2die/846e44d308a5455adf5df529f0f2b597 %}\r\n\r\n`PushEvent.js`\r\n\r\n{% gist https://gist.github.com/dance2die/d66860879a25f39701c663d80035e1a0 %}\r\n\r\n`WatchEvent.js`\r\n\r\n{% gist https://gist.github.com/dance2die/4fcdd430a41103986adfc616ce666f31 %}\r\n\r\n \r\n\r\n### Case 3 – Loading Components on Demand\r\n\r\nThe last case is when we want to display different views for the same input.\r\n\r\nSuppose that given data, you can show it as a tabular form or as a graph.\r\n\r\nCode structure looks like this.\r\n\r\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/React-Load-On-Demand-Tree-Structure-Code_2017-12-03_20-01-21.jpg?resize=195%2C312\u0026ssl=1)\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nHere is the shared data we want to display in **tabular** and/or **graph** representations.\r\n\r\n{% gist https://gist.github.com/dance2die/b5662196399a477f53e8f8c18d4ed76a %}\r\n\r\nHere is how the result looks before digging into the implementation (Please pardon my CSS skills _again_).\r\n\r\n\u003ciframe type=\"text/html\" width=\"1170\" height=\"689\" src=\"https://www.youtube.com/embed/aereCCBwn1o?version=3\u0026amp;rel=1\u0026amp;fs=1\u0026amp;autohide=2\u0026amp;showsearch=0\u0026amp;showinfo=1\u0026amp;iv_load_policy=1\u0026amp;wmode=transparent\" allowfullscreen=\"true\" style=\"border:0;\"\u003e\u003c/iframe\u003e\r\n\r\n \r\n\r\n[Live Demo](https://hardcore-fermi-db1121.netlify.com/) on Netlify\r\n\r\n`App` component initializes state with following properties.\r\n\r\n{% gist https://gist.github.com/dance2die/b97b10aedb4760cde63b979069cdebd4 %}\r\n\r\n1. `loadedComponents` tracks what components have been added as not to load more than once.\r\n2. `components` holds view components (tabular or graph).\r\n\r\n`render()` simply has 3 buttons and handles the click event.\r\n\r\n{% gist https://gist.github.com/dance2die/61360a0af8de638275743027dc979408 %}\r\n\r\nEach `onClick` events handlers adds a different view.\r\n\r\n{% gist https://gist.github.com/dance2die/9ad874a3950cfdc0412116d242db0094 %}\r\n\r\n`addView` imports a new view component by view name.\r\n\r\n{% gist https://gist.github.com/dance2die/38b39a57eecb9efd86ec8220bda5081b %}\r\n\r\nHere are the views components.\r\n\r\n`TableView.js` – Formats data using HTML table.\r\n\r\n{% gist https://gist.github.com/dance2die/415c53ec7475ebb066373983c93ccc1e %}\r\n\r\n`GraphView.js` – Formats data graphically.\r\n\r\n{% gist https://gist.github.com/dance2die/bdce8b2e3e0948235d691fcebdbbb3ab %}\r\n\r\n`NullView.js` – Does nothing.\r\n\r\n{% gist https://gist.github.com/dance2die/1d2dae335321abda5d426dd0b52a17b2 %}\r\n\r\n### Parting Words\r\n\r\nI’ve discussed three cases.\r\n\r\n1. Loading React Components Dynamically – [Demo](https://epic-chandrasekhar-a99744.netlify.com/) – [Source Code](https://github.com/dance2die/Demo.React.ReactDynamicComponent)\r\n2. Handling Different Data Types – [Demo](https://pedantic-goldstine-aff0e1.netlify.com/) – [Source Code](https://github.com/dance2die/Demo.React.ReactLoadOnDemand)\r\n3. Loading Components on Demand – [Demo](https://hardcore-fermi-db1121.netlify.com/) – [Source Code](https://github.com/dance2die/Demo.React.ReactLoadOnDemand)\r\n\r\nI’d appreciate it if you can point out any optimizations or improvements I can make.\r\n\r\nThe post [Loading React Components Dynamically on Demand](https://www.slightedgecoder.com/2017/12/03/loading-react-components-dynamically-demand/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/12/03/loading-react-components-dynamically-demand/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/12/03/loading-react-components-dynamically-demand/",
    "positive_reactions_count": 14,
    "edited_at": null,
    "crossposted_at": "2019-04-20T06:09:46.305Z",
    "language": "en",
    "cached_tag_list": "react, javascript",
    "path": "/dance2die/loading-react-components-dynamically-on-demand-1a56",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-12-04T02:37:32.000Z"
  },
  {
    "title": "Deploying Existing Create-React-App on GitHub to Netlify",
    "slug": "deploying-existing-create-react-app-on-github-to-netlify-30hb-temp-slug-9067543",
    "created_at": "2018-07-07T01:41:58.051Z",
    "main_image": null,
    "description": "\n\nFeatured Image – Photo by Artem Sapegin on Unsplash\n\nLet’s deploy a create-reac...",
    "published": false,
    "published_at": "2017-12-09T16:06:53.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003csmall\u003eFeatured Image – Photo by \u003ca href=\"https://unsplash.com/photos/b18TRXc8UPQ?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eArtem Sapegin\u003c/a\u003e on \u003ca href=\"https://unsplash.com/?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eLet’s deploy a \u003ccode\u003ecreate-react-app\u003c/code\u003e generated site on Netlify.\u003c/p\u003e\n\n\u003cp\u003eAfter signing in to Netlify, click on \u003cstrong\u003eNew Site from Git\u003c/strong\u003e on the top right.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jdGeUr0Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/Step1-new-site-from-git.jpg%3Fresize%3D1170%252C655%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jdGeUr0Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/Step1-new-site-from-git.jpg%3Fresize%3D1170%252C655%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eClick on \u003cstrong\u003eGitHub\u003c/strong\u003e button to choose a repository to deploy. It will prompt you for GitHub access.\u003c/p\u003e\n\n\u003cp\u003eYou can give Netlify only a public repo access by clicking on the checkbox below “GitHub” button.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--DzH98ekC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/Step2-Select-GitHub-and-limit-to-public-repo.jpg%3Fresize%3D1170%252C545%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--DzH98ekC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/Step2-Select-GitHub-and-limit-to-public-repo.jpg%3Fresize%3D1170%252C545%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eFilter by repo name and “pick a repository” by clicking on a repo returned.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--2RvRn6zD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/Step3-Pick-a-repository.jpg%3Fresize%3D753%252C491%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--2RvRn6zD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/Step3-Pick-a-repository.jpg%3Fresize%3D753%252C491%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eSet the basic settings for \u003ccode\u003ecreate-react-app\u003c/code\u003e site.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003cstrong\u003eBuild command\u003c/strong\u003e – \u003ccode\u003eyarn build\u003c/code\u003e or \u003ccode\u003enpm run build\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003ePublish directory\u003c/strong\u003e – \u003ccode\u003ebuild\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--4cqbOFCl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/Step4-Set-basic-settings.jpg%3Fresize%3D764%252C791%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--4cqbOFCl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/Step4-Set-basic-settings.jpg%3Fresize%3D764%252C791%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAfter clicking on the “Deploy site” button, you will be forwarded to an “Overview” page with “Site deploy in progress” message.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--LbcdVRPg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/Step5-Site-deploy-in-progress.jpg%3Fresize%3D720%252C362%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--LbcdVRPg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/Step5-Site-deploy-in-progress.jpg%3Fresize%3D720%252C362%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAfter a few moments (\u0026lt;- this is relative term….), you will see a randomly generated URL.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--SuQUYpzC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/Step5-Site-deployed.jpg%3Fresize%3D444%252C231%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--SuQUYpzC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/Step5-Site-deployed.jpg%3Fresize%3D444%252C231%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eOK, you just deployed a site on Netlify \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--uQEojgN---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f389.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--uQEojgN---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f389.png\" alt=\"🎉\"\u003e\u003c/a\u003e \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--uQEojgN---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f389.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--uQEojgN---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f389.png\" alt=\"🎉\"\u003e\u003c/a\u003e \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--uQEojgN---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f389.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--uQEojgN---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f389.png\" alt=\"🎉\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"other-resources\" href=\"#other-resources\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Other Resources\n\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"https://www.netlify.com/\"\u003eNetlify Home Page\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.netlify.com/blog/2016/07/22/deploy-react-apps-in-less-than-30-seconds/\"\u003eDeploy React Apps in less than 30 Seconds\u003c/a\u003e – This short tutorial shows how to deploy directly from command line without going through GitHub.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.netlify.com/docs/\"\u003eNetlify Official Documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/12/09/deploying-existing-create-react-app-github-netlify/\"\u003eDeploying Existing Create-React-App on GitHub to Netlify\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Deploying Existing Create-React-App on GitHub to Netlify\npublished: false\ntags: Programming,quick tip,create-react-app,frontend\ncanonical_url: https://www.slightedgecoder.com/2017/12/09/deploying-existing-create-react-app-github-netlify/\n---\n\n\u003csmall\u003eFeatured Image – Photo by \u003ca href=\"https://unsplash.com/photos/b18TRXc8UPQ?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eArtem Sapegin\u003c/a\u003e on \u003ca href=\"https://unsplash.com/?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/small\u003e\n\nLet’s deploy a `create-react-app` generated site on Netlify.\n\nAfter signing in to Netlify, click on **New Site from Git** on the top right.\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/Step1-new-site-from-git.jpg?resize=1170%2C655\u0026ssl=1)\n\nClick on **GitHub** button to choose a repository to deploy. It will prompt you for GitHub access.\n\nYou can give Netlify only a public repo access by clicking on the checkbox below “GitHub” button.\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/Step2-Select-GitHub-and-limit-to-public-repo.jpg?resize=1170%2C545\u0026ssl=1)\n\nFilter by repo name and “pick a repository” by clicking on a repo returned.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/Step3-Pick-a-repository.jpg?resize=753%2C491\u0026ssl=1)\n\nSet the basic settings for `create-react-app` site.\n\n1. **Build command** – `yarn build` or `npm run build`\n2. **Publish directory** – `build`\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/Step4-Set-basic-settings.jpg?resize=764%2C791\u0026ssl=1)\n\n \n\nAfter clicking on the “Deploy site” button, you will be forwarded to an “Overview” page with “Site deploy in progress” message.\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/Step5-Site-deploy-in-progress.jpg?resize=720%2C362\u0026ssl=1)\n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\n \n\nAfter a few moments (\\\u003c- this is relative term….), you will see a randomly generated URL.\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/Step5-Site-deployed.jpg?resize=444%2C231\u0026ssl=1)\n\n \n\nOK, you just deployed a site on Netlify ![🎉](https://s.w.org/images/core/emoji/2.4/72x72/1f389.png) ![🎉](https://s.w.org/images/core/emoji/2.4/72x72/1f389.png) ![🎉](https://s.w.org/images/core/emoji/2.4/72x72/1f389.png)\n\n### Other Resources\n\n1. [Netlify Home Page](https://www.netlify.com/)\n2. [Deploy React Apps in less than 30 Seconds](https://www.netlify.com/blog/2016/07/22/deploy-react-apps-in-less-than-30-seconds/) – This short tutorial shows how to deploy directly from command line without going through GitHub.\n3. [Netlify Official Documentation](https://www.netlify.com/docs/)\n\nThe post [Deploying Existing Create-React-App on GitHub to Netlify](https://www.slightedgecoder.com/2017/12/09/deploying-existing-create-react-app-github-netlify/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/12/09/deploying-existing-create-react-app-github-netlify/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/12/09/deploying-existing-create-react-app-github-netlify/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "programming, quicktip, createreactapp, frontend",
    "path": "/dance2die/deploying-existing-create-react-app-on-github-to-netlify-30hb-temp-slug-9067543",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-12-09T16:06:53.000Z"
  },
  {
    "title": "The Story of JAM – How they dealt with multiple JavaScript files",
    "slug": "the-story-of-jam--how-they-dealt-with-multiple-javascript-files-45b8-temp-slug-6851844",
    "created_at": "2018-07-07T01:41:58.473Z",
    "main_image": null,
    "description": "\n\nDISCLAIMER : All characters appearing here are purely _ fictional _. They just ...",
    "published": false,
    "published_at": "2017-12-24T21:40:14.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cstrong\u003eDISCLAIMER\u003c/strong\u003e : All characters appearing here are purely _ \u003cstrong\u003efictional\u003c/strong\u003e _. They just share the same first names of awesome \u003ca href=\"https://www.codingblocks.net/about/\"\u003eCodingBlocks podcast hosts\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eThis is the story of JAM (Joe, Allen, and Michael), who are average developers and how they started using Webpack.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eKeith, the Software Engineering Manager walks into the office one day to check the progress of the project started by JAM three days ago. He found Allen and Michael playing Call of Duty while Joe was working on his project by himself.\u003c/p\u003e\n\n\u003cp\u003e“Hey, guys. Why is Joe the only one working on the project?” Allen replies to Keith, “Joe is fixing a bug on this ‘main.js’ file, which both Michael and I need to update.”\u003c/p\u003e\n\n\u003cp\u003e“Couldn’t you guys just create a new branch?” Keith suggested. “We were waiting for Joe’s *quick* bug fix to mitigate merge conflicts. But Joe’s been working on the *quick* fix for a few hours.” Michael tried to justify the situation while scratching his head.\u003c/p\u003e\n\n\u003cp\u003e“Listen up. I say there is never a better than time now to refactor that ‘main.js’ file into smaller modules so that you guys can work on the project independently.”, and then Keith adds, “And Joe, I want you to follow up with me tomorrow.”\u003c/p\u003e\n\n\u003cp\u003eAfter Keith left Joe chuckles awkwardly and sighed. “I knew that this was coming but I have been too busy for this…” “Well, Joe, we are in this together, mate.” Allen said energetically. “OK, these bawls are on me.” Joe replied as he reaches into his wine cooler. They worked until late that night.\u003c/p\u003e\n\n\u003cp\u003eJoe followed up with Keith following day that they were able to break the “main.js” into smaller files. They barely managed to finish the project on time after a few nights of death marches. But that’s the price they paid for creating hard-to-maintain code.\u003c/p\u003e\n\n\u003cp\u003eThe following week, Keith rushes into the JAM’s office and declares DEFCON 1.\u003c/p\u003e\n\n\u003cp\u003e“There is a good news and a bad news, guys. Which one you guys want to hear first?” Keith said while wearing a gloomy expression. “Everyone usually asks for the bad news but I want to hear the good news first” Joe replied while Allen and Michael nodded.\u003c/p\u003e\n\n\u003cp\u003e“The good news is that the CEO was very satisfied with your work on the company home page. She considers very highly of your abilities and requested 10 new features.” “That’s a great news, Keith” guys agreed. “And the bad news is that” Keith pauses for a second while clearing his throat. “Within 5 days…” Keith slurs the end of the sentence and continues. “Well, let’s have a quick meeting and get cracking.”\u003c/p\u003e\n\n\u003cp\u003eTwo days into the project, Keith realized that project was progressing slowly so he decided to drop by.\u003c/p\u003e\n\n\u003cp\u003e“The problem is that we have too many JavaScript files and nobody can figure out the correct HTML script tag orders. It keeps halting us since the site keeps breaking whenever we add a new feature or a file.” Allen explained to Keith.\u003c/p\u003e\n\n\u003cp\u003eThey could not come up with a good solution so Keith decided to call an internationally renowned rock star developer, James in UK branch on a conference call.\u003c/p\u003e\n\n\u003cp\u003e“Hi James, this is Keith. How have you been?” “Keith, I have a trouble hearing you guys since I am in a lift going down to the basement” James replied. Keith explained the situation to James in a nutshell.\u003c/p\u003e\n\n\u003cp\u003eJames suggested, “For a \u003cstrong\u003eweb\u003c/strong\u003e page with many dependencies, just \u003cstrong\u003epack\u003c/strong\u003e them into a single file using a \u003cstrong\u003emodule bundler\u003c/strong\u003e. You can…” but then the call was dropped as James reached the basement.\u003c/p\u003e\n\n\u003cp\u003eAll Keith and the JAM gang heard was “web..pack… module bundler” due to low call quality. They didn’t have much clue but started researching “Webpack module bundler.”\u003c/p\u003e\n\n\u003cp\u003eAfter hours of trial and failures, they were able to get Webpack configured to bundle all their JavaScript files into one file.\u003c/p\u003e\n\n\u003cp\u003e“Wow, this is amazing, Joe. Webpack takes care of all module dependencies and all we have to do is require other files and let Webpack does bundling.” Allen said ecstatically. “Oh yeah, and also I’ve always wanted to utilize my ES6 skills and finally I can go crazy with it now with babel with ease.” Joe replied as he was sprinkling cheese powder in his “bawls cooler”. “Did you guys know that we can also minify the bundled file with only a few configuration changes?” Michael added. JAM was having fun with Webpack like kids in a candy store.\u003c/p\u003e\n\n\u003cp\u003eJoe brought up an issue while debugging. “Uhm, Michael, I have a problem. Minifying works fine until I had to debug it. The bundle is a jumbled up mess!” “Ah, I forgot to share with you guys that you can just turn on the source map option in the Webpack configuration and you can see the original source in the browser dev tools.” Michael explained and continued. “Webpack is like an onion. The more you use it the more you gotta know. There are just so many things you can do that it can be a bit overwhelming”.\u003c/p\u003e\n\n\u003cp\u003eAfter ironing out some Webpack issues here and there, the project picked up the momentum and they muddled through to complete the project.\u003c/p\u003e\n\n\u003cp\u003eJAM was having a lunch together the following week.\u003c/p\u003e\n\n\u003cp\u003e“I usually create small to medium sized websites and Webpack seems to be an overkill since you need to configure everything.” Joe shared his thoughts. “There’s gotta be a way to bundle our files without all those nitty gritty configuration details.” Allen agreed. Shawn, a developer from another team walks by overhearing the conversation and jumps in. “You know what guys?”\u003c/p\u003e\n\n\u003cp\u003e– To be cont’d.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/12/24/story-jam-webpack/\"\u003eThe Story of JAM – How they dealt with multiple JavaScript files\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: The Story of JAM – How they dealt with multiple JavaScript files\npublished: false\ntags: Blog Entry,Story,babel,es6\ncanonical_url: https://www.slightedgecoder.com/2017/12/24/story-jam-webpack/\n---\n\n **DISCLAIMER** : All characters appearing here are purely _ **fictional** _. They just share the same first names of awesome [CodingBlocks podcast hosts](https://www.codingblocks.net/about/).\n\n_This is the story of JAM (Joe, Allen, and Michael), who are average developers and how they started using Webpack._\n\nKeith, the Software Engineering Manager walks into the office one day to check the progress of the project started by JAM three days ago. He found Allen and Michael playing Call of Duty while Joe was working on his project by himself.\n\n“Hey, guys. Why is Joe the only one working on the project?” Allen replies to Keith, “Joe is fixing a bug on this ‘main.js’ file, which both Michael and I need to update.”\n\n“Couldn’t you guys just create a new branch?” Keith suggested. “We were waiting for Joe’s \\*quick\\* bug fix to mitigate merge conflicts. But Joe’s been working on the \\*quick\\* fix for a few hours.” Michael tried to justify the situation while scratching his head.\n\n“Listen up. I say there is never a better than time now to refactor that ‘main.js’ file into smaller modules so that you guys can work on the project independently.”, and then Keith adds, “And Joe, I want you to follow up with me tomorrow.”\n\nAfter Keith left Joe chuckles awkwardly and sighed. “I knew that this was coming but I have been too busy for this…” “Well, Joe, we are in this together, mate.” Allen said energetically. “OK, these bawls are on me.” Joe replied as he reaches into his wine cooler. They worked until late that night.\n\nJoe followed up with Keith following day that they were able to break the “main.js” into smaller files. They barely managed to finish the project on time after a few nights of death marches. But that’s the price they paid for creating hard-to-maintain code.\n\nThe following week, Keith rushes into the JAM’s office and declares DEFCON 1.\n\n“There is a good news and a bad news, guys. Which one you guys want to hear first?” Keith said while wearing a gloomy expression. “Everyone usually asks for the bad news but I want to hear the good news first” Joe replied while Allen and Michael nodded.\n\n“The good news is that the CEO was very satisfied with your work on the company home page. She considers very highly of your abilities and requested 10 new features.” “That’s a great news, Keith” guys agreed. “And the bad news is that” Keith pauses for a second while clearing his throat. “Within 5 days…” Keith slurs the end of the sentence and continues. “Well, let’s have a quick meeting and get cracking.”\n\nTwo days into the project, Keith realized that project was progressing slowly so he decided to drop by.\n\n“The problem is that we have too many JavaScript files and nobody can figure out the correct HTML script tag orders. It keeps halting us since the site keeps breaking whenever we add a new feature or a file.” Allen explained to Keith.\n\nThey could not come up with a good solution so Keith decided to call an internationally renowned rock star developer, James in UK branch on a conference call.\n\n“Hi James, this is Keith. How have you been?” “Keith, I have a trouble hearing you guys since I am in a lift going down to the basement” James replied. Keith explained the situation to James in a nutshell.\n\nJames suggested, “For a **web** page with many dependencies, just **pack** them into a single file using a **module bundler**. You can…” but then the call was dropped as James reached the basement.\n\nAll Keith and the JAM gang heard was “web..pack… module bundler” due to low call quality. They didn’t have much clue but started researching “Webpack module bundler.”\n\nAfter hours of trial and failures, they were able to get Webpack configured to bundle all their JavaScript files into one file.\n\n“Wow, this is amazing, Joe. Webpack takes care of all module dependencies and all we have to do is require other files and let Webpack does bundling.” Allen said ecstatically. “Oh yeah, and also I’ve always wanted to utilize my ES6 skills and finally I can go crazy with it now with babel with ease.” Joe replied as he was sprinkling cheese powder in his “bawls cooler”. “Did you guys know that we can also minify the bundled file with only a few configuration changes?” Michael added. JAM was having fun with Webpack like kids in a candy store.\n\nJoe brought up an issue while debugging. “Uhm, Michael, I have a problem. Minifying works fine until I had to debug it. The bundle is a jumbled up mess!” “Ah, I forgot to share with you guys that you can just turn on the source map option in the Webpack configuration and you can see the original source in the browser dev tools.” Michael explained and continued. “Webpack is like an onion. The more you use it the more you gotta know. There are just so many things you can do that it can be a bit overwhelming”.\n\nAfter ironing out some Webpack issues here and there, the project picked up the momentum and they muddled through to complete the project.\n\nJAM was having a lunch together the following week.\n\n“I usually create small to medium sized websites and Webpack seems to be an overkill since you need to configure everything.” Joe shared his thoughts. “There’s gotta be a way to bundle our files without all those nitty gritty configuration details.” Allen agreed. Shawn, a developer from another team walks by overhearing the conversation and jumps in. “You know what guys?”\n\n– To be cont’d.\n\nThe post [The Story of JAM – How they dealt with multiple JavaScript files](https://www.slightedgecoder.com/2017/12/24/story-jam-webpack/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/12/24/story-jam-webpack/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/12/24/story-jam-webpack/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, story, babel, es6",
    "path": "/dance2die/the-story-of-jam--how-they-dealt-with-multiple-javascript-files-45b8-temp-slug-6851844",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-12-24T21:40:14.000Z"
  },
  {
    "title": "“yarn global add” command does not work on Windows",
    "slug": "yarn-global-add-command-does-not-work-on-windows-1c2l-temp-slug-6582534",
    "created_at": "2018-07-07T01:41:59.109Z",
    "main_image": null,
    "description": "\n\nFeatured Image -Photo by Olliss on Unsplash\n\nWhen you install a new global NPM ...",
    "published": false,
    "published_at": "2017-12-31T04:34:47.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003csmall\u003eFeatured Image -Photo by \u003ca href=\"https://unsplash.com/photos/P6-S4QZtAvA?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eOlliss\u003c/a\u003e on \u003ca href=\"https://unsplash.com/?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eWhen you install a new global NPM binary using \u003ccode\u003eyarn\u003c/code\u003e on Windows machine, you run into the situation where the installed binary is not found.\u003c/p\u003e\n\n\u003cp\u003eI will show you how to resolve that issue.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"problem\" href=\"#problem\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Problem\n\u003c/h3\u003e\n\n\u003cp\u003eHere is the example of yarn global installed package (\u003ca href=\"https://parceljs.org/\"\u003eParcel JS\u003c/a\u003e) not found.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eNOTE\u003c/strong\u003e : The package name is \u003ccode\u003eparcel-bundler\u003c/code\u003e but the command is \u003ccode\u003eparcel\u003c/code\u003e according to the \u003ca href=\"https://parceljs.org/getting_started.html\"\u003eParcel JS documentation\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eAfter globally installing \u003ccode\u003eparcel-bundler\u003c/code\u003e, parcel fails with the following error message.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e‘parcel’ is not recognized as an internal or external command, operable program or batch file.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eLet’s fix this.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"step-1-get-the-yarn-global-binary-path\" href=\"#step-1-get-the-yarn-global-binary-path\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Step 1 – Get the yarn global binary path\n\u003c/h3\u003e\n\n\u003cp\u003eLet’s find out where \u003ccode\u003eyarn\u003c/code\u003e stores globally installed binary files with \u003ccode\u003eyarn global bin\u003c/code\u003e command.\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003eOn my local machine, \u003ccode\u003eyarn global add \u0026lt;package\u0026gt;\u003c/code\u003e will save files under \u003cstrong\u003e\u003cem\u003eC:\\Users\\dance2die\\AppData\\Roaming\\npm\\bin\u003c/em\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003eWe need to add that path to Windows Environment Variable Path so that Windows command line interpreter (\u003ccode\u003ecmd.exe\u003c/code\u003e or \u003ccode\u003epowershell.exe\u003c/code\u003e) can search the path to find command to run.\u003c/p\u003e\n\n\u003cp\u003eNow *copy* that path to clipboard (e.g. \u003cstrong\u003e\u003cem\u003eC:\\Users\\dance2die\\AppData\\Roaming\\npm\\bin\u003c/em\u003e\u003c/strong\u003e ).\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"step-2-add-the-yarn-global-binary-path-to-path-environment-variable\" href=\"#step-2-add-the-yarn-global-binary-path-to-path-environment-variable\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Step 2 – Add the yarn global binary path to PATH environment variable\n\u003c/h3\u003e\n\n\u003cp\u003eYou can add the path as a system or user variable but I will show you how to add it as a user environment variable (You decide which one to create depending on your situation and permissions).\u003c/p\u003e\n\n\u003cp\u003eClick on Windows button then search with “environment” and click on “Edit the system environment variables”.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--HjVSCOys--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/windows-environment-search.jpg%3Fresize%3D390%252C735%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--HjVSCOys--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/windows-environment-search.jpg%3Fresize%3D390%252C735%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eOn “System Properties” dialog, click on “Environment Variables…” button.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--qUIBN-ij--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/system-properties-environment-variable-button.jpg%3Fresize%3D412%252C468%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--qUIBN-ij--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/system-properties-environment-variable-button.jpg%3Fresize%3D412%252C468%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eSelect “Path” and click on “Edit…” button.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Ld7dV3Ui--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/environment-variables-edit-button.jpg%3Fresize%3D618%252C585%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Ld7dV3Ui--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/environment-variables-edit-button.jpg%3Fresize%3D618%252C585%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eClick on “New” button to add a new path to search.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Z_hpYgcV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/environment-variables-new-button.jpg%3Fresize%3D618%252C585%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Z_hpYgcV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/environment-variables-new-button.jpg%3Fresize%3D618%252C585%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003ePaste the yarn global binary path copied in Step 1 and click “OK”  for all open dialog boxes to save the change.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aMwJmMEm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/environment-variables-new-path-variable.jpg%3Fresize%3D618%252C585%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aMwJmMEm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/environment-variables-new-path-variable.jpg%3Fresize%3D618%252C585%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eIMPORTANT NOTE\u003c/strong\u003e : You need to close all open command line interfaces or start a new instance for the PATH variable to take an effect.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"step-3-run-the-globally-installed-command\" href=\"#step-3-run-the-globally-installed-command\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Step 3 – Run the globally installed command\n\u003c/h3\u003e\n\n\u003cp\u003eI installed \u003ccode\u003eparcel-bundler\u003c/code\u003e, which failed to execute previously.\u003c/p\u003e\n\n\u003cp\u003eLet’s run \u003ccode\u003eparcel\u003c/code\u003e again on a new command window.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--tNPV56N2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/parcel-runs.jpg%3Fresize%3D435%252C134%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--tNPV56N2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/parcel-runs.jpg%3Fresize%3D435%252C134%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--uQEojgN---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f389.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--uQEojgN---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f389.png\" alt=\"🎉\"\u003e\u003c/a\u003e It works!!! \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--uQEojgN---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f389.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--uQEojgN---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/2.4/72x72/1f389.png\" alt=\"🎉\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--88crp4ia--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/media.giphy.com/media/OoTKFwKiOAbYc/giphy.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--88crp4ia--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/media.giphy.com/media/OoTKFwKiOAbYc/giphy.gif%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Parting Words\n\u003c/h3\u003e\n\n\u003cp\u003eI have had so much trouble to get globally added yarn command working on windows since the majority of Google results pointed me to GitHub issues, which dealt with Linux/MacOS only.\u003c/p\u003e\n\n\u003cp\u003eI got a hint after seeing this \u003ca href=\"https://github.com/yarnpkg/yarn/issues/3431#issuecomment-303399450\"\u003eanswer on GitHub \u003c/a\u003eand failed multiple times to get this working.\u003c/p\u003e\n\n\u003cp\u003eI was initially frustrated that \u003ccode\u003ecreate-react-app\u003c/code\u003e didn’t work with \u003ccode\u003eyarn global add\u003c/code\u003e so stopped pursuing further but this time (3~4 months later), I decided to do something about it so that I can use \u003ccode\u003eyarn\u003c/code\u003e all the time.\u003c/p\u003e\n\n\u003cp\u003eI hope you can benefit from this post if you are working on front-end projects on Windows as I am.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/12/30/yarn-global-add-command-not-work-windows/\"\u003e“yarn global add” command does not work on Windows\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: “yarn global add” command does not work on Windows\npublished: false\ntags: Programming,quick tip,cmd,cmd.exe\ncanonical_url: https://www.slightedgecoder.com/2017/12/30/yarn-global-add-command-not-work-windows/\n---\n\n\u003csmall\u003eFeatured Image -Photo by \u003ca href=\"https://unsplash.com/photos/P6-S4QZtAvA?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eOlliss\u003c/a\u003e on \u003ca href=\"https://unsplash.com/?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/small\u003e\n\nWhen you install a new global NPM binary using `yarn` on Windows machine, you run into the situation where the installed binary is not found.\n\nI will show you how to resolve that issue.\n\n### Problem\n\nHere is the example of yarn global installed package ([Parcel JS](https://parceljs.org/)) not found.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n**NOTE** : The package name is `parcel-bundler` but the command is `parcel` according to the [Parcel JS documentation](https://parceljs.org/getting_started.html).\n\nAfter globally installing `parcel-bundler`, parcel fails with the following error message.\n\n\u003e ‘parcel’ is not recognized as an internal or external command, operable program or batch file.\n\nLet’s fix this.\n\n### Step 1 – Get the yarn global binary path\n\nLet’s find out where `yarn` stores globally installed binary files with `yarn global bin` command.\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\nOn my local machine, `yarn global add \u003cpackage\u003e` will save files under **_C:\\Users\\dance2die\\AppData\\Roaming\\npm\\bin_**.\n\nWe need to add that path to Windows Environment Variable Path so that Windows command line interpreter (`cmd.exe` or `powershell.exe`) can search the path to find command to run.\n\nNow \\*copy\\* that path to clipboard (e.g. **_C:\\Users\\dance2die\\AppData\\Roaming\\npm\\bin_** ).\n\n### Step 2 – Add the yarn global binary path to PATH environment variable\n\nYou can add the path as a system or user variable but I will show you how to add it as a user environment variable (You decide which one to create depending on your situation and permissions).\n\nClick on Windows button then search with “environment” and click on “Edit the system environment variables”.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/windows-environment-search.jpg?resize=390%2C735\u0026ssl=1)\n\nOn “System Properties” dialog, click on “Environment Variables…” button.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/system-properties-environment-variable-button.jpg?resize=412%2C468\u0026ssl=1)\n\nSelect “Path” and click on “Edit…” button.\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/environment-variables-edit-button.jpg?resize=618%2C585\u0026ssl=1)\n\nClick on “New” button to add a new path to search.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/environment-variables-new-button.jpg?resize=618%2C585\u0026ssl=1)\n\nPaste the yarn global binary path copied in Step 1 and click “OK”  for all open dialog boxes to save the change.\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/environment-variables-new-path-variable.jpg?resize=618%2C585\u0026ssl=1)\n\n**IMPORTANT NOTE** : You need to close all open command line interfaces or start a new instance for the PATH variable to take an effect.\n\n### Step 3 – Run the globally installed command\n\nI installed `parcel-bundler`, which failed to execute previously.\n\nLet’s run `parcel` again on a new command window.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/12/parcel-runs.jpg?resize=435%2C134\u0026ssl=1)\n\n![🎉](https://s.w.org/images/core/emoji/2.4/72x72/1f389.png) It works!!! ![🎉](https://s.w.org/images/core/emoji/2.4/72x72/1f389.png)\n\n![](https://i1.wp.com/media.giphy.com/media/OoTKFwKiOAbYc/giphy.gif?w=1170\u0026ssl=1)\n\n### Parting Words\n\nI have had so much trouble to get globally added yarn command working on windows since the majority of Google results pointed me to GitHub issues, which dealt with Linux/MacOS only.\n\nI got a hint after seeing this [answer on GitHub ](https://github.com/yarnpkg/yarn/issues/3431#issuecomment-303399450)and failed multiple times to get this working.\n\nI was initially frustrated that `create-react-app` didn’t work with `yarn global add` so stopped pursuing further but this time (3~4 months later), I decided to do something about it so that I can use `yarn` all the time.\n\nI hope you can benefit from this post if you are working on front-end projects on Windows as I am.\n\nThe post [“yarn global add” command does not work on Windows](https://www.slightedgecoder.com/2017/12/30/yarn-global-add-command-not-work-windows/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/12/30/yarn-global-add-command-not-work-windows/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/12/30/yarn-global-add-command-not-work-windows/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "programming, quicktip, cmd, cmdexe",
    "path": "/dance2die/yarn-global-add-command-does-not-work-on-windows-1c2l-temp-slug-6582534",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-12-31T04:34:47.000Z"
  },
  {
    "title": "2017 Report \u0026 2018 Plan",
    "slug": "2017-report--2018-plan-21pb-temp-slug-1998076",
    "created_at": "2018-07-07T01:42:00.053Z",
    "main_image": null,
    "description": "\n\nFeatured Image -Photo by Joshua Earle on Unsplash\n\nThis is a post about reflect...",
    "published": false,
    "published_at": "2018-01-06T19:04:45.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003csmall\u003eFeatured Image -Photo by \u003ca href=\"https://unsplash.com/photos/-87JyMb9ZfU?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eJoshua Earle\u003c/a\u003e on \u003ca href=\"https://unsplash.com/?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eThis is a post about reflecting 2017 and plans for 2018.\u003c/p\u003e\n\n\u003cp\u003eI will share some stats and plans.\u003c/p\u003e\n\n\u003cp\u003eThis is to make my 2018 plans public (refer to #4 in this \u003ca href=\"https://www.forbes.com/sites/kevinkruse/2016/01/03/making-new-years-resolutions-stick/#354d7c596903\"\u003eForbes article\u003c/a\u003e) so that I can stick to them.\u003c/p\u003e\n\n\u003ch1\u003e\n  \u003ca name=\"a-look-back-at-2017\" href=\"#a-look-back-at-2017\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  A look back at 2017\n\u003c/h1\u003e\n\n\u003cp\u003eHere are the three things I’ve tracked and accomplished in 2017.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"weight\" href=\"#weight\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Weight\n\u003c/h4\u003e\n\n\u003cp\u003eI’ve lost \u003cstrong\u003e12.34lbs\u003c/strong\u003e from 1/1~12/31/2017.\u003c/p\u003e\n\n\u003cp\u003eIt was down \u003cstrong\u003e17lbs\u003c/strong\u003e at one point but gained \u003cstrong\u003e5lbs\u003c/strong\u003e during vacation as you can see in the graph.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--bzTAnS8M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/2017-Weight-Graph.jpg%3Fresize%3D602%252C374%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--bzTAnS8M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/2017-Weight-Graph.jpg%3Fresize%3D602%252C374%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe way I lost weight by lowering my calorie intake by \u003ca href=\"https://docs.google.com/spreadsheets/d/1kHgEYHW49Thk9VtOADGwSX0EfHjpdQ0RGqsZ8WyipIk/edit?usp=sharing\"\u003etracking what I ate\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"books\" href=\"#books\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Books\n\u003c/h4\u003e\n\n\u003cp\u003eI read \u003cstrong\u003e87\u003c/strong\u003e books.\u003c/p\u003e\n\n\u003cp\u003eThis is about \u003cstrong\u003e40\u003c/strong\u003e books less compared to 2016, but it is because I started reading online Korean novels (\u003ca href=\"http://www.munpia.com/\"\u003eMunpia\u003c/a\u003e) heavily and don’t track it.\u003c/p\u003e\n\n\u003cp\u003eI track books read on \u003ca href=\"https://www.goodreads.com/user/show/25927588-sung-kim\"\u003eGoodReads\u003c/a\u003e but half of books I read are in Korean, which are not found there so I have my own \u003ca href=\"https://docs.google.com/spreadsheets/d/106UBkKjFFPsHiorV_-eOmmvQce914lLn0flJYSNol2Q/edit?usp=sharing\"\u003eGoogleSheet\u003c/a\u003e to track them all.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--QDrOjLY2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/2017-Book-count.jpg%3Fresize%3D908%252C621%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--QDrOjLY2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/2017-Book-count.jpg%3Fresize%3D908%252C621%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"thisblog\" href=\"#thisblog\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  this.Blog\n\u003c/h4\u003e\n\n\u003cp\u003eI’ve been writing somewhat consistently over the year and was able to write 1 blog per week on the average.\u003c/p\u003e\n\n\u003cp\u003eMonthly active user count increased from 5 to 500+.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--5_sOvaf6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/2017-Active-Users.jpg%3Fresize%3D993%252C626\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--5_sOvaf6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/2017-Active-Users.jpg%3Fresize%3D993%252C626\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n  \u003ca name=\"going-forward-in-2018-plans\" href=\"#going-forward-in-2018-plans\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Going forward in 2018 – Plans\n\u003c/h1\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"technical-frontend\" href=\"#technical-frontend\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Technical – Front-end\n\u003c/h4\u003e\n\n\u003cp\u003eI will focus on Front-end development.\u003c/p\u003e\n\n\u003cp\u003eHere are a few front-end technologies to learn.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eReact \u0026amp; React Native\u003c/li\u003e\n\u003cli\u003eVue\u003c/li\u003e\n\u003cli\u003eVanillaJS – Both Object-oriented and Functional.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.apollographql.com/\"\u003eApollo\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"technical-backend\" href=\"#technical-backend\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Technical – Back-end\n\u003c/h4\u003e\n\n\u003cp\u003eI will learn ELK (\u003ca href=\"https://www.elastic.co/products/elasticsearch\"\u003eElasticSearch\u003c/a\u003e, \u003ca href=\"https://www.elastic.co/products/logstash\"\u003eLogStash\u003c/a\u003e, and \u003ca href=\"https://www.elastic.co/products/kibana\"\u003eKibana\u003c/a\u003e) stack aka \u003ca href=\"https://www.elastic.co/webinars/introduction-elk-stack\"\u003ethe Elastic Stack\u003c/a\u003e to deploy it at work so that I can build skills for my long term goal (Docker \u0026amp; AWS/Azure are on my list as well).\u003c/p\u003e\n\n\u003cp\u003eAnother thing that intrigued me was cryptocurrency related technologies such as Bitcoin, Blockchain, Ethereum, and IOTA. I don’t have enough information on cryptocurrency but it’s one of the potential area I’d like to explore.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"technical-contributions\" href=\"#technical-contributions\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Technical – Contributions\n\u003c/h4\u003e\n\n\u003cp\u003eMore open source contribution with \u003ca href=\"https://hackernoon.com/i-thought-i-understood-open-source-i-was-wrong-cf54999c097b\"\u003ea new mindset\u003c/a\u003e. After participating in \u003ca href=\"https://hacktoberfest.digitalocean.com/#resources\"\u003eHacktoberfest 2017\u003c/a\u003e, I was exposed to open source contribution.\u003c/p\u003e\n\n\u003cp\u003eGetting involved in technical meetups.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"tracking\" href=\"#tracking\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Tracking\n\u003c/h4\u003e\n\n\u003cp\u003eIt’s time to spread good habit (weight tracking) into other areas (I forgot which book this was from).\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eTechnical\u003c/strong\u003e – Tracking progresses mentioned above.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eMoney\u003c/strong\u003e – Create a Google Sheet to track every penny spent.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"miscellaneous\" href=\"#miscellaneous\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Miscellaneous\n\u003c/h4\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.swyx.io/\"\u003eShawn\u003c/a\u003e (\u003ca href=\"https://twitter.com/swyx/\"\u003e@swyx\u003c/a\u003e) has pointed out (\u003ca href=\"https://hackernoon.com/no-zero-days-my-path-from-code-newbie-to-full-stack-developer-in-12-months-214122a8948f\"\u003eTeach to Learn\u003c/a\u003e) how teaching helps one to learn. I thought that teaching others by \u003ca href=\"https://hackernoon.com/dont-laugh-at-storytelling-f2b5521c3f25\"\u003etelling stories\u003c/a\u003e would be a good idea. (Wrote \u003ca href=\"https://www.google.com/url?sa=t\u0026amp;rct=j\u0026amp;q=\u0026amp;esrc=s\u0026amp;source=web\u0026amp;cd=1\u0026amp;cad=rja\u0026amp;uact=8\u0026amp;ved=0ahUKEwj8jpW9gcTYAhWiUt8KHUXYCE8QFggpMAA\u0026amp;url=https%3A%2F%2Fwww.slightedgecoder.com%2F2017%2F12%2F24%2Fstory-jam-webpack%2F\u0026amp;usg=AOvVaw1JNVBl5UHcFytdnzIyqftZ\"\u003ea story\u003c/a\u003e about Webpack but I plan to do more of it).\u003c/p\u003e\n\n\u003ch1\u003e\n  \u003ca name=\"lesson-learned-and-to-do\" href=\"#lesson-learned-and-to-do\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Lesson Learned and To Do\n\u003c/h1\u003e\n\n\u003cp\u003eOne thing I learned in 2017 was that being consistent (blog) and tracking (weight) pays off.\u003c/p\u003e\n\n\u003cp\u003eI will focus on \u003cstrong\u003etracking everything\u003c/strong\u003e this year and constantly reflect on my progresses and enjoy the process.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/01/06/2017-report-2018-plan/\"\u003e2017 Report \u0026amp; 2018 Plan\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: 2017 Report \u0026 2018 Plan\npublished: false\ntags: Blog Entry,slight edge,TIL,2017\ncanonical_url: https://www.slightedgecoder.com/2018/01/06/2017-report-2018-plan/\n---\n\n\u003csmall\u003eFeatured Image -Photo by \u003ca href=\"https://unsplash.com/photos/-87JyMb9ZfU?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eJoshua Earle\u003c/a\u003e on \u003ca href=\"https://unsplash.com/?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/small\u003e\n\nThis is a post about reflecting 2017 and plans for 2018.\n\nI will share some stats and plans.\n\nThis is to make my 2018 plans public (refer to #4 in this [Forbes article](https://www.forbes.com/sites/kevinkruse/2016/01/03/making-new-years-resolutions-stick/#354d7c596903)) so that I can stick to them.\n\n# A look back at 2017\n\nHere are the three things I’ve tracked and accomplished in 2017.\n\n#### Weight\n\nI’ve lost **12.34lbs** from 1/1~12/31/2017.\n\nIt was down **17lbs** at one point but gained **5lbs** during vacation as you can see in the graph.\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/2017-Weight-Graph.jpg?resize=602%2C374\u0026ssl=1)\n\nThe way I lost weight by lowering my calorie intake by [tracking what I ate](https://docs.google.com/spreadsheets/d/1kHgEYHW49Thk9VtOADGwSX0EfHjpdQ0RGqsZ8WyipIk/edit?usp=sharing).\n\n#### Books\n\nI read **87** books.\n\nThis is about **40** books less compared to 2016, but it is because I started reading online Korean novels ([Munpia](http://www.munpia.com/)) heavily and don’t track it.\n\nI track books read on [GoodReads](https://www.goodreads.com/user/show/25927588-sung-kim) but half of books I read are in Korean, which are not found there so I have my own [GoogleSheet](https://docs.google.com/spreadsheets/d/106UBkKjFFPsHiorV_-eOmmvQce914lLn0flJYSNol2Q/edit?usp=sharing) to track them all.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/2017-Book-count.jpg?resize=908%2C621\u0026ssl=1)\n\n#### this.Blog\n\nI’ve been writing somewhat consistently over the year and was able to write 1 blog per week on the average.\n\nMonthly active user count increased from 5 to 500+.\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/2017-Active-Users.jpg?resize=993%2C626)\n\n# Going forward in 2018 – Plans\n\n#### Technical – Front-end\n\nI will focus on Front-end development.\n\nHere are a few front-end technologies to learn.\n\n1. React \u0026 React Native\n2. Vue\n3. VanillaJS – Both Object-oriented and Functional.\n4. [Apollo](https://www.apollographql.com/)\n\n#### Technical – Back-end\n\nI will learn ELK ([ElasticSearch](https://www.elastic.co/products/elasticsearch), [LogStash](https://www.elastic.co/products/logstash), and [Kibana](https://www.elastic.co/products/kibana)) stack aka [the Elastic Stack](https://www.elastic.co/webinars/introduction-elk-stack) to deploy it at work so that I can build skills for my long term goal (Docker \u0026 AWS/Azure are on my list as well).\n\nAnother thing that intrigued me was cryptocurrency related technologies such as Bitcoin, Blockchain, Ethereum, and IOTA. I don’t have enough information on cryptocurrency but it’s one of the potential area I’d like to explore.\n\n#### Technical – Contributions\n\nMore open source contribution with [a new mindset](https://hackernoon.com/i-thought-i-understood-open-source-i-was-wrong-cf54999c097b). After participating in [Hacktoberfest 2017](https://hacktoberfest.digitalocean.com/#resources), I was exposed to open source contribution.\n\nGetting involved in technical meetups.\n\n#### Tracking\n\nIt’s time to spread good habit (weight tracking) into other areas (I forgot which book this was from).\n\n- **Technical** – Tracking progresses mentioned above.\n- **Money** – Create a Google Sheet to track every penny spent.\n\n#### Miscellaneous\n\n[Shawn](https://www.swyx.io/) ([@swyx](https://twitter.com/swyx/)) has pointed out ([Teach to Learn](https://hackernoon.com/no-zero-days-my-path-from-code-newbie-to-full-stack-developer-in-12-months-214122a8948f)) how teaching helps one to learn. I thought that teaching others by [telling stories](https://hackernoon.com/dont-laugh-at-storytelling-f2b5521c3f25) would be a good idea. (Wrote [a story](https://www.google.com/url?sa=t\u0026rct=j\u0026q=\u0026esrc=s\u0026source=web\u0026cd=1\u0026cad=rja\u0026uact=8\u0026ved=0ahUKEwj8jpW9gcTYAhWiUt8KHUXYCE8QFggpMAA\u0026url=https%3A%2F%2Fwww.slightedgecoder.com%2F2017%2F12%2F24%2Fstory-jam-webpack%2F\u0026usg=AOvVaw1JNVBl5UHcFytdnzIyqftZ) about Webpack but I plan to do more of it).\n\n# Lesson Learned and To Do\n\nOne thing I learned in 2017 was that being consistent (blog) and tracking (weight) pays off.\n\nI will focus on **tracking everything** this year and constantly reflect on my progresses and enjoy the process.\n\nThe post [2017 Report \u0026 2018 Plan](https://www.slightedgecoder.com/2018/01/06/2017-report-2018-plan/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/01/06/2017-report-2018-plan/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/01/06/2017-report-2018-plan/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, slightedge, todayilearned, 2017",
    "path": "/dance2die/2017-report--2018-plan-21pb-temp-slug-1998076",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-01-06T19:04:45.000Z"
  },
  {
    "title": "Formatting “.ejs” file in VS Code (Visual Studio Code)",
    "slug": "formatting-ejs-file-in-vs-code-visual-studio-code-47ok-temp-slug-6720676",
    "created_at": "2018-07-07T01:42:00.532Z",
    "main_image": null,
    "description": "\n\nFeatured Image – Photo by Sai Kiran Anagani on Unsplash\nWhen you use ExpressJS ...",
    "published": false,
    "published_at": "2018-01-19T02:42:33.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003csmall\u003eFeatured Image – Photo by \u003ca href=\"https://unsplash.com/photos/5Ntkpxqt54Y?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eSai Kiran Anagani\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/visual-studio-code?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/small\u003e\u003cbr\u003e\u003cbr\u003e\nWhen you use \u003ca href=\"https://expressjs.com/\"\u003eExpressJS\u003c/a\u003e using \u003ca href=\"http://ejs.co/\"\u003eEJS\u003c/a\u003e as a view engine in Visual Studio Code (VS Code hereafter), you might run into the following error message when trying to format an EJS page with \u003ca href=\"https://stackoverflow.com/a/29973358/4035\"\u003ea keyboard shortcut\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\n(Windows: Shift + Alt + F, MacOS: Shift + Option + F, Ubuntu Ctrl + Shift + I).\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eSorry, but there is no formatter for ‘ejs’-files installed.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--D2UTHasb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/no-vs-code-formatter-for-ejs.jpg%3Fresize%3D937%252C689%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--D2UTHasb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/no-vs-code-formatter-for-ejs.jpg%3Fresize%3D937%252C689%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eLuckily all you need to do is to add a user setting by associating \u003ccode\u003e.ejs\u003c/code\u003e extension to be handled with an HTML formatter.\u003c/p\u003e\n\n\u003cp\u003eHere are \u003cstrong\u003e3\u003c/strong\u003e steps to enable EJS files to be formatted with an HTML formatter.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"step-1-open-user-settings\" href=\"#step-1-open-user-settings\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Step 1 – Open User Settings\n\u003c/h4\u003e\n\n\u003cp\u003eGo to “File -\u0026gt; Preferences -\u0026gt; Settings”.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--BHZ9ypNk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/open-user-settings.jpg%3Fresize%3D626%252C568%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--BHZ9ypNk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/open-user-settings.jpg%3Fresize%3D626%252C568%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"step-2-search-for-filesassociations-setting\" href=\"#step-2-search-for-filesassociations-setting\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Step 2 – Search for “files.associations” setting\n\u003c/h4\u003e\n\n\u003cp\u003eAfter searching for “files.assocations”, copy \u003ccode\u003e\"files.assocations\": {}\u003c/code\u003e to clipboard for the next step.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--sfzBhieD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/search-files.associations-setting.jpg%3Fresize%3D820%252C499%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--sfzBhieD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/search-files.associations-setting.jpg%3Fresize%3D820%252C499%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"step-3-add-a-custom-file-association\" href=\"#step-3-add-a-custom-file-association\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Step 3 – Add a custom file association\n\u003c/h4\u003e\n\n\u003cp\u003eOn the right side under “user settings” tab, add\u003c/p\u003e\n\n\u003cp\u003e.gist table { margin-bottom: 0; }\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Jvzjsmlk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/Add-a-custom-user-setting-all.jpg%3Fresize%3D689%252C245%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Jvzjsmlk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/Add-a-custom-user-setting-all.jpg%3Fresize%3D689%252C245%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eNow you can reformat with a keyboard shortcut without an error.\u003cbr\u003e\u003cbr\u003e\nThe reformatted code looks like following.\u003cbr\u003e\u003cbr\u003e\n \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--yD3WkXic--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/reformatted.gif%3Fresize%3D720%252C732%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--yD3WkXic--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/reformatted.gif%3Fresize%3D720%252C732%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"resource\" href=\"#resource\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Resource\n\u003c/h3\u003e\n\n\u003cp\u003e\u003ca href=\"https://code.visualstudio.com/docs/languages/overview#_adding-a-file-extension-to-a-language\"\u003eVisual Studio Code documentation\u003c/a\u003e on \u003ccode\u003efile.associations\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/01/18/formatting-ejs-file-vs-code-visual-studio-code/\"\u003eFormatting “.ejs” file in VS Code (Visual Studio Code)\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Formatting “.ejs” file in VS Code (Visual Studio Code)\npublished: false\ntags: Blog Entry,Programming,quick tip,ejs\ncanonical_url: https://www.slightedgecoder.com/2018/01/18/formatting-ejs-file-vs-code-visual-studio-code/\n---\n\n\u003csmall\u003eFeatured Image – Photo by \u003ca href=\"https://unsplash.com/photos/5Ntkpxqt54Y?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eSai Kiran Anagani\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/visual-studio-code?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/small\u003e  \nWhen you use [ExpressJS](https://expressjs.com/) using [EJS](http://ejs.co/) as a view engine in Visual Studio Code (VS Code hereafter), you might run into the following error message when trying to format an EJS page with [a keyboard shortcut](https://stackoverflow.com/a/29973358/4035)  \n(Windows: \u003ckbd\u003eShift\u003c/kbd\u003e + \u003ckbd\u003eAlt\u003c/kbd\u003e + \u003ckbd\u003eF\u003c/kbd\u003e, MacOS: \u003ckbd\u003eShift\u003c/kbd\u003e + \u003ckbd\u003eOption\u003c/kbd\u003e + \u003ckbd\u003eF\u003c/kbd\u003e, Ubuntu \u003ckbd\u003eCtrl\u003c/kbd\u003e + \u003ckbd\u003eShift\u003c/kbd\u003e + \u003ckbd\u003eI\u003c/kbd\u003e).\n\n\u003e Sorry, but there is no formatter for ‘ejs’-files installed.\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/no-vs-code-formatter-for-ejs.jpg?resize=937%2C689\u0026ssl=1)\n\nLuckily all you need to do is to add a user setting by associating `.ejs` extension to be handled with an HTML formatter.\n\nHere are **3** steps to enable EJS files to be formatted with an HTML formatter.\n\n#### Step 1 – Open User Settings\n\nGo to “File -\\\u003e Preferences -\\\u003e Settings”.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/open-user-settings.jpg?resize=626%2C568\u0026ssl=1)\n\n#### Step 2 – Search for “files.associations” setting\n\nAfter searching for “files.assocations”, copy `\"files.assocations\": {}` to clipboard for the next step.\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/search-files.associations-setting.jpg?resize=820%2C499\u0026ssl=1)\n\n#### Step 3 – Add a custom file association\n\nOn the right side under “user settings” tab, add\n\n\u003cstyle\u003e.gist table { margin-bottom: 0; }\u003c/style\u003e\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/Add-a-custom-user-setting-all.jpg?resize=689%2C245\u0026ssl=1)\n\n* * *\n\nNow you can reformat with a keyboard shortcut without an error.  \nThe reformatted code looks like following.  \n ![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/01/reformatted.gif?resize=720%2C732\u0026ssl=1)\n\n### Resource\n\n[Visual Studio Code documentation](https://code.visualstudio.com/docs/languages/overview#_adding-a-file-extension-to-a-language) on `file.associations`.\n\nThe post [Formatting “.ejs” file in VS Code (Visual Studio Code)](https://www.slightedgecoder.com/2018/01/18/formatting-ejs-file-vs-code-visual-studio-code/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/01/18/formatting-ejs-file-vs-code-visual-studio-code/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/01/18/formatting-ejs-file-vs-code-visual-studio-code/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, quicktip, ejs",
    "path": "/dance2die/formatting-ejs-file-in-vs-code-visual-studio-code-47ok-temp-slug-6720676",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-01-19T02:42:33.000Z"
  },
  {
    "title": "Adding VS Code Theme to CodeSandBox",
    "slug": "adding-vs-code-theme-to-codesandbox-1df7",
    "created_at": "2018-07-18T02:53:00.062Z",
    "main_image": "https://images.unsplash.com/photo-1523268755815-fe7c372a0349?ixlib=rb-0.3.5\u0026ixid=eyJhcHBfaWQiOjEyMDd9\u0026s=78f4a9da162471fff0acce3b5be33393\u0026dpr=1\u0026auto=format\u0026fit=crop\u0026w=1000\u0026q=80\u0026cs=tinysrgb",
    "description": "\n\nHave you ever wanted to match your CodeSandBox Editor Theme to match your Visua...",
    "published": true,
    "published_at": "2018-07-18T02:44:52.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eHave you ever wanted to match your \u003ca href=\"https://codesandbox.io\"\u003eCodeSandBox\u003c/a\u003e Editor Theme to match your \u003ca href=\"https://code.visualstudio.com/\"\u003eVisual Studio Code\u003c/a\u003e Color Theme?\u003cbr\u003e\u003cbr\u003e\n\u003cem\u003eWell, you can.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eIt’s because of CodeSandBox uses \u003ca href=\"https://github.com/Microsoft/monaco-editor\"\u003eMonaco\u003c/a\u003e (a VS Code editor engine) by default.\u003c/p\u003e\n\n\u003cp\u003eLet's make the magic ✨ happen~\u003c/p\u003e\n\n\u003ch1\u003e\n  \u003ca name=\"steps\" href=\"#steps\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👣 Steps\n\u003c/h1\u003e\n\n\u003cp\u003eHere are the steps to make it happen.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eGet VS Code Color Theme Settings\u003c/li\u003e\n\u003cli\u003eOpen CodeSandBox Preference\u003c/li\u003e\n\u003cli\u003ePaste the Setting in CodeSandBox Preference modal box\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eLet’s do this 💪!\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"1-get-vs-code-color-theme-settings\" href=\"#1-get-vs-code-color-theme-settings\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🍀 1. Get VS Code Color Theme Settings\n\u003c/h3\u003e\n\n\u003cp\u003eLet’s grab the color theme settings from VS Code.\u003cbr\u003e\u003cbr\u003e\n\u003cem\u003eI am using \u003ca href=\"https://marketplace.visualstudio.com/items?itemName=wesbos.theme-cobalt2\"\u003eCobalt2\u003c/a\u003e theme on CodeSandBox, and will be updating it to use \u003ca href=\"https://marketplace.visualstudio.com/items?itemName=nopjmp.fairyfloss\"\u003eFairy Floss\u003c/a\u003e theme on VS Code.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eI found this wondeful theme (Fairy Floss) from this post.\u003c/em\u003e\u003cbr\u003e\n      \u003c/p\u003e\n\u003cdiv class=\"ltag__link\"\u003e\n        \u003ca href=\"/aspittel\" class=\"ltag__link__link\"\u003e\n          \u003cdiv class=\"ltag__link__pic\"\u003e\n            \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Sp3slSNR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--HPWnQR_R--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://thepracticaldev.s3.amazonaws.com/uploads/user/profile_image/38627/77a2a5e7-603e-41b4-afcc-f7aff468ae2f.jpg\" alt=\"aspittel image\"\u003e\n          \u003c/div\u003e\u003c/a\u003e\n          \u003ca href=\"/aspittel/my-visual-studio-code-setup-1emn\" class=\"ltag__link__link\"\u003e\n            \u003cdiv class=\"ltag__link__content\"\u003e\n              \u003ch2\u003eMy Visual Studio Code Setup\u003c/h2\u003e\n              \u003ch3\u003eAli Spittel\u003c/h3\u003e\n              \u003cdiv class=\"ltag__link__taglist\"\u003e\n\u003cspan class=\"ltag__link__tag\"\u003e#webdev\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#beginners\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#texteditor\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#vscode\u003c/span\u003e\n\u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/a\u003e\n      \u003c/div\u003e\n\u003cbr\u003e\nFrom VS Code,\n\n\u003col\u003e\n\u003cli\u003e\n\u003ca href=\"https://code.visualstudio.com/docs/getstarted/keybindings#_navigation\"\u003eshow all commands\u003c/a\u003e by pressing Control+Shift+P\u003c/li\u003e\n\u003cli\u003eEnter \u003cstrong\u003eDeveloper: Generate Color Theme From Current Settings\u003c/strong\u003e\n\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GiEXE5Aa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/show-all-commands.gif%3Fresize%3D643%252C146%26ssl%3D1\" alt=\"show all commands\"\u003e\nAfter executing the command, you will see a new tab, \u003ccode\u003eUntitled-1\u003c/code\u003e popping up with Color Theme in JSON format.\n\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GufYyFm2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/untitled-1.gif%3Fresize%3D713%252C434%26ssl%3D1\" alt=\"untitled-1\"\u003e\nNow select all (Ctrl+A) and copy the content.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"2-open-codesandbox-preference\" href=\"#2-open-codesandbox-preference\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🍀 2. Open CodeSandBox Preference\n\u003c/h3\u003e\n\n\u003cp\u003eClick on “Preferences” gear ⚙ button to open \u003cstrong\u003ePREFERENCES\u003c/strong\u003e modal box.\u003cbr\u003e\n \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--EFcg6yxP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/Click-Preference.gif%3Fresize%3D1064%252C549%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--EFcg6yxP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/Click-Preference.gif%3Fresize%3D1064%252C549%26ssl%3D1\" alt=\"Click Preference\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--9Hmh9kaC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/Custom-VSCode-Theme.gif%3Fresize%3D900%252C741%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--9Hmh9kaC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/Custom-VSCode-Theme.gif%3Fresize%3D900%252C741%26ssl%3D1\" alt=\"Custom VSCode Theme\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"3-paste-the-settings\" href=\"#3-paste-the-settings\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🍀 3. Paste the Settings\n\u003c/h3\u003e\n\n\u003cp\u003eAnd now paste the VS Code Color Theme copied from the previous step in the \u003cstrong\u003eCustom VSCode Theme\u003c/strong\u003e text area.\u003cbr\u003e\u003cbr\u003e\nYou can now see that the theme has been updated globally.\u003cbr\u003e\n \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--4CtGFtkR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/result.gif%3Fresize%3D1170%252C638%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--4CtGFtkR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/result.gif%3Fresize%3D1170%252C638%26ssl%3D1\" alt=\"result\"\u003e\u003c/a\u003e\u003cbr\u003e\nOk, now Enjoy the new Look \u0026amp; Feel 😎.\u003c/p\u003e\n\n\u003ch1\u003e\n  \u003ca name=\"working-demo\" href=\"#working-demo\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👩‍🏭 Working Demo\n\u003c/h1\u003e\n\n\u003cp\u003eHere is the video of steps above.\u003cbr\u003e\n\u003ciframe width=\"710\" height=\"399\" src=\"https://www.youtube.com/embed/HhaOuFMl9zI\" allowfullscreen\u003e \u003c/iframe\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n  \u003ca name=\"%E2%9A%A0-a-word-of-caution\" href=\"#%E2%9A%A0-a-word-of-caution\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ⚠ A Word of Caution\n\u003c/h1\u003e\n\n\u003cp\u003eNote that the change is global.\u003cbr\u003e\u003cbr\u003e\n\u003cem\u003eThat means, all previous SandBoxes (that’s what CodeSandBox calls each project) will be affected as well.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eBut I am sure that the default behavior is probably what you want, anyways 😛.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/07/17/adding-vs-code-theme-to-codesandbox/\"\u003eAdding VS Code Theme to CodeSandBox\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSlight Edge Coder\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: Adding VS Code Theme to CodeSandBox\r\npublished: true\r\ntags: vscode, codesandbox\r\ncanonical_url: https://www.slightedgecoder.com/2018/07/17/adding-vs-code-theme-to-codesandbox/\r\ncover_image: https://images.unsplash.com/photo-1523268755815-fe7c372a0349?ixlib=rb-0.3.5\u0026ixid=eyJhcHBfaWQiOjEyMDd9\u0026s=78f4a9da162471fff0acce3b5be33393\u0026dpr=1\u0026auto=format\u0026fit=crop\u0026w=1000\u0026q=80\u0026cs=tinysrgb\r\n---\r\n\r\nHave you ever wanted to match your [CodeSandBox](https://codesandbox.io) Editor Theme to match your [Visual Studio Code](https://code.visualstudio.com/) Color Theme?  \r\n_Well, you can._\r\n\r\nIt’s because of CodeSandBox uses [Monaco](https://github.com/Microsoft/monaco-editor) (a VS Code editor engine) by default.\r\n\r\nLet's make the magic ✨ happen~\r\n\r\n# 👣 Steps\r\nHere are the steps to make it happen.\r\n  1. Get VS Code Color Theme Settings\r\n  2. Open CodeSandBox Preference\r\n  3. Paste the Setting in CodeSandBox Preference modal box\r\n\r\nLet’s do this 💪!\r\n\r\n### 🍀 1. Get VS Code Color Theme Settings\r\n\r\nLet’s grab the color theme settings from VS Code.  \r\n_I am using [Cobalt2](https://marketplace.visualstudio.com/items?itemName=wesbos.theme-cobalt2) theme on CodeSandBox, and will be updating it to use [Fairy Floss](https://marketplace.visualstudio.com/items?itemName=nopjmp.fairyfloss) theme on VS Code._\r\n\r\n_I found this wondeful theme (Fairy Floss) from this post._\r\n{% link https://dev.to/aspittel/my-visual-studio-code-setup-1emn %}\r\nFrom VS Code,\r\n1. [show all commands](https://code.visualstudio.com/docs/getstarted/keybindings#_navigation) by pressing \u003ckbd\u003eControl\u003c/kbd\u003e+\u003ckbd\u003eShift+\u003ckbd\u003eP\u003c/kbd\u003e\u003c/kbd\u003e\r\n2. Enter **Developer: Generate Color Theme From Current Settings**\r\n ![show all commands](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/show-all-commands.gif?resize=643%2C146\u0026ssl=1)\r\nAfter executing the command, you will see a new tab, `Untitled-1` popping up with Color Theme in JSON format.\r\n ![untitled-1](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/untitled-1.gif?resize=713%2C434\u0026ssl=1)\r\nNow select all (\u003ckbd\u003eCtrl\u003c/kbd\u003e+\u003ckbd\u003eA\u003c/kbd\u003e) and copy the content.\r\n\r\n### 🍀 2. Open CodeSandBox Preference\r\nClick on “Preferences” gear ⚙ button to open **PREFERENCES** modal box.\r\n ![Click Preference](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/Click-Preference.gif?resize=1064%2C549\u0026ssl=1)\r\n![Custom VSCode Theme](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/Custom-VSCode-Theme.gif?resize=900%2C741\u0026ssl=1)\r\n\r\n### 🍀 3. Paste the Settings\r\nAnd now paste the VS Code Color Theme copied from the previous step in the **Custom VSCode Theme** text area.  \r\nYou can now see that the theme has been updated globally.\r\n ![result](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/result.gif?resize=1170%2C638\u0026ssl=1)\r\nOk, now Enjoy the new Look \u0026 Feel 😎.\r\n\r\n# 👩‍🏭 Working Demo\r\nHere is the video of steps above.\r\n{% youtube HhaOuFMl9zI %}\r\n\r\n# ⚠ A Word of Caution\r\nNote that the change is global.  \r\n_That means, all previous SandBoxes (that’s what CodeSandBox calls each project) will be affected as well._\r\n\r\nBut I am sure that the default behavior is probably what you want, anyways 😛.\r\n\r\nThe post [Adding VS Code Theme to CodeSandBox](https://www.slightedgecoder.com/2018/07/17/adding-vs-code-theme-to-codesandbox/) appeared first on [Slight Edge Coder](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/07/17/adding-vs-code-theme-to-codesandbox/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 2,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/07/17/adding-vs-code-theme-to-codesandbox/",
    "positive_reactions_count": 22,
    "edited_at": "2018-07-18T03:04:05.216Z",
    "crossposted_at": "2018-07-18T03:03:19.839Z",
    "language": "en",
    "cached_tag_list": "vscode, codesandbox",
    "path": "/dance2die/adding-vs-code-theme-to-codesandbox-1df7",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-10-04T17:28:34.328Z"
  },
  {
    "title": "Keeping track of on/off states of React components",
    "slug": "keeping-track-of-onoff-states-of-react-components-1fa9",
    "created_at": "2018-07-28T21:40:20.473Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/qxasy9jd0lymftrv7s0m.jpg",
    "description": "\n\nAdokiye Iruene asked a question on StackOverflow regarding applying a style on ...",
    "published": true,
    "published_at": "2018-07-28T20:54:58.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003ca href=\"https://stackoverflow.com/users/9561595/adokiye-iruene\"\u003eAdokiye Iruene\u003c/a\u003e asked a question on StackOverflow regarding applying a style on a clicked component not all the sibling components.  \u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://stackoverflow.com/questions/51516825/\"\u003eChange style for only clicked on view not all views\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe problem is that the Asokiye generated components with a list of records in a state.  \u003c/p\u003e\n\n\u003cp\u003eWhen a user clicked on a component, not only clicked component had a style applied, but also sibling components.\u003c/p\u003e\n\n\u003cp\u003eHow can we apply a style only on a clicked component from a list of components?\u003cbr\u003e\u003cbr\u003e\n\u003cem\u003eIf you want to know the answer you can cheat\u003c/em\u003e 😈 \u003cem\u003eby going directly to the \u003ca href=\"https://stackoverflow.com/a/51517907/4035\"\u003eanswer.\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"%F0%9F%97%9E-preface\" href=\"#%F0%9F%97%9E-preface\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🗞 Preface\n\u003c/h2\u003e\n\n\u003cp\u003eI will use a simple webpage that displays a list of texts wrapped in a component, \u003ccode\u003eChild\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--JJwIGh42--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/Sample-site-output-clicked.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--JJwIGh42--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/Sample-site-output-clicked.png%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003cfigcaption\u003eSample Code Output\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ciframe width=\"710\" height=\"399\" src=\"https://www.youtube.com/embed/d5OM-cuPWPo\" allowfullscreen\u003e \u003c/iframe\u003e\u003cfigcaption\u003eHow it works\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eWhen you click on an item, the page will highlight only the clicked line. by applying the following class, \u003ccode\u003ehighlight\u003c/code\u003e.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/c2dda43a478f8a06a9075fcfda146688.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eLet’s see how to apply that style per component on click.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://codesandbox.io/s/p7034m9n5x\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--pzpI10jk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codesandbox.io/static/img/play-codesandbox.svg\" alt=\"Edit so.answer.51516825\"\u003e\u003c/a\u003e\u003cfigcaption\u003eYou can follow along on CodeSandBox\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"relevant-codes\" href=\"#relevant-codes\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👩‍💻 Relevant Codes\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003eChild\u003c/code\u003e component returns texts and applies a style depending whether it’s clicked or not (using \u003ccode\u003eisClicked\u003c/code\u003e prop).\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/ee599566a6f79f5a57962075080a07d8.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003eApp.js\u003c/code\u003e renders Child components.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/bdf5546e36fa6b707399152a6476b389.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"analysis\" href=\"#analysis\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  📊 Analysis\n\u003c/h2\u003e\n\n\u003cp\u003eWhat needs to happen is that we need to keep a track of all on/off states of each component so that we can turn the state of each component on/off.\u003cbr\u003e\u003cbr\u003e\n\u003cem\u003eSo let’s track on/off states.\u003c/em\u003e\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/dc8503f15fc4ccbd9965cebc2f45c54f.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003cem\u003eI’ve declared it as an object, instead of as an array, I will get to it later\u003c/em\u003e. \u003cbr\u003e\n(I promise 🤞)\u003c/p\u003e\n\n\u003cp\u003eLet’s look at what happens when a user clicks on a Child component\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/b266166eeab17637eddfaa524ef0ff12.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eOK, it’s kind of hard to digest it so let’s go through it line by line.\u003c/p\u003e\n\n\u003cp\u003eOn line#4, I am getting all previously clicked states.\u003cbr\u003e\n\u003ccode\u003econst clicked = { ...prevState.clicked };\u003c/code\u003e\u003cbr\u003e\n\u003cem\u003eusing an \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax#Spread_in_object_literals\"\u003eobject spread syntax\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e, toggle previous state.\u003cbr\u003e\n\u003ccode\u003eclicked[i] = !clicked[i];\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eLastly, set the \u003ccode\u003eclicked\u003c/code\u003e state to the updated one.\u003cbr\u003e\n\u003ccode\u003ereturn { clicked }; // same as return { clicked: clicked };\u003c/code\u003e \u003cem\u003eNote that if the property name is same as the object key, you can \u003ca href=\"http://www.benmvp.com/learning-es6-enhanced-object-literals/\"\u003eshorten it\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eNow the question is, there is no property in the first place to set to in \u003ccode\u003eclicked[i] = !clicked[i]\u003c/code\u003e???\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"%E2%9A%92-a-bit-of-hack\" href=\"#%E2%9A%92-a-bit-of-hack\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ⚒ A bit of Hack\n\u003c/h2\u003e\n\n\u003cp\u003eOK, I’ve used a bit of JavaScript weirdness to set the clicked state of currently selected item.\u003cbr\u003e\u003cbr\u003e\nI won’t go into too much details as JavaScript’s truthiness gets \u003cstrong\u003every\u003c/strong\u003e hairy 😠💢).  \u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eSo I refer you to this article,\u003c/em\u003e \u003ca href=\"https://blog.usejournal.com/mastering-javascripts-and-logical-operators-fd619b905c8f\"\u003eMastering JavaScript’s \u0026amp;\u0026amp; and || logical operators\u003c/a\u003e by \u003ca href=\"https://blog.usejournal.com/@nicolasmarcora\"\u003eNicolas Marcora\u003c/a\u003e \u003cem\u003eif you want more details.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eBut what you need to know is that \u003cstrong\u003e\u003ccode\u003e!undefined\u003c/code\u003e returns true.\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eSo what happens in \u003ccode\u003eclicked[i] = !clicked[i]\u003c/code\u003e is that, \u003ccode\u003eclicked\u003c/code\u003e is an empty object initially \u003ccode\u003e{}\u003c/code\u003e.\u003cbr\u003e\u003cbr\u003e\nAnd \u003ccode\u003e!clicked[i]\u003c/code\u003e will be \u003ccode\u003eundefined\u003c/code\u003e and negating it with \u003ccode\u003e!\u003c/code\u003e operator will turn it into \u003ccode\u003etrue\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://i.giphy.com/media/l0IpXP8BwnMXvcOze/giphy.gif\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://i.giphy.com/media/l0IpXP8BwnMXvcOze/giphy.gif\" alt=\"Table Flip\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--_FipoMZc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/negating-undefined.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--_FipoMZc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/negating-undefined.png%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003cfigcaption\u003eNegating undefined\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eclicked\u003c/code\u003e object will have an item with value of \u003ccode\u003e1\u003c/code\u003e as the key and the on/off state as the value.\u003c/p\u003e\n\n\u003cp\u003eNow let’s get back to the previous question, why use an \u003cem\u003eobject\u003c/em\u003e instead of an \u003cem\u003earray\u003c/em\u003e to keep a track of clicked states?\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"why-use-an-object\" href=\"#why-use-an-object\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🤔 Why use an object?\n\u003c/h2\u003e\n\n\u003cp\u003eThis is to save previous memory as setting an empty array by index greater than 0 results in filling rest of space with \u003ccode\u003eundefined\u003c/code\u003e.  \u003c/p\u003e\n\n\u003cp\u003eSuppose that we declared \u003ccode\u003estate = { clicked: []}\u003c/code\u003e, then setting a value above first item would populate the array with \u003ccode\u003eundefined\u003c/code\u003e as shown below.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--1p92HvCZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/negating-wasted-space.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--1p92HvCZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/negating-wasted-space.png%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003cfigcaption\u003eWasted memory\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eI’ve set a value for the 4th item, \u003ccode\u003eclicked[3] = !clicked[3];\u003c/code\u003e and the array ended up adding the \u003ccode\u003e!clicked[3]\u003c/code\u003e value with \u003ccode\u003eundefined\u003c/code\u003e (\u0026lt;3 empty slots\u0026gt;) for first 3 items.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--flynqRWc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/sandbox-example-of-wasted-space.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--flynqRWc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/sandbox-example-of-wasted-space.png%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003cfigcaption\u003eArray vs. Object\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eYou can 👀 see ☝ that the object version stores states of clicked items only.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"full-source-code\" href=\"#full-source-code\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚀 Full Source Code\n\u003c/h2\u003e\n\n\u003cp\u003eAs mentioned above, you can see the working demo on \u003ca href=\"https://codesandbox.io/s/p7034m9n5x\"\u003eCodeSandBox\u003c/a\u003e.\u003cbr\u003e\u003cbr\u003e\nHere is the full source code (for completeness).\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/0a123f4e28b08cfc4f933e1f0880fcb6.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"partying-words\" href=\"#partying-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👋 Partying Words\n\u003c/h2\u003e\n\n\u003cp\u003eThe gist is that, keep a track of each component state in an object and toggle it.\u003c/p\u003e\n\n\n\u003chr\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/07/28/keep-track-of-on-off-states-of-reactjs-components/\"\u003eKeeping track of on/off states of React components\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: Keeping track of on/off states of React components\r\npublished: true\r\ntags: react, javascript\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/qxasy9jd0lymftrv7s0m.jpg\r\ncanonical_url: https://www.slightedgecoder.com/2018/07/28/keep-track-of-on-off-states-of-reactjs-components/\r\n---\r\n\r\n[Adokiye Iruene](https://stackoverflow.com/users/9561595/adokiye-iruene) asked a question on StackOverflow regarding applying a style on a clicked component not all the sibling components.  \r\n  \r\n[Change style for only clicked on view not all views](https://stackoverflow.com/questions/51516825/)\r\n\r\nThe problem is that the Asokiye generated components with a list of records in a state.  \r\n  \r\nWhen a user clicked on a component, not only clicked component had a style applied, but also sibling components.\r\n\r\nHow can we apply a style only on a clicked component from a list of components?  \r\n_If you want to know the answer you can cheat_ 😈 _by going directly to the [answer.](https://stackoverflow.com/a/51517907/4035)_\r\n\r\n## 🗞 Preface\r\n\r\nI will use a simple webpage that displays a list of texts wrapped in a component, `Child`.\r\n\r\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/Sample-site-output-clicked.png?w=1170\u0026ssl=1)\u003cfigcaption\u003eSample Code Output\u003c/figcaption\u003e\r\n\r\n{% youtube d5OM-cuPWPo %}\u003cfigcaption\u003eHow it works\u003c/figcaption\u003e\r\n\r\nWhen you click on an item, the page will highlight only the clicked line. by applying the following class, `highlight`.\r\n\r\n{% gist https://gist.github.com/dance2die/c2dda43a478f8a06a9075fcfda146688.js %}\r\n\r\nLet’s see how to apply that style per component on click.\r\n\r\n[![Edit so.answer.51516825](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/p7034m9n5x)\u003cfigcaption\u003eYou can follow along on CodeSandBox\u003c/figcaption\u003e\r\n\r\n## 👩‍💻 Relevant Codes\r\n\r\n`Child` component returns texts and applies a style depending whether it’s clicked or not (using `isClicked` prop).\r\n\r\n{% gist https://gist.github.com/dance2die/ee599566a6f79f5a57962075080a07d8.js %}\r\n\r\n`App.js` renders Child components.\r\n\r\n{% gist https://gist.github.com/dance2die/bdf5546e36fa6b707399152a6476b389.js %}\r\n## 📊 Analysis\r\n\r\nWhat needs to happen is that we need to keep a track of all on/off states of each component so that we can turn the state of each component on/off.  \r\n_So let’s track on/off states._\r\n\r\n{% gist https://gist.github.com/dance2die/dc8503f15fc4ccbd9965cebc2f45c54f.js %}\r\n\r\n_I’ve declared it as an object, instead of as an array, I will get to it later_. \r\n(I promise 🤞)\r\n\r\nLet’s look at what happens when a user clicks on a Child component\r\n\r\n{% gist https://gist.github.com/dance2die/b266166eeab17637eddfaa524ef0ff12.js %}\r\n\r\nOK, it’s kind of hard to digest it so let’s go through it line by line.\r\n\r\nOn line#4, I am getting all previously clicked states.\r\n`const clicked = { ...prevState.clicked };`\r\n_using an [object spread syntax](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax#Spread_in_object_literals)._\r\n\r\n, toggle previous state.\r\n`clicked[i] = !clicked[i];`\r\n\r\nLastly, set the `clicked` state to the updated one.\r\n`return { clicked }; // same as return { clicked: clicked };` _Note that if the property name is same as the object key, you can [shorten it](http://www.benmvp.com/learning-es6-enhanced-object-literals/)._\r\n\r\nNow the question is, there is no property in the first place to set to in `clicked[i] = !clicked[i]`???\r\n\r\n## ⚒ A bit of Hack\r\n\r\nOK, I’ve used a bit of JavaScript weirdness to set the clicked state of currently selected item.  \r\nI won’t go into too much details as JavaScript’s truthiness gets **very** hairy 😠💢).  \r\n  \r\n_So I refer you to this article,_ [Mastering JavaScript’s \u0026\u0026 and || logical operators](https://blog.usejournal.com/mastering-javascripts-and-logical-operators-fd619b905c8f) by [Nicolas Marcora](https://blog.usejournal.com/@nicolasmarcora) _if you want more details._\r\n\r\nBut what you need to know is that **`!undefined` returns true.**\r\n\r\nSo what happens in `clicked[i] = !clicked[i]` is that, `clicked` is an empty object initially `{}`.  \r\nAnd `!clicked[i]` will be `undefined` and negating it with `!` operator will turn it into `true`.\r\n\r\n![Table Flip](https://media.giphy.com/media/l0IpXP8BwnMXvcOze/giphy.gif)\r\n\r\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/negating-undefined.png?w=1170\u0026ssl=1)\u003cfigcaption\u003eNegating undefined\u003c/figcaption\u003e\r\n\r\n`clicked` object will have an item with value of `1` as the key and the on/off state as the value.\r\n\r\nNow let’s get back to the previous question, why use an _object_ instead of an _array_ to keep a track of clicked states?\r\n\r\n## 🤔 Why use an object?\r\n\r\nThis is to save previous memory as setting an empty array by index greater than 0 results in filling rest of space with `undefined`.  \r\n  \r\nSuppose that we declared `state = { clicked: []}`, then setting a value above first item would populate the array with `undefined` as shown below.\r\n\r\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/negating-wasted-space.png?w=1170\u0026ssl=1)\u003cfigcaption\u003eWasted memory\u003c/figcaption\u003e\r\n\r\nI’ve set a value for the 4th item, `clicked[3] = !clicked[3];` and the array ended up adding the `!clicked[3]` value with `undefined` (\\\u003c3 empty slots\\\u003e) for first 3 items.\r\n\r\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/07/sandbox-example-of-wasted-space.png?w=1170\u0026ssl=1)\u003cfigcaption\u003eArray vs. Object\u003c/figcaption\u003e\r\n\r\nYou can 👀 see ☝ that the object version stores states of clicked items only.\r\n\r\n## 🚀 Full Source Code\r\n\r\nAs mentioned above, you can see the working demo on [CodeSandBox](https://codesandbox.io/s/p7034m9n5x).  \r\nHere is the full source code (for completeness).\r\n\r\n{% gist https://gist.github.com/dance2die/0a123f4e28b08cfc4f933e1f0880fcb6.js %}\r\n## 👋 Partying Words\r\n\r\nThe gist is that, keep a track of each component state in an object and toggle it.\r\n\r\n* * *\r\n\r\nThe post [Keeping track of on/off states of React components](https://www.slightedgecoder.com/2018/07/28/keep-track-of-on-off-states-of-reactjs-components/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/07/28/keep-track-of-on-off-states-of-reactjs-components/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 3,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/07/28/keep-track-of-on-off-states-of-reactjs-components/",
    "positive_reactions_count": 44,
    "edited_at": "2018-07-29T03:07:13.842Z",
    "crossposted_at": "2018-07-28T21:58:27.248Z",
    "language": null,
    "cached_tag_list": "react, javascript",
    "path": "/dance2die/keeping-track-of-onoff-states-of-react-components-1fa9",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-08-03T00:00:38.430Z"
  },
  {
    "title": "On “Create a Blog to Boost Your Career Course” (by John Sonmez)",
    "slug": "on-create-a-blog-to-boost-your-career-course-by-john-sonmez-1bmp-temp-slug-8339005",
    "created_at": "2018-07-29T06:04:53.035Z",
    "main_image": null,
    "description": "\n\n* Featured Image – “DSCOVR Liftoff” by NASA Goddard Space Flight Center, used u...",
    "published": false,
    "published_at": "2017-04-29T14:10:04.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/gsfc/16495356966/in/photolist-r8D1Wj-QQCfPt-fWFARy-S5AWz4-o1LYsg-qphFtm-pWgcvR-53jKW-oeo6Tu-53jKR-RbLeSU-QQCg5i-53jLg-ab1kba-RH57Sf-o4T16c-U6SM7x-rzpin-S5AXMe-sisaCm-dm1R1s-edDxyS-dSzo2A-hG4EHb-T2DJDV-RDSvmS-SSLyjx-S5AXjR-S5BhLr-aRv9fK-qsyGca-bGoWje-8JpmiE-TT6qEt-bAY1qT-T4Cvxn-dz6NsH-U34w9D-SNzaYZ-jxEio4-SNz6Sc-S5B68M-av1gT2-aagrq6-b9MkvB-fBzq1-c4BB4f-oqYeJC-brcoqV-RKv6k3\"\u003eDSCOVR Liftoff\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/gsfc/\"\u003eNASA Goddard Space Flight Center\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by/2.0/\"\u003eCC BY 2.0\u003c/a\u003e\u003c/small\u003e\u003c/p\u003e\n\n\u003cp\u003eAfter reading quite a bit of self-development books, I was looking for a way to grow myself as a developer.\u003c/p\u003e\n\n\u003cp\u003eI’ve been following John Sonmez for about a year after watching his videos courses on \u003ca href=\"https://www.pluralsight.com/\"\u003ePluralSight\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eHe has been consistently posting quality blog posts and YouTube videos answering issues and problems that developers face.\u003c/p\u003e\n\n\u003cp\u003eAs I learned to mimic what successful people do in the beginning (but you need to develop your own ways afterward), I decided to do what John did to become a great developer.\u003c/p\u003e\n\n\u003cp\u003eIn his book, \u003ca href=\"http://simpleprogrammer.com/softskills\"\u003eSoft Skills\u003c/a\u003e (4.5 stars by 200+ people on Amazon), John mentions that developers need a blog. I was wondering why but he makes good arguments backed up with his experience. I’ve already had some positive effects after starting a blog. I’ve started learning more to come up with more writing materials and writing helped me to retain what I’ve learned.\u003c/p\u003e\n\n\u003cp\u003eThen I ran into a problem on how to get started with one.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--gxDVjPp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/04/Book-Cover.jpg%3Fresize%3D247%252C319%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--gxDVjPp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/04/Book-Cover.jpg%3Fresize%3D247%252C319%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThankfully, John has written a workbook, which shows how. It’s called \u003ca href=\"https://simpleprogrammer.com/blog-course\"\u003eHow to Create a Blog that Boosts Your Career\u003c/a\u003e. After purchasing the book, John sends you a weekly email on how to better utilize the book and what steps to take to get the best out of it.\u003c/p\u003e\n\n\u003cp\u003eI’d like to learn at a consistent pace as my blog theme (Making Progressive Enhancements) shows. An email is sent only one week at a time so there is no pressure on following each step. No matter how great a product is, if you don’t take an “action” and follow it “consistently”, the effort made up to a certain point will be lost so I am devoting hours each week to follow the steps in the workbook.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Conclusion\n\u003c/h3\u003e\n\n\u003cp\u003eIf you need a reason to get started with a blog, check out Soft Skills. If you are sold, try out  \u003cem\u003eHow to Create a Blog that Boosts Your Career\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2017/04/29/create-blog-boost-career-course-john-sonmez/\"\u003eOn “Create a Blog to Boost Your Career Course” (by John Sonmez)\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: On “Create a Blog to Boost Your Career Course” (by John Sonmez)\npublished: false\ntags: Blog Entry,book review,blog,boost\ncanonical_url: https://www.slightedgecoder.com/2017/04/29/create-blog-boost-career-course-john-sonmez/\n---\n\n\\* \u003csmall\u003eFeatured Image – “\u003ca href=\"https://www.flickr.com/photos/gsfc/16495356966/in/photolist-r8D1Wj-QQCfPt-fWFARy-S5AWz4-o1LYsg-qphFtm-pWgcvR-53jKW-oeo6Tu-53jKR-RbLeSU-QQCg5i-53jLg-ab1kba-RH57Sf-o4T16c-U6SM7x-rzpin-S5AXMe-sisaCm-dm1R1s-edDxyS-dSzo2A-hG4EHb-T2DJDV-RDSvmS-SSLyjx-S5AXjR-S5BhLr-aRv9fK-qsyGca-bGoWje-8JpmiE-TT6qEt-bAY1qT-T4Cvxn-dz6NsH-U34w9D-SNzaYZ-jxEio4-SNz6Sc-S5B68M-av1gT2-aagrq6-b9MkvB-fBzq1-c4BB4f-oqYeJC-brcoqV-RKv6k3\"\u003eDSCOVR Liftoff\u003c/a\u003e” by \u003ca href=\"https://www.flickr.com/photos/gsfc/\"\u003eNASA Goddard Space Flight Center\u003c/a\u003e, used under \u003ca href=\"https://creativecommons.org/licenses/by/2.0/\"\u003eCC BY 2.0\u003c/a\u003e\u003c/small\u003e\n\nAfter reading quite a bit of self-development books, I was looking for a way to grow myself as a developer.\n\nI’ve been following John Sonmez for about a year after watching his videos courses on [PluralSight](https://www.pluralsight.com/).\n\nHe has been consistently posting quality blog posts and YouTube videos answering issues and problems that developers face.\n\nAs I learned to mimic what successful people do in the beginning (but you need to develop your own ways afterward), I decided to do what John did to become a great developer.\n\nIn his book, [Soft Skills](http://simpleprogrammer.com/softskills) (4.5 stars by 200+ people on Amazon), John mentions that developers need a blog. I was wondering why but he makes good arguments backed up with his experience. I’ve already had some positive effects after starting a blog. I’ve started learning more to come up with more writing materials and writing helped me to retain what I’ve learned.\n\nThen I ran into a problem on how to get started with one.\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2017/04/Book-Cover.jpg?resize=247%2C319\u0026ssl=1)\n\nThankfully, John has written a workbook, which shows how. It’s called [How to Create a Blog that Boosts Your Career](https://simpleprogrammer.com/blog-course). After purchasing the book, John sends you a weekly email on how to better utilize the book and what steps to take to get the best out of it.\n\nI’d like to learn at a consistent pace as my blog theme (Making Progressive Enhancements) shows. An email is sent only one week at a time so there is no pressure on following each step. No matter how great a product is, if you don’t take an “action” and follow it “consistently”, the effort made up to a certain point will be lost so I am devoting hours each week to follow the steps in the workbook.\n\n### Conclusion\n\nIf you need a reason to get started with a blog, check out Soft Skills. If you are sold, try out  _How to Create a Blog that Boosts Your Career_.\n\nThe post [On “Create a Blog to Boost Your Career Course” (by John Sonmez)](https://www.slightedgecoder.com/2017/04/29/create-blog-boost-career-course-john-sonmez/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2017/04/29/create-blog-boost-career-course-john-sonmez/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2017/04/29/create-blog-boost-career-course-john-sonmez/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": null,
    "cached_tag_list": "blogentry, bookreview, blog, boost",
    "path": "/dance2die/on-create-a-blog-to-boost-your-career-course-by-john-sonmez-1bmp-temp-slug-8339005",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-04-29T14:10:04.000Z"
  },
  {
    "title": "Infinite Scrolling in React using JavaScript Generator",
    "slug": "infinite-scrolling-in-react-using-javascript-generator-hk4",
    "created_at": "2018-08-11T17:01:11.389Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/t151xg03971lgf0sf2j9.jpg",
    "description": "\n\nPhoto by JOHANNA MONTOYA on Unsplash\n\nWhile reading the following article, A Qu...",
    "published": true,
    "published_at": "2018-08-11T16:47:20.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/PRumW--tkc4?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eJOHANNA MONTOYA\u003c/a\u003e on \u003ca href=\"https://unsplash.com\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eWhile reading the following article, \u003ca href=\"https://dev.to/sreisner/a-quick-practical-use-case-for-es6-generators-building-an-infinitely-repeating-array-1onk\"\u003eA Quick, Practical Use Case for ES6 Generators: Building an Infinitely Repeating Array\u003c/a\u003e, I happened to be checking out \u003ca href=\"https://www.reddit.com/dev/api/\"\u003eReddit API\u003c/a\u003e.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag__link\"\u003e\n        \u003ca href=\"/sreisner\" class=\"ltag__link__link\"\u003e\n          \u003cdiv class=\"ltag__link__pic\"\u003e\n            \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--MCVWlMhA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--DjyB0RKI--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://thepracticaldev.s3.amazonaws.com/uploads/user/profile_image/76056/13368218-93c3-4cd0-869d-dcc91d42e2c9.jpeg\" alt=\"sreisner image\"\u003e\n          \u003c/div\u003e\u003c/a\u003e\n          \u003ca href=\"/sreisner/a-quick-practical-use-case-for-es6-generators-building-an-infinitely-repeating-array-1onk\" class=\"ltag__link__link\"\u003e\n            \u003cdiv class=\"ltag__link__content\"\u003e\n              \u003ch2\u003eA Quick, Practical Use Case for ES6 Generators: Building an Infinitely Repeating Array\u003c/h2\u003e\n              \u003ch3\u003eShawn Reisner\u003c/h3\u003e\n              \u003cdiv class=\"ltag__link__taglist\"\u003e\n\u003cspan class=\"ltag__link__tag\"\u003e#javascript\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#tutorial\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#generator\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#arrays\u003c/span\u003e\n\u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/a\u003e\n      \u003c/div\u003e\n\n\n\u003cp\u003eJavaScript Generator is a great way to infinitely return data and thought I could use it for 🥁🥁🥁 infinite scrolling.\u003c/p\u003e\n\n\u003cp\u003eLet’s see how to implement infinite scrolling in React with JavaScript Generator.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"javascript-generator\" href=\"#javascript-generator\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚀 JavaScript Generator?\n\u003c/h2\u003e\n\n\u003cp\u003eA \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator\"\u003egenerator\u003c/a\u003e is an easy way to implement both \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterator_protocol\"\u003eIterator\u003c/a\u003e and \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterable_protocol\"\u003eIterable\u003c/a\u003e protocols.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eAs usual, I will be lazy and refer you to these articles.\u003c/em\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://dev.to/kepta/how-i-learned-to-stop-looping-and-love-the-iterator-463j\"\u003eHow I learned to Stop Looping and Love the Iterator\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator\"\u003eGenerator – JavaScript MDN Documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIn a gist, think of it as an object that returns a sequence of data infinitely until you tell it to stop.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"generator-to-return-reddit-data\" href=\"#generator-to-return-reddit-data\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚀 Generator to Return Reddit Data\n\u003c/h2\u003e\n\n\u003cp\u003eHere is a generator function that returns ReactJS subreddit data.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/053647daae0fc976d56b6c1b4a9775c7.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eFirst thing to note is that, generators are declared with keyword \u003ccode\u003efunction*\u003c/code\u003e (notice the star after function). \u003cbr\u003e\nThat \u003ccode\u003e*\u003c/code\u003e is what \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*\"\u003emakes a function a generator\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eOn line#2, a URL is passed, with default value set to ReactJS API URL.\u003cbr\u003e\u003cbr\u003e\nLine#4 shows a declaration of \u003ccode\u003enextUrl\u003c/code\u003e, which is constructed using the url from line#2 and \u003ccode\u003eafter\u003c/code\u003e argument required to fetch next batch of data (we will see it in a moment).\u003c/p\u003e\n\n\u003cp\u003eNow the \u003ccode\u003ewhile\u003c/code\u003e loop is where the interesting things happen.\u003cbr\u003e\n\u003ccode\u003enextUrl\u003c/code\u003e is empty initially so it’s set to \u003ccode\u003eurl\u003c/code\u003e passed as a function argument.\u003c/p\u003e\n\n\u003cp\u003eThen we fetch Reddit data as JSON, which has a shape shown below.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/c337746b58ea1c53868179741c0feb1f.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eValue stored in \u003ccode\u003eafter\u003c/code\u003e property is what we need to fetch next batch of data.\u003cbr\u003e\nAnd line #10 constructs the next URL to query to fetch more data.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/9fe429a44fbdb250eb9644b0594099ee.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\u003cbr\u003e\n\u003cem\u003e\u003cem\u003eThank you \u003ca href=\"https://www.reddit.com/user/tills1993\"\u003etills1993\u003c/a\u003e for finding the \u003ca href=\"https://www.reddit.com/r/reactjs/comments/96i0oz/infinite_scrolling_in_react_using_javascript/e41d9m4\"\u003ebug\u003c/a\u003e in the previous code.\u003c/em\u003e\u003c/em\u003e\n\n\u003cp\u003eNow you might see this unfamiliar keyword \u003ccode\u003eyield\u003c/code\u003e that returns an array of data using \u003ccode\u003eArray#map\u003c/code\u003e.\u003cbr\u003e\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/yield\"\u003eYield\u003c/a\u003e temporarily returns the data and gives up the control to the calling code.\u003c/p\u003e\n\n\u003cp\u003eSo when the calling code calls \u003ccode\u003egetContent\u003c/code\u003e again, all variables inside the \u003ccode\u003ewhile\u003c/code\u003e loop is restored thus \u003ccode\u003enextUrl\u003c/code\u003e will contain the next URL not \u003ccode\u003enull\u003c/code\u003e.\u003cbr\u003e\n(\u003cem\u003eI am not sure if it’s the work of \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures\"\u003eclosures\u003c/a\u003e so I’d love to hear your feedback on it\u003c/em\u003e)\u003c/p\u003e\n\n\u003cp\u003eLastly, we export \u003ccode\u003egetContent\u003c/code\u003e from \u003ccode\u003eContentRepo.js\u003c/code\u003e.\u003cbr\u003e\nWe’ve covered how the generator function, \u003ccode\u003egetContent\u003c/code\u003e works so let’s move on to implement infinite scrolling in React.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"end-result\" href=\"#end-result\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚀 End Result\n\u003c/h2\u003e\n\n\u003cp\u003eBefore moving on, let’s see how the end result looks visually.\u003cbr\u003e\n\u003ciframe width=\"710\" height=\"399\" src=\"https://www.youtube.com/embed/L-aEA5c3EYs\" allowfullscreen\u003e \u003c/iframe\u003e\u003cbr\u003e\nIt loads 4 stories with “Load More Stories” button.\u003cbr\u003e\nInfinite scrolling will happen when the page has stories that spans longer than the view port height.\u003cbr\u003e\n\u003cem\u003ePlease pardon the color combinations, I tried my best to make it pretty…\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eNow you see how the end result looks, let’s move on.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"implementing-infinite-scrolling\" href=\"#implementing-infinite-scrolling\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚀 Implementing Infinite Scrolling\n\u003c/h2\u003e\n\n\u003cp\u003eLet’s see the main component App’s structure.\u003cbr\u003e\n\u003c/p\u003e\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/e22997d6d642f6dac295f916714d252e.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eApp’s state contains all Reddit posts, and a flag to see if we have reached the bottom of the page.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003erepo\u003c/code\u003e is a generator that returns Reddit data infinitely as mentioned in Generator to Return Reddit Data.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003egetNextPosts\u003c/code\u003e returns next batch of Reddit posts (data fetch logic is hidden away in the generator function).\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ewindowSizeHandler\u003c/code\u003e is a callback that’s triggered when the browser window is resized or scrolled.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ecomponentDidMount\u003c/code\u003e is where we register Window \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/Events/resize\"\u003eResize\u003c/a\u003e \u0026amp; \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/Events/scroll\"\u003eScroll\u003c/a\u003e events and get initial batch of Reddit posts.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ecomponentWillUnmount\u003c/code\u003e is where we unregister Resize \u0026amp; Scroll events to remove listeners.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eloadMoreStories\u003c/code\u003e is a helper function that’s called by \u003ccode\u003eLoad More Stories\u003c/code\u003e button.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003erender\u003c/code\u003e is where we load posts and shows \u003ccode\u003eLoad More Stories\u003c/code\u003e button.\nLet’s see the implementation of each method one by one.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"component-implementation-details\" href=\"#component-implementation-details\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚀 Component Implementation Details\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"componentdidmount\" href=\"#componentdidmount\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🗿 componentDidMount\n\u003c/h3\u003e\n\n\u003cp\u003eWe register two window events and fetch initial posts to display.\u003cbr\u003e\n\u003c/p\u003e\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/478cd39c072ae76ef774c63efc9735b5.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eI’ve used \u003ca href=\"https://lodash.com/docs/4.17.5#throttle\"\u003elodash.throttle\u003c/a\u003e function to limit the number of events generated.\u003cbr\u003e\n\u003cem\u003eOr else there will be too many events fired and make too many Reddit API requests.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003e\u003ca href=\"https://www.reddit.com/user/spryes\"\u003espryes\u003c/a\u003e on reddit has pointed out that \u003ccode\u003ethrottle\u003c/code\u003e would return a new function every time so I've created a reference to the throttled implementation in \u003ccode\u003ethrrotledWindowHandler\u003c/code\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eThe reason for choosing \u003ccode\u003ethrottle\u003c/code\u003e over \u003ccode\u003edebounce\u003c/code\u003e is because I wanted to load next batch of data without having to wait until user started/finished scrolling/resizing.\u003cbr\u003e\n\u003cem\u003eFor the difference, refer to\u003c/em\u003e \u003ca href=\"https://css-tricks.com/debouncing-throttling-explained-examples/\"\u003eDebouncing and Throttling Explained Through Examples.\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"componentwillunmount\" href=\"#componentwillunmount\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🗿 componentWillUnmount\n\u003c/h3\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/06c36e41bade67b3d95259a717ec4388.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\u003cbr\u003e\nMake sure to clean up and free up listeners when the component is unmounted.\n\n\u003ch3\u003e\n  \u003ca name=\"windowsizehandler\" href=\"#windowsizehandler\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🗿 windowSizeHandler\n\u003c/h3\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/7737098b139ab2607952530f70584864.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\u003cbr\u003e\nFirst we calculate whether we have reached the bottom of the viewport (\u003ccode\u003eisBottomReached\u003c/code\u003e).\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003ewindow.scrollY\u003c/code\u003e is how much one has scrolled vertically so far\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ewindow.innerHeight\u003c/code\u003e is the viewport height\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003edocument.body.offsetHeight\u003c/code\u003e indicates the total height of the content in \u003ccode\u003e\u0026lt;body\u0026gt;\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIf the sum of \u003ccode\u003escrollY\u003c/code\u003e and \u003ccode\u003einnerHeight\u003c/code\u003e is same as \u003ccode\u003edocument.bodyOffsetHeight\u003c/code\u003e, then we have reached the bottom.\u003cbr\u003e\nAn arbitrary \u003ccode\u003eheightOffset\u003c/code\u003e value is for fetching data before reaching the bottom.\u003cbr\u003e\nCheck out the demo below, which demonstrates the usage of \u003ccode\u003eheightOffset\u003c/code\u003e.\u003cbr\u003e\n\u003ciframe width=\"710\" height=\"399\" src=\"https://www.youtube.com/embed/2WS5wptSg0c\" allowfullscreen\u003e \u003c/iframe\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"getnextposts\" href=\"#getnextposts\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🗿 getNextPosts\n\u003c/h3\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/b528f1f977bc000c3b1cde97146a1a9b.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\u003cbr\u003e\nWe fetch next posts using the generator object instance, \u003ccode\u003e(await this.repo.next()).value\u003c/code\u003e.\n\n\u003cp\u003e💁 \u003cem\u003eNote that you don’t need to pass any arguments or keep a track of next URL to call. It’s completely abstracted away.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eIn line#4, new posts (\u003ccode\u003eposts: [...prevState.posts, ...newPosts]\u003c/code\u003e) are added\u003cbr\u003e\nand turns off bottom flag since we just loaded new stories.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"render\" href=\"#render\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🗿 render\n\u003c/h3\u003e\n\n\u003cp\u003eHere we construct reddit posts and display \u003ccode\u003eLoad More Stories\u003c/code\u003e button.\u003cbr\u003e\n\u003c/p\u003e\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/75ee7685c185f062e7daf8143b2ce8e8.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"loadmorestories\" href=\"#loadmorestories\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🗿 loadMoreStories\n\u003c/h3\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/c3519d71acc44e1dd1bab71165a97bbe.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\u003cbr\u003e\n\u003ccode\u003egetNextPosts\u003c/code\u003e is asynchronous so I wrapped it in an \u003ca href=\"https://developer.mozilla.org/en-US/docs/Glossary/IIFE\"\u003eIIFE\u003c/a\u003e(Immediately Invoked Function Expression) as \u003ca href=\"https://reactjs.org/blog/2018/03/01/sneak-peek-beyond-react-16.html\"\u003easync rendering\u003c/a\u003e will be available in later version.\n\n\u003ch3\u003e\n  \u003ca name=\"redditpost\" href=\"#redditpost\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🗿 RedditPost\n\u003c/h3\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/c861dc490bd4eec2e28fdb098ea0a3a7.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\u003cbr\u003e\nLastly, RedditPost component shows title and post content\n\n\u003ch2\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👋 Parting Words\n\u003c/h2\u003e\n\n\u003cp\u003eJavaScript generator abstracted away all nitty gritty details on how to fetch data, and keep track of next URL to fetch from.\u003cbr\u003e\nAnd make sure you either throttle or debounce windows scroll \u0026amp; resize events as they fire very rapidly as explained in this post, \u003ca href=\"https://css-tricks.com/debouncing-throttling-explained-examples/\"\u003eDebouncing and Throttling Explained Through Examples\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eYou can get your hands dirty in two ways.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eEdit on \u003ca href=\"https://codesandbox.io/s/04v892702v\"\u003eCodeSandBox\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eGitHub \u003ca href=\"https://github.com/dance2die/throwaway.react.window_bottom_check\"\u003erepository\u003c/a\u003e to clone and play around locally.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/08/11/infinite-scrolling-in-react-using-javascript-generator/\"\u003eInfinite Scrolling in React using JavaScript Generator\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e\u003c/em\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: Infinite Scrolling in React using JavaScript Generator\r\npublished: true\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/t151xg03971lgf0sf2j9.jpg\r\ntags: react, javascript, generator, tutorial\r\ncanonical_url: https://www.slightedgecoder.com/2018/08/11/infinite-scrolling-in-react-using-javascript-generator/\r\n---\r\n\r\n_Photo by [JOHANNA MONTOYA](https://unsplash.com/photos/PRumW--tkc4?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com)_\r\n\r\nWhile reading the following article, [A Quick, Practical Use Case for ES6 Generators: Building an Infinitely Repeating Array](https://dev.to/sreisner/a-quick-practical-use-case-for-es6-generators-building-an-infinitely-repeating-array-1onk), I happened to be checking out [Reddit API](https://www.reddit.com/dev/api/).\r\n\r\n{% link https://dev.to/sreisner/a-quick-practical-use-case-for-es6-generators-building-an-infinitely-repeating-array-1onk %}\r\n\r\nJavaScript Generator is a great way to infinitely return data and thought I could use it for 🥁🥁🥁 infinite scrolling.\r\n\r\nLet’s see how to implement infinite scrolling in React with JavaScript Generator.\r\n\r\n## 🚀 JavaScript Generator?\r\n\r\nA [generator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator) is an easy way to implement both [Iterator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterator_protocol) and [Iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterable_protocol) protocols.\r\n\r\n_As usual, I will be lazy and refer you to these articles._\r\n\r\n- [How I learned to Stop Looping and Love the Iterator](https://dev.to/kepta/how-i-learned-to-stop-looping-and-love-the-iterator-463j)\r\n- [Generator – JavaScript MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator)\r\n\r\nIn a gist, think of it as an object that returns a sequence of data infinitely until you tell it to stop.\r\n\r\n## 🚀 Generator to Return Reddit Data\r\n\r\nHere is a generator function that returns ReactJS subreddit data.\r\n\r\n{% gist https://gist.github.com/dance2die/053647daae0fc976d56b6c1b4a9775c7 %}\r\n\r\nFirst thing to note is that, generators are declared with keyword `function*` (notice the star after function). \r\nThat `*` is what [makes a function a generator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*).\r\n\r\nOn line#2, a URL is passed, with default value set to ReactJS API URL.  \r\nLine#4 shows a declaration of `nextUrl`, which is constructed using the url from line#2 and `after` argument required to fetch next batch of data (we will see it in a moment).\r\n\r\nNow the `while` loop is where the interesting things happen.\r\n`nextUrl` is empty initially so it’s set to `url` passed as a function argument.\r\n\r\nThen we fetch Reddit data as JSON, which has a shape shown below.\r\n\r\n{% gist https://gist.github.com/dance2die/c337746b58ea1c53868179741c0feb1f %}\r\n\r\nValue stored in `after` property is what we need to fetch next batch of data.\r\nAnd line #10 constructs the next URL to query to fetch more data.\r\n\r\n{% gist https://gist.github.com/dance2die/9fe429a44fbdb250eb9644b0594099ee %}\r\n_*Thank you [tills1993](https://www.reddit.com/user/tills1993) for finding the [bug](https://www.reddit.com/r/reactjs/comments/96i0oz/infinite_scrolling_in_react_using_javascript/e41d9m4) in the previous code.*_\r\n\r\nNow you might see this unfamiliar keyword `yield` that returns an array of data using `Array#map`.\r\n[Yield](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/yield) temporarily returns the data and gives up the control to the calling code.\r\n\r\nSo when the calling code calls `getContent` again, all variables inside the `while` loop is restored thus `nextUrl` will contain the next URL not `null`.\r\n(_I am not sure if it’s the work of [closures](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures) so I’d love to hear your feedback on it_)\r\n\r\nLastly, we export `getContent` from `ContentRepo.js`.\r\nWe’ve covered how the generator function, `getContent` works so let’s move on to implement infinite scrolling in React.\r\n\r\n## 🚀 End Result\r\n\r\nBefore moving on, let’s see how the end result looks visually.\r\n{% youtube L-aEA5c3EYs %}\r\nIt loads 4 stories with “Load More Stories” button.\r\nInfinite scrolling will happen when the page has stories that spans longer than the view port height.\r\n_Please pardon the color combinations, I tried my best to make it pretty…_\r\n\r\nNow you see how the end result looks, let’s move on.\r\n\r\n## 🚀 Implementing Infinite Scrolling\r\n\r\nLet’s see the main component App’s structure.\r\n{% gist https://gist.github.com/dance2die/e22997d6d642f6dac295f916714d252e %}\r\n\r\nApp’s state contains all Reddit posts, and a flag to see if we have reached the bottom of the page.\r\n\r\n- `repo` is a generator that returns Reddit data infinitely as mentioned in Generator to Return Reddit Data.\r\n- `getNextPosts` returns next batch of Reddit posts (data fetch logic is hidden away in the generator function).\r\n- `windowSizeHandler` is a callback that’s triggered when the browser window is resized or scrolled.\r\n- `componentDidMount` is where we register Window [Resize](https://developer.mozilla.org/en-US/docs/Web/Events/resize) \u0026 [Scroll](https://developer.mozilla.org/en-US/docs/Web/Events/scroll) events and get initial batch of Reddit posts.\r\n- `componentWillUnmount` is where we unregister Resize \u0026 Scroll events to remove listeners.\r\n- `loadMoreStories` is a helper function that’s called by `Load More Stories` button.\r\n- `render` is where we load posts and shows `Load More Stories` button.\r\nLet’s see the implementation of each method one by one.\r\n\r\n## 🚀 Component Implementation Details\r\n### 🗿 componentDidMount\r\n\r\nWe register two window events and fetch initial posts to display.\r\n{% gist https://gist.github.com/dance2die/478cd39c072ae76ef774c63efc9735b5 %}\r\n\r\nI’ve used [lodash.throttle](https://lodash.com/docs/4.17.5#throttle) function to limit the number of events generated.\r\n_Or else there will be too many events fired and make too many Reddit API requests._\r\n\r\n_[spryes](https://www.reddit.com/user/spryes) on reddit has pointed out that `throttle` would return a new function every time so I've created a reference to the throttled implementation in `thrrotledWindowHandler`._\r\n\r\nThe reason for choosing `throttle` over `debounce` is because I wanted to load next batch of data without having to wait until user started/finished scrolling/resizing.\r\n_For the difference, refer to_ [Debouncing and Throttling Explained Through Examples.](https://css-tricks.com/debouncing-throttling-explained-examples/)\r\n\r\n### 🗿 componentWillUnmount\r\n\r\n{% gist https://gist.github.com/dance2die/06c36e41bade67b3d95259a717ec4388 %}\r\nMake sure to clean up and free up listeners when the component is unmounted.\r\n\r\n### 🗿 windowSizeHandler\r\n\r\n{% gist https://gist.github.com/dance2die/7737098b139ab2607952530f70584864 %}\r\nFirst we calculate whether we have reached the bottom of the viewport (`isBottomReached`).\r\n- `window.scrollY` is how much one has scrolled vertically so far\r\n- `window.innerHeight` is the viewport height\r\n- `document.body.offsetHeight` indicates the total height of the content in `\u003cbody\u003e`.\r\n\r\nIf the sum of `scrollY` and `innerHeight` is same as `document.bodyOffsetHeight`, then we have reached the bottom.\r\nAn arbitrary `heightOffset` value is for fetching data before reaching the bottom.\r\nCheck out the demo below, which demonstrates the usage of `heightOffset`.\r\n{% youtube 2WS5wptSg0c %}\r\n### 🗿 getNextPosts\r\n\r\n{% gist https://gist.github.com/dance2die/b528f1f977bc000c3b1cde97146a1a9b %}\r\nWe fetch next posts using the generator object instance, `(await this.repo.next()).value`.\r\n\r\n💁 _Note that you don’t need to pass any arguments or keep a track of next URL to call. It’s completely abstracted away._\r\n\r\nIn line#4, new posts (`posts: [...prevState.posts, ...newPosts]`) are added\r\nand turns off bottom flag since we just loaded new stories.\r\n\r\n### 🗿 render\r\n\r\nHere we construct reddit posts and display `Load More Stories` button.\r\n{% gist https://gist.github.com/dance2die/75ee7685c185f062e7daf8143b2ce8e8 %}\r\n\r\n### 🗿 loadMoreStories\r\n\r\n{% gist https://gist.github.com/dance2die/c3519d71acc44e1dd1bab71165a97bbe %}\r\n`getNextPosts` is asynchronous so I wrapped it in an [IIFE](https://developer.mozilla.org/en-US/docs/Glossary/IIFE)(Immediately Invoked Function Expression) as [async rendering](https://reactjs.org/blog/2018/03/01/sneak-peek-beyond-react-16.html) will be available in later version.\r\n\r\n### 🗿 RedditPost\r\n\r\n{% gist https://gist.github.com/dance2die/c861dc490bd4eec2e28fdb098ea0a3a7 %}\r\nLastly, RedditPost component shows title and post content\r\n\r\n## 👋 Parting Words\r\n\r\nJavaScript generator abstracted away all nitty gritty details on how to fetch data, and keep track of next URL to fetch from.\r\nAnd make sure you either throttle or debounce windows scroll \u0026 resize events as they fire very rapidly as explained in this post, [Debouncing and Throttling Explained Through Examples](https://css-tricks.com/debouncing-throttling-explained-examples/).\r\n\r\nYou can get your hands dirty in two ways.\r\n1. Edit on [CodeSandBox](https://codesandbox.io/s/04v892702v).\r\n1. GitHub [repository](https://github.com/dance2die/throwaway.react.window_bottom_check) to clone and play around locally.\r\n\r\n_The post [Infinite Scrolling in React using JavaScript Generator](https://www.slightedgecoder.com/2018/08/11/infinite-scrolling-in-react-using-javascript-generator/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com)_.",
    "canonical_url": "https://www.slightedgecoder.com/2018/08/11/infinite-scrolling-in-react-using-javascript-generator/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 4,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/08/11/infinite-scrolling-in-react-using-javascript-generator/",
    "positive_reactions_count": 85,
    "edited_at": "2018-10-30T00:10:09.957Z",
    "crossposted_at": "2018-08-11T19:38:22.174Z",
    "language": null,
    "cached_tag_list": "react, javascript, generator, tutorial",
    "path": "/dance2die/infinite-scrolling-in-react-using-javascript-generator-hk4",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-08-13T13:19:33.542Z"
  },
  {
    "title": "Have you tried switching it off and on again?",
    "slug": "have-you-tried-switching-it-off-and-on-again-c2k",
    "created_at": "2018-08-12T13:54:31.526Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/wclw4funwpo3zkxtcd75.png",
    "description": "JavaScript dev equivalent of \"Have you tried switching it off and on again?\"",
    "published": true,
    "published_at": "2018-08-12T13:54:31.517Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI just wanted to share this \u003cem\u003einsightful\u003c/em\u003e \u003ca href=\"https://www.reddit.com/r/reactjs/comments/95e9cc/how_can_i_use_js_instead_of_jsx/e3s41xo\"\u003ecomment\u003c/a\u003e on Reddit.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--l9PD0dQa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/179aqbvbkpa3rtcs5hcq.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--l9PD0dQa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/179aqbvbkpa3rtcs5hcq.png\" alt=\"reddit comment\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eI've seen HelpDesk technicians at work asking,  \u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\"Have you tried switching it off and on again?\"\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eseveral times a day, thus I bursted into laugher.\u003c/p\u003e\n\n\u003cp\u003ePlease feel free to share if you think of any others 😉\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: Have you tried switching it off and on again?\r\npublished: true\r\ndescription: JavaScript dev equivalent of \"Have you tried switching it off and on again?\"\r\ntags: fun\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/wclw4funwpo3zkxtcd75.png\r\n---\r\n\r\nI just wanted to share this _insightful_ [comment](https://www.reddit.com/r/reactjs/comments/95e9cc/how_can_i_use_js_instead_of_jsx/e3s41xo) on Reddit.\r\n\r\n![reddit comment](https://thepracticaldev.s3.amazonaws.com/i/179aqbvbkpa3rtcs5hcq.png)\r\n\r\nI've seen HelpDesk technicians at work asking,  \r\n\u003e \"Have you tried switching it off and on again?\"\r\n\r\nseveral times a day, thus I bursted into laugher.\r\n\r\n\r\nPlease feel free to share if you think of any others 😉",
    "canonical_url": null,
    "show_comments": true,
    "main_image_background_hex_color": "#ffffff",
    "published_from_feed": false,
    "comments_count": 11,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": null,
    "positive_reactions_count": 21,
    "edited_at": "2018-08-12T13:56:07.030Z",
    "crossposted_at": null,
    "language": null,
    "cached_tag_list": "fun",
    "path": "/dance2die/have-you-tried-switching-it-off-and-on-again-c2k",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-08-24T20:43:20.132Z"
  },
  {
    "title": "Accessing React State right after setting it",
    "slug": "accessing-react-state-right-after-setting-it-2kc8",
    "created_at": "2018-08-25T22:21:08.173Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/iyljqcq8uryyttwlf0lh.gif",
    "description": "\n\nPhoto by Celso on Unsplash\n\nAs I have been browsing Stack Overflow questions, I...",
    "published": true,
    "published_at": "2018-08-25T22:17:51.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/4RZx2k4sDj8?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eCelso\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/sequence?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eAs I have been browsing Stack Overflow questions, I’ve noticed that many bugs are due to trying to access a state value after setting it.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eAn \u003ca href=\"https://stackoverflow.com/questions/51412391\"\u003eexample question\u003c/a\u003e on Stack Overflow.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eI’ve stumbled many times for being unaware of \u003ccode\u003esetState\u003c/code\u003e being an asynchronous operation.\u003c/p\u003e\n\n\u003cp\u003eHow do we access the state value right after setting it then?\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"reproducing-the-problem\" href=\"#reproducing-the-problem\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  😬 Reproducing the Problem\n\u003c/h2\u003e\n\n\u003cp\u003eHere is the code that shows accessing a state value (\u003ccode\u003eclickCounts\u003c/code\u003e) right after setting it synchronously.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/5098bb920c1cd569d1c38bf750cd3f94.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eAnd let’s see the logical error.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--7xcXWdug--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/08/synchronous-call.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--7xcXWdug--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/08/synchronous-call.gif%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003econsole.log\u003c/code\u003e doesn’t have access to updated state value even though the call is made after \u003ccode\u003esetState\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"workaround-not-recommended\" href=\"#workaround-not-recommended\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  😒 Workaround (Not Recommended)\n\u003c/h2\u003e\n\n\u003cp\u003eAs \u003ccode\u003esetState\u003c/code\u003e is an operation, you can just wait till the value is set by React.\u003c/p\u003e\n\n\u003cp\u003eYou might wait for a certain period to access the updated state using\u003cbr\u003e\n\u003ccode\u003esetTimeout\u003c/code\u003e.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/9735e8714ab1796f41ec30dea6a2ea81.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--cY0AeKg6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/08/setTimeout.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--cY0AeKg6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/08/setTimeout.gif%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eTada 🎉. It works right?\u003c/p\u003e\n\n\u003cp\u003eYes but No, at this point, you are just praying 🙏) that \u003ccode\u003esetState\u003c/code\u003e finishes before accessing the state within \u003ccode\u003esetTimeout\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eAnd also, you need to persist the event to be able to access event argument as shown in line#2 (\u003ccode\u003ee.persist()\u003c/code\u003e).\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eRefer to \u003ca href=\"https://reactjs.org/docs/events.html#event-pooling\"\u003eEvent Pooling\u003c/a\u003e for e.persist.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"recommend-ways\" href=\"#recommend-ways\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  😄 Recommend Ways\n\u003c/h2\u003e\n\n\u003cp\u003eThere are \u003cstrong\u003etwo\u003c/strong\u003e ways as mentioned in the official React documentation.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e Using a callback passed to \u003ccode\u003esetState\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003e Using \u003ccode\u003ecomponentDidUpdate\u003c/code\u003e life cycle method\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eLet’s go over them both.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"1-using-a-callback-passed-to-raw-setstate-endraw-\" href=\"#1-using-a-callback-passed-to-raw-setstate-endraw-\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  1. Using a callback passed to \u003ccode\u003esetState\u003c/code\u003e\n\u003c/h3\u003e\n\n\u003cp\u003e\u003ccode\u003esetState\u003c/code\u003e has the following \u003ca href=\"https://reactjs.org/docs/react-component.html#setstate\"\u003esignature\u003c/a\u003e.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/7c39e80f4b587e0c1f92e77a28333b52.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eThe callback is called after the state has updated using \u003ccode\u003eupdater\u003c/code\u003e method thus the callback has access to the updated \u003ccode\u003ethis.state\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eHere is the updated code \u0026amp; the demo.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/8afe95dedfbe62e77de813ae2b41a2b0.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--PDLhF0Wl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/08/using-callback.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--PDLhF0Wl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/08/using-callback.gif%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"2-using-raw-componentdidupdate-endraw-life-cycle-method\" href=\"#2-using-raw-componentdidupdate-endraw-life-cycle-method\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  2. Using \u003ccode\u003ecomponentDidUpdate\u003c/code\u003e life cycle method\n\u003c/h3\u003e\n\n\u003cp\u003eReact documentation “\u003ca href=\"https://reactjs.org/docs/react-component.html#setstate\"\u003egenerally recommends\u003c/a\u003e” using \u003ccode\u003ecomponentDidUpdate\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eI haven’t been able to find the reason for it, but my guess is because \u003ccode\u003ecomponentDidUpdate\u003c/code\u003e has access to the previous props and previous state (as well as being called before the callback as my demo shows).\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eHere is the code using \u003ccode\u003ecomponentDidUpdate\u003c/code\u003e.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/a728b6f1819ede5e1beefeedd64f2e24.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eAnd this demo shows that \u003ccode\u003ecomponentDidUpdate\u003c/code\u003e\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003ehas the access to the updated state value.\u003c/li\u003e\n\u003cli\u003eis called before the setState’s callback method.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--iSQrIpv6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/08/componentDidUpdate.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--iSQrIpv6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/08/componentDidUpdate.gif%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👋 Parting Words\n\u003c/h2\u003e\n\n\u003cp\u003eFrankly speaking, I’ve only used the callback to access updated value because I only found out about the recommended way of using \u003ccode\u003ecomponentDidUpdate\u003c/code\u003e while writing this blog 😝).\u003c/p\u003e\n\n\u003cp\u003eAnd you can play around with the demo on \u003ca href=\"https://codesandbox.io/s/6lzp0v0mlw\"\u003eCodeSandBox\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/08/25/accessing-react-state-right-after-setting-it/\"\u003eAccessing React State right after setting it\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e\u003c/em\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: Accessing React State right after setting it\r\npublished: true\r\ntags: react, javascript\r\ncanonical_url: https://www.slightedgecoder.com/2018/08/25/accessing-react-state-right-after-setting-it/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/iyljqcq8uryyttwlf0lh.gif\r\n---\r\n\r\n_Photo by [Celso](https://unsplash.com/photos/4RZx2k4sDj8?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/sequence?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_\r\n\r\nAs I have been browsing Stack Overflow questions, I’ve noticed that many bugs are due to trying to access a state value after setting it.\r\n\r\n_An [example question](https://stackoverflow.com/questions/51412391) on Stack Overflow._\r\n\r\nI’ve stumbled many times for being unaware of `setState` being an asynchronous operation.\r\n\r\nHow do we access the state value right after setting it then?\r\n\r\n## 😬 Reproducing the Problem\r\n\r\nHere is the code that shows accessing a state value (`clickCounts`) right after setting it synchronously.\r\n\r\n{% gist https://gist.github.com/dance2die/5098bb920c1cd569d1c38bf750cd3f94.js %}\r\n\r\nAnd let’s see the logical error.\r\n\r\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/08/synchronous-call.gif?w=1170\u0026ssl=1)\r\n\r\n`console.log` doesn’t have access to updated state value even though the call is made after `setState`.\r\n\r\n## 😒 Workaround (Not Recommended)\r\n\r\nAs `setState` is an operation, you can just wait till the value is set by React.\r\n\r\nYou might wait for a certain period to access the updated state using\r\n`setTimeout`.\r\n\r\n{% gist https://gist.github.com/dance2die/9735e8714ab1796f41ec30dea6a2ea81.js %}\r\n\r\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/08/setTimeout.gif?w=1170\u0026ssl=1)\r\n\r\nTada 🎉. It works right?\r\n\r\nYes but No, at this point, you are just praying 🙏) that `setState` finishes before accessing the state within `setTimeout`.\r\n\r\nAnd also, you need to persist the event to be able to access event argument as shown in line#2 (`e.persist()`).\r\n\r\n_Refer to [Event Pooling](https://reactjs.org/docs/events.html#event-pooling) for e.persist._\r\n\r\n## 😄 Recommend Ways\r\n\r\nThere are **two** ways as mentioned in the official React documentation.\r\n\r\n1.  Using a callback passed to `setState`.\r\n2.  Using `componentDidUpdate` life cycle method\r\n\r\nLet’s go over them both.\r\n\r\n### 1. Using a callback passed to `setState`\r\n\r\n`setState` has the following [signature](https://reactjs.org/docs/react-component.html#setstate).\r\n\r\n{% gist https://gist.github.com/dance2die/7c39e80f4b587e0c1f92e77a28333b52.js %}\r\n\r\nThe callback is called after the state has updated using `updater` method thus the callback has access to the updated `this.state`.\r\n\r\nHere is the updated code \u0026 the demo.\r\n\r\n{% gist https://gist.github.com/dance2die/8afe95dedfbe62e77de813ae2b41a2b0.js %}\r\n\r\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/08/using-callback.gif?w=1170\u0026ssl=1)\r\n\r\n### 2. Using `componentDidUpdate` life cycle method\r\n\r\nReact documentation “[generally recommends](https://reactjs.org/docs/react-component.html#setstate)” using `componentDidUpdate`.\r\n\r\n_I haven’t been able to find the reason for it, but my guess is because `componentDidUpdate` has access to the previous props and previous state (as well as being called before the callback as my demo shows)._\r\n\r\nHere is the code using `componentDidUpdate`.\r\n\r\n{% gist https://gist.github.com/dance2die/a728b6f1819ede5e1beefeedd64f2e24.js %}\r\n\r\nAnd this demo shows that `componentDidUpdate`\r\n\r\n1. has the access to the updated state value.\r\n2. is called before the setState’s callback method.\r\n\r\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/08/componentDidUpdate.gif?w=1170\u0026ssl=1)\r\n\r\n## 👋 Parting Words\r\n\r\nFrankly speaking, I’ve only used the callback to access updated value because I only found out about the recommended way of using `componentDidUpdate` while writing this blog 😝).\r\n\r\nAnd you can play around with the demo on [CodeSandBox](https://codesandbox.io/s/6lzp0v0mlw).\r\n\r\n_The post [Accessing React State right after setting it](https://www.slightedgecoder.com/2018/08/25/accessing-react-state-right-after-setting-it/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com)_.\r\n",
    "canonical_url": "https://www.slightedgecoder.com/2018/08/25/accessing-react-state-right-after-setting-it/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 28,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/08/25/accessing-react-state-right-after-setting-it/",
    "positive_reactions_count": 75,
    "edited_at": null,
    "crossposted_at": "2018-08-26T00:12:43.641Z",
    "language": null,
    "cached_tag_list": "react, javascript",
    "path": "/dance2die/accessing-react-state-right-after-setting-it-2kc8",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-10-14T19:01:19.460Z"
  },
  {
    "title": "My Podcast Subscriptions",
    "slug": "my-podcast-subscriptions-22o7",
    "created_at": "2018-09-01T17:26:44.216Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/2pkc93qptqre8zxby26z.gif",
    "description": "Sung's current podcast subscriptions",
    "published": true,
    "published_at": "2018-09-01T19:04:08.862Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/ekHSHvgr27k?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eBogomil Mihaylov\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/music?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eAlex has opened a discussion on what you do while you are outside.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag__link\"\u003e\n        \u003ca href=\"/alexruzenhack\" class=\"ltag__link__link\"\u003e\n          \u003cdiv class=\"ltag__link__pic\"\u003e\n            \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--mSMYNoiq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--NjTTq512--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://thepracticaldev.s3.amazonaws.com/uploads/user/profile_image/1703/5992210.jpeg\" alt=\"alexruzenhack image\"\u003e\n          \u003c/div\u003e\u003c/a\u003e\n          \u003ca href=\"/alexruzenhack/what-do-you-do-in-your-two-hours-out-of-home-4h6b\" class=\"ltag__link__link\"\u003e\n            \u003cdiv class=\"ltag__link__content\"\u003e\n              \u003ch2\u003eWhat do you do in your two hours out of home?\u003c/h2\u003e\n              \u003ch3\u003eAlex Ruzenhack\u003c/h3\u003e\n              \u003cdiv class=\"ltag__link__taglist\"\u003e\n\u003cspan class=\"ltag__link__tag\"\u003e#discuss\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#outsidehome\u003c/span\u003e\n\u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/a\u003e\n      \u003c/div\u003e\n\n\n\u003cp\u003eAs someone living in New York City, I take public transportation thus have a lot of free time during commute.  So while I am outside (I am rarely outdoors... 😛) I listen to podcasts.\u003c/p\u003e\n\n\u003cp\u003eMartin had a similar routine while shopping listening to podcast (in the same post by Alex).\u003c/p\u003e\n\n\n\u003cdiv class=\"liquid-comment\"\u003e\n      \u003cdiv class=\"details\"\u003e\n        \u003ca href=\"/mrtnrdl\"\u003e\n          \u003cimg class=\"profile-pic\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--F9RXYI_Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--RkeIheUu--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://thepracticaldev.s3.amazonaws.com/uploads/user/profile_image/94866/6a37ac2b-a136-4bf5-9b9b-fb3f6dc258e9.jpeg\" alt=\"mrtnrdl profile image\"\u003e\n        \u003c/a\u003e\n        \u003ca href=\"/mrtnrdl\"\u003e\n          \u003cspan class=\"comment-username\"\u003eMartin Riedel\u003c/span\u003e\n        \u003c/a\u003e\n        \u003cdiv class=\"comment-date\"\u003e\n          \u003ca href=\"/mrtnrdl/comment/539h\"\u003eAug 27 '18\u003c/a\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n      \u003cdiv class=\"body\"\u003e\n        \n\n\u003cp\u003eI usually do my shopping and listen to podcasts - same as while commuting. :)\u003c/p\u003e\n\n\n\n      \u003c/div\u003e\n    \u003c/div\u003e\n\n\n\u003cp\u003eAnd he has shared his podcasts subscriptions grouped by topics.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag__link\"\u003e\n        \u003ca href=\"/mrtnrdl\" class=\"ltag__link__link\"\u003e\n          \u003cdiv class=\"ltag__link__pic\"\u003e\n            \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--LpW-Qb18--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--BMpw5c2O--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://thepracticaldev.s3.amazonaws.com/uploads/user/profile_image/94866/6a37ac2b-a136-4bf5-9b9b-fb3f6dc258e9.jpeg\" alt=\"mrtnrdl image\"\u003e\n          \u003c/div\u003e\u003c/a\u003e\n          \u003ca href=\"/mrtnrdl/my-podcast-subscriptions-jj\" class=\"ltag__link__link\"\u003e\n            \u003cdiv class=\"ltag__link__content\"\u003e\n              \u003ch2\u003eMy podcast-subscriptions\u003c/h2\u003e\n              \u003ch3\u003eMartin Riedel\u003c/h3\u003e\n              \u003cdiv class=\"ltag__link__taglist\"\u003e\n\u003cspan class=\"ltag__link__tag\"\u003e#podcast\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#productivity\u003c/span\u003e\n\u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/a\u003e\n      \u003c/div\u003e\n\n\n\u003cp\u003eI will share mine in hope of spreading podcast that might help you, as well.\u003cbr\u003e\n\u003cem\u003eIt's sorted at random\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"microsoft-related\" href=\"#microsoft-related\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Microsoft Related\n\u003c/h2\u003e\n\n\u003cp\u003eI've started as a .NET developer so here are Microsoft technology focused podcasts I follow.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://dotnetrocks.com/\"\u003e.NET Rocks!\u003c/a\u003e \n\n\u003cul\u003e\n\u003cli\u003eThe must for .NET developers as Carl Franklyn \u0026amp; Richard Campbell has been sharing knowledge over a decade.\u003c/li\u003e\n\u003cli\u003eStarted off as a pure .NET oriented podcast but also deals with more general technologies as well.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://dotnetcore.show/\"\u003eThe .NET Core Podcast\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eThis is a new .NET Core focused podcast by \u003ca href=\"https://www.gaprogman.com/\"\u003eJamie \"GaProgman\" Taylor\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eThe first episode talks about how .NET Core came out to be (\u003ca href=\"https://dotnetcore.show/episode-1-a-brief-history-of-net-core/\"\u003eA Brief History of .NET Core\u003c/a\u003e), which has a very interesting history.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\n\u003cp\u003e\u003ca href=\"https://msdevshow.com/\"\u003eMS Dev Show\u003c/a\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eA NEW podcast for Microsoft developers covering topics such as Azure/cloud, Windows, Windows Phone, .NET, Visual Studio, and more! Hosted by Jason Young and Carl Schweitzer.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\n\u003cp\u003e\u003ca href=\"https://twit.tv/shows/windows-weekly\"\u003eWindows Weekly\u003c/a\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eProvides up to date (or even spoilers on what's coming in Windows) Microsoft (not just Windows) news and events. \u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"general-tech\" href=\"#general-tech\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  General Tech\n\u003c/h2\u003e\n\n\u003cp\u003ePodcasts that deals with every aspect of software engineering/developer life.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.codingblocks.net/\"\u003eCoding Blocks\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eThree dudes (Joe Zack, Allen Underwood, Michael Outlaw) talking about programming.\u003c/li\u003e\n\u003cli\u003eThis has been my 💓 podcast not just because of the content but also because of the friendly \u003ca href=\"https://www.codingblocks.net/slack/\"\u003eSlack community\u003c/a\u003e. I highly recommend you to join their Slack to learn and have fun~ (\u003cem\u003eI am on it all the time as @dance2die\u003c/em\u003e).\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://cynicaldeveloper.com/\"\u003eThe Cynical Developer\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eJames \"the Cynical Developer\" Studdart has been sharing technical tips and knowledges as well as software skills, which we as a developer seem to lack the most.\u003c/li\u003e\n\u003cli\u003eThank you \u0026amp; Congrats for the \u003ca href=\"https://cynicaldeveloper.com/podcast/92/\"\u003etwo year anniversary\u003c/a\u003e, James.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://completedeveloperpodcast.com/\"\u003eComplete Developer Podcast\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eWill Grant \u0026amp; BJ Burns also talks about not only technical aspects of programming but also \"\u003ca href=\"https://completedeveloperpodcast.com/about/\"\u003ecover the other areas of life\u003c/a\u003e\".\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://behindthetech.libsynpro.com/\"\u003eBehind The Tech with Kevin Scott\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eHosted by Microsoft’s CTO Kevin Scott\u003c/li\u003e\n\u003cli\u003eKevin brings in guests who have accomplished much and shares their experiences.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://6figuredev.com/\"\u003eThe 6 Figure Developer Podcast\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eIf you want to grow your career, check it out.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://juniordevelopertoolbox.com/\"\u003eJunior Developer Toolbox\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eThis is a sister podcast of \u003ca href=\"https://completedeveloperpodcast.com/\"\u003eComplete Developer Podcast\u003c/a\u003e, in which hosts talk about everything \"about everyday life as a junior developer\".\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"http://pursuit.tech/\"\u003ePursuit Podcast\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eProductivity focused podcast.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://softwareengineeringdaily.com/\"\u003eSoftware Engineering Daily\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eCovers every aspect of software engineering.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"http://www.weeklydevtips.com/\"\u003eWeekly Dev Tips\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eEach tip can be listened to before you can finish a cup of coffee.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\n\u003cp\u003e\u003ca href=\"https://art19.com/shows/techmeme-ride-home\"\u003eTechmeme Ride Home\u003c/a\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe day's tech news, every day at 5pm. From Techmeme.com, Silicon Valley's most-read news source. 15 minutes and you're up to date.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cul\u003e\n\u003cli\u003eIf you don't want to spend hours trying to catch up with today's tech news.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\n\u003cp\u003e\u003ca href=\"https://hanselminutes.com/\"\u003eHanselminutes\u003c/a\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eScott Hanselman has been bringing guests with many different background and been awesome for over a decade.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"frontend\" href=\"#frontend\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Frontend\n\u003c/h2\u003e\n\n\u003cp\u003eWeb related podcasts\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://theconsolelog.com/\"\u003eThe Console Log\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eTwo guys (used to be one 😛) talk about JavaScript \u0026amp; the Web.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://egghead.io/podcasts\"\u003eegghead.io developer chats\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eEggHead.io says it all.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://changelog.com/jsparty\"\u003eJSParty\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eParty 🎈🎉 anyone?\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://devchat.tv/\"\u003eAll JavaScript Podcasts\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eThis is a list of all JavaScript podcasts from devchat.tv\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://devchat.tv/react-round-up/\"\u003eReact Round Up\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003edevchat.tv podcast focused on React.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://reactpodcast.simplecast.fm/\"\u003eReact Podcast\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eHosted by M\u0026amp;Ms (Michael Jackson \u0026amp; Michael Chan).\u003c/li\u003e\n\u003cli\u003eIf you have been using React, those names might be familiar 😁.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://shoptalkshow.com/\"\u003eShopTalk\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eThese guys know web stuff, really well.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://syntax.fm/\"\u003eSyntax\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eFun packed episodes by Wes Bos \u0026amp; Scott Tolinski.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://thewebplatformpodcast.com/\"\u003eThe Web Platform Podcast\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003eWeb technologies might be overwhelming but this podcast laids everything well.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👋 Parting Words\n\u003c/h2\u003e\n\n\u003cp\u003eThere are too many already so just check the ones you might be interested in.\u003c/p\u003e\n\n\u003cp\u003eAnd thank you again \u003ca href=\"https://dev.to/mrtnrdl\"\u003eMartin\u003c/a\u003e, for sharing your list 👍\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: My Podcast Subscriptions\r\npublished: true\r\ndescription: Sung's current podcast subscriptions\r\ntags: podcast, productivity\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/2pkc93qptqre8zxby26z.gif\r\n---\r\n\r\n_Photo by [Bogomil Mihaylov](https://unsplash.com/photos/ekHSHvgr27k?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/music?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_\r\n\r\nAlex has opened a discussion on what you do while you are outside.\r\n\r\n{% link https://dev.to/alexruzenhack/what-do-you-do-in-your-two-hours-out-of-home-4h6b %}\r\n\r\nAs someone living in New York City, I take public transportation thus have a lot of free time during commute.  So while I am outside (I am rarely outdoors... 😛) I listen to podcasts.\r\n\r\n\r\nMartin had a similar routine while shopping listening to podcast (in the same post by Alex).\r\n\r\n{% devcomment 539h %}\r\n\r\nAnd he has shared his podcasts subscriptions grouped by topics.\r\n\r\n{% link https://dev.to/mrtnrdl/my-podcast-subscriptions-jj %}\r\n\r\nI will share mine in hope of spreading podcast that might help you, as well.\r\n_It's sorted at random_\r\n\r\n\r\n## Microsoft Related\r\nI've started as a .NET developer so here are Microsoft technology focused podcasts I follow.\r\n* [.NET Rocks!](https://dotnetrocks.com/) \r\n    - The must for .NET developers as Carl Franklyn \u0026 Richard Campbell has been sharing knowledge over a decade.\r\n    - Started off as a pure .NET oriented podcast but also deals with more general technologies as well.\r\n* [The .NET Core Podcast](https://dotnetcore.show/)\r\n    - This is a new .NET Core focused podcast by [Jamie \"GaProgman\" Taylor](https://www.gaprogman.com/).\r\n    - The first episode talks about how .NET Core came out to be ([A Brief History of .NET Core](https://dotnetcore.show/episode-1-a-brief-history-of-net-core/)), which has a very interesting history.\r\n* [MS Dev Show](https://msdevshow.com/)\r\n\r\n    \u003e A NEW podcast for Microsoft developers covering topics such as Azure/cloud, Windows, Windows Phone, .NET, Visual Studio, and more! Hosted by Jason Young and Carl Schweitzer.\r\n* [Windows Weekly](https://twit.tv/shows/windows-weekly)\r\n    - Provides up to date (or even spoilers on what's coming in Windows) Microsoft (not just Windows) news and events. \r\n\r\n## General Tech\r\nPodcasts that deals with every aspect of software engineering/developer life.\r\n* [Coding Blocks](https://www.codingblocks.net/)\r\n    - Three dudes (Joe Zack, Allen Underwood, Michael Outlaw) talking about programming.\r\n    - This has been my 💓 podcast not just because of the content but also because of the friendly [Slack community](https://www.codingblocks.net/slack/). I highly recommend you to join their Slack to learn and have fun~ (*I am on it all the time as @dance2die*).\r\n* [The Cynical Developer](https://cynicaldeveloper.com/)\r\n    - James \"the Cynical Developer\" Studdart has been sharing technical tips and knowledges as well as software skills, which we as a developer seem to lack the most.\r\n    - Thank you \u0026 Congrats for the [two year anniversary](https://cynicaldeveloper.com/podcast/92/), James.\r\n* [Complete Developer Podcast](https://completedeveloperpodcast.com/)\r\n    - Will Grant \u0026 BJ Burns also talks about not only technical aspects of programming but also \"[cover the other areas of life](https://completedeveloperpodcast.com/about/)\".\r\n* [Behind The Tech with Kevin Scott](https://behindthetech.libsynpro.com/)\r\n    - Hosted by Microsoft’s CTO Kevin Scott\r\n    - Kevin brings in guests who have accomplished much and shares their experiences.\r\n* [The 6 Figure Developer Podcast](https://6figuredev.com/)\r\n    - If you want to grow your career, check it out.\r\n* [Junior Developer Toolbox](https://juniordevelopertoolbox.com/)\r\n    - This is a sister podcast of [Complete Developer Podcast](https://completedeveloperpodcast.com/), in which hosts talk about everything \"about everyday life as a junior developer\".\r\n* [Pursuit Podcast](http://pursuit.tech/)\r\n    - Productivity focused podcast.\r\n* [Software Engineering Daily](https://softwareengineeringdaily.com/)\r\n    - Covers every aspect of software engineering.\r\n* [Weekly Dev Tips](http://www.weeklydevtips.com/)\r\n    - Each tip can be listened to before you can finish a cup of coffee.\r\n* [Techmeme Ride Home](https://art19.com/shows/techmeme-ride-home)\r\n\r\n    \u003e The day's tech news, every day at 5pm. From Techmeme.com, Silicon Valley's most-read news source. 15 minutes and you're up to date.\r\n    - If you don't want to spend hours trying to catch up with today's tech news.\r\n* [Hanselminutes](https://hanselminutes.com/)\r\n    - Scott Hanselman has been bringing guests with many different background and been awesome for over a decade.\r\n  \r\n## Frontend\r\nWeb related podcasts\r\n* [The Console Log](https://theconsolelog.com/)\r\n    - Two guys (used to be one 😛) talk about JavaScript \u0026 the Web.\r\n* [egghead.io developer chats](https://egghead.io/podcasts)\r\n    - EggHead.io says it all.\r\n* [JSParty](https://changelog.com/jsparty)\r\n    - Party 🎈🎉 anyone?\r\n* [All JavaScript Podcasts](https://devchat.tv/)\r\n    - This is a list of all JavaScript podcasts from devchat.tv\r\n* [React Round Up](https://devchat.tv/react-round-up/)\r\n    - devchat.tv podcast focused on React.\r\n* [React Podcast](https://reactpodcast.simplecast.fm/)\r\n    - Hosted by M\u0026Ms (Michael Jackson \u0026 Michael Chan).\r\n    - If you have been using React, those names might be familiar 😁.\r\n* [ShopTalk](https://shoptalkshow.com/)\r\n    - These guys know web stuff, really well.\r\n* [Syntax](https://syntax.fm/)\r\n    - Fun packed episodes by Wes Bos \u0026 Scott Tolinski.\r\n* [The Web Platform Podcast](https://thewebplatformpodcast.com/)\r\n    - Web technologies might be overwhelming but this podcast laids everything well.\r\n \r\n \r\n## 👋 Parting Words\r\n\r\nThere are too many already so just check the ones you might be interested in.\r\n\r\nAnd thank you again [Martin](https://dev.to/mrtnrdl), for sharing your list 👍\r\n\r\n",
    "canonical_url": null,
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": false,
    "comments_count": 15,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": null,
    "positive_reactions_count": 86,
    "edited_at": "2018-09-01T19:06:39.555Z",
    "crossposted_at": null,
    "language": null,
    "cached_tag_list": "podcast, productivity",
    "path": "/dance2die/my-podcast-subscriptions-22o7",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-08-20T10:28:57.125Z"
  },
  {
    "title": "What's wrong with this code?",
    "slug": "whats-wrong-with-this-code-46f7",
    "created_at": "2018-09-04T16:34:43.799Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/mf5x6sudtme57f6b2tji.jpg",
    "description": "Find the \"logical\" error in this code",
    "published": true,
    "published_at": "2018-09-04T16:39:32.070Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/XktEKmetbzc?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eCaroline Attwood\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/groceries-turkey-egg?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"whats-wrong-with-this-code\" href=\"#whats-wrong-with-this-code\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  What's wrong with this code?\n\u003c/h3\u003e\n\n\u003cp\u003eCan you find the \u003cem\u003elogical\u003c/em\u003e error?\u003cbr\u003e\n(\u003cem\u003e⚠️ As the tag shows, it's a non-sensical/fun question\u003c/em\u003e)\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eflour\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eeggs\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eturkey\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003egroceries\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003ch3\u003e\n  \u003ca name=\"answer\" href=\"#answer\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Answer\n\u003c/h3\u003e\n\n\u003cp\u003e.\u003cbr\u003e\n.\u003cbr\u003e\n.\u003cbr\u003e\n.\u003cbr\u003e\n.\u003cbr\u003e\n.\u003cbr\u003e\n.\u003cbr\u003e\n.\u003c/p\u003e\n\n\u003cp\u003eYou can't cook ingredients (\u003cem\u003eas they are constant thus can't cook them\u003c/em\u003e) and have to eat'em raw 😛. \u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"background-story\" href=\"#background-story\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Background Story.\n\u003c/h3\u003e\n\n\u003cp\u003eI was chatting with other developers and wanted to make sure if he understood JavaScript \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#Object_destructuring\"\u003eObject Destructuring\u003c/a\u003e concept correctly.\u003c/p\u003e\n\n\n\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"highlight javascript\"\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nx\"\u003eflour\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eeggs\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eturkey\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003egroceries\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\n\n\n\u003cp\u003eSomeone suggested \u003ccode\u003econst\u003c/code\u003e instead of \u003ccode\u003elet\u003c/code\u003e promoting a better coding style.\u003cbr\u003e\u003cbr\u003e\nAnd the first thing popped in my mind was that you can't eat a raw 🦃.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👋 Parting Words\n\u003c/h3\u003e\n\n\u003cp\u003eHope it funny enough 😎.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: What's wrong with this code?\r\npublished: true\r\ndescription: Find the \"logical\" error in this code\r\ntags: fun, javascript, nonsense\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/mf5x6sudtme57f6b2tji.jpg\r\n---\r\n\r\n_Photo by [Caroline Attwood](https://unsplash.com/photos/XktEKmetbzc?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/groceries-turkey-egg?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)._\r\n\r\n### What's wrong with this code?\r\n\r\nCan you find the *logical* error?\r\n(_⚠️ As the tag shows, it's a non-sensical/fun question_)\r\n\r\n\r\n```javascript\r\n\r\nconst { flour, eggs, turkey } = groceries\r\n\r\n```\r\n\r\n\r\n### Answer\r\n\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n\r\nYou can't cook ingredients (_as they are constant thus can't cook them_) and have to eat'em raw 😛. \r\n\r\n\r\n### Background Story.\r\n\r\nI was chatting with other developers and wanted to make sure if he understood JavaScript [Object Destructuring](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#Object_destructuring) concept correctly.\r\n\r\n\r\n```javascript\r\nlet { flour, eggs, turkey } = groceries\r\n```\r\n\r\nSomeone suggested `const` instead of `let` promoting a better coding style.  \r\nAnd the first thing popped in my mind was that you can't eat a raw 🦃.\r\n\r\n\r\n\r\n### 👋 Parting Words\r\n\r\nHope it funny enough 😎.\r\n\r\n\r\n",
    "canonical_url": null,
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": false,
    "comments_count": 26,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": null,
    "positive_reactions_count": 63,
    "edited_at": null,
    "crossposted_at": null,
    "language": null,
    "cached_tag_list": "fun, javascript, nonsense",
    "path": "/dance2die/whats-wrong-with-this-code-46f7",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-10-17T14:16:39.705Z"
  },
  {
    "title": "Introducing 🍔 Bunpkg 🍔",
    "slug": "introducing--bunpkg--ee6-temp-slug-2369387",
    "created_at": "2018-09-13T01:43:05.946Z",
    "main_image": null,
    "description": "\n\nMichael Jackson on React Podcast Episode 19 shared his professional experiences...",
    "published": false,
    "published_at": "2018-09-13T01:16:14.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eMichael Jackson on \u003ca href=\"https://reactpodcast.simplecast.fm/19\"\u003eReact Podcast Episode 19\u003c/a\u003e shared his professional experiences.\u003c/p\u003e\n\n\u003cp\u003eHe created \u003ca href=\"https://unpkg.com/\"\u003eUNPKG\u003c/a\u003eto solve a problem.\u003c/p\u003e\n\n\u003cp\u003eUNPKG has been used by many and I wanted to solve one, which is to make it easy to build script tags easily for UNPKG.\u003c/p\u003e\n\n\u003cp\u003eHere comes \u003ca href=\"https://bunpkg.com/\"\u003eBunpkg\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what\" href=\"#what\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--45IZnc0X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/2753.png\" alt=\"❓\"\u003e What?\n\u003c/h2\u003e\n\n\u003cp\u003eBunpkg (\u003cem\u003epronounced “Bun Package”, meaning B{uild} unpkg {URL}\u003c/em\u003e) is for generating an UNPKG script tag.\u003c/p\u003e\n\n\u003cp\u003eHere is Bunpkg in action.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"why\" href=\"#why\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TxF6dnRf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f914.png\" alt=\"🤔\"\u003e Why?\n\u003c/h2\u003e\n\n\u003cp\u003eAs mentioned above, it’s to make it easy to generate UNPKG script tags and for me to \u003cem\u003elearn continuously\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eI plan to learn \u0026amp; and use \u003ca href=\"https://redis.io/\"\u003eRedis\u003c/a\u003e, \u003ca href=\"https://api.cloudflare.com/\"\u003eCloudFlare API\u003c/a\u003e, and \u003ca href=\"https://redis.io/\"\u003eProgressive Web Apps\u003c/a\u003e to make a continuous improvement.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"credits\" href=\"#credits\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ZxRhXYaW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f4b3.png\" alt=\"💳\"\u003e Credits\n\u003c/h2\u003e\n\n\u003cp\u003eI’ve read UNPKG \u0026amp; \u003ca href=\"https://bundlephobia.com/\"\u003eBundlePhobia\u003c/a\u003e source code generously shared by \u003ca href=\"https://twitter.com/mjackson\"\u003eMichael Jackson\u003c/a\u003e \u0026amp; \u003ca href=\"https://github.com/pastelsky\"\u003eShubham Kanodia\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--uH8-bFld--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f44b.png\" alt=\"👋\"\u003e Parting Words\n\u003c/h2\u003e\n\n\u003cp\u003eIf you get Not Secure Page message, then try \u003ca href=\"https://bunpkg.netlify.com/\"\u003ehttps://bunpkg.netlify.com/\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eI will write a technical challenge I ran into in follow-up posts.\u003c/p\u003e\n\n\u003cp\u003eBefore I go, here are the links to the source code on GitHub.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eBunpkg\u003c/strong\u003e\n\n\u003cul\u003e\n\u003cli\u003eFront-end (React) – \u003ca href=\"https://github.com/dance2die/bunpkg-client\"\u003edance2die/bunpkg-client\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eBack-end (Node + Express) – \u003ca href=\"https://github.com/dance2die/bunpkg-server\"\u003edance2die/bunpkg-server\u003c/a\u003e \u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eUNPKG\u003c/strong\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/unpkg\"\u003ehttps://github.com/unpkg\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eBundlePhobia\u003c/strong\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/pastelsky/bundlephobia\"\u003ehttps://github.com/pastelsky/bundlephobia\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/09/12/introducing-%f0%9f%8d%94-bunpkg-%f0%9f%8d%94/\"\u003eIntroducing 🍔 Bunpkg 🍔\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Introducing 🍔 Bunpkg 🍔\npublished: false\ntags: Announcement,announcement,bunpkg,OpenSource\ncanonical_url: https://www.slightedgecoder.com/2018/09/12/introducing-%f0%9f%8d%94-bunpkg-%f0%9f%8d%94/\n---\n\nMichael Jackson on [React Podcast Episode 19](https://reactpodcast.simplecast.fm/19) shared his professional experiences.\n\nHe created [UNPKG](https://unpkg.com/)to solve a problem.\n\nUNPKG has been used by many and I wanted to solve one, which is to make it easy to build script tags easily for UNPKG.\n\nHere comes [Bunpkg](https://bunpkg.com/).\n\n## ![❓](https://s.w.org/images/core/emoji/11/72x72/2753.png) What?\n\nBunpkg (_pronounced “Bun Package”, meaning B{uild} unpkg {URL}_) is for generating an UNPKG script tag.\n\nHere is Bunpkg in action.\n\n\u003ciframe type=\"text/html\" width=\"1170\" height=\"659\" src=\"https://www.youtube.com/embed/67MQcDrDNg4?version=3\u0026amp;rel=1\u0026amp;fs=1\u0026amp;autohide=2\u0026amp;showsearch=0\u0026amp;showinfo=1\u0026amp;iv_load_policy=1\u0026amp;wmode=transparent\" allowfullscreen=\"true\" style=\"border:0;\"\u003e\u003c/iframe\u003e\n\n## ![🤔](https://s.w.org/images/core/emoji/11/72x72/1f914.png) Why?\n\nAs mentioned above, it’s to make it easy to generate UNPKG script tags and for me to _learn continuously_.\n\nI plan to learn \u0026 and use [Redis](https://redis.io/), [CloudFlare API](https://api.cloudflare.com/), and [Progressive Web Apps](https://redis.io/) to make a continuous improvement.\n\n## ![💳](https://s.w.org/images/core/emoji/11/72x72/1f4b3.png) Credits\n\nI’ve read UNPKG \u0026 [BundlePhobia](https://bundlephobia.com/) source code generously shared by [Michael Jackson](https://twitter.com/mjackson) \u0026 [Shubham Kanodia](https://github.com/pastelsky)\n\n## ![👋](https://s.w.org/images/core/emoji/11/72x72/1f44b.png) Parting Words \n\nIf you get Not Secure Page message, then try [https://bunpkg.netlify.com/](https://bunpkg.netlify.com/)\n\nI will write a technical challenge I ran into in follow-up posts.\n\nBefore I go, here are the links to the source code on GitHub.\n\n- **Bunpkg**\n  - Front-end (React) – [dance2die/bunpkg-client](https://github.com/dance2die/bunpkg-client)\n  - Back-end (Node + Express) – [dance2die/bunpkg-server](https://github.com/dance2die/bunpkg-server) \n- **UNPKG**\n  - [https://github.com/unpkg](https://github.com/unpkg)\n- **BundlePhobia**\n  - [https://github.com/pastelsky/bundlephobia](https://github.com/pastelsky/bundlephobia)\n\nThe post [Introducing 🍔 Bunpkg 🍔](https://www.slightedgecoder.com/2018/09/12/introducing-%f0%9f%8d%94-bunpkg-%f0%9f%8d%94/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/09/12/introducing-%f0%9f%8d%94-bunpkg-%f0%9f%8d%94/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/09/12/introducing-%f0%9f%8d%94-bunpkg-%f0%9f%8d%94/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": null,
    "cached_tag_list": "announcement, bunpkg, opensource",
    "path": "/dance2die/introducing--bunpkg--ee6-temp-slug-2369387",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-09-13T01:16:14.000Z"
  },
  {
    "title": "Canceling setInterval in React",
    "slug": "canceling-interval-in-react-52b5",
    "created_at": "2018-09-15T19:36:57.371Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/orb3v8z5ureu5s7yzwss.gif",
    "description": "\n\nPhoto by Icons8 team on Unsplash\n\nSometimes you need to run a command in an int...",
    "published": true,
    "published_at": "2018-09-15T19:35:58.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/dhZtNlvNE8M?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eIcons8 team\u003c/a\u003e on \u003ca href=\"https://unsplash.com/?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSometimes you need to run a command in an interval using \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setInterval\"\u003ewindow.setInterval\u003c/a\u003e.\u003cbr\u003e\nBut if you don’t stop the interval when the component using the \u003ccode\u003esetInterval\u003c/code\u003e is not stopped, it will continuously run using unnecessary resources.\u003c/p\u003e\n\n\u003cp\u003eI will talk about how to handle \u003ccode\u003esetInterval\u003c/code\u003e in React\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"reproducing-the-issue\" href=\"#reproducing-the-issue\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  😅 Reproducing the Issue\n\u003c/h2\u003e\n\n\u003cp\u003eLet’s create a very “contrived” example that prints “hello world” every second in console.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/e7108c9dc2d25e2a3d651b427965f425.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003cem\u003eFollow along on \u003ca href=\"https://codesandbox.io/s/0x979w8n5l\"\u003eCodeSandBox\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eWhen you navigate away from the component (to simulate unmounting), the interval still runs.\u003c/p\u003e\n\n\u003cp\u003eEven worse, when you navigate back to \u003ccode\u003eGreeting\u003c/code\u003e component, another interval process starts! 😱\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--7yxpmPr---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/reproducing-issue.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--7yxpmPr---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/reproducing-issue.gif%3Fw%3D1170%26ssl%3D1\" alt=\"Error Reproduced\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"how-to-fix-the-issue\" href=\"#how-to-fix-the-issue\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔧 How to Fix the Issue\n\u003c/h2\u003e\n\n\u003cp\u003eYou need to save the interval ID when you call the \u003ccode\u003esetInterval\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eReference\u003c/em\u003e: \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setInterval#Return_value\"\u003eWindowOrWorkerGlobalScope.setInterval()\u003c/a\u003e\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/75fcb22f74c265cf545917a9441f0242.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eTo cancel \u003ccode\u003esetInterval\u003c/code\u003e, you need to call \u003ccode\u003eclearInterval\u003c/code\u003e, which require the interval ID returned when you called \u003ccode\u003esetInterval\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe best place to do is right before the component unmounts (\u003ca href=\"http://componentWillUnmount()\"\u003ecomponentWillUnmount\u003c/a\u003e).\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/da463930aa353665d8026d2225291c00.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eYou can see below that the interval doesn’t run any more after canceled within \u003ccode\u003ecomponentWillUmount\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--nHvoSNH_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/setInterval-canceled.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--nHvoSNH_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/setInterval-canceled.gif%3Fw%3D1170%26ssl%3D1\" alt=\"The interval canceled\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://codesandbox.io/s/w7mnz4w0pk?autoresize=1\u0026amp;expanddevtools=1\u0026amp;moduleview=1\u0026amp;view=preview\"\u003eTry it for yourself\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/09/15/canceling-interval-in-react/\"\u003eCanceling interval in React\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: Canceling setInterval in React\r\npublished: true\r\ntags: react,javascript\r\ncanonical_url: https://www.slightedgecoder.com/2018/09/15/canceling-interval-in-react/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/orb3v8z5ureu5s7yzwss.gif\r\n---\r\n\r\n_Photo by [Icons8 team](https://unsplash.com/photos/dhZtNlvNE8M?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_\r\n\r\nSometimes you need to run a command in an interval using [window.setInterval](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setInterval).\r\nBut if you don’t stop the interval when the component using the `setInterval` is not stopped, it will continuously run using unnecessary resources.\r\n\r\nI will talk about how to handle `setInterval` in React\r\n\r\n## 😅 Reproducing the Issue \r\n\r\nLet’s create a very “contrived” example that prints “hello world” every second in console.\r\n\r\n{% gist https://gist.github.com/dance2die/e7108c9dc2d25e2a3d651b427965f425 %}\r\n\r\n\r\n_Follow along on [CodeSandBox](https://codesandbox.io/s/0x979w8n5l)_\r\n\r\nWhen you navigate away from the component (to simulate unmounting), the interval still runs.\r\n\r\nEven worse, when you navigate back to `Greeting` component, another interval process starts! 😱\r\n\r\n![Error Reproduced](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/reproducing-issue.gif?w=1170\u0026ssl=1)\r\n\r\n## 🔧 How to Fix the Issue  \r\n\r\nYou need to save the interval ID when you call the `setInterval`.\r\n\r\n_Reference_: [WindowOrWorkerGlobalScope.setInterval()](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setInterval#Return_value)\r\n\r\n{% gist https://gist.github.com/dance2die/75fcb22f74c265cf545917a9441f0242 %}\r\n\r\nTo cancel `setInterval`, you need to call `clearInterval`, which require the interval ID returned when you called `setInterval`.\r\n\r\nThe best place to do is right before the component unmounts ([componentWillUnmount](http://componentWillUnmount())).\r\n\r\n{% gist https://gist.github.com/dance2die/da463930aa353665d8026d2225291c00 %}\r\n\r\nYou can see below that the interval doesn’t run any more after canceled within `componentWillUmount`.\r\n\r\n![The interval canceled](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/setInterval-canceled.gif?w=1170\u0026ssl=1)\r\n\r\n[Try it for yourself](https://codesandbox.io/s/w7mnz4w0pk?autoresize=1\u0026expanddevtools=1\u0026moduleview=1\u0026view=preview)\r\n\r\n_The post [Canceling interval in React](https://www.slightedgecoder.com/2018/09/15/canceling-interval-in-react/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com)._",
    "canonical_url": "https://www.slightedgecoder.com/2018/09/15/canceling-interval-in-react/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 8,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/09/15/canceling-interval-in-react/",
    "positive_reactions_count": 39,
    "edited_at": "2018-09-15T20:00:20.411Z",
    "crossposted_at": "2018-09-15T20:00:03.207Z",
    "language": null,
    "cached_tag_list": "react, javascript",
    "path": "/dance2die/canceling-interval-in-react-52b5",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-09-27T13:37:48.924Z"
  },
  {
    "title": "Making Ant Design CSS Optimization to Work on CodeSandBox",
    "slug": "making-ant-design-css-optimization-to-work-on-codesandbox-1n4m",
    "created_at": "2018-09-16T22:30:13.299Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/4lxojtnghl4jzymibtxt.png",
    "description": "\n\nPhoto by Guillaume de Germain on Unsplash\n\nI’ve been creating small sites on Co...",
    "published": true,
    "published_at": "2018-09-16T21:08:36.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/mrL7QWWkciE?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eGuillaume de Germain\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/ant?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eI’ve been creating small sites on \u003ca href=\"https://codesandbox.io\"\u003eCodeSandBox\u003c/a\u003e as it saves you much time on installing new packages.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://ant.design\"\u003eAnt Design\u003c/a\u003e provides a way to optimize components \u0026amp; CSS imports using their custom babel plugin (\u003ca href=\"https://github.com/ant-design/babel-plugin-import\"\u003ebabel-plugin-import\u003c/a\u003e) via \u003ca href=\"https://github.com/timarney/react-app-rewired\"\u003ereact-app-rewired\u003c/a\u003e without having to eject a \u003ccode\u003ecreate-react-app\u003c/code\u003e generated site.\u003c/p\u003e\n\n\u003cp\u003eEverything works fine locally but CSS is not applied on CodeSandBox.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"local-demo\" href=\"#local-demo\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Local Demo\n\u003c/h2\u003e\n\n\u003cp\u003eThis is how it looks locally with the rewired site.\u003c/p\u003e\n\n\u003cp\u003e\u003ciframe width=\"710\" height=\"399\" src=\"https://www.youtube.com/embed/vAnMM5upae4\" allowfullscreen\u003e \u003c/iframe\u003e\u003c/p\u003e\n\n\u003cfigcaption\u003eAnt Design CSS Working Locally \u003c/figcaption\u003e\n\n\u003cp\u003eYou can see that babel-plugin-import injects necessary CSS even after commenting out \u003ccode\u003eimport \"antd/dist/antd.css\"\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"codesandbox-demo\" href=\"#codesandbox-demo\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  CodeSandBox Demo\n\u003c/h2\u003e\n\n\u003cp\u003eLet’s run the same code (shared via \u003ca href=\"https://github.com/dance2die/blog.dynamic_antd_css_import\"\u003eGitHub\u003c/a\u003e) on CodeSandBox.\u003c/p\u003e\n\n\u003cp\u003e\u003ciframe width=\"710\" height=\"399\" src=\"https://www.youtube.com/embed/VLN9OPwBRkg\" allowfullscreen\u003e \u003c/iframe\u003e\u003cfigcaption\u003eAnt Design CSS Not Working on CodeSandBox \u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eIf you comment out the CSS import, CSS is not imported any more.\u003c/p\u003e\n\n\u003cp\u003eSo let’s see how to make CSS work locally \u0026amp; on CodeSandBox.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"making-it-work-on-codesandbox\" href=\"#making-it-work-on-codesandbox\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Making it work on CodeSandBox\n\u003c/h2\u003e\n\n\u003cp\u003eThe trick is to \u003ca href=\"https://developers.google.com/web/updates/2017/11/dynamic-import\"\u003edynamically import\u003c/a\u003e the CSS file by checking if it’s running in production or development mode.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/3e16f2eefd8615cc81ada678f7b440b0.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eIf replace previous static imports with dynamic versions, CSS will work on local machine as well as on CodeSandBox (with Ant Design’s optimizations applied in production mode).\u003c/p\u003e\n\n\u003cp\u003e\u003ciframe width=\"710\" height=\"399\" src=\"https://www.youtube.com/embed/Pl9rTf1xaDo\" allowfullscreen\u003e \u003c/iframe\u003e\u003c/p\u003e\n\n\u003cfigcaption\u003eAnt Design CSS Working on CodeSandBox \u003c/figcaption\u003e\n\n\u003cp\u003eAfter deploying it on \u003ca href=\"https://dynamicantdcssimport.netlify.com\"\u003eNetlify\u003c/a\u003e, you can see babel-plugin-import working via create-app-rewire with reduced CSS size.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--YAjCdVds--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/with-static-import.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--YAjCdVds--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/with-static-import.png%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cfigcaption\u003eFull Ant Design CSS\u003c/figcaption\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--inJ8w0Si--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/with-dynamic-import.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--inJ8w0Si--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/with-dynamic-import.png%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cfigcaption\u003eCSS size reduced\u003c/figcaption\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Parting Words\n\u003c/h2\u003e\n\n\u003cp\u003eI was building \u003ca href=\"https://bunpkg.com\"\u003eBunpkg\u003c/a\u003emostly on \u003ca href=\"https://codesandbox.io/s/m5yvz1y3kx\"\u003eCodeSandBox\u003c/a\u003eand that was how I got around with the issue.\u003c/p\u003e\n\n\u003cp\u003eThis might not be the optimal solution so I’d love it if you could provide me any easier way 🙏.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/09/16/making-ant-design-css-optimization-to-work-on-codesandbox/\"\u003eMaking Ant Design CSS Optimization to Work on CodeSandBox\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e\u003c/em\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: Making Ant Design CSS Optimization to Work on CodeSandBox\r\npublished: true\r\ntags: react,css,antd,codesandbox\r\ncanonical_url: https://www.slightedgecoder.com/2018/09/16/making-ant-design-css-optimization-to-work-on-codesandbox/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/4lxojtnghl4jzymibtxt.png\r\n---\r\n\r\n_Photo by [Guillaume de Germain](https://unsplash.com/photos/mrL7QWWkciE?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/ant?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_\r\n\r\nI’ve been creating small sites on [CodeSandBox](https://codesandbox.io) as it saves you much time on installing new packages.\r\n\r\n[Ant Design](https://ant.design) provides a way to optimize components \u0026 CSS imports using their custom babel plugin ([babel-plugin-import](https://github.com/ant-design/babel-plugin-import)) via [react-app-rewired](https://github.com/timarney/react-app-rewired) without having to eject a `create-react-app` generated site.\r\n\r\nEverything works fine locally but CSS is not applied on CodeSandBox.\r\n\r\n## Local Demo \r\n\r\nThis is how it looks locally with the rewired site.\r\n\r\n{% youtube vAnMM5upae4 %}\r\n\u003cfigcaption\u003eAnt Design CSS Working Locally \u003c/figcaption\u003e\r\n\r\nYou can see that babel-plugin-import injects necessary CSS even after commenting out `import \"antd/dist/antd.css\"`.\r\n\r\n## CodeSandBox Demo \r\n\r\nLet’s run the same code (shared via [GitHub](https://github.com/dance2die/blog.dynamic_antd_css_import)) on CodeSandBox.\r\n\r\n{% youtube VLN9OPwBRkg %}\u003cfigcaption\u003eAnt Design CSS Not Working on CodeSandBox \u003c/figcaption\u003e\r\n\r\nIf you comment out the CSS import, CSS is not imported any more.\r\n\r\nSo let’s see how to make CSS work locally \u0026 on CodeSandBox.\r\n\r\n## Making it work on CodeSandBox \r\n\r\nThe trick is to [dynamically import](https://developers.google.com/web/updates/2017/11/dynamic-import) the CSS file by checking if it’s running in production or development mode.\r\n\r\n{% gist https://gist.github.com/dance2die/3e16f2eefd8615cc81ada678f7b440b0 %}\r\n\r\nIf replace previous static imports with dynamic versions, CSS will work on local machine as well as on CodeSandBox (with Ant Design’s optimizations applied in production mode).\r\n\r\n{% youtube Pl9rTf1xaDo %}\r\n\u003cfigcaption\u003eAnt Design CSS Working on CodeSandBox \u003c/figcaption\u003e\r\n\r\nAfter deploying it on [Netlify](https://dynamicantdcssimport.netlify.com), you can see babel-plugin-import working via create-app-rewire with reduced CSS size.\r\n\r\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/with-static-import.png?w=1170\u0026ssl=1)\r\n\u003cfigcaption\u003eFull Ant Design CSS\u003c/figcaption\u003e\r\n\r\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/with-dynamic-import.png?w=1170\u0026ssl=1)\r\n\u003cfigcaption\u003eCSS size reduced\u003c/figcaption\u003e\r\n\r\n## Parting Words \r\n\r\nI was building [Bunpkg](https://bunpkg.com)mostly on [CodeSandBox](https://codesandbox.io/s/m5yvz1y3kx)and that was how I got around with the issue.\r\n\r\nThis might not be the optimal solution so I’d love it if you could provide me any easier way 🙏.\r\n\r\n_The post [Making Ant Design CSS Optimization to Work on CodeSandBox](https://www.slightedgecoder.com/2018/09/16/making-ant-design-css-optimization-to-work-on-codesandbox/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com)_.",
    "canonical_url": "https://www.slightedgecoder.com/2018/09/16/making-ant-design-css-optimization-to-work-on-codesandbox/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/09/16/making-ant-design-css-optimization-to-work-on-codesandbox/",
    "positive_reactions_count": 15,
    "edited_at": null,
    "crossposted_at": "2018-09-16T23:57:43.366Z",
    "language": null,
    "cached_tag_list": "react, css, antd, codesandbox",
    "path": "/dance2die/making-ant-design-css-optimization-to-work-on-codesandbox-1n4m",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-09-16T21:08:36.000Z"
  },
  {
    "title": "Sketchnotes for \"Getting Started with Redux\"",
    "slug": "sketchnotes-for-getting-started-with-redux-4k9c",
    "created_at": "2018-09-21T22:40:36.186Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/c4b3l70rr3lctj8hfnyp.jpg",
    "description": "\n\nRecently read The Sketchnote Handbook by Mike Rohde.\n\nOne of the benefits is to...",
    "published": true,
    "published_at": "2018-09-21T22:31:30.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eRecently read \u003ca href=\"https://www.goodreads.com/book/show/15858089-the-sketchnote-handbook\"\u003eThe Sketchnote Handbook\u003c/a\u003e by \u003ca href=\"http://rohdesign.com\"\u003eMike Rohde\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eOne of the benefits is to retain knowledge longer by helping you convert abstract knowledge into visual representations.\u003c/p\u003e\n\n\u003cp\u003eHere are my first sketchnotes created while watching \u003ca href=\"https://egghead.io/courses/getting-started-with-redux\"\u003eGetting Started with Redux\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"sketchnotes\" href=\"#sketchnotes\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Sketchnotes\n\u003c/h2\u003e\n\n\u003cp\u003eHere are the sketchnotes summarizing most of videos.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--3qco9H4s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-01.jpg%3Fw%3D1170\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--3qco9H4s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-01.jpg%3Fw%3D1170\" alt=\"page 01\" title=\"page 01\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--svPgUz41--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-02.jpg%3Fw%3D1170\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--svPgUz41--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-02.jpg%3Fw%3D1170\" alt=\"page 02\" title=\"page 02\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--HTX5ZBt9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/Page-03.jpg%3Fw%3D1170\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--HTX5ZBt9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/Page-03.jpg%3Fw%3D1170\" alt=\"Page 03\" title=\"Page 03\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--CliMhEMB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-04.jpg%3Fw%3D1170\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--CliMhEMB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-04.jpg%3Fw%3D1170\" alt=\"page 04\" title=\"page 04\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--dZn_ncsC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-05.jpg%3Fw%3D1170\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--dZn_ncsC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-05.jpg%3Fw%3D1170\" alt=\"page 05\" title=\"page 05\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--BUtRaQcR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/Page-06.jpg%3Fw%3D1170\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--BUtRaQcR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/Page-06.jpg%3Fw%3D1170\" alt=\"Page 06\" title=\"Page 06\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--yN8iPneZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-07.jpg%3Fw%3D1170\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--yN8iPneZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-07.jpg%3Fw%3D1170\" alt=\"page 07\" title=\"page 07\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--LZGtUOSi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-08.jpg%3Fw%3D1170\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--LZGtUOSi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-08.jpg%3Fw%3D1170\" alt=\"page 08\" title=\"page 08\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--wbJUv8mT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-09.jpg%3Fw%3D1170\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--wbJUv8mT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-09.jpg%3Fw%3D1170\" alt=\"page 09\" title=\"page 09\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--7THeyK12--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-10.jpg%3Fw%3D1170\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--7THeyK12--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-10.jpg%3Fw%3D1170\" alt=\"page 10\" title=\"page 10\"\u003e\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Qw99QEuH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-11.jpg%3Fw%3D1170\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Qw99QEuH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-11.jpg%3Fw%3D1170\" alt=\"page 11\" title=\"page 11\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"benefits\" href=\"#benefits\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👍 Benefits\n\u003c/h2\u003e\n\n\u003cp\u003eAs mentioned above, I was able to understand “why”s behind each method in Redux.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"downside\" href=\"#downside\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👎 Downside\n\u003c/h2\u003e\n\n\u003cp\u003eSo far, my drawing skill is quite lacking thus it took over 5+ hours to finish for the 2 hour course.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-i-learned\" href=\"#what-i-learned\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🧐 What I Learned\n\u003c/h2\u003e\n\n\u003cp\u003eComing up with visual way helped me to extract only the important part.\u003cbr\u003e\nI need more practice and continuous effort.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👋 Parting Words\n\u003c/h2\u003e\n\n\u003cp\u003eI’d not recommend if you are an auditory learner (but great for visual or kinetic learners).\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003ebut it wouldn’t hurt.\u003c/em\u003e 😎\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/09/21/getting-started-with-redux-sketchnotes/\"\u003eSketchnotes for \"Getting Started with Redux\"\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: Sketchnotes for \"Getting Started with Redux\"\r\npublished: true\r\ntags: Blog Entry,React,Sketchnotes,react\r\ncanonical_url: https://www.slightedgecoder.com/2018/09/21/getting-started-with-redux-sketchnotes/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/c4b3l70rr3lctj8hfnyp.jpg\r\n---\r\n\r\nRecently read [The Sketchnote Handbook](https://www.goodreads.com/book/show/15858089-the-sketchnote-handbook) by [Mike Rohde](http://rohdesign.com).\r\n\r\nOne of the benefits is to retain knowledge longer by helping you convert abstract knowledge into visual representations.\r\n\r\nHere are my first sketchnotes created while watching [Getting Started with Redux](https://egghead.io/courses/getting-started-with-redux).\r\n\r\n## Sketchnotes\r\n\r\nHere are the sketchnotes summarizing most of videos.\r\n\r\n![page 01](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-01.jpg?w=1170 \"page 01\")\r\n![page 02](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-02.jpg?w=1170 \"page 02\")\r\n![Page 03](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/Page-03.jpg?w=1170 \"Page 03\")\r\n![page 04](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-04.jpg?w=1170 \"page 04\")\r\n![page 05](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-05.jpg?w=1170 \"page 05\")\r\n![Page 06](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/Page-06.jpg?w=1170 \"Page 06\")\r\n![page 07](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-07.jpg?w=1170 \"page 07\")\r\n![page 08](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-08.jpg?w=1170 \"page 08\")\r\n![page 09](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-09.jpg?w=1170 \"page 09\")\r\n![page 10](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-10.jpg?w=1170 \"page 10\")\r\n![page 11](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/page-11.jpg?w=1170 \"page 11\")\r\n\r\n\r\n## 👍 Benefits\r\n\r\nAs mentioned above, I was able to understand “why”s behind each method in Redux.\r\n\r\n## 👎 Downside\r\n\r\nSo far, my drawing skill is quite lacking thus it took over 5+ hours to finish for the 2 hour course.\r\n\r\n## 🧐 What I Learned\r\n\r\nComing up with visual way helped me to extract only the important part.\r\nI need more practice and continuous effort.\r\n\r\n## 👋 Parting Words\r\n\r\nI’d not recommend if you are an auditory learner (but great for visual or kinetic learners).\r\n\r\n**_but it wouldn’t hurt._ 😎**\r\n\r\n_The post [Sketchnotes for \"Getting Started with Redux\"](https://www.slightedgecoder.com/2018/09/21/getting-started-with-redux-sketchnotes/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com)._",
    "canonical_url": "https://www.slightedgecoder.com/2018/09/21/getting-started-with-redux-sketchnotes/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 3,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/09/21/getting-started-with-redux-sketchnotes/",
    "positive_reactions_count": 20,
    "edited_at": "2018-09-22T06:58:04.150Z",
    "crossposted_at": "2018-09-22T06:00:26.105Z",
    "language": null,
    "cached_tag_list": "blogentry, react, sketchnotes",
    "path": "/dance2die/sketchnotes-for-getting-started-with-redux-4k9c",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-09-24T10:26:29.349Z"
  },
  {
    "title": "Resetting Error Boundary Error State",
    "slug": "resetting-error-boundary-error-state-125k",
    "created_at": "2018-09-29T22:14:46.004Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/2l2rl46m7u96kd0u7yic.png",
    "description": "\n\nFor bunpkg, I use a Wizard component to display a series of steps to generate U...",
    "published": true,
    "published_at": "2018-09-29T22:03:38.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eFor \u003ca href=\"https://bunpkg.com\"\u003ebunpkg\u003c/a\u003e, I use a Wizard component to display a series of steps to generate \u003ca href=\"https://unpkg.com\"\u003eUNPKG\u003c/a\u003elinks.\u003c/p\u003e\n\n\u003cp\u003eWhen a request to Web API fails, an error is caught with an \u003ca href=\"https://reactjs.org/docs/error-boundaries.html\"\u003eError Boundary\u003c/a\u003e component and display an error message in \u003ccode\u003eErrorBoundary.FallbackComponent\u003c/code\u003e (from \u003ca href=\"https://github.com/bvaughn/react-error-boundary\"\u003ereact-error-boundary\u003c/a\u003e, a simple but better implementation found on \u003ca href=\"https://reactjs.org/docs/error-boundaries.html\"\u003eReact documentation\u003c/a\u003e).\u003c/p\u003e\n\n\u003cp\u003eBut the error boundary wasn’t reset when a user moved onto a different step in the wizard.\u003c/p\u003e\n\n\u003cp\u003eI would like to share my failed attempt and the proper workaround to reset Error Boundary components.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eBut this can apply to your custom ErrorBoundary component.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"tldr\" href=\"#tldr\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  😪 TL;DR\n\u003c/h2\u003e\n\n\u003cp\u003eUpdate Error Boundary key props to let React reset the error state.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"%E2%84%B9-about-demo\" href=\"#%E2%84%B9-about-demo\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ℹ About Demo\n\u003c/h2\u003e\n\n\u003cp\u003eThe following demo has a component that randomly throws an error and the error boundary shows the error message caught.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eCredit:\u003c/em\u003e\u003c/strong\u003e \u003cem\u003ethe demo program is created by \u003ca href=\"https://twitter.com/brian_d_vaughn/\"\u003eBrian Vaugn\u003c/a\u003e on \u003ca href=\"https://codesandbox.io/s/k9znx9kj9r\"\u003eCodeSandBox\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ig2Iqvuw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/demo.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ig2Iqvuw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/demo.gif%3Fw%3D1170%26ssl%3D1\" alt=\"Error Boundary Reset Demo\"\u003e\u003c/a\u003e\u003cfigcaption\u003eError Boundary Reset Demo\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"first-attempt-bad-workaround\" href=\"#first-attempt-bad-workaround\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🙅‍♂️ First attempt (bad workaround)\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003ereact-error-boundary\u003c/code\u003e provides only \u003ca href=\"https://github.com/bvaughn/react-error-boundary/blob/master/src/ErrorBoundary.js#L8\"\u003efollowing props\u003c/a\u003e (leaving out \u003ccode\u003echildren\u003c/code\u003e) and no way to clear the error caught.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eFallbackComponent\u003c/code\u003e –  A component to display in case of error \u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eonError\u003c/code\u003e – A callback triggered on error\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/bvaughn/react-error-boundary/blob/master/src/ErrorBoundary.js#L46\"\u003eFollowing\u003c/a\u003e is how \u003ccode\u003eErrorBoundary.render\u003c/code\u003e is implemented.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/b2af474fc9b7398b0f5f33f8ae35dfb2.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003eFallbackComponent\u003c/code\u003e is displayed if an error exists.\u003c/p\u003e\n\n\u003cp\u003eSo my first attempt was to create a reference (\u003ccode\u003ethis.errorBoundary\u003c/code\u003e) and directly manipulate it as it is a 3rd party component.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eYes, stupid of me to even attempt to directly manipulate the state even without using \u003ccode\u003esetState\u003c/code\u003e…\u003c/em\u003e\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/602254e2f6389e2a9f06f6c7d4185334.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"proper-workaround\" href=\"#proper-workaround\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🙆 Proper Workaround\n\u003c/h2\u003e\n\n\u003cp\u003eI knew that the workaround was just so hacky that I created a \u003ca href=\"https://github.com/bvaughn/react-error-boundary/issues/23\"\u003erequest ticket\u003c/a\u003e on \u003ca href=\"https://github.com/bvaughn/react-error-boundary\"\u003ereact-error-boundary GitHub repository\u003c/a\u003e, requesting to provide a way/prop to clear the error.\u003c/p\u003e\n\n\u003cp\u003eAnd Brian has replied with a \u003ca href=\"https://github.com/bvaughn/react-error-boundary/issues/23#issuecomment-425470511\"\u003eproper React-way of resetting error boundary\u003c/a\u003e – provide a key to an instance of ErrorBoundary component to reset the \u003ccode\u003einstant.error\u003c/code\u003e in the next render phase.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/ebff548c1c4253f5c14349b3d6004a72.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eYou can see that as you click on \u003ccode\u003ereset error boundary\u003c/code\u003e button, it updates the key on ErrorBoundary component (\u003ccode\u003e\u0026lt;ErrorBoundary key={this.state.errorBoundaryKey}\u0026gt;\u003c/code\u003e) using \u003ccode\u003ehandleResetButtonClick\u003c/code\u003e method, which will clear the internal error state by increasing \u003ccode\u003eerrorBoundaryKey\u003c/code\u003e by one every time forcing a re-render.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"failures\" href=\"#failures\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  😞 Failures\n\u003c/h2\u003e\n\n\u003cp\u003eI was just too obsessed with “making things work” and overused Refs (even though \u003ca href=\"https://reactjs.org/docs/refs-and-the-dom.html#dont-overuse-refs\"\u003eReactJS clearly recommends you not to\u003c/a\u003e).\u003c/p\u003e\n\n\u003cp\u003eSecond of all, I didn’t even consider using \u003ccode\u003esetState\u003c/code\u003e but directly manipulated the error state (\u003ccode\u003ethis.errorBoundary.current.state.error = null\u003c/code\u003e).\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👋 Parting Words\n\u003c/h2\u003e\n\n\u003cp\u003eMany thanks to \u003ca href=\"https://twitter.com/brian_d_vaughn/\"\u003eBrian\u003c/a\u003e for \u003ca href=\"https://github.com/bvaughn/react-error-boundary\"\u003ereact-error-boundary\u003c/a\u003e, helping me realize the mistake and providing the workaround.\u003c/p\u003e\n\n\u003cp\u003eI hope the post help you should you run into the situation where an error boundary need to be reset \u0026amp; not go through the same bad practice/failures I mentioned above.\u003c/p\u003e\n\n\u003cp\u003eLastly, \u003ca href=\"https://bunpkg.com\"\u003eBunpkg\u003c/a\u003e uses the \u003ca href=\"https://github.com/dance2die/bunpkg-client/blob/master/src/container/Wizard.js#L133\"\u003eworkaround\u003c/a\u003e suggested.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/09/29/resetting-error-boundary-error-state/\"\u003eResetting Error Boundary Error State\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: Resetting Error Boundary Error State\r\npublished: true\r\ntags: react, javascript\r\ncanonical_url: https://www.slightedgecoder.com/2018/09/29/resetting-error-boundary-error-state/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/2l2rl46m7u96kd0u7yic.png\r\n---\r\n\r\nFor [bunpkg](https://bunpkg.com), I use a Wizard component to display a series of steps to generate [UNPKG](https://unpkg.com)links.\r\n\r\nWhen a request to Web API fails, an error is caught with an [Error Boundary](https://reactjs.org/docs/error-boundaries.html) component and display an error message in `ErrorBoundary.FallbackComponent` (from [react-error-boundary](https://github.com/bvaughn/react-error-boundary), a simple but better implementation found on [React documentation](https://reactjs.org/docs/error-boundaries.html)).\r\n\r\nBut the error boundary wasn’t reset when a user moved onto a different step in the wizard.\r\n\r\nI would like to share my failed attempt and the proper workaround to reset Error Boundary components.\r\n\r\n_But this can apply to your custom ErrorBoundary component._\r\n\r\n## 😪 TL;DR\r\n\r\nUpdate Error Boundary key props to let React reset the error state.\r\n\r\n## ℹ About Demo\r\n\r\nThe following demo has a component that randomly throws an error and the error boundary shows the error message caught.\r\n\r\n**_Credit:_** _the demo program is created by [Brian Vaugn](https://twitter.com/brian_d_vaughn/) on [CodeSandBox](https://codesandbox.io/s/k9znx9kj9r)._\r\n\r\n![Error Boundary Reset Demo](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/09/demo.gif?w=1170\u0026ssl=1)\u003cfigcaption\u003eError Boundary Reset Demo\u003c/figcaption\u003e\r\n\r\n## 🙅‍♂️ First attempt (bad workaround)\r\n\r\n`react-error-boundary` provides only [following props](https://github.com/bvaughn/react-error-boundary/blob/master/src/ErrorBoundary.js#L8) (leaving out `children`) and no way to clear the error caught.\r\n\r\n- `FallbackComponent` –  A component to display in case of error \r\n- `onError` – A callback triggered on error\r\n\r\n[Following](https://github.com/bvaughn/react-error-boundary/blob/master/src/ErrorBoundary.js#L46) is how `ErrorBoundary.render` is implemented.\r\n\r\n{% gist https://gist.github.com/dance2die/b2af474fc9b7398b0f5f33f8ae35dfb2 %}\r\n\r\n`FallbackComponent` is displayed if an error exists.\r\n\r\nSo my first attempt was to create a reference (`this.errorBoundary`) and directly manipulate it as it is a 3rd party component.\r\n\r\n_Yes, stupid of me to even attempt to directly manipulate the state even without using `setState`…_\r\n\r\n{% gist https://gist.github.com/dance2die/602254e2f6389e2a9f06f6c7d4185334 %}\r\n\r\n## 🙆 Proper Workaround\r\n\r\nI knew that the workaround was just so hacky that I created a [request ticket](https://github.com/bvaughn/react-error-boundary/issues/23) on [react-error-boundary GitHub repository](https://github.com/bvaughn/react-error-boundary), requesting to provide a way/prop to clear the error.\r\n\r\nAnd Brian has replied with a [proper React-way of resetting error boundary](https://github.com/bvaughn/react-error-boundary/issues/23#issuecomment-425470511) – provide a key to an instance of ErrorBoundary component to reset the `instant.error` in the next render phase.\r\n\r\n{% gist https://gist.github.com/dance2die/ebff548c1c4253f5c14349b3d6004a72 %}\r\n\r\nYou can see that as you click on `reset error boundary` button, it updates the key on ErrorBoundary component (`\u003cErrorBoundary key={this.state.errorBoundaryKey}\u003e`) using `handleResetButtonClick` method, which will clear the internal error state by increasing `errorBoundaryKey` by one every time forcing a re-render.\r\n\r\n## 😞 Failures\r\n\r\nI was just too obsessed with “making things work” and overused Refs (even though [ReactJS clearly recommends you not to](https://reactjs.org/docs/refs-and-the-dom.html#dont-overuse-refs)).\r\n\r\nSecond of all, I didn’t even consider using `setState` but directly manipulated the error state (`this.errorBoundary.current.state.error = null`).\r\n\r\n## 👋 Parting Words\r\n\r\nMany thanks to [Brian](https://twitter.com/brian_d_vaughn/) for [react-error-boundary](https://github.com/bvaughn/react-error-boundary), helping me realize the mistake and providing the workaround.\r\n\r\nI hope the post help you should you run into the situation where an error boundary need to be reset \u0026 not go through the same bad practice/failures I mentioned above.\r\n\r\nLastly, [Bunpkg](https://bunpkg.com) uses the [workaround](https://github.com/dance2die/bunpkg-client/blob/master/src/container/Wizard.js#L133) suggested.\r\n\r\n_The post [Resetting Error Boundary Error State](https://www.slightedgecoder.com/2018/09/29/resetting-error-boundary-error-state/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com)._",
    "canonical_url": "https://www.slightedgecoder.com/2018/09/29/resetting-error-boundary-error-state/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/09/29/resetting-error-boundary-error-state/",
    "positive_reactions_count": 36,
    "edited_at": null,
    "crossposted_at": "2018-09-30T00:03:36.989Z",
    "language": null,
    "cached_tag_list": "react, javascript",
    "path": "/dance2die/resetting-error-boundary-error-state-125k",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-09-29T22:03:38.000Z"
  },
  {
    "title": "Setting up a React Environment for ASP.NET MVC",
    "slug": "setting-up-a-react-environment-for-aspnet-mvc-44la",
    "created_at": "2018-10-13T21:24:30.021Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/yowczaqodgj5c2l6aees.png",
    "description": "\n\nPhoto by Zoltan Tasi on Unsplash\n\nI had a chance to update a legacy ASP.NET MVC...",
    "published": true,
    "published_at": "2018-10-13T21:05:54.000Z",
    "processed_html": "\u003cp\u003e\u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/6vEqcR8Icbs?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eZoltan Tasi\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/atom?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eI had a chance to update a legacy ASP.NET MVC website using AngularJS (yes, the first version) to use Webpack \u0026amp; Babel 7 (which used to import AngularJS files using script tags).\u003c/p\u003e\n\n\u003cp\u003ePrevious post \u003ca href=\"https://dev.to/dance2die/setting-up-an-es6-environment-for-aspnet-mvc-5-11mj-temp-slug-5475884\"\u003eSetting up an ES6 Environment for ASP.NET MVC 5\u003c/a\u003e was a bit outdated as it was using older version of babel and webpack, so I decided write more concise post to get started with the newest libraries.\u003c/p\u003e\n\n\u003cp\u003eAs I have moved onto React, I will show you how to set up React environment for ASP.NET MVC 5.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"prerequisite\" href=\"#prerequisite\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🧐 Prerequisite\n\u003c/h2\u003e\n\n\u003cp\u003eI will assume that you are familiar with NPM \u0026amp; Webpack,\u003cbr\u003e\u003cbr\u003e\nso I won’t go into too much details on what each option in NPM \u0026amp; Webpack.\u003c/p\u003e\n\u003ch2\u003e\n  \u003ca name=\"setup-steps\" href=\"#setup-steps\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👣 Setup Steps\n\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003eCreate an ASP.NET MVC web site\u003c/li\u003e\n\u003cli\u003eCreate \u0026amp; configure NPM configuration file (package.json)\u003c/li\u003e\n\u003cli\u003eCreate \u0026amp; configure Babel configuration file (.babelrc)\u003c/li\u003e\n\u003cli\u003eCreate \u0026amp; configure Webpack configuration file (webpack.config.js)\u003c/li\u003e\n\u003cli\u003eInstall NPM packages\u003c/li\u003e\n\u003cli\u003eInstall Visual Studio Extensions (NPM Task Runner) \u003c/li\u003e\n\u003c/ol\u003e\n\u003ch4\u003e\n  \u003ca name=\"1-create-an-aspnet-mvc-web-site\" href=\"#1-create-an-aspnet-mvc-web-site\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  1. Create an ASP.NET MVC web site\n\u003c/h4\u003e\n\n\u003cp\u003eCreate a new ASP.NET MVC project (choose a choice of your .NET framework).\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--CzZnhoOx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/1.1-create-a-new-project.jpg%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--CzZnhoOx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/1.1-create-a-new-project.jpg%3Fw%3D1170%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cfigcaption\u003eCreate a new ASP.NET MVC Project\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eAnd select a template.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--LptlhHWD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/1.2-select-template.jpg%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--LptlhHWD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/1.2-select-template.jpg%3Fw%3D1170%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cfigcaption\u003eMVC Template\u003c/figcaption\u003e\u003c/p\u003e\n\u003ch4\u003e\n  \u003ca name=\"2-create-amp-configure-npm-configuration-file-packagejson\" href=\"#2-create-amp-configure-npm-configuration-file-packagejson\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  2. Create \u0026amp; configure NPM configuration file (package.json)\n\u003c/h4\u003e\n\n\u003cp\u003eAdd a new item in the project root.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--eQiQzp_X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/2.1-create-a-new-item.jpg%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--eQiQzp_X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/2.1-create-a-new-item.jpg%3Fw%3D1170%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cfigcaption\u003eAdd New Item…\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eCreate NPM configuration file, \u003ccode\u003epackage.json\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--tgwbyHyo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/2.2-add-package.json_.jpg%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--tgwbyHyo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/2.2-add-package.json_.jpg%3Fw%3D1170%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cfigcaption\u003enpm Configuration File\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eAnd add a script section. And \u003ccode\u003epackage.json\u003c/code\u003e would initially look like the following.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/b41670c22bef4553e197e3efcb43c664.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003ch4\u003e\n  \u003ca name=\"3-create-amp-configure-babel-configuration-file-babelrc\" href=\"#3-create-amp-configure-babel-configuration-file-babelrc\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  3. Create \u0026amp; configure Babel configuration file (.babelrc)\n\u003c/h4\u003e\n\n\u003cp\u003eAdd a new file named \u003ccode\u003e.babelrc\u003c/code\u003e in the same directory as \u003ccode\u003epackage.json\u003c/code\u003e file created in the previous step.\u003c/p\u003e\n\n\u003cp\u003eAnd add following babel options.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/a33a0590d930276754ca9b814707fba7.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://babeljs.io/docs/en/babel-preset-env\"\u003e@babel/preset-env\u003c/a\u003e – enables latest JavaScript syntax\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://babeljs.io/docs/en/next/babel-preset-react\"\u003e@babel/preset-react\u003c/a\u003e –  adds support for React syntax\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://babeljs.io/docs/en/next/babel-plugin-proposal-class-properties.html\"\u003e@babel/plugin-proposal-class-properties\u003c/a\u003e –  adds support for an instance and/or static member declarations in JavaScript classes. \u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"4-create-amp-configure-webpack-configuration-file-webpackconfigjs\" href=\"#4-create-amp-configure-webpack-configuration-file-webpackconfigjs\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  4. Create \u0026amp; configure Webpack configuration file (webpack.config.js)\n\u003c/h4\u003e\n\n\u003cp\u003eCreate a file named \u003ccode\u003ewebpack.config.js\u003c/code\u003e in the project root (same location as \u003ccode\u003epackage.json\u003c/code\u003e \u0026amp; \u003ccode\u003e.babelrc\u003c/code\u003e) \u0026amp; configure it as shown below.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/ce43a01f962ef07c7ad89a19d92428e5.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003cp\u003eWebpack outputs a bundle as \u003ccode\u003e./Scripts/dist/Home/react/bundle.js\u003c/code\u003e so let’s add the script in \u003ccode\u003eView\\Home\\Index.cshtml\u003c/code\u003e razor file.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/ef395768773057d1c45d6fe54a51f344.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aR2A0v9v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/4.1-add-bundle.js.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aR2A0v9v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/4.1-add-bundle.js.png%3Fw%3D1170%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cfigcaption\u003eBundle Script Tag\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"5-install-npm-packages\" href=\"#5-install-npm-packages\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  5. Install NPM packages\n\u003c/h4\u003e\n\n\u003cp\u003eNow let’s install NPM packages to enable latest JavaScript and React syntax.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/502546db05519ce16c768da263c90bfd.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.npmjs.com/package/babel-loader\"\u003ebabel-loader\u003c/a\u003e – Webpack loader for babel\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://browsersync.io/\"\u003ebrowser-sync\u003c/a\u003e \u0026amp; \u003ca href=\"https://www.npmjs.com/package/browser-sync-webpack-plugin\"\u003ebrowser-sync-webpack-plugin\u003c/a\u003e – sync’ing browser upon code change\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.npmjs.com/package/webpack\"\u003ewebpack\u003c/a\u003e \u0026amp; \u003ca href=\"https://www.npmjs.com/package/webpack-cli\"\u003ewebpack-cli\u003c/a\u003e – for running Webpack\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.npmjs.com/package/webpack-notifier\"\u003ewebpack-notifier\u003c/a\u003e – Shows pretty webpack notification\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.npmjs.com/package/react\"\u003ereact\u003c/a\u003e\u0026amp; \u003ca href=\"https://www.npmjs.com/package/react-dom\"\u003ereact-dom\u003c/a\u003e – React library\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"6-install-visual-studio-extensions-npm-task-runner\" href=\"#6-install-visual-studio-extensions-npm-task-runner\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  6. Install Visual Studio Extensions (NPM Task Runner)\n\u003c/h4\u003e\n\n\u003cp\u003eThis is an optional step but to make our lives easier, let’s install a Visual Studio extension, \u003ca href=\"https://marketplace.visualstudio.com/items?itemName=MadsKristensen.NPMTaskRunner\"\u003eNPM Task Runner\u003c/a\u003e for running NPM scripts from Visual Studio.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TPr7HaSa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/6.1-NPM-Task-Runner.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TPr7HaSa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/6.1-NPM-Task-Runner.png%3Fw%3D1170%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cfigcaption\u003eNPM Task Runner Extension\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"%E2%9A%9B-lets-write-some-react-code\" href=\"#%E2%9A%9B-lets-write-some-react-code\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ⚛ Let’s write some React code\n\u003c/h2\u003e\n\n\u003cp\u003eNow we are ready to write a React script using the latest JavaScript syntax (ES6+).\u003c/p\u003e\n\n\u003cp\u003eLet’s add an entry point for React in \u003ccode\u003eViews\\Home\\Index.cshtml\u003c/code\u003e file by  deleting everything except \u003ccode\u003eViewBag.Title\u003c/code\u003e section and add \u003ccode\u003e\u0026lt;div id=\"app\"\u0026gt;\u0026lt;/div\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--4YecLUjG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/React-1-Add-entry-point.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--4YecLUjG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/React-1-Add-entry-point.gif%3Fw%3D1170%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eNow we have an entry point, let’s write a simple React file \u003ccode\u003eindex.js\u003c/code\u003e under \u003ccode\u003eScripts\\Home\\react\u003c/code\u003e directory.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/f368f1116bbc34886334d3294817cb7c.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--3LpEaRRT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/React-2-index.js.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--3LpEaRRT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/React-2-index.js.png%3Fw%3D1170%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cfigcaption\u003eindex.js\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"%E2%80%8D-transpiling-and-running\" href=\"#%E2%80%8D-transpiling-and-running\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🏃‍ Transpiling and Running\n\u003c/h2\u003e\n\n\u003cp\u003eYou could run the \u003ccode\u003edev\u003c/code\u003e script within \u003ccode\u003epackage.json\u003c/code\u003e file but let’s use the NPM task runner to make the life easier.\u003c/p\u003e\n\n\u003cp\u003eOpen the “Task Runner Explorer” by right clicking on \u003ccode\u003epackage.json\u003c/code\u003e file in the project root.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TbDT-Ibh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/Run-1-Task-Runner-Explorer.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TbDT-Ibh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/Run-1-Task-Runner-Explorer.png%3Fw%3D1170%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cfigcaption\u003eOpen Task Runner Explorer\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eStart \u003ccode\u003edev\u003c/code\u003e script (double click), which monitors the changes in \u003ccode\u003eindex.js\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--f6nOoYGv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/Run-2-npm-script.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--f6nOoYGv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/Run-2-npm-script.gif%3Fw%3D1170%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cfigcaption\u003eStart “dev” script by double clicking on it\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eTo enable browser-sync, you need copy a script generated by browser-sync message in \u003ccode\u003e_Layout.cshtml\u003c/code\u003e under \u003ccode\u003eShared\u003c/code\u003e folder near end of \u003ccode\u003e\u0026lt;/body\u0026gt;\u003c/code\u003e tag.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--PEOdc6cu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/Run-4-Browser-Sync-Script-from-Task-Runner-Explorer.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--PEOdc6cu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/Run-4-Browser-Sync-Script-from-Task-Runner-Explorer.png%3Fw%3D1170%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cfigcaption\u003eCopy Browser-sync Script\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eAnd lastly, let’s run ASP.NET from Visual Studio to see the result.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--UG1Fsntq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/Run-3-Start-asp.net_.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--UG1Fsntq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/Run-3-Start-asp.net_.gif%3Fw%3D1170%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cfigcaption\u003eStart ASP.NET MVC\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"%E2%99%BB-reloading-browser-automatically\" href=\"#%E2%99%BB-reloading-browser-automatically\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ♻ Reloading Browser Automatically\n\u003c/h2\u003e\n\n\u003cp\u003eYou’ve installed \u003ccode\u003ebrowser-sync*\u003c/code\u003e packages so as you change your code, the browser will reload automatically upon saving.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--mZuP1eKB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/Browser-Sync-1-Change-script.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--mZuP1eKB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/Browser-Sync-1-Change-script.gif%3Fw%3D1170%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cfigcaption\u003ebrowser-sync at work\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👋 Parting Words\n\u003c/h2\u003e\n\n\u003cp\u003eIn this post I’ve assumed that you know the basics of NPM \u0026amp; Webpack so skipped much of details so that you can easily get up and running.\u003c/p\u003e\n\n\u003cp\u003ePlease refer to documentations linked in-line in the post if you want to understand how each step works and to troubleshoot should you run into an issue.\u003c/p\u003e\n\n\u003cp\u003eSource code is available on \u003ca href=\"https://github.com/dance2die/blog.AspNetReact\"\u003eGitHub\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/10/13/setting-up-a-react-environment-for-asp-net-mvc/\"\u003eSetting up a React Environment for ASP.NET MVC\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n",
    "social_image": "",
    "body_markdown": "---\ntitle: Setting up a React Environment for ASP.NET MVC\npublished: true\ntags: react,aspnet,webpack,babel\ncanonical_url: https://www.slightedgecoder.com/2018/10/13/setting-up-a-react-environment-for-asp-net-mvc/\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/yowczaqodgj5c2l6aees.png\n---\n\n_Photo by [Zoltan Tasi](https://unsplash.com/photos/6vEqcR8Icbs?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/atom?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_\n\nI had a chance to update a legacy ASP.NET MVC website using AngularJS (yes, the first version) to use Webpack \u0026 Babel 7 (which used to import AngularJS files using script tags).\n\nPrevious post [Setting up an ES6 Environment for ASP.NET MVC 5](https://dev.to/dance2die/setting-up-an-es6-environment-for-aspnet-mvc-5-11mj-temp-slug-5475884) was a bit outdated as it was using older version of babel and webpack, so I decided write more concise post to get started with the newest libraries.\n\nAs I have moved onto React, I will show you how to set up React environment for ASP.NET MVC 5.\n\n## 🧐 Prerequisite\n\nI will assume that you are familiar with NPM \u0026 Webpack,    \nso I won’t go into too much details on what each option in NPM \u0026 Webpack.\n\n## 👣 Setup Steps\n\n1. Create an ASP.NET MVC web site\n2. Create \u0026 configure NPM configuration file (package.json)\n3. Create \u0026 configure Babel configuration file (.babelrc)\n4. Create \u0026 configure Webpack configuration file (webpack.config.js)\n5. Install NPM packages\n6. Install Visual Studio Extensions (NPM Task Runner) \n\n#### 1. Create an ASP.NET MVC web site \n\nCreate a new ASP.NET MVC project (choose a choice of your .NET framework).\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/1.1-create-a-new-project.jpg?w=1170\u0026ssl=1)\u003cfigcaption\u003eCreate a new ASP.NET MVC Project\u003c/figcaption\u003e\n\nAnd select a template.\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/1.2-select-template.jpg?w=1170\u0026ssl=1)\u003cfigcaption\u003eMVC Template\u003c/figcaption\u003e\n\n#### 2. Create \u0026 configure NPM configuration file (package.json)\n\nAdd a new item in the project root.\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/2.1-create-a-new-item.jpg?w=1170\u0026ssl=1)\u003cfigcaption\u003eAdd New Item…\u003c/figcaption\u003e\n\nCreate NPM configuration file, `package.json`.\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/2.2-add-package.json_.jpg?w=1170\u0026ssl=1)\u003cfigcaption\u003enpm Configuration File\u003c/figcaption\u003e\n\nAnd add a script section. And `package.json` would initially look like the following.\n\n{% gist https://gist.github.com/dance2die/b41670c22bef4553e197e3efcb43c664 %}\n\n#### 3. Create \u0026 configure Babel configuration file (.babelrc) \n\nAdd a new file named `.babelrc` in the same directory as `package.json` file created in the previous step.\n\nAnd add following babel options.\n\n{% gist https://gist.github.com/dance2die/a33a0590d930276754ca9b814707fba7 %}\n\n- [@babel/preset-env](https://babeljs.io/docs/en/babel-preset-env) – enables latest JavaScript syntax\n- [@babel/preset-react](https://babeljs.io/docs/en/next/babel-preset-react) –  adds support for React syntax\n- [@babel/plugin-proposal-class-properties](https://babeljs.io/docs/en/next/babel-plugin-proposal-class-properties.html) –  adds support for an instance and/or static member declarations in JavaScript classes. \n\n#### 4. Create \u0026 configure Webpack configuration file (webpack.config.js) \n\nCreate a file named `webpack.config.js` in the project root (same location as `package.json` \u0026 `.babelrc`) \u0026 configure it as shown below.\n\n{% gist https://gist.github.com/dance2die/ce43a01f962ef07c7ad89a19d92428e5 %}\n\nWebpack outputs a bundle as `./Scripts/dist/Home/react/bundle.js` so let’s add the script in `View\\Home\\Index.cshtml` razor file.\n\n{% gist https://gist.github.com/dance2die/ef395768773057d1c45d6fe54a51f344 %}\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/4.1-add-bundle.js.png?w=1170\u0026ssl=1)\u003cfigcaption\u003eBundle Script Tag\u003c/figcaption\u003e\n\n#### 5. Install NPM packages \n\nNow let’s install NPM packages to enable latest JavaScript and React syntax.\n\n{% gist https://gist.github.com/dance2die/502546db05519ce16c768da263c90bfd %}\n\n- [babel-loader](https://www.npmjs.com/package/babel-loader) – Webpack loader for babel\n- [browser-sync](https://browsersync.io/) \u0026 [browser-sync-webpack-plugin](https://www.npmjs.com/package/browser-sync-webpack-plugin) – sync’ing browser upon code change\n- [webpack](https://www.npmjs.com/package/webpack) \u0026 [webpack-cli](https://www.npmjs.com/package/webpack-cli) – for running Webpack\n- [webpack-notifier](https://www.npmjs.com/package/webpack-notifier) – Shows pretty webpack notification\n- [react](https://www.npmjs.com/package/react)\u0026 [react-dom](https://www.npmjs.com/package/react-dom) – React library\n\n#### 6. Install Visual Studio Extensions (NPM Task Runner) \n\nThis is an optional step but to make our lives easier, let’s install a Visual Studio extension, [NPM Task Runner](https://marketplace.visualstudio.com/items?itemName=MadsKristensen.NPMTaskRunner) for running NPM scripts from Visual Studio.\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/6.1-NPM-Task-Runner.png?w=1170\u0026ssl=1)\u003cfigcaption\u003eNPM Task Runner Extension\u003c/figcaption\u003e\n\n## ⚛ Let’s write some React code\n\nNow we are ready to write a React script using the latest JavaScript syntax (ES6+).\n\nLet’s add an entry point for React in `Views\\Home\\Index.cshtml` file by  deleting everything except `ViewBag.Title` section and add `\u003cdiv id=\"app\"\u003e\u003c/div\u003e`.\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/React-1-Add-entry-point.gif?w=1170\u0026ssl=1)\n\nNow we have an entry point, let’s write a simple React file `index.js` under `Scripts\\Home\\react` directory.\n\n{% gist https://gist.github.com/dance2die/f368f1116bbc34886334d3294817cb7c %}\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/React-2-index.js.png?w=1170\u0026ssl=1)\u003cfigcaption\u003eindex.js\u003c/figcaption\u003e\n\n## 🏃‍ Transpiling and Running\n\nYou could run the `dev` script within `package.json` file but let’s use the NPM task runner to make the life easier.\n\nOpen the “Task Runner Explorer” by right clicking on `package.json` file in the project root.\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/Run-1-Task-Runner-Explorer.png?w=1170\u0026ssl=1)\u003cfigcaption\u003eOpen Task Runner Explorer\u003c/figcaption\u003e\n\nStart `dev` script (double click), which monitors the changes in `index.js`.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/Run-2-npm-script.gif?w=1170\u0026ssl=1)\u003cfigcaption\u003eStart “dev” script by double clicking on it\u003c/figcaption\u003e\n\nTo enable browser-sync, you need copy a script generated by browser-sync message in `_Layout.cshtml` under `Shared` folder near end of `\u003c/body\u003e` tag.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/Run-4-Browser-Sync-Script-from-Task-Runner-Explorer.png?w=1170\u0026ssl=1)\u003cfigcaption\u003eCopy Browser-sync Script\u003c/figcaption\u003e\n\nAnd lastly, let’s run ASP.NET from Visual Studio to see the result.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/Run-3-Start-asp.net_.gif?w=1170\u0026ssl=1)\u003cfigcaption\u003eStart ASP.NET MVC\u003c/figcaption\u003e\n\n## ♻ Reloading Browser Automatically\n\nYou’ve installed `browser-sync*` packages so as you change your code, the browser will reload automatically upon saving.\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/Browser-Sync-1-Change-script.gif?w=1170\u0026ssl=1)\u003cfigcaption\u003ebrowser-sync at work\u003c/figcaption\u003e\n\n## 👋 Parting Words\n\nIn this post I’ve assumed that you know the basics of NPM \u0026 Webpack so skipped much of details so that you can easily get up and running.\n\nPlease refer to documentations linked in-line in the post if you want to understand how each step works and to troubleshoot should you run into an issue.\n\nSource code is available on [GitHub](https://github.com/dance2die/blog.AspNetReact).\n\n_The post [Setting up a React Environment for ASP.NET MVC](https://www.slightedgecoder.com/2018/10/13/setting-up-a-react-environment-for-asp-net-mvc/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com)._",
    "canonical_url": "https://www.slightedgecoder.com/2018/10/13/setting-up-a-react-environment-for-asp-net-mvc/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 35,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/10/13/setting-up-a-react-environment-for-asp-net-mvc/",
    "positive_reactions_count": 73,
    "edited_at": "2019-06-06T13:19:58.402Z",
    "crossposted_at": "2018-10-13T21:37:42.134Z",
    "language": "en",
    "cached_tag_list": "react, aspnet, webpack, babel",
    "path": "/dance2die/setting-up-a-react-environment-for-aspnet-mvc-44la",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-10-07T17:19:05.478Z"
  },
  {
    "title": "react-use-localstorage",
    "slug": "react-use-localstorage-pp7",
    "created_at": "2018-10-26T01:28:33.925Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/ml3oa662se10cjxab24f.jpg",
    "description": "\n\nPhoto by Chris Scott on Unsplash\n\nReact Hooks was just announced today at React...",
    "published": true,
    "published_at": "2018-10-26T01:23:19.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/NEc3YEN1FFw?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eChris Scott\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/hooks?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://reactjs.org/docs/hooks-intro.html\"\u003eReact Hooks\u003c/a\u003e was just announced today at \u003ca href=\"https://conf.reactjs.org/\"\u003eReact Conf 2018\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eYou can check the \u003ca href=\"https://reactjs.org/docs/hooks-intro.html\"\u003eofficial documentation\u003c/a\u003e \u0026amp; also following article,\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag__link\"\u003e\n        \u003ca href=\"/vcarl\" class=\"ltag__link__link\"\u003e\n          \u003cdiv class=\"ltag__link__pic\"\u003e\n            \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--iHzKwv4R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B66mpkul--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://thepracticaldev.s3.amazonaws.com/uploads/user/profile_image/75868/33e79388-a73d-4033-bac9-ed12a7984b29.jpg\" alt=\"vcarl image\"\u003e\n          \u003c/div\u003e\u003c/a\u003e\n          \u003ca href=\"/vcarl/everything-you-need-to-know-about-react-hooks-doh\" class=\"ltag__link__link\"\u003e\n            \u003cdiv class=\"ltag__link__content\"\u003e\n              \u003ch2\u003eEverything you need to know about React Hooks\u003c/h2\u003e\n              \u003ch3\u003eCarl Vitullo\u003c/h3\u003e\n              \u003cdiv class=\"ltag__link__taglist\"\u003e\n\u003cspan class=\"ltag__link__tag\"\u003e#react\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#javascript\u003c/span\u003e\n\u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/a\u003e\n      \u003c/div\u003e\n\n\n\u003cp\u003eso I won’t go into it further.\u003c/p\u003e\n\n\u003cp\u003eI created a simple hook called \u003ca href=\"https://www.npmjs.com/package/react-use-localstorage\"\u003ereact-use-localstorage\u003c/a\u003e, which lets you store state in \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\"\u003eLocal Storage\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"prerequisite\" href=\"#prerequisite\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚀 Prerequisite\n\u003c/h2\u003e\n\n\u003cp\u003eYou need to use following React versions.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003ereact\u003c/strong\u003e : 16.7.0-alpha.0\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003ereact-dom\u003c/strong\u003e : 16.7.0-alpha.0\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cem\u003eIt’s bleeding edge and not recommended to use in production.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eYou can follow along on \u003ca href=\"https://codesandbox.io/s/09xj95vxl\"\u003eCodeSandbox\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"%E2%9A%92-how-to-use-it\" href=\"#%E2%9A%92-how-to-use-it\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ⚒ How to use it\n\u003c/h2\u003e\n\n\u003cp\u003eFirst, install the package, react-use-localstorage.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/0f4e5b5493593d2a903ac8dc7cda4088.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eAnd use it in a “Functional Component”.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/b98da9374585f1df9325bb279ce973f0.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"working-demo\" href=\"#working-demo\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🏃 Working Demo\n\u003c/h2\u003e\n\n\u003cp\u003eThe demo shows that state is saved directly in local storage.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--7sLMkg3h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/2018-10-25_20-00-40.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--7sLMkg3h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/2018-10-25_20-00-40.gif%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"additional-context\" href=\"#additional-context\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  💫 Additional Context\n\u003c/h2\u003e\n\n\u003cp\u003eThe source code is available on \u003ca href=\"https://github.com/dance2die/react-use-localstorage\"\u003eGitHub\u003c/a\u003e with MIT license.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/10/25/react-use-localstorage/\"\u003ereact-use-localstorage\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: react-use-localstorage\r\npublished: true\r\ntags: React,localstorage\r\ncanonical_url: https://www.slightedgecoder.com/2018/10/25/react-use-localstorage/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/ml3oa662se10cjxab24f.jpg\r\n---\r\n\r\n_Photo by [Chris Scott](https://unsplash.com/photos/NEc3YEN1FFw?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/hooks?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_\r\n\r\n\r\n[React Hooks](https://reactjs.org/docs/hooks-intro.html) was just announced today at [React Conf 2018](https://conf.reactjs.org/).\r\n\r\nYou can check the [official documentation](https://reactjs.org/docs/hooks-intro.html) \u0026 also following article,\r\n\r\n{% link https://dev.to/vcarl/everything-you-need-to-know-about-react-hooks-doh %}\r\n\r\nso I won’t go into it further.\r\n\r\nI created a simple hook called [react-use-localstorage](https://www.npmjs.com/package/react-use-localstorage), which lets you store state in [Local Storage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage).\r\n\r\n## 🚀 Prerequisite\r\n\r\nYou need to use following React versions.\r\n\r\n- **react** : 16.7.0-alpha.0\r\n- **react-dom** : 16.7.0-alpha.0\r\n\r\n_It’s bleeding edge and not recommended to use in production._\r\n\r\nYou can follow along on [CodeSandbox](https://codesandbox.io/s/09xj95vxl).\r\n\r\n## ⚒ How to use it\r\n\r\nFirst, install the package, react-use-localstorage.\r\n\r\n{% gist https://gist.github.com/dance2die/0f4e5b5493593d2a903ac8dc7cda4088 %}\r\n\r\nAnd use it in a “Functional Component”.\r\n\r\n{% gist https://gist.github.com/dance2die/b98da9374585f1df9325bb279ce973f0 %}\r\n\r\n## 🏃 Working Demo\r\n\r\nThe demo shows that state is saved directly in local storage.\r\n\r\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/2018-10-25_20-00-40.gif?w=1170\u0026ssl=1)\r\n\r\n## 💫 Additional Context\r\n\r\nThe source code is available on [GitHub](https://github.com/dance2die/react-use-localstorage) with MIT license.\r\n\r\nThe post [react-use-localstorage](https://www.slightedgecoder.com/2018/10/25/react-use-localstorage/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/10/25/react-use-localstorage/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 2,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/10/25/react-use-localstorage/",
    "positive_reactions_count": 33,
    "edited_at": "2018-10-26T03:08:08.589Z",
    "crossposted_at": "2018-10-26T01:36:20.660Z",
    "language": null,
    "cached_tag_list": "react, localstorage",
    "path": "/dance2die/react-use-localstorage-pp7",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-10-27T02:28:25.482Z"
  },
  {
    "title": "Loading React Components Dynamically on Demand using React.lazy",
    "slug": "loading-react-components-dynamically-on-demand-using-reactlazy-40f4",
    "created_at": "2018-10-28T20:31:17.046Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/ut3digczldi4hpqmwo9b.jpg",
    "description": "\n\nPhoto by Holger Link on Unsplash\n\nReact v16.6.0 introduced React.lazy for code ...",
    "published": true,
    "published_at": "2018-10-28T19:28:16.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/K7yZ-CsDvRU?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eHolger Link\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/lazy?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eReact v16.6.0 introduced \u003ca href=\"https://reactjs.org/docs/code-splitting.html#reactlazy\"\u003eReact.lazy\u003c/a\u003e for code splitting.\u003c/p\u003e\n\n\u003cp\u003ePrevious post, \u003ca href=\"https://dev.to/dance2die/loading-react-components-dynamically-on-demand-gf9-temp-slug-2212651\"\u003eLoading React Components Dynamically on Demand\u003c/a\u003e showed how to load components dynamically enabling code splitting using \u003ccode\u003eimport()\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis is an updated post to show how to load components dynamically using \u003ccode\u003eReact.lazy\u003c/code\u003e, which wraps around \u003ccode\u003eimport()\u003c/code\u003e and retrieves a default component.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"%F0%9F%97%92-note\" href=\"#%F0%9F%97%92-note\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🗒 Note\n\u003c/h2\u003e\n\n\u003cp\u003eI will skip problem statements in this entry to keep it short.\u003c/p\u003e\n\n\u003cdiv class=\"table-wrapper-paragraph\"\u003e\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eProblem Statements\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://www.slightedgecoder.com/2017/12/03/loading-react-components-dynamically-demand/#case1\"\u003eCase 1 - Loading React Components Dynamically\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://www.slightedgecoder.com/2017/12/03/loading-react-components-dynamically-demand/#case2\"\u003eCase 2 – Handling Different Data Types\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://www.slightedgecoder.com/2017/12/03/loading-react-components-dynamically-demand/#case3\"\u003eCase 3 – Loading Components on Demand\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"case-1-loading-react-components-dynamically\" href=\"#case-1-loading-react-components-dynamically\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚀 Case 1 – Loading React Components Dynamically\n\u003c/h2\u003e\n\n\u003cp\u003e\u003cem\u003eYou can follow along in\u003c/em\u003e \u003ca href=\"https://codesandbox.io/s/k5m609qn3o\"\u003e\u003cem\u003eCodeSandbox\u003c/em\u003e\u003c/a\u003e\u003cem\u003e\u0026amp; check the\u003c/em\u003e \u003ca href=\"https://reactlazy1.netlify.com/\"\u003e\u003cem\u003edeployed site\u003c/em\u003e\u003c/a\u003e \u003cem\u003efor coding splitting in devtools.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eIn the previous version, I’ve loaded components in \u003ccode\u003ecomponentDidMount\u003c/code\u003e inside \u003ccode\u003eApp.js\u003c/code\u003e and stored components in a state called \u003ccode\u003ecomponents\u003c/code\u003e.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/95259efdf4f883f1ceae62ca1346734a.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eBut there is no need to store the components in the state as you can simply use lazily loaded component in render with smaller code.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/3303287eff873ce3220a4f33d99a60f2.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003eLine#3\u003c/strong\u003e imports all event components that are exported from \u003ccode\u003eindex.js\u003c/code\u003e, which basically does a named exports of lazily loaded components.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eLine #12\u003c/strong\u003e checks if an event passed via prop exists. If an event doesn’t exist, it uses a \u003ccode\u003eNullEvent\u003c/code\u003e (which returns an empty component) instead of checking for a non-existent event in “catch” as I did in previous implementation.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eLine #18\u003c/strong\u003e uses \u003ca href=\"https://reactjs.org/docs/code-splitting.html#suspense\"\u003eSuspense\u003c/a\u003e to wrap dynamically loaded components and shows a fallback UI, \u003ccode\u003e\u0026lt;div\u0026gt;Loading...\u0026lt;/div\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eSuspense\u003c/strong\u003e is used to wait for/show loading indicator in case it takes too long to load lazily loaded components.\u003c/p\u003e\n\n\u003cp\u003e⚠ \u003cstrong\u003eNote\u003c/strong\u003e : This version of Suspense is not for fetching data but only for code splitting.\u003cbr\u003e\u003cbr\u003e\n\u003cem\u003eRefer to Dan Abramov’s tweet\u003c/em\u003e.\u003cbr\u003e\n\u003c/p\u003e\n\u003cblockquote class=\"ltag__twitter-tweet\" data-url=\"https://twitter.com/dan_abramov/status/1055293722177556480\"\u003e\u003cdiv class=\"ltag__twitter-tweet__main\" data-url=\"https://twitter.com/dan_abramov/status/1055293722177556480\"\u003e\n\u003cdiv class=\"ltag__twitter-tweet__header\"\u003e\n\u003cimg class=\"ltag__twitter-tweet__profile-image\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--rWFXJF0B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/906557353549598720/oapgW_Fp_normal.jpg\"\u003e\u003cdiv class=\"ltag__twitter-tweet__full-name\"\u003eDan Abramov\u003c/div\u003e\n\u003cdiv class=\"ltag__twitter-tweet__username\"\u003e@dan_abramov\u003c/div\u003e\n\u003cdiv class=\"ltag__twitter-tweet__twitter-logo\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--kX-SksTr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-eb8b335b75231c6443385ac04fdfcaed8ca5423c3990e89dc0178a4090ac1908.svg\"\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"ltag__twitter-tweet__body\"\u003e\n\u003ca href=\"https://twitter.com/pomber\"\u003e@pomber\u003c/a\u003e Do you mind adding a disclaimer that for now we only recommend Suspense for code splitting — and NOT for data fetching. Cache is not ready yet. People are already getting confused because they think it’s just badly documented.\u003c/div\u003e\n\u003cdiv class=\"ltag__twitter-tweet__date\"\u003e03:03 AM - 25 Oct 2018\u003c/div\u003e\n\u003cdiv class=\"ltag__twitter-tweet__actions\"\u003e\n\u003ca href=\"https://twitter.com/intent/tweet?in_reply_to=1055293722177556480\" class=\"ltag__twitter-tweet__actions__button\"\u003e\u003cimg src=\"/assets/twitter-reply-action.svg\" alt=\"Twitter reply action\"\u003e\u003c/a\u003e\u003ca href=\"https://twitter.com/intent/retweet?tweet_id=1055293722177556480\" class=\"ltag__twitter-tweet__actions__button\"\u003e\u003cimg src=\"/assets/twitter-retweet-action.svg\" alt=\"Twitter retweet action\"\u003e\u003c/a\u003e2\u003ca href=\"https://twitter.com/intent/like?tweet_id=1055293722177556480\" class=\"ltag__twitter-tweet__actions__button\"\u003e\u003cimg src=\"/assets/twitter-like-action.svg\" alt=\"Twitter like action\"\u003e\u003c/a\u003e15\u003c/div\u003e\n\u003c/div\u003e\u003c/blockquote\u003e\n\n\u003cp\u003eAnd here is the updated \u003ccode\u003e*Event\u003c/code\u003e components.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/848fb851b1b6e101f5a76ecb82fb9440.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003eindex.js\u003c/code\u003e lazily loads \u003ccode\u003e*Event\u003c/code\u003e components and does a named exports so that events can be looked up as a dictionary.\u003c/p\u003e\n\n\u003cp\u003eNote that \u003ccode\u003eNullEvent\u003c/code\u003e is a dumb component that doesn’t return anything using a \u003ca href=\"https://reactjs.org/docs/fragments.html\"\u003eReact.Fragment\u003c/a\u003e shortcut \u003ccode\u003e\u0026lt;\u0026gt;\u0026lt;/\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--xNnE47py--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/case-1-demo.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--xNnE47py--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/case-1-demo.gif%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003cfigcaption\u003ecase1 in action\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"case-2-handling-different-data-types\" href=\"#case-2-handling-different-data-types\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚀 Case 2 – Handling Different Data Types\n\u003c/h2\u003e\n\n\u003cp\u003e\u003cem\u003eYou can follow along in \u003ca href=\"https://codesandbox.io/s/0pkzrwk79l\"\u003eCodeSandbox\u003c/a\u003e\u0026amp; check the \u003ca href=\"https://reactlazy2.netlify.com/\"\u003edeployed site\u003c/a\u003e for coding splitting in devtools.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eThis patterns now looks almost the same as the first case.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/e6497b267559a71745b86940da620037.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eInstead of loading components in \u003ccode\u003ecomponentDidMount\u003c/code\u003e in the \u003ca href=\"https://gist.github.com/dance2die/bb657a5c14121429cabbeee4c922860d#file-componentdidmount-js\"\u003eprevious version\u003c/a\u003e, the updated one takes advantage of \u003ccode\u003eReact.lazy\u003c/code\u003e and loads components in \u003ccode\u003erender\u003c/code\u003e instead.\u003cbr\u003e\u003cbr\u003e\nIf a matching GitHub event component is found load it or else load a \u003ccode\u003eNullEvent\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e\u0026lt;Suspense /\u0026gt;\u003c/code\u003e wraps lazily loaded components as it did in case 1.\u003c/p\u003e\n\n\u003cp\u003eHere is are the event components for completeness.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/e971b6b74ee9d215824007dfc90a67dd.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003e*Event\u003c/code\u003e components are the same as in the \u003ca href=\"https://www.slightedgecoder.com/2017/12/03/loading-react-components-dynamically-demand/#case2\"\u003eprevious post\u003c/a\u003e and the difference is the \u003ccode\u003eindex.js\u003c/code\u003e, which exports lazily loaded components to enable event name matching by key in \u003ccode\u003eApp.render()\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TimrLmEv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/case-2-demo.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TimrLmEv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/case-2-demo.gif%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003cfigcaption\u003ecase2 in action\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"case-3-loading-components-on-demand\" href=\"#case-3-loading-components-on-demand\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚀 Case 3 – Loading Components on Demand\n\u003c/h2\u003e\n\n\u003cp\u003e\u003cem\u003eYou can follow along in \u003ca href=\"https://codesandbox.io/s/qv743wwrr4\"\u003eCodeSandbox\u003c/a\u003e\u0026amp; check the \u003ca href=\"https://reactlazy3.netlify.com/\"\u003edeployed site\u003c/a\u003e for coding splitting in devtools.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eA few changes made since the last post.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"addview\" href=\"#addview\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  addView\n\u003c/h4\u003e\n\n\u003cp\u003eInstead of loading a \u003ccode\u003eNullView\u003c/code\u003e in a \u003ccode\u003ecatch\u003c/code\u003e statement, it’s now checked against a dictionary, which is better programming practice and makes the code more readable.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eloadedComponents\u003c/code\u003e is also changed from an array to an object for more efficient look up (from Array.includes to key lookup).\u003c/p\u003e\n\n\u003cp\u003eFrom this,\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/38b39a57eecb9efd86ec8220bda5081b.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eTo this.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/4c18f793f5153a75a7770efe6c3ad31e.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"render\" href=\"#render\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  render\n\u003c/h4\u003e\n\n\u003cp\u003e\u003ccode\u003erender\u003c/code\u003e is also changed to wrap dynamically loaded components with \u003ccode\u003e\u0026lt;Suspense /\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/72d4552555a9837f0cbdbfe34bb27f77.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eAll \u003ccode\u003e*View\u003c/code\u003e components are the same so I will only show \u003ccode\u003ecomponents/views/index.js\u003c/code\u003e.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/753134d0908c10e22b1ffe6b3e7f7aa2.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eJust like previous two cases, \u003ccode\u003eindex.js\u003c/code\u003e exports lazily imported components as a named export so that view can be  looked up by a key in \u003ccode\u003eaddView\u003c/code\u003e in \u003ccode\u003eApp.js\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👋 Parting Words\n\u003c/h2\u003e\n\n\u003cp\u003eThis is just an updated post as the previous version still works.\u003c/p\u003e\n\n\u003cp\u003eThe differences are I’ve added \u003ccode\u003eindex.js\u003c/code\u003e to export lazily loaded components and use them to look up by a key to decide whether to load a matching component or a null component.\u003c/p\u003e\n\n\u003cp\u003eI tried not to make changes in dynamically loaded components not to confuse if you already read the \u003ca href=\"https://www.slightedgecoder.com/2017/12/03/loading-react-components-dynamically-demand/#case3\"\u003eprevious post\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"%F0%9F%9B%A0-resources\" href=\"#%F0%9F%9B%A0-resources\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🛠 Resources\n\u003c/h2\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eCase 1 – Loading React Components Dynamically  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://codesandbox.io/s/k5m609qn3o\"\u003eCodeSandbox\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://reactlazy1.netlify.com/\"\u003eDemo\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eCase 2 – Handling Different Data Types  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://codesandbox.io/s/0pkzrwk79l\"\u003eCodeSandbox\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://reactlazy2.netlify.com/\"\u003eDemo\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eCase 3 – Loading Components on Demand  \u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://codesandbox.io/s/qv743wwrr4\"\u003eCodeSandbox\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://reactlazy3.netlify.com/\"\u003eDemo\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/10/28/loading-react-components-dynamically-on-demand-using-react-lazy/\"\u003eLoading React Components Dynamically on Demand using React.lazy\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: Loading React Components Dynamically on Demand using React.lazy\r\npublished: true\r\ntags: react,javascript\r\ncanonical_url: https://www.slightedgecoder.com/2018/10/28/loading-react-components-dynamically-on-demand-using-react-lazy/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/ut3digczldi4hpqmwo9b.jpg\r\n---\r\n\r\n_Photo by [Holger Link](https://unsplash.com/photos/K7yZ-CsDvRU?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/lazy?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_\r\n\r\nReact v16.6.0 introduced [React.lazy](https://reactjs.org/docs/code-splitting.html#reactlazy) for code splitting.\r\n\r\nPrevious post, [Loading React Components Dynamically on Demand](https://dev.to/dance2die/loading-react-components-dynamically-on-demand-gf9-temp-slug-2212651) showed how to load components dynamically enabling code splitting using `import()`.\r\n\r\nThis is an updated post to show how to load components dynamically using `React.lazy`, which wraps around `import()` and retrieves a default component.\r\n\r\n## 🗒 Note\r\n\r\nI will skip problem statements in this entry to keep it short.\r\n\r\n| Problem Statements |\r\n| --- |\r\n| [Case 1 - Loading React Components Dynamically](https://www.slightedgecoder.com/2017/12/03/loading-react-components-dynamically-demand/#case1) |\r\n| [Case 2 – Handling Different Data Types](https://www.slightedgecoder.com/2017/12/03/loading-react-components-dynamically-demand/#case2) |\r\n| [Case 3 – Loading Components on Demand](https://www.slightedgecoder.com/2017/12/03/loading-react-components-dynamically-demand/#case3) |\r\n\r\n\r\n## 🚀 Case 1 – Loading React Components Dynamically\r\n\r\n_You can follow along in_ [_CodeSandbox_](https://codesandbox.io/s/k5m609qn3o)_\u0026 check the_ [_deployed site_](https://reactlazy1.netlify.com/) _for coding splitting in devtools._\r\n\r\nIn the previous version, I’ve loaded components in `componentDidMount` inside `App.js` and stored components in a state called `components`.\r\n\r\n{% gist https://gist.github.com/dance2die/95259efdf4f883f1ceae62ca1346734a %}\r\n\r\nBut there is no need to store the components in the state as you can simply use lazily loaded component in render with smaller code.\r\n\r\n{% gist https://gist.github.com/dance2die/3303287eff873ce3220a4f33d99a60f2 %}\r\n\r\n**Line#3** imports all event components that are exported from `index.js`, which basically does a named exports of lazily loaded components.\r\n\r\n**Line #12** checks if an event passed via prop exists. If an event doesn’t exist, it uses a `NullEvent` (which returns an empty component) instead of checking for a non-existent event in “catch” as I did in previous implementation.\r\n\r\n**Line #18** uses [Suspense](https://reactjs.org/docs/code-splitting.html#suspense) to wrap dynamically loaded components and shows a fallback UI, `\u003cdiv\u003eLoading...\u003c/div\u003e`.\r\n\r\n**Suspense** is used to wait for/show loading indicator in case it takes too long to load lazily loaded components.\r\n\r\n⚠ **Note** : This version of Suspense is not for fetching data but only for code splitting.  \r\n_Refer to Dan Abramov’s tweet_.\r\n{% twitter 1055293722177556480 %}\r\n\r\nAnd here is the updated `*Event` components.\r\n\r\n{% gist https://gist.github.com/dance2die/848fb851b1b6e101f5a76ecb82fb9440 %}\r\n\r\n`index.js` lazily loads `*Event` components and does a named exports so that events can be looked up as a dictionary.\r\n\r\nNote that `NullEvent` is a dumb component that doesn’t return anything using a [React.Fragment](https://reactjs.org/docs/fragments.html) shortcut `\u003c\u003e\u003c/\u003e`.\r\n\r\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/case-1-demo.gif?w=1170\u0026ssl=1)\u003cfigcaption\u003ecase1 in action\u003c/figcaption\u003e\r\n\r\n## 🚀 Case 2 – Handling Different Data Types\r\n\r\n_You can follow along in [CodeSandbox](https://codesandbox.io/s/0pkzrwk79l)\u0026 check the [deployed site](https://reactlazy2.netlify.com/) for coding splitting in devtools._\r\n\r\nThis patterns now looks almost the same as the first case.\r\n\r\n{% gist https://gist.github.com/dance2die/e6497b267559a71745b86940da620037 %}\r\n\r\nInstead of loading components in `componentDidMount` in the [previous version](https://gist.github.com/dance2die/bb657a5c14121429cabbeee4c922860d#file-componentdidmount-js), the updated one takes advantage of `React.lazy` and loads components in `render` instead.  \r\nIf a matching GitHub event component is found load it or else load a `NullEvent`.\r\n\r\n`\u003cSuspense /\u003e` wraps lazily loaded components as it did in case 1.\r\n\r\nHere is are the event components for completeness.\r\n\r\n{% gist https://gist.github.com/dance2die/e971b6b74ee9d215824007dfc90a67dd %}\r\n\r\n`*Event` components are the same as in the [previous post](https://www.slightedgecoder.com/2017/12/03/loading-react-components-dynamically-demand/#case2) and the difference is the `index.js`, which exports lazily loaded components to enable event name matching by key in `App.render()`.\r\n\r\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/10/case-2-demo.gif?w=1170\u0026ssl=1)\u003cfigcaption\u003ecase2 in action\u003c/figcaption\u003e\r\n\r\n## 🚀 Case 3 – Loading Components on Demand\r\n\r\n_You can follow along in [CodeSandbox](https://codesandbox.io/s/qv743wwrr4)\u0026 check the [deployed site](https://reactlazy3.netlify.com/) for coding splitting in devtools._\r\n\r\nA few changes made since the last post.\r\n\r\n#### addView\r\n\r\nInstead of loading a `NullView` in a `catch` statement, it’s now checked against a dictionary, which is better programming practice and makes the code more readable.\r\n\r\n`loadedComponents` is also changed from an array to an object for more efficient look up (from Array.includes to key lookup).\r\n\r\nFrom this,\r\n\r\n{% gist https://gist.github.com/dance2die/38b39a57eecb9efd86ec8220bda5081b %}\r\n\r\nTo this.\r\n\r\n{% gist https://gist.github.com/dance2die/4c18f793f5153a75a7770efe6c3ad31e %}\r\n\r\n#### render\r\n\r\n`render` is also changed to wrap dynamically loaded components with `\u003cSuspense /\u003e`.\r\n\r\n{% gist https://gist.github.com/dance2die/72d4552555a9837f0cbdbfe34bb27f77 %}\r\n\r\nAll `*View` components are the same so I will only show `components/views/index.js`.\r\n\r\n{% gist https://gist.github.com/dance2die/753134d0908c10e22b1ffe6b3e7f7aa2 %}\r\n\r\nJust like previous two cases, `index.js` exports lazily imported components as a named export so that view can be  looked up by a key in `addView` in `App.js`.\r\n\r\n## 👋 Parting Words\r\n\r\nThis is just an updated post as the previous version still works.\r\n\r\nThe differences are I’ve added `index.js` to export lazily loaded components and use them to look up by a key to decide whether to load a matching component or a null component.\r\n\r\nI tried not to make changes in dynamically loaded components not to confuse if you already read the [previous post](https://www.slightedgecoder.com/2017/12/03/loading-react-components-dynamically-demand/#case3).\r\n\r\n## 🛠 Resources\r\n\r\n1. Case 1 – Loading React Components Dynamically  \r\n    * [CodeSandbox](https://codesandbox.io/s/k5m609qn3o)  \r\n    * [Demo](https://reactlazy1.netlify.com/)\r\n    \r\n1. Case 2 – Handling Different Data Types  \r\n    * [CodeSandbox](https://codesandbox.io/s/0pkzrwk79l)  \r\n    * [Demo](https://reactlazy2.netlify.com/)\r\n\r\n1. Case 3 – Loading Components on Demand  \r\n    * [CodeSandbox](https://codesandbox.io/s/qv743wwrr4)  \r\n    * [Demo](https://reactlazy3.netlify.com/)\r\n\r\n_The post [Loading React Components Dynamically on Demand using React.lazy](https://www.slightedgecoder.com/2018/10/28/loading-react-components-dynamically-on-demand-using-react-lazy/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com)._",
    "canonical_url": "https://www.slightedgecoder.com/2018/10/28/loading-react-components-dynamically-on-demand-using-react-lazy/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/10/28/loading-react-components-dynamically-on-demand-using-react-lazy/",
    "positive_reactions_count": 61,
    "edited_at": "2018-10-29T02:37:00.108Z",
    "crossposted_at": "2018-10-28T21:02:00.234Z",
    "language": null,
    "cached_tag_list": "react, javascript",
    "path": "/dance2die/loading-react-components-dynamically-on-demand-using-reactlazy-40f4",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-10-28T19:28:16.000Z"
  },
  {
    "title": "An unofficial show note for React Today and Tomorrow with the React Core Team",
    "slug": "an-unofficial-show-note-for-react-today-and-tomorrow-with-the-react-core-team-l28",
    "created_at": "2018-11-03T22:22:12.205Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/rkaibc21ief8qvnwj2mp.jpg",
    "description": "\n\n                    Photo by Sharon McCutcheon on Unsplash\n\nJust listened to Re...",
    "published": true,
    "published_at": "2018-11-03T22:06:29.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e                    \u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/rItGZ4vquWk?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eSharon McCutcheon\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/show-note?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eJust listened to React podcast episode \u003ca href=\"https://reactpodcast.simplecast.fm/27\"\u003e27: React Today and Tomorrow with the React Core Team\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eSo much content was covered regarding new React features and “why”s behind it.\u003c/p\u003e\n\n\u003cp\u003eBelow is the “unofficial” show notes highlighting the discussion.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"table-of-content\" href=\"#table-of-content\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Table of Content\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#lazy\"\u003eLazy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#suspense\"\u003eSuspense\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#concurrent-mode\"\u003eConcurrent Mode\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#scheduler\"\u003eScheduler\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#react-cache\"\u003eReact Cache\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#profiler\"\u003eProfiler\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#hooks\"\u003eHooks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#%E2%98%A2-react-fusion\"\u003eReact Fusion\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"lazy\" href=\"#lazy\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  😪 Lazy\n\u003c/h2\u003e\n\n\u003cp\u003eThe purpose is to enable code splitting and it’s baked into React to promote an easier use and adoption.\u003c/p\u003e\n\n\u003cp\u003eThe alternative is that people would forget to split code and bundle everything in one file.\u003c/p\u003e\n\n\u003cp\u003eAdding it into React makes it easy to use it and can be optimized better than user land option such as \u003ca href=\"https://github.com/jamiebuilds/react-loadable\"\u003eReact Loadable\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"suspense\" href=\"#suspense\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🌉 Suspense\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eOnly supports an immediate fallback in this version.\u003c/li\u003e\n\u003cli\u003ev16.7 will enable pausing before showing.\u003c/li\u003e\n\u003cli\u003eServer Side Rendering (SSR) is not yet supported.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"concurrent-mode\" href=\"#concurrent-mode\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ♒ Concurrent Mode\n\u003c/h2\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"prerequisite\" href=\"#prerequisite\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Prerequisite\n\u003c/h4\u003e\n\n\u003cp\u003eFix all warnings using React Strict Mode before opting in.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003e\u003ca href=\"https://twitter.com/acdlite\"\u003eAndrew Clark\u003c/a\u003e plans to write a “thorough” documentation on it.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"testing\" href=\"#testing\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Testing\n\u003c/h4\u003e\n\n\u003cul\u003e\n\u003cli\u003eYou will be able to test just like a synchronous code\u003c/li\u003e\n\u003cli\u003eReact team plans to provide a \u003cem\u003ehelper method\u003c/em\u003e to enable specific current mode testing in libraries/frameworks.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"scheduler\" href=\"#scheduler\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ⏰ Scheduler\n\u003c/h2\u003e\n\n\u003cp\u003eThe purpose is to solve a \u003ca href=\"https://en.wikipedia.org/wiki/Priority_queue\"\u003epriority queue\u003c/a\u003e coordination \u003cem\u003eissue\u003c/em\u003e (mentioned below) in a browser thus it’s not tied to React and is a general library.\u003c/p\u003e\n\n\u003cp\u003eThe \u003cem\u003eissue\u003c/em\u003e is that different libraries in a website has a different priority and to solve it, Scheduler coordinate the task/events in a browser level.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003ee.g.)\u003c/strong\u003e React has its own priority queue scheduling system. When dealing with other parts of the browser, which has its own scheduling system, which one takes priority?  \u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eScheduler aims to solve that coordination problem.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eReact team is working with Chrome team to standardize scheduling.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"%E2%9A%A0-note\" href=\"#%E2%9A%A0-note\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ⚠ Note\n\u003c/h4\u003e\n\n\u003cul\u003e\n\u003cli\u003eCertain events will still occur \u003cem\u003esynchronously\u003c/em\u003e due to legacy browser APIs such as text and keyboard inputs as they tab into OS level API.\u003c/li\u003e\n\u003cli\u003ePredictable events such as tabbing \u0026amp; clicking will occur \u003cem\u003eserially\u003c/em\u003e.\u003c/li\u003e\n\u003cli\u003ewhile an event like mouse will be batched into a low priority queue.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eScheduler usually be abstracted from a developer as it will usually be available in framework level.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eRarely will there be a reason to use it directly.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"advice-on-priority-terminology\" href=\"#advice-on-priority-terminology\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Advice on priority terminology\n\u003c/h4\u003e\n\n\u003cp\u003eDan advised to avoid “high” and “low” for priorities but to use “normal” for priority.\u003c/p\u003e\n\n\u003cp\u003eWhen a priority task needs to be blocked (user input), prefer the term “interrupting priority” instead of “high priority” task.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003e\u003cstrong\u003eSung’s side note\u003c/strong\u003e : Funny as the word “priority” implies “importance” already. that we use “high” \u0026amp; “low” to refer to priorities.\u003c/em\u003e\u003cbr\u003e\u003cbr\u003e\n\u003cem\u003eReact team deprecated \u003ccode\u003ecomponentWillMount\u003c/code\u003e as Michael Jackson has been abusing it (Refer to \u003ca href=\"https://twitter.com/sophiebits\"\u003eSohpie\u003c/a\u003e‘s response @ \u003cstrong\u003e25:05\u003c/strong\u003e\u003c/em\u003e 😂 \u003cstrong\u003ej/k\u003c/strong\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"react-cache\" href=\"#react-cache\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  💰 React Cache\n\u003c/h2\u003e\n\n\u003cp\u003eServes two purposes\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003ePeople can try out Suspense in v16.7 after an initially release until vendors like Relay or Apollo libraries can implement a cache using this reference implementation.\u003c/li\u003e\n\u003cli\u003eFor one-off scenarios like caching images, or other media files where you don’t need a full blown cache provider.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"profiler\" href=\"#profiler\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  📈 Profiler\n\u003c/h2\u003e\n\n\u003cp\u003eA browser devtool for profiling duration of React component commit to the DOM.\u003c/p\u003e\n\n\u003cp\u003eYou can still see the \u003ca href=\"https://en.wikipedia.org/wiki/Elapsed_real_time\"\u003ewall time (elapsed real time)\u003c/a\u003e but it’s more about duration spent on a component.\u003c/p\u003e\n\n\u003cp\u003eYou can still profile using browser’s built-in profiler but with React’s \u003ca href=\"https://github.com/facebook/react/tree/ce96e2df4d9f3367e07f25153e5282d4c0869bac/fixtures/unstable-async/time-slicing\"\u003eTime Slicing\u003c/a\u003e and \u003ca href=\"https://reactjs.org/docs/error-boundaries.html\"\u003eError Boundaries\u003c/a\u003e, it’s hard to stitch together the time React spent on a “component”.\u003c/p\u003e\n\n\u003cp\u003eThe profiler aims to provide an easier view on component’s commit time.\u003c/p\u003e\n\n\u003cp\u003eBasing the profiler on “commit” helps you focus on performance of React components \u003cem\u003e\u003cstrong\u003eyou\u003c/strong\u003e\u003c/em\u003e created, not that of React core or the browser.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"composition\" href=\"#composition\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Composition\n\u003c/h4\u003e\n\n\u003col\u003e\n\u003cli\u003eShows \u003cstrong\u003ename\u003c/strong\u003e of components “you” created making it easy to scan.\u003c/li\u003e\n\u003cli\u003eAmount of \u003cstrong\u003etime spent in milliseconds\u003c/strong\u003e to render a component.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eColors\u003c/strong\u003e to indicate performance issues.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"colors\" href=\"#colors\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Colors\n\u003c/h4\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--raDOte9p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/11/profiler.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--raDOte9p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/11/profiler.png%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003cfigcaption\u003eProfiler in action\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003cstrong\u003eGray\u003c/strong\u003e : not rendered (e.g. \u003ca href=\"https://reactjs.org/docs/react-api.html#reactpurecomponent\"\u003ePureComponent\u003c/a\u003e or \u003ca href=\"https://reactjs.org/docs/react-component.html#shouldcomponentupdate\"\u003eshouldComponentUpdate()\u003c/a\u003e set to false).\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eCool blue\u003c/strong\u003e : Fast commit.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eBright yellow\u003c/strong\u003e : Slow commit.\n\n\u003cul\u003e\n\u003cli\u003eUse your judgement whether to optimize the slow performance as the color shows relative difference (it could be 5ms or 300ms depending on the situation or users systems, fast/slow laptops).\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"trace-api\" href=\"#trace-api\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Trace API\n\u003c/h4\u003e\n\n\u003cp\u003eIt enables you to progmatically gather profiler data.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eIf you want to know more about profiling, refer to the\u003c/em\u003e \u003ca href=\"https://reactjs.org/docs/optimizing-performance.html#profiling-components-with-the-devtools-profiler\"\u003e\u003cem\u003eReact documentation\u003c/em\u003e\u003c/a\u003e\u003cem\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"hooks\" href=\"#hooks\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ⚓ Hooks\n\u003c/h2\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"why\" href=\"#why\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Why?\n\u003c/h4\u003e\n\n\u003cp\u003eIt’s hard to share non-render logic (embedded in life cycle methods) between components.\u003c/p\u003e\n\n\u003cp\u003eHooks provide a way to simply extract by copy/cut \u0026amp; paste non-render logic into smaller chunks and share them across function components.\u003c/p\u003e\n\n\u003cp\u003eUsing hooks results in a simpler API \u0026amp; smaller/readable code base.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"recipe\" href=\"#recipe\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Recipe\n\u003c/h4\u003e\n\n\u003cp\u003eThere is a plan to create practical how-tos inspired by \u003ca href=\"https://reacttraining.com/react-router/\"\u003eReact Router\u003c/a\u003e documentation.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003e\u003cstrong\u003eSung’s side note:\u003c/strong\u003e  \u003ca href=\"https://reactjs.org/docs/error-boundaries.html\"\u003eError Boundaries\u003c/a\u003e type of documentation will be nice since everyone just copy/paste the reference implementation.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"constraints\" href=\"#constraints\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Constraints\n\u003c/h4\u003e\n\n\u003col\u003e\n\u003cli\u003eCan’t be used inside conditionals.\n\n\u003cul\u003e\n\u003cli\u003eThink about this. You don’t declare/define states or life cycle methods conditionally.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cul\u003e\n\u003cli\u003eAs hooks mirror those features, it doesn’t make sense to use hooks within a condition.\n\n\u003col\u003e\n\u003cli\u003ePrefix with “use*”.\u003c/li\u003e\n\u003cli\u003eOrder in which hook is defined matters\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003eSame way you’d write your synchronous code.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"benefits-of-constraints\" href=\"#benefits-of-constraints\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Benefits of Constraints\n\u003c/h4\u003e\n\n\u003col\u003e\n\u003cli\u003eCan use the logic multiple times (shareable).\u003c/li\u003e\n\u003cli\u003eEnables easier logic composition.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cem\u003ee.g.) \u003ccode\u003erender\u003c/code\u003e should be a pure method enabling React to take advantage of it.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"useeffect\" href=\"#useeffect\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 useEffect\n\u003c/h4\u003e\n\n\u003cp\u003eEnables less error-prone code compared to implementing \u003ca href=\"https://reactjs.org/docs/react-component.html#componentdidmount\"\u003ecomponentDidMount\u003c/a\u003e(cDM), \u003ca href=\"https://reactjs.org/docs/react-component.html#componentdidmount\"\u003ecomponentDidMount\u003c/a\u003e(cDM), and \u003ca href=\"https://reactjs.org/docs/react-component.html#componentwillunmount\"\u003ecomponentWillUnmount\u003c/a\u003e(cWU).\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003ee.g.)\u003c/strong\u003e When you deal with code that requires subscribing in \u003ccode\u003ecDM\u003c/code\u003e and unsubscribe in \u003ccode\u003ecWU\u003c/code\u003e, it can causes a leak or a buggy code.\u003c/p\u003e\n\n\u003cp\u003eIf your code requires an ID to un/subscribe, you need to consider the case where the ID is updated between cDM \u0026amp; cWU, which you need to check within cDU.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003euseEffect\u003c/code\u003e is \u003ca href=\"https://reactjs.org/docs/hooks-effect.html#explanation-why-effects-run-on-each-update\"\u003ecalled every time\u003c/a\u003e during an update to prevent such error.\u003c/p\u003e\n\n\u003cp\u003eYou can further optimize it using the 2nd argument of \u003ccode\u003euseEffect\u003c/code\u003e to make it run only when the specified list of property is updated.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"direction\" href=\"#direction\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Direction\n\u003c/h4\u003e\n\n\u003cp\u003eHooks looks hard but easy to use while current React looks easy but hard to use.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"%E2%98%A2-react-fusion\" href=\"#%E2%98%A2-react-fusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ☢ React Fusion\n\u003c/h2\u003e\n\n\u003cp\u003eExploration of \u003ca href=\"https://en.wikipedia.org/wiki/Ahead-of-time_compilation\"\u003eAoT (Ahead of Time) compiler\u003c/a\u003e in React Component using \u003ca href=\"https://prepack.io/\"\u003eprepack\u003c/a\u003efor static optimization.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👋 Parting Words\n\u003c/h2\u003e\n\n\u003cp\u003eThis is an “unofficial” show note of React podcast episode \u003ca href=\"https://reactpodcast.simplecast.fm/27\"\u003e27: React Today and Tomorrow with the React Core Team\u003c/a\u003e as I am not affiliated with the podcast in any way.\u003c/p\u003e\n\n\u003cp\u003eI’ve tried to compile the show note as grouped as possible while writing notes on a \u003ca href=\"https://imgur.com/a/Rdfvv5A\"\u003epiece of paper\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf you liked the show note, would you let me know should you find anything missing, wrong, or require an update?\u003c/p\u003e\n\n\u003cp\u003eLastly subscribe to React podcast, and follow React core team on twitter (which you can find in the official React podcast \u003ca href=\"https://reactpodcast.simplecast.fm/27\"\u003eshow note\u003c/a\u003e) as they are very active on it.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/11/03/an-unofficial-show-note-for-react-today-and-tomorrow-with-the-react-core-team/\"\u003eAn unofficial show note for React Today and Tomorrow with the React Core Team\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: An unofficial show note for React Today and Tomorrow with the React Core Team\r\npublished: true\r\ntags: react,podcast,shownote\r\ncanonical_url: https://www.slightedgecoder.com/2018/11/03/an-unofficial-show-note-for-react-today-and-tomorrow-with-the-react-core-team/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/rkaibc21ief8qvnwj2mp.jpg\r\nseries: React Podcast Show Notes\r\n---\r\n\r\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_Photo by [Sharon McCutcheon](https://unsplash.com/photos/rItGZ4vquWk?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/show-note?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_\r\n\r\nJust listened to React podcast episode [27: React Today and Tomorrow with the React Core Team](https://reactpodcast.simplecast.fm/27).\r\n\r\nSo much content was covered regarding new React features and “why”s behind it.\r\n\r\nBelow is the “unofficial” show notes highlighting the discussion.\r\n\r\n## Table of Content\r\n\r\n- [Lazy](#lazy)\r\n- [Suspense](#suspense)\r\n- [Concurrent Mode](#concurrent-mode)\r\n- [Scheduler](#scheduler)\r\n- [React Cache](#react-cache)\r\n- [Profiler](#profiler)\r\n- [Hooks](#hooks)\r\n- [React Fusion](#%E2%98%A2-react-fusion)\r\n\r\n## 😪 Lazy\r\n\r\nThe purpose is to enable code splitting and it’s baked into React to promote an easier use and adoption.\r\n\r\nThe alternative is that people would forget to split code and bundle everything in one file.\r\n\r\nAdding it into React makes it easy to use it and can be optimized better than user land option such as [React Loadable](https://github.com/jamiebuilds/react-loadable).\r\n\r\n## 🌉 Suspense\r\n\r\n- Only supports an immediate fallback in this version.\r\n- v16.7 will enable pausing before showing.\r\n- Server Side Rendering (SSR) is not yet supported.\r\n\r\n## ♒ Concurrent Mode\r\n\r\n#### 🔹 Prerequisite\r\n\r\nFix all warnings using React Strict Mode before opting in.\r\n\r\n_[Andrew Clark](https://twitter.com/acdlite) plans to write a “thorough” documentation on it._\r\n\r\n#### 🔹 Testing\r\n\r\n- You will be able to test just like a synchronous code\r\n- React team plans to provide a _helper method_ to enable specific current mode testing in libraries/frameworks.\r\n\r\n## ⏰ Scheduler\r\n\r\nThe purpose is to solve a [priority queue](https://en.wikipedia.org/wiki/Priority_queue) coordination _issue_ (mentioned below) in a browser thus it’s not tied to React and is a general library.\r\n\r\nThe _issue_ is that different libraries in a website has a different priority and to solve it, Scheduler coordinate the task/events in a browser level.\r\n\r\n**e.g.)** React has its own priority queue scheduling system. When dealing with other parts of the browser, which has its own scheduling system, which one takes priority?  \r\n  \r\n_Scheduler aims to solve that coordination problem._\r\n\r\nReact team is working with Chrome team to standardize scheduling.\r\n\r\n#### ⚠ Note\r\n\r\n- Certain events will still occur _synchronously_ due to legacy browser APIs such as text and keyboard inputs as they tab into OS level API.\r\n- Predictable events such as tabbing \u0026 clicking will occur _serially_.\r\n- while an event like mouse will be batched into a low priority queue.\r\n\r\nScheduler usually be abstracted from a developer as it will usually be available in framework level.\r\n\r\n_Rarely will there be a reason to use it directly._\r\n\r\n#### 🔹 Advice on priority terminology\r\n\r\nDan advised to avoid “high” and “low” for priorities but to use “normal” for priority.\r\n\r\nWhen a priority task needs to be blocked (user input), prefer the term “interrupting priority” instead of “high priority” task.\r\n\r\n_**Sung’s side note** : Funny as the word “priority” implies “importance” already. that we use “high” \u0026 “low” to refer to priorities._  \r\n_React team deprecated `componentWillMount` as Michael Jackson has been abusing it (Refer to [Sohpie](https://twitter.com/sophiebits)‘s response @ **25:05**_ 😂 **j/k**.\r\n\r\n## 💰 React Cache\r\n\r\nServes two purposes\r\n\r\n1. People can try out Suspense in v16.7 after an initially release until vendors like Relay or Apollo libraries can implement a cache using this reference implementation.\r\n2. For one-off scenarios like caching images, or other media files where you don’t need a full blown cache provider.\r\n\r\n## 📈 Profiler\r\n\r\nA browser devtool for profiling duration of React component commit to the DOM.\r\n\r\nYou can still see the [wall time (elapsed real time)](https://en.wikipedia.org/wiki/Elapsed_real_time) but it’s more about duration spent on a component.\r\n\r\nYou can still profile using browser’s built-in profiler but with React’s [Time Slicing](https://github.com/facebook/react/tree/ce96e2df4d9f3367e07f25153e5282d4c0869bac/fixtures/unstable-async/time-slicing) and [Error Boundaries](https://reactjs.org/docs/error-boundaries.html), it’s hard to stitch together the time React spent on a “component”.\r\n\r\nThe profiler aims to provide an easier view on component’s commit time.\r\n\r\nBasing the profiler on “commit” helps you focus on performance of React components _**you**_ created, not that of React core or the browser.\r\n\r\n#### 🔹 Composition\r\n\r\n1. Shows **name** of components “you” created making it easy to scan.\r\n2. Amount of **time spent in milliseconds** to render a component.\r\n3. **Colors** to indicate performance issues.\r\n\r\n#### 🔹 Colors\r\n\r\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/11/profiler.png?w=1170\u0026ssl=1)\u003cfigcaption\u003eProfiler in action\u003c/figcaption\u003e\r\n\r\n1. **Gray** : not rendered (e.g. [PureComponent](https://reactjs.org/docs/react-api.html#reactpurecomponent) or [shouldComponentUpdate()](https://reactjs.org/docs/react-component.html#shouldcomponentupdate) set to false).\r\n2. **Cool blue** : Fast commit.\r\n3. **Bright yellow** : Slow commit.\r\n  - Use your judgement whether to optimize the slow performance as the color shows relative difference (it could be 5ms or 300ms depending on the situation or users systems, fast/slow laptops).\r\n\r\n#### 🔹 Trace API\r\n\r\nIt enables you to progmatically gather profiler data.\r\n\r\n_If you want to know more about profiling, refer to the_ [_React documentation_](https://reactjs.org/docs/optimizing-performance.html#profiling-components-with-the-devtools-profiler)_._\r\n\r\n## ⚓ Hooks\r\n\r\n#### 🔹 Why?\r\n\r\nIt’s hard to share non-render logic (embedded in life cycle methods) between components.\r\n\r\nHooks provide a way to simply extract by copy/cut \u0026 paste non-render logic into smaller chunks and share them across function components.\r\n\r\nUsing hooks results in a simpler API \u0026 smaller/readable code base.\r\n\r\n#### 🔹 Recipe\r\n\r\nThere is a plan to create practical how-tos inspired by [React Router](https://reacttraining.com/react-router/) documentation.\r\n\r\n_**Sung’s side note:**  [Error Boundaries](https://reactjs.org/docs/error-boundaries.html) type of documentation will be nice since everyone just copy/paste the reference implementation._\r\n\r\n#### 🔹 Constraints\r\n\r\n1. Can’t be used inside conditionals.\r\n  - Think about this. You don’t declare/define states or life cycle methods conditionally.\r\n\r\n  - As hooks mirror those features, it doesn’t make sense to use hooks within a condition.\r\n2. Prefix with “use\\*”.\r\n3. Order in which hook is defined matters\r\n  - Same way you’d write your synchronous code.\r\n\r\n#### 🔹 Benefits of Constraints\r\n\r\n1. Can use the logic multiple times (shareable).\r\n2. Enables easier logic composition.\r\n\r\n_e.g.) `render` should be a pure method enabling React to take advantage of it._\r\n\r\n#### 🔹 useEffect\r\n\r\nEnables less error-prone code compared to implementing [componentDidMount](https://reactjs.org/docs/react-component.html#componentdidmount)(cDM), [componentDidMount](https://reactjs.org/docs/react-component.html#componentdidmount)(cDM), and [componentWillUnmount](https://reactjs.org/docs/react-component.html#componentwillunmount)(cWU).\r\n\r\n**e.g.)** When you deal with code that requires subscribing in `cDM` and unsubscribe in `cWU`, it can causes a leak or a buggy code.\r\n\r\nIf your code requires an ID to un/subscribe, you need to consider the case where the ID is updated between cDM \u0026 cWU, which you need to check within cDU.\r\n\r\n`useEffect` is [called every time](https://reactjs.org/docs/hooks-effect.html#explanation-why-effects-run-on-each-update) during an update to prevent such error.\r\n\r\nYou can further optimize it using the 2nd argument of `useEffect` to make it run only when the specified list of property is updated.\r\n\r\n#### 🔹 Direction\r\n\r\nHooks looks hard but easy to use while current React looks easy but hard to use.\r\n\r\n## ☢ React Fusion\r\n\r\nExploration of [AoT (Ahead of Time) compiler](https://en.wikipedia.org/wiki/Ahead-of-time_compilation) in React Component using [prepack](https://prepack.io/)for static optimization.\r\n\r\n## 👋 Parting Words\r\n\r\nThis is an “unofficial” show note of React podcast episode [27: React Today and Tomorrow with the React Core Team](https://reactpodcast.simplecast.fm/27) as I am not affiliated with the podcast in any way.\r\n\r\nI’ve tried to compile the show note as grouped as possible while writing notes on a [piece of paper](https://imgur.com/a/Rdfvv5A).\r\n\r\nIf you liked the show note, would you let me know should you find anything missing, wrong, or require an update?\r\n\r\nLastly subscribe to React podcast, and follow React core team on twitter (which you can find in the official React podcast [show note](https://reactpodcast.simplecast.fm/27)) as they are very active on it.\r\n\r\n_The post [An unofficial show note for React Today and Tomorrow with the React Core Team](https://www.slightedgecoder.com/2018/11/03/an-unofficial-show-note-for-react-today-and-tomorrow-with-the-react-core-team/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com)._",
    "canonical_url": "https://www.slightedgecoder.com/2018/11/03/an-unofficial-show-note-for-react-today-and-tomorrow-with-the-react-core-team/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 2,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/11/03/an-unofficial-show-note-for-react-today-and-tomorrow-with-the-react-core-team/",
    "positive_reactions_count": 19,
    "edited_at": "2018-12-11T03:12:40.179Z",
    "crossposted_at": "2018-11-03T23:55:21.349Z",
    "language": null,
    "cached_tag_list": "react, podcast, shownote",
    "path": "/dance2die/an-unofficial-show-note-for-react-today-and-tomorrow-with-the-react-core-team-l28",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-11-05T00:19:20.257Z"
  },
  {
    "title": "Downshift getRootProps",
    "slug": "downshift-getrootprops-3fj5-temp-slug-2480494",
    "created_at": "2018-11-07T00:16:35.624Z",
    "main_image": null,
    "description": "\n\nPhoto by [_Tim Carey](https://unsplash.com/photos/rKXPPKiiNJo?utm_source=unspla...",
    "published": false,
    "published_at": "2018-11-07T00:09:37.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003cem\u003e[_Tim Carey\u003c/em\u003e](\u003ca href=\"https://unsplash.com/photos/rKXPPKiiNJo?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003ehttps://unsplash.com/photos/rKXPPKiiNJo?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\u003c/a\u003e)\u003c/em\u003e on \u003cem\u003e[_Unsplash\u003c/em\u003e](\u003ca href=\"https://unsplash.com/search/photos/f1?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003ehttps://unsplash.com/search/photos/f1?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\u003c/a\u003e)\u003c/p\u003e\n\n\u003cp\u003eSelf note while learning \u003ca href=\"https://github.com/paypal/downshift\"\u003eDownshift\u003c/a\u003e by \u003ca href=\"https://twitter.com/kentcdodds\"\u003eKent C. Dodds\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eDownshift requires you to have \u003ccode\u003ediv\u003c/code\u003e as the root element.\u003c/p\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/4f05ccbc6475189a3bc5468e586dd491\"\u003eView this gist on GitHub\u003c/a\u003e\n\n\u003cp\u003eWhen Downshift’s child is not a \u003ccode\u003ediv\u003c/code\u003e (to extract the functionality into a different component) then \u003ca href=\"https://github.com/paypal/downshift#getrootprops\"\u003egetRootProps\u003c/a\u003e should be called.\u003c/p\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/22913120840120043c2e13bad5b8c4f0\"\u003eView this gist on GitHub\u003c/a\u003e\n\n\u003cp\u003eAnd make sure to set the inner component’s root element \u003ccode\u003eref\u003c/code\u003e to the \u003ccode\u003erefKey\u003c/code\u003e assigned in \u003ccode\u003egetRootProps\u003c/code\u003e.\u003c/p\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/3226f4197ef59f8ed4a57c0fc3dbf28b\"\u003eView this gist on GitHub\u003c/a\u003e\n\u003ch2\u003e\n  \u003ca name=\"codesandbox-\" href=\"#codesandbox-\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  CodeSandbox \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--cbDBvLK7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f41b.png\" alt=\"🐛\"\u003e?\n\u003c/h2\u003e\n\n\u003cp\u003eFor some reason, CodeSandbox shows the following error message.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003edownshift: You must apply the ref prop “innerRef” from getRootProps onto your root element.\u003c/p\u003e\n\n\u003cp\u003e\u003ccite\u003esays CodeSandbox\u003c/cite\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eBut when deployed on Netlify, no error message occurs as shown below.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--B3HP7r8R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/11/2018-11-06_18-29-38.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--B3HP7r8R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/11/2018-11-06_18-29-38.gif%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003cfigcaption\u003eNo getRootProps error message\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"resources\" href=\"#resources\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Resources\n\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eSandBox\u003c/strong\u003e – \u003ca href=\"https://codesandbox.io/s/r4nlpx3j5o\"\u003ehttps://codesandbox.io/s/r4nlpx3j5o\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eExamples on Downshift \u003ca href=\"https://github.com/paypal/downshift\"\u003erepository\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/paypal/downshift/blob/3fb0ed21278c5f1d0a077ed9b1d0dfd55a75c71b/other/react-native/%20__tests__%20/onBlur-tests.js\"\u003eonBlur-tests.js\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/paypal/downshift/blob/a510c9db12a0019b5ce3d0b45732b27206c3a530/other/react-native/%20__tests__%20/onChange-tests.js\"\u003eonChange-tests.js\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/11/06/downshift-getrootprops/\"\u003eDownshift getRootProps\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Downshift getRootProps\npublished: false\ntags: React,Self Note,downshift,react\ncanonical_url: https://www.slightedgecoder.com/2018/11/06/downshift-getrootprops/\n---\n\n_Photo by _[_Tim Carey_](https://unsplash.com/photos/rKXPPKiiNJo?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_ on _[_Unsplash_](https://unsplash.com/search/photos/f1?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)\n\nSelf note while learning [Downshift](https://github.com/paypal/downshift) by [Kent C. Dodds](https://twitter.com/kentcdodds).\n\nDownshift requires you to have `div` as the root element.\n\n\u003cscript src=\"https://gist.github.com/dance2die/4f05ccbc6475189a3bc5468e586dd491.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/4f05ccbc6475189a3bc5468e586dd491\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\n\nWhen Downshift’s child is not a `div` (to extract the functionality into a different component) then [getRootProps](https://github.com/paypal/downshift#getrootprops) should be called.\n\n\u003cscript src=\"https://gist.github.com/dance2die/22913120840120043c2e13bad5b8c4f0.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/22913120840120043c2e13bad5b8c4f0\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\n\nAnd make sure to set the inner component’s root element `ref` to the `refKey` assigned in `getRootProps`.\n\n\u003cscript src=\"https://gist.github.com/dance2die/3226f4197ef59f8ed4a57c0fc3dbf28b.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/3226f4197ef59f8ed4a57c0fc3dbf28b\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\n\n## CodeSandbox ![🐛](https://s.w.org/images/core/emoji/11/72x72/1f41b.png)?\n\nFor some reason, CodeSandbox shows the following error message.\n\n\u003e downshift: You must apply the ref prop “innerRef” from getRootProps onto your root element.\n\u003e \n\u003e \u003ccite\u003esays CodeSandbox\u003c/cite\u003e\n\nBut when deployed on Netlify, no error message occurs as shown below.\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/11/2018-11-06_18-29-38.gif?w=1170\u0026ssl=1)\u003cfigcaption\u003eNo getRootProps error message\u003c/figcaption\u003e\n\n## Resources\n\n**SandBox** – [https://codesandbox.io/s/r4nlpx3j5o](https://codesandbox.io/s/r4nlpx3j5o)\n\n**Examples on Downshift [repository](https://github.com/paypal/downshift)**\n\n- [onBlur-tests.js](https://github.com/paypal/downshift/blob/3fb0ed21278c5f1d0a077ed9b1d0dfd55a75c71b/other/react-native/ __tests__ /onBlur-tests.js)\n- [onChange-tests.js](https://github.com/paypal/downshift/blob/a510c9db12a0019b5ce3d0b45732b27206c3a530/other/react-native/ __tests__ /onChange-tests.js)\n\nThe post [Downshift getRootProps](https://www.slightedgecoder.com/2018/11/06/downshift-getrootprops/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/11/06/downshift-getrootprops/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/11/06/downshift-getrootprops/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": null,
    "cached_tag_list": "react, selfnote, downshift",
    "path": "/dance2die/downshift-getrootprops-3fj5-temp-slug-2480494",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-11-07T00:09:37.000Z"
  },
  {
    "title": "Getting Non-Printable Character ASCII Value Using PowerShell",
    "slug": "getting-non-printable-character-ascii-value-using-powershell-4ceg-temp-slug-7954968",
    "created_at": "2018-11-08T01:01:15.614Z",
    "main_image": null,
    "description": "\n\nPhoto by [_Stéphan Valentin](https://unsplash.com/photos/-iXjUZlCsd0?utm_source...",
    "published": false,
    "published_at": "2018-11-08T00:54:45.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003cem\u003e[_Stéphan Valentin\u003c/em\u003e](\u003ca href=\"https://unsplash.com/photos/-iXjUZlCsd0?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003ehttps://unsplash.com/photos/-iXjUZlCsd0?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\u003c/a\u003e)\u003c/em\u003e on \u003cem\u003e[_Unsplash\u003c/em\u003e](\u003ca href=\"https://unsplash.com/search/photos/power-shell?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003ehttps://unsplash.com/search/photos/power-shell?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\u003c/a\u003e)\u003c/p\u003e\n\n\u003cp\u003e_ \u003cstrong\u003eAnother self note…\u003c/strong\u003e _\u003c/p\u003e\n\n\u003cp\u003eMy coworker was cleaning up data in database as many data were entered with white space in it.\u003c/p\u003e\n\n\u003cp\u003eHe did a quick \u003ccode\u003eltrim(rtrim(column))\u003c/code\u003e to quickly get rid of spaces but didn’t work.\u003c/p\u003e\n\n\u003cp\u003eAs he had requested for help, I asked him to open Notepad++ and show all symbols.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--PitsnNjq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/11/2018-11-07_19-41-34.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--PitsnNjq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/11/2018-11-07_19-41-34.gif%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eBut it wasn’t showing the white text at the end of the text.\u003c/p\u003e\n\n\u003cp\u003eSo I asked him to him to copy the white space then fire up PowerShell as I needed to see if the white space is indeed \u003ccode\u003e32\u003c/code\u003e in ASCII value.\u003c/p\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/e3b94fe298bcd67c8acdd482b826a3b0\"\u003eView this gist on GitHub\u003c/a\u003e\n\n\u003cp\u003eIt turns out it was 160 meaning not a regular space thus can’t be trimmed using \u003ccode\u003eltrim\u003c/code\u003e or \u003ccode\u003ertrim\u003c/code\u003e, which only trims white space of value 32.\u003c/p\u003e\n\n\u003cp\u003eSo the fix was to  \u003ccode\u003ereplace(column, char(160), '')\u003c/code\u003e, which took care of the issue.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/11/07/getting-non-printable-character-ascii-value-using-powershell/\"\u003eGetting Non-Printable Character ASCII Value Using PowerShell\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Getting Non-Printable Character ASCII Value Using PowerShell\npublished: false\ntags: Problem Solving,Programming,Self Note,powershell\ncanonical_url: https://www.slightedgecoder.com/2018/11/07/getting-non-printable-character-ascii-value-using-powershell/\n---\n\n_Photo by _[_Stéphan Valentin_](https://unsplash.com/photos/-iXjUZlCsd0?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_ on _[_Unsplash_](https://unsplash.com/search/photos/power-shell?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)\n\n_ **Another self note…** _\n\nMy coworker was cleaning up data in database as many data were entered with white space in it.\n\nHe did a quick `ltrim(rtrim(column))` to quickly get rid of spaces but didn’t work.\n\nAs he had requested for help, I asked him to open Notepad++ and show all symbols.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/11/2018-11-07_19-41-34.gif?w=1170\u0026ssl=1)\n\nBut it wasn’t showing the white text at the end of the text.\n\nSo I asked him to him to copy the white space then fire up PowerShell as I needed to see if the white space is indeed `32` in ASCII value.\n\n\u003cscript src=\"https://gist.github.com/dance2die/e3b94fe298bcd67c8acdd482b826a3b0.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/e3b94fe298bcd67c8acdd482b826a3b0\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\n\nIt turns out it was 160 meaning not a regular space thus can’t be trimmed using `ltrim` or `rtrim`, which only trims white space of value 32.\n\nSo the fix was to  `replace(column, char(160), '')`, which took care of the issue.\n\nThe post [Getting Non-Printable Character ASCII Value Using PowerShell](https://www.slightedgecoder.com/2018/11/07/getting-non-printable-character-ascii-value-using-powershell/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/11/07/getting-non-printable-character-ascii-value-using-powershell/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/11/07/getting-non-printable-character-ascii-value-using-powershell/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": null,
    "cached_tag_list": "problemsolving, programming, selfnote, powershell",
    "path": "/dance2die/getting-non-printable-character-ascii-value-using-powershell-4ceg-temp-slug-7954968",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-11-08T00:54:45.000Z"
  },
  {
    "title": "Emulate forceUpdate with React Hooks",
    "slug": "emulate-forceupdate-with-react-hooks-2jdh-temp-slug-3588325",
    "created_at": "2018-11-09T02:14:24.244Z",
    "main_image": null,
    "description": "\n\nPhoto by [_freestocks.org](https://unsplash.com/photos/CH6-cfiY2Yo?utm_source=u...",
    "published": false,
    "published_at": "2018-11-09T01:41:45.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003cem\u003e[_freestocks.org\u003c/em\u003e](\u003ca href=\"https://unsplash.com/photos/CH6-cfiY2Yo?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003ehttps://unsplash.com/photos/CH6-cfiY2Yo?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\u003c/a\u003e)\u003c/em\u003e on \u003cem\u003e[_Unsplash\u003c/em\u003e](\u003ca href=\"https://unsplash.com/search/photos/force?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003ehttps://unsplash.com/search/photos/force?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\u003c/a\u003e)\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eSelf note…\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eToday I learned you can use 2nd value in \u003ca href=\"https://reactjs.org/hooks\"\u003eReact Hooks\u003c/a\u003e method \u003ca href=\"https://reactjs.org/docs/hooks-reference.html#usestate\"\u003euseState\u003c/a\u003e to emulate \u003ca href=\"https://reactjs.org/docs/react-component.html#forceupdate\"\u003eforceUpdate\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://twitter.com/donavon/\"\u003eDonavon\u003c/a\u003e has shared a code snippet on Twitter on how to use React Hooks to emulate \u003ca href=\"https://reactjs.org/docs/react-component.html#forceupdate\"\u003eforceUpdate\u003c/a\u003e.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eHow does it work? \u003ccode\u003euseForceUpdate\u003c/code\u003e calls \u003ccode\u003euseState\u003c/code\u003e and returns the setter function. Whenever you call the setter, it force a re-render. The value (\u003ccode\u003eundefined\u003c/code\u003e in this case) doesn't need to change.  \u003c/p\u003e\n\n\u003cp\u003eStrange, but it works. \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--DSA1FOVo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f937-200d-2642-fe0f.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--DSA1FOVo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f937-200d-2642-fe0f.png\" alt=\"🤷‍♂️\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e— donavon {… \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--dx3he-Lh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/2665.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--dx3he-Lh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/2665.png\" alt=\"♥\"\u003e\u003c/a\u003e} (@donavon) \u003ca href=\"https://twitter.com/donavon/status/1060538400292421632?ref_src=twsrc%5Etfw\"\u003eNovember 8, 2018\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cfigcaption\u003eDonavon’s twit on forceUpdate\u003c/figcaption\u003e\n\n\u003cp\u003eHere is the copy/pastable code snippet.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://gist.github.com/dance2die/59a29c7b9a6be44d59a3f2893dac5c1e\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://codesandbox.io/s/2jq559vq3r\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--pzpI10jk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codesandbox.io/static/img/play-codesandbox.svg\" alt=\"Edit React Hooks: useForceUpdate\"\u003e\u003c/a\u003e\u003cfigcaption\u003eFork Donavon’s code\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eHere is \u003ccode\u003eforceUpdate\u003c/code\u003e in action.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--DYQ7_Xo6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/11/2018-11-08_20-22-44.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--DYQ7_Xo6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/11/2018-11-08_20-22-44.gif%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch2\u003e\n  \u003ca name=\"thoughts\" href=\"#thoughts\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Thoughts…\n\u003c/h2\u003e\n\n\u003cp\u003eI still can’t figure out how calling \u003ccode\u003euseForceUpdate\u003c/code\u003e is able to trigger the re-render as it is not updating any state.\u003c/p\u003e\n\n\u003cp\u003eInitially Donavon updated a dummy state but he found out it was unnecessary thus he isn’t unsure how it’s working, either.\u003c/p\u003e\n\n\u003cp\u003e\u0026gt; Me too, but just calling the setter returned by \u003ccode\u003euseState\u003c/code\u003e appears to be enough. Originally I WAS updating state, but it's not necessary.\u003cbr\u003e\u003cbr\u003e\n\u0026gt;\u003cbr\u003e\u003cbr\u003e\n\u0026gt; const useForceUpdate = () =\u0026gt; {\u003cbr\u003e\u003cbr\u003e\n\u0026gt; const [, setIt] = useState(false);\u003cbr\u003e\u003cbr\u003e\n\u0026gt; return () =\u0026gt; setIt(it =\u0026gt; !it);\u003cbr\u003e\u003cbr\u003e\n\u0026gt; };\u003cbr\u003e\n\u0026gt; \u003cbr\u003e\n\u0026gt; — donavon {… \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--dx3he-Lh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/2665.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--dx3he-Lh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/2665.png\" alt=\"♥\"\u003e\u003c/a\u003e} (@donavon) \u003ca href=\"https://twitter.com/donavon/status/1060541358681796608?ref_src=twsrc%5Etfw\"\u003eNovember 8, 2018\u003c/a\u003e\u003c/p\u003e\n\n\u003cfigcaption\u003eMore questions…\u003c/figcaption\u003e\n\n\u003cp\u003eI tried to go thru the code in Chrome devtool but would require understanding React Fiber code to dig it.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"articles-to-read\" href=\"#articles-to-read\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Articles to read\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://engineering.hexacta.com/didact-learning-how-react-works-by-building-it-from-scratch-51007984e5c5\"\u003eDidact: a DIY guide to build your own React\u003c/a\u003e by \u003ca href=\"https://engineering.hexacta.com/@pomber?source=post_header_lockup\"\u003eRodrigo Pombo\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://hackernoon.com/build-your-own-react-48edb8ed350d\"\u003eBuild Your Own React\u003c/a\u003e by \u003ca href=\"https://hackernoon.com/@ofirdagan?source=post_header_lockup\"\u003eOfir Dagan\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/11/08/emulate-forceupdate-with-react-hooks/\"\u003eEmulate forceUpdate with React Hooks\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Emulate forceUpdate with React Hooks\npublished: false\ntags: Programming,React,Self Note,TIL\ncanonical_url: https://www.slightedgecoder.com/2018/11/08/emulate-forceupdate-with-react-hooks/\n---\n\n_Photo by _[_freestocks.org_](https://unsplash.com/photos/CH6-cfiY2Yo?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_ on _[_Unsplash_](https://unsplash.com/search/photos/force?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)\n\n_Self note…_\n\nToday I learned you can use 2nd value in [React Hooks](https://reactjs.org/hooks) method [useState](https://reactjs.org/docs/hooks-reference.html#usestate) to emulate [forceUpdate](https://reactjs.org/docs/react-component.html#forceupdate).\n\n[Donavon](https://twitter.com/donavon/) has shared a code snippet on Twitter on how to use React Hooks to emulate [forceUpdate](https://reactjs.org/docs/react-component.html#forceupdate).\n\n\u003e How does it work? `useForceUpdate` calls `useState` and returns the setter function. Whenever you call the setter, it force a re-render. The value (`undefined` in this case) doesn't need to change.  \n\u003e   \n\u003e Strange, but it works. ![🤷‍♂️](https://s.w.org/images/core/emoji/11/72x72/1f937-200d-2642-fe0f.png)\n\u003e \n\u003e — donavon {… ![♥](https://s.w.org/images/core/emoji/11/72x72/2665.png)} (@donavon) [November 8, 2018](https://twitter.com/donavon/status/1060538400292421632?ref_src=twsrc%5Etfw)\n\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"\u003e\u003c/script\u003e\n\u003cfigcaption\u003eDonavon’s twit on forceUpdate\u003c/figcaption\u003e\n\nHere is the copy/pastable code snippet.\n\n\u003cscript src=\"https://gist.github.com/dance2die/59a29c7b9a6be44d59a3f2893dac5c1e.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/59a29c7b9a6be44d59a3f2893dac5c1e\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\n\n[![Edit React Hooks: useForceUpdate](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/2jq559vq3r)\u003cfigcaption\u003eFork Donavon’s code\u003c/figcaption\u003e\n\nHere is `forceUpdate` in action.\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/11/2018-11-08_20-22-44.gif?w=1170\u0026ssl=1)\n\n## Thoughts…\n\nI still can’t figure out how calling `useForceUpdate` is able to trigger the re-render as it is not updating any state.\n\nInitially Donavon updated a dummy state but he found out it was unnecessary thus he isn’t unsure how it’s working, either.\n\n\u003e Me too, but just calling the setter returned by `useState` appears to be enough. Originally I WAS updating state, but it's not necessary.  \n\u003e   \n\u003e const useForceUpdate = () =\u003e {  \n\u003e const [, setIt] = useState(false);  \n\u003e return () =\u003e setIt(it =\u003e !it);  \n\u003e };\n\u003e \n\u003e — donavon {… ![♥](https://s.w.org/images/core/emoji/11/72x72/2665.png)} (@donavon) [November 8, 2018](https://twitter.com/donavon/status/1060541358681796608?ref_src=twsrc%5Etfw)\n\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"\u003e\u003c/script\u003e\n\u003cfigcaption\u003eMore questions…\u003c/figcaption\u003e\n\nI tried to go thru the code in Chrome devtool but would require understanding React Fiber code to dig it.\n\n## Articles to read\n\n- [Didact: a DIY guide to build your own React](https://engineering.hexacta.com/didact-learning-how-react-works-by-building-it-from-scratch-51007984e5c5) by [Rodrigo Pombo](https://engineering.hexacta.com/@pomber?source=post_header_lockup)\n- [Build Your Own React](https://hackernoon.com/build-your-own-react-48edb8ed350d) by [Ofir Dagan](https://hackernoon.com/@ofirdagan?source=post_header_lockup)\n\nThe post [Emulate forceUpdate with React Hooks](https://www.slightedgecoder.com/2018/11/08/emulate-forceupdate-with-react-hooks/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/11/08/emulate-forceupdate-with-react-hooks/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/11/08/emulate-forceupdate-with-react-hooks/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": null,
    "cached_tag_list": "programming, react, selfnote, todayilearned",
    "path": "/dance2die/emulate-forceupdate-with-react-hooks-2jdh-temp-slug-3588325",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-11-09T01:41:45.000Z"
  },
  {
    "title": "K closest points to the origin in C#",
    "slug": "k-closest-points-to-the-origin-in-c-2mp6-temp-slug-3932462",
    "created_at": "2018-11-15T02:43:39.600Z",
    "main_image": null,
    "description": "\n\nPhoto by [_Rick Mason](https://unsplash.com/photos/2FaCKyEEtis?utm_source=unspl...",
    "published": false,
    "published_at": "2018-11-15T02:38:31.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003cem\u003e[_Rick Mason\u003c/em\u003e](\u003ca href=\"https://unsplash.com/photos/2FaCKyEEtis?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003ehttps://unsplash.com/photos/2FaCKyEEtis?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\u003c/a\u003e)\u003c/em\u003e on \u003cem\u003e[_Unsplash\u003c/em\u003e](\u003ca href=\"https://unsplash.com/search/photos/heap?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003ehttps://unsplash.com/search/photos/heap?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\u003c/a\u003e)\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eSelf note on what I did/learned today…\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eToday I implemented “K closest points to the origin” problem in C#.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"full-implementation\" href=\"#full-implementation\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Full Implementation\n\u003c/h2\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/d8d1e851c6e26236eefe90dfa93a8830\"\u003eView this gist on GitHub\u003c/a\u003e\n\u003ch2\u003e\n  \u003ca name=\"explanation\" href=\"#explanation\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Explanation\n\u003c/h2\u003e\n\n\u003cp\u003eThis problem requires you to calculate distances of all points and find the points with smallest distances.\u003c/p\u003e\n\n\u003cp\u003eTo keep a track of smallest distances, MaxHeap (not MinHeap as you might expect initially) is used to keep the first k\u003csup\u003eth\u003c/sup\u003e distances.\u003c/p\u003e\n\n\u003cp\u003eAs you go thru the rest of points (after k\u003csup\u003eth\u003c/sup\u003e position), if the current point’s distance is smaller than the value in the MaxHeap, then replace that max value with the current point in the MaxHeap.\u003c/p\u003e\n\n\u003cp\u003eEventually, you will be left with points with smallest distances.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"k-farthest-points-from-the-origin\" href=\"#k-farthest-points-from-the-origin\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  k farthest points from the origin\n\u003c/h2\u003e\n\n\u003cp\u003eOne can also find the opposite using MinHeap instead of MaxHeap to find the farthest points from the origin.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"thoughts\" href=\"#thoughts\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Thoughts…\n\u003c/h2\u003e\n\n\u003cp\u003eI’ve initially implemented MinHeap then implemented MaxHeap from scratch. To solve this problem, I had to implement MaxHeap yet again but instead of holding a plain “int” value, I made it more generic and passed a comparer object.\u003c/p\u003e\n\n\u003cp\u003eImplementing “Heap” data structure really solidified the understanding thereof and when it can come in handy.\u003c/p\u003e\n\n\u003cp\u003eMax/MinHeap is very underused IMO.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"resources\" href=\"#resources\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Resources\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eSource code of \u003ca href=\"https://gist.github.com/dance2die/d8d1e851c6e26236eefe90dfa93a8830\"\u003eKClosePointsToOriginTest.cs\u003c/a\u003e on GitHub.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=eaYX0Ee0Kcg\"\u003eAmazon Coding Interview Question – K Closest Points to the Origin\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.youtube.com/watch?v=t0Cq6tVNRBA\"\u003eData Structures: Heaps\u003c/a\u003e by \u003ca href=\"http://www.gayle.com/\"\u003eGayle Laakmann McDowell\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/11/14/k-closest-points-to-the-origin-in-c/\"\u003eK closest points to the origin in C#\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: K closest points to the origin in C#\npublished: false\ntags: Problem Solving,Programming,Self Note,algorithm\ncanonical_url: https://www.slightedgecoder.com/2018/11/14/k-closest-points-to-the-origin-in-c/\n---\n\n_Photo by _[_Rick Mason_](https://unsplash.com/photos/2FaCKyEEtis?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_ on _[_Unsplash_](https://unsplash.com/search/photos/heap?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)\n\n**_Self note on what I did/learned today…_**\n\nToday I implemented “K closest points to the origin” problem in C#.\n\n## Full Implementation\n\n\u003cscript src=\"https://gist.github.com/dance2die/d8d1e851c6e26236eefe90dfa93a8830.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/d8d1e851c6e26236eefe90dfa93a8830\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\n\n## Explanation\n\nThis problem requires you to calculate distances of all points and find the points with smallest distances.\n\nTo keep a track of smallest distances, MaxHeap (not MinHeap as you might expect initially) is used to keep the first k\u003csup\u003eth\u003c/sup\u003e distances.\n\nAs you go thru the rest of points (after k\u003csup\u003eth\u003c/sup\u003e position), if the current point’s distance is smaller than the value in the MaxHeap, then replace that max value with the current point in the MaxHeap.\n\nEventually, you will be left with points with smallest distances.\n\n## k farthest points from the origin\n\nOne can also find the opposite using MinHeap instead of MaxHeap to find the farthest points from the origin.\n\n## Thoughts…\n\nI’ve initially implemented MinHeap then implemented MaxHeap from scratch. To solve this problem, I had to implement MaxHeap yet again but instead of holding a plain “int” value, I made it more generic and passed a comparer object.\n\nImplementing “Heap” data structure really solidified the understanding thereof and when it can come in handy.\n\nMax/MinHeap is very underused IMO.\n\n## Resources\n\n- Source code of [KClosePointsToOriginTest.cs](https://gist.github.com/dance2die/d8d1e851c6e26236eefe90dfa93a8830) on GitHub.\n- [Amazon Coding Interview Question – K Closest Points to the Origin](https://www.youtube.com/watch?v=eaYX0Ee0Kcg)\n- [Data Structures: Heaps](https://www.youtube.com/watch?v=t0Cq6tVNRBA) by [Gayle Laakmann McDowell](http://www.gayle.com/)\n\nThe post [K closest points to the origin in C#](https://www.slightedgecoder.com/2018/11/14/k-closest-points-to-the-origin-in-c/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/11/14/k-closest-points-to-the-origin-in-c/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/11/14/k-closest-points-to-the-origin-in-c/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": null,
    "cached_tag_list": "problemsolving, programming, selfnote, algorithm",
    "path": "/dance2die/k-closest-points-to-the-origin-in-c-2mp6-temp-slug-3932462",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-11-15T02:38:31.000Z"
  },
  {
    "title": "Need to set tabIndex=0 to enable tab navigation",
    "slug": "need-to-set-tabindex0-to-enable-tab-navigation-4i0a",
    "created_at": "2018-11-16T04:24:35.152Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/0oy7tunypafcx43albqz.jpg",
    "description": "\n\nPhoto by Abigail Lynn on Unsplash\n\nNote to self + Question\n\nI recently answered...",
    "published": true,
    "published_at": "2018-11-16T04:17:16.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/MNXIZgzKw4U?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eAbigail Lynn\u003c/a\u003e on \u003ca href=\"https://unsplash.com/?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003e\u003cstrong\u003eNote to self + Question\u003c/strong\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eI recently answered a Stack Overflow question, \u003ca href=\"https://stackoverflow.com/questions/53327522/\"\u003eReact focus items list in child component after action from a different child component\u003c/a\u003e and learned that to enable HTML element navigation using tabs, you need to set tabindex values to 0.\u003c/p\u003e\n\n\u003cp\u003eI have researched for the question and \u003ca href=\"https://stackoverflow.com/a/53327974/4035\"\u003ereplied.\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eWhat I still don’t get is why it’s not recommended to use tabindex value greater than 0.\u003c/p\u003e\n\n\u003cp\u003eFollowing articles urges you not use any values other than 0 \u0026amp; -1.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developers.google.com/web/fundamentals/accessibility/focus/using-tabindex\"\u003eUsing tabindex\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://adrianroselli.com/2014/11/dont-use-tabindex-greater-than-0.html\"\u003eDon’t Use Tabindex Greater than 0\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eI’ve googled again and again but can’t find any satisfactory answers, yet.\u003c/p\u003e\n\n\u003cp\u003eAt least I was able to answer the question and provided the \u003ca href=\"https://codesandbox.io/s/002pz9kp20\"\u003eSandbox\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eUsed \u003ca href=\"https://reactjs.org/docs/forwarding-refs.html\"\u003eReact.forwardRef\u003c/a\u003e for the first time and worked like a charm.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"question\" href=\"#question\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Question\n\u003c/h2\u003e\n\n\u003cp\u003eDoes anyone know why using \u003ccode\u003etabindex\u003c/code\u003e value greater than 0 is not recommended?\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: Need to set tabIndex=0 to enable tab navigation\r\npublished: true\r\ntags: self note, a11y, React\r\ncanonical_url: https://www.slightedgecoder.com/2018/11/15/need-to-set-tabindex0-to-enable-tab-navigation/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/0oy7tunypafcx43albqz.jpg\r\n---\r\n\r\n_Photo by [Abigail Lynn](https://unsplash.com/photos/MNXIZgzKw4U?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_\r\n\r\n_**Note to self + Question**_\r\n\r\nI recently answered a Stack Overflow question, [React focus items list in child component after action from a different child component](https://stackoverflow.com/questions/53327522/) and learned that to enable HTML element navigation using tabs, you need to set tabindex values to 0.\r\n\r\nI have researched for the question and [replied.](https://stackoverflow.com/a/53327974/4035)\r\n\r\nWhat I still don’t get is why it’s not recommended to use tabindex value greater than 0.\r\n\r\nFollowing articles urges you not use any values other than 0 \u0026 -1.\r\n\r\n- [Using tabindex](https://developers.google.com/web/fundamentals/accessibility/focus/using-tabindex)\r\n- [Don’t Use Tabindex Greater than 0](http://adrianroselli.com/2014/11/dont-use-tabindex-greater-than-0.html)\r\n\r\nI’ve googled again and again but can’t find any satisfactory answers, yet.\r\n\r\nAt least I was able to answer the question and provided the [Sandbox](https://codesandbox.io/s/002pz9kp20).\r\n\r\nUsed [React.forwardRef](https://reactjs.org/docs/forwarding-refs.html) for the first time and worked like a charm.\r\n\r\n## Question\r\n\r\nDoes anyone know why using `tabindex` value greater than 0 is not recommended?",
    "canonical_url": "https://www.slightedgecoder.com/2018/11/15/need-to-set-tabindex0-to-enable-tab-navigation/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 2,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/11/15/need-to-set-tabindex0-to-enable-tab-navigation/",
    "positive_reactions_count": 3,
    "edited_at": "2018-11-22T20:32:33.614Z",
    "crossposted_at": "2018-11-22T03:43:02.485Z",
    "language": null,
    "cached_tag_list": "selfnote, a11y, react",
    "path": "/dance2die/need-to-set-tabindex0-to-enable-tab-navigation-4i0a",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-11-22T18:32:59.293Z"
  },
  {
    "title": "Hacktoberfest is over but…",
    "slug": "hacktoberfest-is-over-but-4ame",
    "created_at": "2018-11-18T23:43:38.904Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/wk6uorh8j7m532vu3nfg.jpg",
    "description": "\n\nPhoto by Neil Thomas on Unsplash (Digital Camera + Ocean).\n\nNote to self...\n\nHa...",
    "published": true,
    "published_at": "2018-11-18T19:53:08.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/SmFBUCgcTn0?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eNeil Thomas\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/digital-ocean?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e (Digital Camera + Ocean)\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003e\u003cstrong\u003eNote to self...\u003c/strong\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eHacktoberfest is over but it has helped me to quickly do a PR for simple typo fixes.\u003c/p\u003e\n\n\u003cp\u003eThe more I do a PR the easier it seems to contribute.\u003c/p\u003e\n\n\u003cp\u003eDid a \u003ca href=\"https://github.com/h2non/node-imaginary/pull/18\"\u003equick PR\u003c/a\u003e to fix a typo (merged at this point) in an open source project documentation for \u003ca href=\"https://github.com/h2non/node-imaginary\"\u003enode-imaginary\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eI now see what \u003ca href=\"https://www.digitalocean.com/\"\u003eDigital Ocean\u003c/a\u003e (DO) was trying to achieve with Hacktoberfest.\u003c/p\u003e\n\n\u003cp\u003eNot only were DO trying to giving back to the developer community, DO was trying to help us developers to get used to the \u003cstrong\u003eprocess\u003c/strong\u003e and contribute more, which helps others as well.\u003c/p\u003e\n\n\u003cp\u003e취지가 정말로 좋은것 같습니다. (\u003cem\u003ebetter expressed in Korean\u003c/em\u003e).\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/11/18/hacktoberfest-is-over-but/\"\u003eHacktoberfest is over but…\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: Hacktoberfest is over but…\r\npublished: true\r\ntags: Self Note,hacktoberfest, TIL\r\ncanonical_url: https://www.slightedgecoder.com/2018/11/18/hacktoberfest-is-over-but/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/wk6uorh8j7m532vu3nfg.jpg\r\n---\r\n\r\n_Photo by [Neil Thomas](https://unsplash.com/photos/SmFBUCgcTn0?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/digital-ocean?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) (Digital Camera + Ocean)_.\r\n\r\n_**Note to self...**_\r\n\r\nHacktoberfest is over but it has helped me to quickly do a PR for simple typo fixes.\r\n\r\nThe more I do a PR the easier it seems to contribute.\r\n\r\nDid a [quick PR](https://github.com/h2non/node-imaginary/pull/18) to fix a typo (merged at this point) in an open source project documentation for [node-imaginary](https://github.com/h2non/node-imaginary).\r\n\r\nI now see what [Digital Ocean](https://www.digitalocean.com/) (DO) was trying to achieve with Hacktoberfest.\r\n\r\nNot only were DO trying to giving back to the developer community, DO was trying to help us developers to get used to the **process** and contribute more, which helps others as well.\r\n\r\n취지가 정말로 좋은것 같습니다. (_better expressed in Korean_).\r\n\r\nThe post [Hacktoberfest is over but…](https://www.slightedgecoder.com/2018/11/18/hacktoberfest-is-over-but/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/11/18/hacktoberfest-is-over-but/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/11/18/hacktoberfest-is-over-but/",
    "positive_reactions_count": 6,
    "edited_at": null,
    "crossposted_at": "2018-11-22T03:37:14.793Z",
    "language": null,
    "cached_tag_list": "selfnote, hacktoberfest, todayilearned",
    "path": "/dance2die/hacktoberfest-is-over-but-4ame",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-11-18T19:53:08.000Z"
  },
  {
    "title": "“Move files around until it feels right”",
    "slug": "move-files-around-until-it-feels-right-2lek",
    "created_at": "2018-11-18T23:43:42.011Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/6k490fv50k352qizx8jt.jpg",
    "description": "\n\nPhoto by Jaime Casap on Unsplash\n\nNote to self…\n\nA user u/iKenshu asked followi...",
    "published": true,
    "published_at": "2018-11-18T20:32:03.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/cXqBxWB4upA?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eJaime Casap\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/feels-right?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eNote to self…\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eA user \u003ca href=\"https://www.reddit.com/user/iKenshu/\"\u003eu/iKenshu\u003c/a\u003e asked following question on Reddit.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ehow to structure my project folder for something like a portafolio o simple web page\u003c/p\u003e\n\n\u003cp\u003e\u003ccite\u003eu/iKenshu\u003c/cite\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAnd \u003ccode\u003eu/timmonsjg\u003c/code\u003e \u003ca href=\"https://www.reddit.com/r/reactjs/comments/9t5sic/beginners_thread_easy_questions_november_2018/e9aof1l/\"\u003eresponded\u003c/a\u003e with \u003ca href=\"http://react-file-structure.surge.sh/\"\u003eDan Abramov’s site\u003c/a\u003e, which reads,\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003emove files around until it feels right\u003c/p\u003e\n\n\u003cp\u003ethis is \u003ca href=\"https://mobile.twitter.com/dan_abramov/status/1027248875072114689\"\u003enot a joke\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ccite\u003eDan Abramov\u003cbr\u003e\u003c/cite\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThat advice of “trial and error” works initially but we will barely have time to enjoy our life.\u003c/p\u003e\n\n\u003cp\u003eThere is an effective way when adopting his advice.\u003c/p\u003e\n\n\u003cp\u003eIt’s called \u003cstrong\u003e\u003cem\u003eexplore/exploit trade-off\u003c/em\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--IfQylm2C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/11/atomic-habits-page-223.png%3Ffit%3D652%252C1024%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--IfQylm2C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/11/atomic-habits-page-223.png%3Ffit%3D652%252C1024%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003cfigcaption\u003ePage 223 of “\u003ca href=\"https://jamesclear.com/atomic-habits\" rel=\"noreferrer noopener\"\u003eAtomic Habits\u003c/a\u003e” by James Clear\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eMove files around initially and after gaining experience, stick to what you know and tried 80~90% of the time.\u003c/p\u003e\n\n\u003cp\u003eAnd keep experimenting the rest of the time (10~20%).\u003c/p\u003e\n\n\u003cp\u003eThat 10~20% will help you adopt the changes required in your project or even come up with a “blockbuster” process, which would work for many.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/11/18/move-files-around-until-it-feels-right/\"\u003e“Move files around until it feels right”\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: “Move files around until it feels right”\r\npublished: true\r\ntags: Self Note, Productivity, React\r\ncanonical_url: https://www.slightedgecoder.com/2018/11/18/move-files-around-until-it-feels-right/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/6k490fv50k352qizx8jt.jpg\r\n---\r\n\r\n_Photo by [Jaime Casap](https://unsplash.com/photos/cXqBxWB4upA?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/feels-right?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_\r\n\r\n_Note to self…_\r\n\r\nA user [u/iKenshu](https://www.reddit.com/user/iKenshu/) asked following question on Reddit.\r\n\r\n\u003e how to structure my project folder for something like a portafolio o simple web page\r\n\u003e \r\n\u003e \u003ccite\u003eu/iKenshu\u003c/cite\u003e\r\n\r\nAnd `u/timmonsjg` [responded](https://www.reddit.com/r/reactjs/comments/9t5sic/beginners_thread_easy_questions_november_2018/e9aof1l/) with [Dan Abramov’s site](http://react-file-structure.surge.sh/), which reads,\r\n\r\n\u003e move files around until it feels right\r\n\u003e \r\n\u003e this is [not a joke](https://mobile.twitter.com/dan_abramov/status/1027248875072114689)\r\n\u003e \r\n\u003e \u003ccite\u003eDan Abramov\u003cbr\u003e\u003c/cite\u003e\r\n\r\nThat advice of “trial and error” works initially but we will barely have time to enjoy our life.\r\n\r\nThere is an effective way when adopting his advice.\r\n\r\nIt’s called **_explore/exploit trade-off_**.\r\n\r\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/11/atomic-habits-page-223.png?fit=652%2C1024\u0026ssl=1)\u003cfigcaption\u003ePage 223 of “\u003ca href=\"https://jamesclear.com/atomic-habits\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label='Page 223 of \"Atomic Habits\" by James Clear (opens in a new tab)'\u003eAtomic Habits\u003c/a\u003e” by James Clear\u003c/figcaption\u003e\r\n\r\nMove files around initially and after gaining experience, stick to what you know and tried 80~90% of the time.\r\n\r\nAnd keep experimenting the rest of the time (10~20%).\r\n\r\nThat 10~20% will help you adopt the changes required in your project or even come up with a “blockbuster” process, which would work for many.\r\n\r\n_The post [“Move files around until it feels right”](https://www.slightedgecoder.com/2018/11/18/move-files-around-until-it-feels-right/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com)._",
    "canonical_url": "https://www.slightedgecoder.com/2018/11/18/move-files-around-until-it-feels-right/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/11/18/move-files-around-until-it-feels-right/",
    "positive_reactions_count": 6,
    "edited_at": null,
    "crossposted_at": "2018-11-22T03:31:33.386Z",
    "language": null,
    "cached_tag_list": "selfnote, productivity, react",
    "path": "/dance2die/move-files-around-until-it-feels-right-2lek",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-11-18T20:32:03.000Z"
  },
  {
    "title": "Show Note for React Podcast Episode 29 –  “Don’t Rewrite Your App for Hooks and Suspense” with Jared Palmer",
    "slug": "show-note-for-react-podcast-episode-29---dont-rewrite-your-app-for-hooks-and-suspense-with-jared-palmer-36j5",
    "created_at": "2018-11-22T02:43:06.451Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/c670u0igcoav0ku4mg41.jpg",
    "description": "\n\nPhoto by Kai Pilger on Unsplash\n\nMore exciting features coming to React discuss...",
    "published": true,
    "published_at": "2018-11-22T02:09:06.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/1k3vsv7iIIc?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eKai Pilger\u003c/a\u003e on \u003ca href=\"https://unsplash.com/?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eMore exciting features coming to React discussed in \u003ca href=\"https://reactpodcast.simplecast.fm/29\"\u003eReact Podcast episode #29\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://twitter.com/chantastic\"\u003eChantastic\u003c/a\u003e discussed Hooks \u0026amp; Suspense features with \u003ca href=\"https://palmer.net/\"\u003eJared Palmer\u003c/a\u003e‘s demo before React Conf 2018.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eDISCLAIMER\u003c/strong\u003e : \u003cem\u003eBelow is an unofficial show note highlighting discussions as I am not affiliated with podcast, just an avid listener :).\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"table-of-contents\" href=\"#table-of-contents\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  📑 Table of Contents\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#hooks\"\u003eHooks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#suspense\"\u003eSuspense\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#suspense-cache\"\u003eSuspense + Cache\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#reiteration\"\u003eReiteration\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#next-challenge\"\u003eNext Challenge\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#chantastics-insight\"\u003eChantastic’s Insight\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#upgrade-tips\"\u003eUpgrade Tips\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#dont-rewrite-your-app-at-all\"\u003eDon’t rewrite your app at all\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#%F0%9F%8F%94-resources\"\u003eResources\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"hooks\" href=\"#hooks\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ⚓ Hooks\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"fundamentally-replaces-render-props\" href=\"#fundamentally-replaces-render-props\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Fundamentally replaces Render Props\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://reactjs.org/docs/render-props.html\"\u003eRender Props\u003c/a\u003e can cause a \u003ca href=\"https://twitter.com/acdlite/status/955955121979969537\"\u003ecallback hell\u003c/a\u003e caused by chaining multiple Render Props( prevalent in node).\u003c/li\u003e\n\u003cli\u003eHooks solve the overly nested code using a plain old JavaScript functions.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"react-going-allin-with-javascript-because\" href=\"#react-going-allin-with-javascript-because\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 React going all-in with JavaScript because\n\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003eIt’s easy to test\u003c/li\u003e\n\u003cli\u003eEverything is in scope\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cstrong\u003eSung’s note\u003c/strong\u003e : because class components would require you to access states using \u003ccode\u003ethis\u003c/code\u003e \u0026amp; many new people suffer from not knowing to bind methods with current instance’s \u003ccode\u003ethis\u003c/code\u003e like \u003ccode\u003ethis.method.bind(this)\u003c/code\u003e?_\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"typescript\" href=\"#typescript\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 TypeScript\n\u003c/h3\u003e\n\n\u003cp\u003eLess code is required\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eas it removes the need to create interfaces for props and states for class components.\u003c/li\u003e\n\u003cli\u003eAnd with initial value of \u003ccode\u003euseState\u003c/code\u003e TypeScript can infer the type of state returned as the first argument in the returned tuple (helps autocomplete feature in editors).\u003c/li\u003e\n\u003cli\u003eMakes it easy to move states around.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"other-benefits\" href=\"#other-benefits\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Other Benefits\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003eYou can use plain function syntax without transpiling.\u003c/li\u003e\n\u003cli\u003eRead \u003ca href=\"http://reactjs.org/hooks\"\u003eHooks documentation\u003c/a\u003e top to bottom without skipping\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"possible-drawback\" href=\"#possible-drawback\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Possible drawback\n\u003c/h3\u003e\n\n\u003cp\u003eLearning curve could be an issue because this is a new feature thus requires you to remember “bunch of stuff”.\u003c/p\u003e\n\n\u003cp\u003eBut once you get over the hurdle it’s great because\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eYou can easily refactor states.\u003c/li\u003e\n\u003cli\u003eYou have a choice to put new state(s) in component or elsewhere.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eJared is optimistic about Hooks’ future and considers it the next logical step to take for React.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"suspense\" href=\"#suspense\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🌉 Suspense\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"what-is-it-about\" href=\"#what-is-it-about\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 What is it about?\n\u003c/h3\u003e\n\n\u003cp\u003eSuspense is about an “efficient loading of resources”.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"loading-state-problem\" href=\"#loading-state-problem\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Loading State Problem\n\u003c/h3\u003e\n\n\u003cp\u003eOn fast connection, users prefer not to see a janky loading screens but on a slow connection they’d like to see it.\u003c/p\u003e\n\n\u003cp\u003eSpeed, performance, and UX (User Experience) directly conflict with each other in this case because\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eAccording to a UX research, user do not perceive the speed difference when a change occurs in 200~400ms.\u003c/li\u003e\n\u003cli\u003eShowing a loading spinner during that period makes user to feel it as janky on a fast connection but would like to know something is happening when the threshold is reached.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eShowing nothing still doesn’t solve a problem as you still have to check of the loading state.\u003c/p\u003e\n\n\u003cp\u003eMany attempts were made to address the issue (lazy load data, assets, etc)\u003cbr\u003e\u003cbr\u003e\nbut they still don’t react to (slow/fast) network.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"how-does-suspense-work\" href=\"#how-does-suspense-work\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 How does Suspense work?\n\u003c/h3\u003e\n\n\u003cp\u003eSuspense allows you where to pause rendering while other components wait for resources.\u003c/p\u003e\n\n\u003cp\u003eWhen a resource arrives React can continue to render or else Suspense can show a fallback content.\u003c/p\u003e\n\n\u003cp\u003eSuspense literally stops time from happening.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"how-does-it-help\" href=\"#how-does-it-help\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 How does it help?\n\u003c/h3\u003e\n\n\u003cp\u003eSuspense enables us to orchestrate fallback declaratively.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThis enables us to remove loading states and imperative checks.\u003c/li\u003e\n\u003cli\u003eYou just tell React where to suspend/wait (DOM mutation is paused during this phase).\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eSuspense can make loading dynamic components easy.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eWe can lazily load components using \u003ca href=\"https://reactjs.org/docs/code-splitting.html#reactlazy\"\u003eReact.lazy\u003c/a\u003e by wrapping it in Suspense telling React to pause until the component is resolved.\u003c/li\u003e\n\u003cli\u003eIf it takes longer than a certain threshold, Suspense displays a fallback.\u003c/li\u003e\n\u003cli\u003eThis solves speed, performance, and UX issue mentioned in the problem statement above.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"how-to-handle-suspense-errors\" href=\"#how-to-handle-suspense-errors\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 How to handle Suspense errors\n\u003c/h3\u003e\n\n\u003cp\u003eUse \u003ca href=\"https://reactjs.org/docs/code-splitting.html#error-boundaries\"\u003eError Boundaries\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"concurrent-mode\" href=\"#concurrent-mode\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Concurrent Mode\n\u003c/h3\u003e\n\n\u003cp\u003ePrerequisite is that your app needs to pass a \u003ca href=\"https://reactjs.org/docs/strict-mode.html\"\u003estrict mode\u003c/a\u003e by fixing all warning generated when you wrap your app using \u003ccode\u003e\u0026lt;React.StrictMode /\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eOnce your app passes the strict mode, you can replace \u003ca href=\"https://reactjs.org/docs/react-dom.html#render\"\u003eReactDOM.render\u003c/a\u003e with \u003ca href=\"https://github.com/sw-yx/fresh-concurrent-react/blob/master/apis/roots.md#reactdomcreateroot-and-rootrender\"\u003eReactDOM.createRoot\u003c/a\u003e, which you returns an object and call render on.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"what-if-you-cant-pass-strict-mode-test\" href=\"#what-if-you-cant-pass-strict-mode-test\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 What if you can’t pass Strict Mode test?\n\u003c/h3\u003e\n\n\u003cp\u003eYou can still use Concurrent Mode by\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eidentifying React tree where strict mode passes\u003c/li\u003e\n\u003cli\u003eand wrapping that portion of tree in \u003ca href=\"https://github.com/sw-yx/fresh-concurrent-react/blob/master/Intro.md#getting-started-with-concurrentmode\"\u003eReact.ConcurrentMode\u003c/a\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e\u003cem\u003eThis enables an incremental adoption.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"outside-of-concurrent-mode\" href=\"#outside-of-concurrent-mode\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Outside of Concurrent Mode?\n\u003c/h3\u003e\n\n\u003cp\u003eIf Suspense is used outside concurrent mode, Suspense will fallback right away while child component is still loading itself.\u003c/p\u003e\n\n\u003cp\u003eYou still get janks but with less code as it rids of loading state used in imperative code.\u003c/p\u003e\n\n\u003cp\u003eBenefits of using Suspense outside of Concurrent Mode are\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eA better DX (Developer Experience)\u003c/li\u003e\n\u003cli\u003eand it slowly prepares your app for the better UX.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"suspense-cache\" href=\"#suspense-cache\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🌉 Suspense + 💲 Cache\n\u003c/h2\u003e\n\n\u003cp\u003eData fetching is simplified when combined with cache thanks to how Suspense works because everything (\u003cem\u003ewasn’t clear. Did Jared mean states? or components?\u003c/em\u003e) is always defined.\u003c/p\u003e\n\n\u003cp\u003eWhen everthing (\u003cem\u003e?\u003c/em\u003e) is defined, TypeScript would not require partial classes (\u003cem\u003eI need some feedback on this as I am a TS newbie…\u003c/em\u003e).\u003c/p\u003e\n\n\u003cp\u003eCoupling Hooks with Suspense + Cache, you can access asynchronous code as if it is a synchronous one providing a better readability.\u003c/p\u003e\n\n\u003cp\u003eThis combination also solves \u003ca href=\"https://www.quora.com/What-is-waterfall-problem\"\u003ewaterfall issue\u003c/a\u003e of component state dependency orchestration (case where next components need to wait when previous ones are loaded).\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"example\" href=\"#example\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Example\n\u003c/h3\u003e\n\n\u003cp\u003eSiblings of a single Suspense run in parallel.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/a2ea846b6e5e89e157e6655854362993.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eIn the code above, Component1 \u0026amp; 2 run in parallel.\u003cbr\u003e\u003cbr\u003e\nSimilar concept as how \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all\"\u003ePromise.all\u003c/a\u003e runs promises in parallel.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eCaveat\u003c/strong\u003e : Nested components in Suspense are going to run with waterfall.\u003cbr\u003e\u003cbr\u003e\n\u003cem\u003e\u003cstrong\u003eSung’s Note\u003c/strong\u003e : Not sure how this works exactly…\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eAnd you can nest Suspense within each other infinitely.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"use-cases\" href=\"#use-cases\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Use Cases\n\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003eUsing a low quality image place holder while a high res version is loading.\n\n\u003cul\u003e\n\u003cli\u003eWrap regular image component in Suspense.\u003c/li\u003e\n\u003cli\u003eRegular image will be fetched while Suspense displays a low quality image as a fallback until the high resolution resource becomes available in cache.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eLoading external 3rd party payment script.\n\n\u003cul\u003e\n\u003cli\u003eYou can enable check out button only when \u003ca href=\"https://stripe.com/docs/api\"\u003eStripe\u003c/a\u003e script is loaded.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eYou can load next component to load ahead of time to enable a transition effect.\u003c/li\u003e\n\u003cli\u003eFor SSR (server-side rendering), you have to know what data your components need ahead of time.\n\n\u003cul\u003e\n\u003cli\u003eThis forces Apollo to traverse React tree twice (\nComponents have to figure out what data they need so React is going to render without data and then with data).\u003c/li\u003e\n\u003cli\u003eThis slows down the SSR page.\u003c/li\u003e\n\u003cli\u003eIn later cache implementations, React tree can be walked down only once but not yet “quite there, yet”.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"cache\" href=\"#cache\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Cache\n\u003c/h3\u003e\n\n\u003cp\u003eIt is just a \u003ca href=\"https://github.com/facebook/react/blob/ce96e2df4d/packages/react-cache/src/ReactCache.js\"\u003ereference implementation\u003c/a\u003e how it can hook into React.\u003c/p\u003e\n\n\u003cp\u003eData normalization \u0026amp; validation features are missing (but coming).\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"reiteration\" href=\"#reiteration\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ➿ Reiteration\n\u003c/h2\u003e\n\n\u003cp\u003eSuspense is about efficiently orchestrating resources.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eproviding \u003cstrong\u003eboth\u003c/strong\u003e good DX  \u0026amp; UX\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eYou can put anything (images, components, data, etc) in Cache\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eproviding a better UX\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eReact lets us describe “what” you want to do, not “how” you want to do.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eRefer to the “declarative” loading states using Suspense.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"next-challenge\" href=\"#next-challenge\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🥊 Next Challenge\n\u003c/h2\u003e\n\n\u003cp\u003eAnimation is the next challenge and JP considers it’s an unsolved problem.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"chantastics-insight\" href=\"#chantastics-insight\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🤔 Chantastic’s Insight\n\u003c/h2\u003e\n\n\u003cp\u003eReact team is making “right thing easy” to do with Suspense’s \u003ccode\u003emaxDuration\u003c/code\u003e (the threshold time for the fallback).\u003c/p\u003e\n\n\u003cp\u003eIt makes taking care of the \u003ccode\u003e3rd state\u003c/code\u003e (network state where loading data takes long or short) between “loading” state and “data” state.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"upgrade-tips\" href=\"#upgrade-tips\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  📈 Upgrade Tips\n\u003c/h2\u003e\n\n\u003cp\u003eIncrementally adopt these new features, instead because React is always incrementally adoptable \u0026amp; improvable.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003ee.g.)\u003c/em\u003e\u003c/strong\u003e Suspense can be used in concurrent mode for\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003ethe whole app (with \u003ccode\u003eReactDOM.createRoot\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003epartially (using \u003ccode\u003eReact.ConcurrentMode\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003eor outside concurrent mode\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eFocus on movement not migration.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eUse \u003ccode\u003eReact.lazy\u003c/code\u003e for code splitting\u003c/li\u003e\n\u003cli\u003eManage assets using cache to orchestrate loading \u0026amp; caching resources\u003c/li\u003e\n\u003cli\u003eUse Suspense + Cache to fetch and store data\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e⚠  \u003cstrong\u003eWARNING\u003c/strong\u003e : Wait on this tip because data normalization \u0026amp; validation features are missing (but coming).\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"miscellaneous-tips\" href=\"#miscellaneous-tips\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Miscellaneous Tips\n\u003c/h3\u003e\n\n\u003col\u003e\n\u003cli\u003eMake a plan\u003c/li\u003e\n\u003cli\u003eBudget available extra time.\u003c/li\u003e\n\u003cli\u003eRefactor only when necessary and do not refactor everything at once.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"dont-rewrite-your-app-at-all\" href=\"#dont-rewrite-your-app-at-all\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🙅 Don’t rewrite your app at all\n\u003c/h2\u003e\n\n\u003cp\u003eJared has stressed this 4 times at\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e31:20\u003c/li\u003e\n\u003cli\u003e37:33\u003c/li\u003e\n\u003cli\u003e44:25\u003c/li\u003e\n\u003cli\u003e45:31\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"%F0%9F%8F%94-resources\" href=\"#%F0%9F%8F%94-resources\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🏔 Resources\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://reactpodcast.simplecast.fm/29\"\u003eReact Podcast #29\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://twitter.com/chantastic\"\u003eChantastic\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://palmer.net/\"\u003eJared Palmer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://github.com/sw-yx/fresh-concurrent-react\"\u003efresh-concurrent-react\u003c/a\u003e – Up-to-date Concurrent React documentation by \u003ca href=\"https://twitter.com/swyx\"\u003eSwyx\u003c/a\u003e. (Not an official documentation but Swyx keeps it “fresh” 🍅.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/11/21/react-podcast-episode-29-show-note/\"\u003eReact Podcast Episode 29 – “Don’t Rewrite Your App for Hooks and Suspense” with Jared Palmer\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: Show Note for React Podcast Episode 29 –  “Don’t Rewrite Your App for Hooks and Suspense” with Jared Palmer\r\npublished: true\r\ntags: React,Show Note,podcast\r\ncanonical_url: https://www.slightedgecoder.com/2018/11/21/react-podcast-episode-29-show-note/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/c670u0igcoav0ku4mg41.jpg\r\nseries: React Podcast Show Notes\r\n---\r\n\r\n_Photo by [Kai Pilger](https://unsplash.com/photos/1k3vsv7iIIc?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_\r\n\r\nMore exciting features coming to React discussed in [React Podcast episode #29](https://reactpodcast.simplecast.fm/29).\r\n\r\n[Chantastic](https://twitter.com/chantastic) discussed Hooks \u0026 Suspense features with [Jared Palmer](https://palmer.net/)‘s demo before React Conf 2018.\r\n\r\n**DISCLAIMER** : _Below is an unofficial show note highlighting discussions as I am not affiliated with podcast, just an avid listener :)._\r\n\r\n## 📑 Table of Contents\r\n\r\n- [Hooks](#hooks)\r\n- [Suspense](#suspense)\r\n- [Suspense + Cache](#suspense-cache)\r\n- [Reiteration](#reiteration)\r\n- [Next Challenge](#next-challenge)\r\n- [Chantastic’s Insight](#chantastics-insight)\r\n- [Upgrade Tips](#upgrade-tips)\r\n- [Don’t rewrite your app at all](#dont-rewrite-your-app-at-all)\r\n- [Resources](#%F0%9F%8F%94-resources)\r\n\r\n## ⚓ Hooks\r\n\r\n\r\n### 🔹 Fundamentally replaces Render Props\r\n\r\n- [Render Props](https://reactjs.org/docs/render-props.html) can cause a [callback hell](https://twitter.com/acdlite/status/955955121979969537) caused by chaining multiple Render Props( prevalent in node).\r\n- Hooks solve the overly nested code using a plain old JavaScript functions.\r\n\r\n### 🔹 React going all-in with JavaScript because\r\n\r\n1. It’s easy to test\r\n2. Everything is in scope\r\n\r\n**Sung’s note** : because class components would require you to access states using `this` \u0026 many new people suffer from not knowing to bind methods with current instance’s `this` like `this.method.bind(this)`?_\r\n\r\n### 🔹 TypeScript\r\n\r\nLess code is required\r\n\r\n1. as it removes the need to create interfaces for props and states for class components.\r\n2. And with initial value of `useState` TypeScript can infer the type of state returned as the first argument in the returned tuple (helps autocomplete feature in editors).\r\n3. Makes it easy to move states around.\r\n\r\n### 🔹 Other Benefits\r\n\r\n- You can use plain function syntax without transpiling.\r\n- Read [Hooks documentation](http://reactjs.org/hooks) top to bottom without skipping\r\n\r\n### 🔹 Possible drawback\r\n\r\nLearning curve could be an issue because this is a new feature thus requires you to remember “bunch of stuff”.\r\n\r\nBut once you get over the hurdle it’s great because\r\n\r\n1. You can easily refactor states.\r\n2. You have a choice to put new state(s) in component or elsewhere.\r\n\r\nJared is optimistic about Hooks’ future and considers it the next logical step to take for React.\r\n\r\n## 🌉 Suspense\r\n\r\n### 🔹 What is it about?\r\n\r\nSuspense is about an “efficient loading of resources”.\r\n\r\n### 🔹 Loading State Problem\r\n\r\nOn fast connection, users prefer not to see a janky loading screens but on a slow connection they’d like to see it.\r\n\r\nSpeed, performance, and UX (User Experience) directly conflict with each other in this case because\r\n\r\n- According to a UX research, user do not perceive the speed difference when a change occurs in 200~400ms.\r\n- Showing a loading spinner during that period makes user to feel it as janky on a fast connection but would like to know something is happening when the threshold is reached.\r\n\r\nShowing nothing still doesn’t solve a problem as you still have to check of the loading state.\r\n\r\nMany attempts were made to address the issue (lazy load data, assets, etc)   \r\nbut they still don’t react to (slow/fast) network.\r\n\r\n### 🔹 How does Suspense work?\r\n\r\nSuspense allows you where to pause rendering while other components wait for resources.\r\n\r\nWhen a resource arrives React can continue to render or else Suspense can show a fallback content.\r\n\r\nSuspense literally stops time from happening.\r\n\r\n### 🔹 How does it help?\r\n\r\nSuspense enables us to orchestrate fallback declaratively.\r\n\r\n- This enables us to remove loading states and imperative checks.\r\n- You just tell React where to suspend/wait (DOM mutation is paused during this phase).\r\n\r\nSuspense can make loading dynamic components easy.\r\n\r\n1. We can lazily load components using [React.lazy](https://reactjs.org/docs/code-splitting.html#reactlazy) by wrapping it in Suspense telling React to pause until the component is resolved.\r\n2. If it takes longer than a certain threshold, Suspense displays a fallback.\r\n3. This solves speed, performance, and UX issue mentioned in the problem statement above.\r\n\r\n### 🔹 How to handle Suspense errors\r\n\r\nUse [Error Boundaries](https://reactjs.org/docs/code-splitting.html#error-boundaries).\r\n\r\n### 🔹 Concurrent Mode\r\n\r\nPrerequisite is that your app needs to pass a [strict mode](https://reactjs.org/docs/strict-mode.html) by fixing all warning generated when you wrap your app using `\u003cReact.StrictMode /\u003e`.\r\n\r\nOnce your app passes the strict mode, you can replace [ReactDOM.render](https://reactjs.org/docs/react-dom.html#render) with [ReactDOM.createRoot](https://github.com/sw-yx/fresh-concurrent-react/blob/master/apis/roots.md#reactdomcreateroot-and-rootrender), which you returns an object and call render on.\r\n\r\n### 🔹 What if you can’t pass Strict Mode test?\r\n\r\nYou can still use Concurrent Mode by\r\n\r\n1. identifying React tree where strict mode passes\r\n2. and wrapping that portion of tree in [React.ConcurrentMode](https://github.com/sw-yx/fresh-concurrent-react/blob/master/Intro.md#getting-started-with-concurrentmode).\r\n\r\n_This enables an incremental adoption._\r\n\r\n### 🔹 Outside of Concurrent Mode?\r\n\r\nIf Suspense is used outside concurrent mode, Suspense will fallback right away while child component is still loading itself.\r\n\r\nYou still get janks but with less code as it rids of loading state used in imperative code.\r\n\r\nBenefits of using Suspense outside of Concurrent Mode are\r\n\r\n1. A better DX (Developer Experience)\r\n2. and it slowly prepares your app for the better UX.\r\n\r\n## 🌉 Suspense + 💲 Cache\r\n\r\nData fetching is simplified when combined with cache thanks to how Suspense works because everything (_wasn’t clear. Did Jared mean states? or components?_) is always defined.\r\n\r\nWhen everthing (_?_) is defined, TypeScript would not require partial classes (_I need some feedback on this as I am a TS newbie…_).\r\n\r\nCoupling Hooks with Suspense + Cache, you can access asynchronous code as if it is a synchronous one providing a better readability.\r\n\r\nThis combination also solves [waterfall issue](https://www.quora.com/What-is-waterfall-problem) of component state dependency orchestration (case where next components need to wait when previous ones are loaded).\r\n\r\n### 🔹 Example\r\n\r\nSiblings of a single Suspense run in parallel.\r\n\r\n{% gist https://gist.github.com/dance2die/a2ea846b6e5e89e157e6655854362993 %}\r\n\r\nIn the code above, Component1 \u0026 2 run in parallel.  \r\nSimilar concept as how [Promise.all](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all) runs promises in parallel.\r\n\r\n**Caveat** : Nested components in Suspense are going to run with waterfall.  \r\n_**Sung’s Note** : Not sure how this works exactly…_\r\n\r\nAnd you can nest Suspense within each other infinitely.\r\n\r\n### 🔹 Use Cases\r\n\r\n1. Using a low quality image place holder while a high res version is loading.\r\n  - Wrap regular image component in Suspense.\r\n  - Regular image will be fetched while Suspense displays a low quality image as a fallback until the high resolution resource becomes available in cache.\r\n2. Loading external 3rd party payment script.\r\n  - You can enable check out button only when [Stripe](https://stripe.com/docs/api) script is loaded.\r\n3. You can load next component to load ahead of time to enable a transition effect.\r\n4. For SSR (server-side rendering), you have to know what data your components need ahead of time.\r\n  - This forces Apollo to traverse React tree twice (  \r\nComponents have to figure out what data they need so React is going to render without data and then with data).\r\n  - This slows down the SSR page.\r\n  - In later cache implementations, React tree can be walked down only once but not yet “quite there, yet”.\r\n\r\n### 🔹 Cache\r\n\r\nIt is just a [reference implementation](https://github.com/facebook/react/blob/ce96e2df4d/packages/react-cache/src/ReactCache.js) how it can hook into React.\r\n\r\nData normalization \u0026 validation features are missing (but coming).\r\n\r\n## ➿ Reiteration\r\n\r\nSuspense is about efficiently orchestrating resources.\r\n\r\n_providing **both** good DX  \u0026 UX_\r\n\r\nYou can put anything (images, components, data, etc) in Cache\r\n\r\n_providing a better UX_\r\n\r\nReact lets us describe “what” you want to do, not “how” you want to do.\r\n\r\n_Refer to the “declarative” loading states using Suspense._\r\n\r\n## 🥊 Next Challenge\r\n\r\nAnimation is the next challenge and JP considers it’s an unsolved problem.\r\n\r\n## 🤔 Chantastic’s Insight\r\n\r\nReact team is making “right thing easy” to do with Suspense’s `maxDuration` (the threshold time for the fallback).\r\n\r\nIt makes taking care of the `3rd state` (network state where loading data takes long or short) between “loading” state and “data” state.\r\n\r\n## 📈 Upgrade Tips\r\n\r\nIncrementally adopt these new features, instead because React is always incrementally adoptable \u0026 improvable.\r\n\r\n**_e.g.)_** Suspense can be used in concurrent mode for\r\n\r\n1. the whole app (with `ReactDOM.createRoot`)\r\n2. partially (using `React.ConcurrentMode`)\r\n3. or outside concurrent mode\r\n\r\nFocus on movement not migration.\r\n\r\n1. Use `React.lazy` for code splitting\r\n2. Manage assets using cache to orchestrate loading \u0026 caching resources\r\n3. Use Suspense + Cache to fetch and store data\r\n\r\n⚠  **WARNING** : Wait on this tip because data normalization \u0026 validation features are missing (but coming).\r\n\r\n### 🔹 Miscellaneous Tips\r\n\r\n1. Make a plan\r\n2. Budget available extra time.\r\n3. Refactor only when necessary and do not refactor everything at once.\r\n\r\n## 🙅 Don’t rewrite your app at all\r\n\r\nJared has stressed this 4 times at\r\n\r\n1. 31:20\r\n2. 37:33\r\n3. 44:25\r\n4. 45:31\r\n\r\n## 🏔 Resources\r\n\r\n- [React Podcast #29](https://reactpodcast.simplecast.fm/29)\r\n- [Chantastic](https://twitter.com/chantastic)\r\n- [Jared Palmer](https://palmer.net/)\r\n- [fresh-concurrent-react](https://github.com/sw-yx/fresh-concurrent-react) – Up-to-date Concurrent React documentation by [Swyx](https://twitter.com/swyx). (Not an official documentation but Swyx keeps it “fresh” 🍅.\r\n\r\n_The post [React Podcast Episode 29 – “Don’t Rewrite Your App for Hooks and Suspense” with Jared Palmer](https://www.slightedgecoder.com/2018/11/21/react-podcast-episode-29-show-note/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com)._",
    "canonical_url": "https://www.slightedgecoder.com/2018/11/21/react-podcast-episode-29-show-note/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/11/21/react-podcast-episode-29-show-note/",
    "positive_reactions_count": 11,
    "edited_at": "2018-12-11T03:08:02.853Z",
    "crossposted_at": "2018-11-22T03:25:04.799Z",
    "language": null,
    "cached_tag_list": "react, shownote, podcast",
    "path": "/dance2die/show-note-for-react-podcast-episode-29---dont-rewrite-your-app-for-hooks-and-suspense-with-jared-palmer-36j5",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-11-22T02:09:06.000Z"
  },
  {
    "title": "You don’t always need to import React",
    "slug": "you-dont-always-need-to-import-react-3phn",
    "created_at": "2018-11-26T20:20:55.537Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/xwo42kjc1jdqk5go2xy3.jpg",
    "description": "\n\nr/reactjs has a Weekend Reads, which is a “‘book club’ type thing where we read...",
    "published": true,
    "published_at": "2018-11-26T19:38:56.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003ca href=\"https://www.reddit.com/r/reactjs/\"\u003er/reactjs\u003c/a\u003e has a Weekend Reads, which is a “‘book club’ type thing where we read something every weekend”.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.reddit.com/r/reactjs/comments/9zw638/weekend_reads_react_docs_on_jsx_in_depth/\"\u003eLast week’s topic\u003c/a\u003e was \u003ca href=\"https://reactjs.org/docs/jsx-in-depth.html\"\u003eJSX In Depth\u003c/a\u003e, and I would like to share something that’s been bothering me but learned why.\u003c/p\u003e\n\n\u003cp\u003eThe question is “why do you import React” when “React” is not used anywhere in your component code?\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"intro\" href=\"#intro\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🎶 Intro\n\u003c/h2\u003e\n\n\u003cp\u003eWhen you start learning react, you might been told to always import React, \u003ccode\u003eimport React from \"React\"\u003c/code\u003e in your component file.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eBut that’s not always necessary.\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eTo understand why, let’s see what JSX is.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"jsx\" href=\"#jsx\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🤔 JSX?\n\u003c/h2\u003e\n\n\u003cp\u003eThe subtitle in \u003ca href=\"https://reactjs.org/docs/jsx-in-depth.html\"\u003eJSX in Depth\u003c/a\u003e describes JSX as\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eFundamentally, JSX just provides syntactic sugar for the \u003ccode\u003eReact.createElement(component, props, ...children)\u003c/code\u003e function\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eYou can either use the JSX syntatic sugar  🍬 to create components or use \u003ccode\u003eReact.createElement\u003c/code\u003e directly if you are not transpiling your source code.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"then-shouldnt-you-import-react-everywhere\" href=\"#then-shouldnt-you-import-react-everywhere\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🙄 Then shouldn’t you import React everywhere?\n\u003c/h2\u003e\n\n\u003cp\u003eNo. not unless you use React object for your component.\u003c/p\u003e\n\n\u003cp\u003eYou can create a \u003ca href=\"https://reactjs.org/docs/components-and-props.html#function-and-class-components\"\u003e\u003cstrong\u003e“function”\u003c/strong\u003e component\u003c/a\u003e that returns value(s) of a simple JavaScript primitives, such as string or number.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/9202791c070d40ac3274731ab762e587.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eThat is the full source for \u003ccode\u003eApp.js\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eIn this case, \u003ccode\u003eReact\u003c/code\u003e object is not used anywhere so you can leave out the import statement (but still is a valid component).\u003c/p\u003e\n\n\u003cp\u003e📒 \u003cem\u003eNote: If you are creating a \u003cstrong\u003eclass\u003c/strong\u003e component, you need to import React as it needs to extend\u003c/em\u003e \u003ccode\u003eReact.Component\u003c/code\u003e\u003cem\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eAnd then you can import \u003ccode\u003eApp.js\u003c/code\u003e just like any React component (Line #4).\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/833e1c1977ef11b10ce59fbbb3ea1bb8.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👋 Parting Words\n\u003c/h2\u003e\n\n\u003cp\u003eI hope this has solved for the need to import React for components.\u003c/p\u003e\n\n\u003cp\u003e\u003cdel\u003e99% of the time, you’d use React object in someway to create a component so probably a good idea to import React anyway\u003c/del\u003e\u003cbr\u003e\n☝ \u003ca href=\"https://www.reddit.com/r/reactjs/comments/a0ms8s/you_dont_always_need_to_import_react_sungs/eaivaip\"\u003eForget about this\u003c/a\u003e...😅\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"%F0%9F%8F%94-resources\" href=\"#%F0%9F%8F%94-resources\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🏔 Resources\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.reddit.com/r/reactjs/search?q=flair_name%3A%22Weekend%20Reads%22\u0026amp;restrict_sr=1\"\u003eWeekend Reads\u003c/a\u003e on \u003ca href=\"https://www.reddit.com/r/reactjs/\"\u003er/reactjs\u003c/a\u003e – One article per week.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://reactjs.org/docs/jsx-in-depth.html\"\u003eJSX in Depth\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSee how \u003ca href=\"https://babeljs.io/repl\"\u003eBabelJS transpiles JSX\u003c/a\u003e – Just paste your React code in it.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://codesandbox.io/s/71wv195okj\"\u003eDemo Sandbox\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/11/26/you-dont-always-need-to-import-react/\"\u003eYou don’t always need to import React\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: You don’t always need to import React\r\npublished: true\r\ntags: react\r\ncanonical_url: https://www.slightedgecoder.com/2018/11/26/you-dont-always-need-to-import-react/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/xwo42kjc1jdqk5go2xy3.jpg\r\n---\r\n\r\n[r/reactjs](https://www.reddit.com/r/reactjs/) has a Weekend Reads, which is a “‘book club’ type thing where we read something every weekend”.\r\n\r\n[Last week’s topic](https://www.reddit.com/r/reactjs/comments/9zw638/weekend_reads_react_docs_on_jsx_in_depth/) was [JSX In Depth](https://reactjs.org/docs/jsx-in-depth.html), and I would like to share something that’s been bothering me but learned why.\r\n\r\nThe question is “why do you import React” when “React” is not used anywhere in your component code?\r\n\r\n## 🎶 Intro\r\n\r\nWhen you start learning react, you might been told to always import React, `import React from \"React\"` in your component file.\r\n\r\n**_But that’s not always necessary._**\r\n\r\nTo understand why, let’s see what JSX is.\r\n\r\n## 🤔 JSX?\r\n\r\nThe subtitle in [JSX in Depth](https://reactjs.org/docs/jsx-in-depth.html) describes JSX as\r\n\r\n\u003e Fundamentally, JSX just provides syntactic sugar for the `React.createElement(component, props, ...children)` function\r\n\r\nYou can either use the JSX syntatic sugar  🍬 to create components or use `React.createElement` directly if you are not transpiling your source code.\r\n\r\n## 🙄 Then shouldn’t you import React everywhere?\r\n\r\nNo. not unless you use React object for your component.\r\n\r\nYou can create a [**“function”** component](https://reactjs.org/docs/components-and-props.html#function-and-class-components) that returns value(s) of a simple JavaScript primitives, such as string or number.\r\n\r\n{% gist https://gist.github.com/dance2die/9202791c070d40ac3274731ab762e587 %}\r\n\r\nThat is the full source for `App.js`.\r\n\r\nIn this case, `React` object is not used anywhere so you can leave out the import statement (but still is a valid component).\r\n\r\n📒 _Note: If you are creating a **class** component, you need to import React as it needs to extend_ `React.Component`_._\r\n\r\nAnd then you can import `App.js` just like any React component (Line #4).\r\n\r\n{% gist https://gist.github.com/dance2die/833e1c1977ef11b10ce59fbbb3ea1bb8 %}\r\n\r\n## 👋 Parting Words\r\n\r\nI hope this has solved for the need to import React for components.\r\n\r\n~~99% of the time, you’d use React object in someway to create a component so probably a good idea to import React anyway~~\r\n☝ [Forget about this](https://www.reddit.com/r/reactjs/comments/a0ms8s/you_dont_always_need_to_import_react_sungs/eaivaip)...😅\r\n\r\n\r\n\r\n\r\n## 🏔 Resources\r\n\r\n- [Weekend Reads](https://www.reddit.com/r/reactjs/search?q=flair_name%3A%22Weekend%20Reads%22\u0026restrict_sr=1) on [r/reactjs](https://www.reddit.com/r/reactjs/) – One article per week.\r\n- [JSX in Depth](https://reactjs.org/docs/jsx-in-depth.html)\r\n- See how [BabelJS transpiles JSX](https://babeljs.io/repl) – Just paste your React code in it.\r\n- [Demo Sandbox](https://codesandbox.io/s/71wv195okj)\r\n\r\n_The post [You don’t always need to import React](https://www.slightedgecoder.com/2018/11/26/you-dont-always-need-to-import-react/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com)._",
    "canonical_url": "https://www.slightedgecoder.com/2018/11/26/you-dont-always-need-to-import-react/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 13,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/11/26/you-dont-always-need-to-import-react/",
    "positive_reactions_count": 16,
    "edited_at": "2018-11-26T20:45:02.433Z",
    "crossposted_at": "2018-11-26T20:31:21.296Z",
    "language": null,
    "cached_tag_list": "react",
    "path": "/dance2die/you-dont-always-need-to-import-react-3phn",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-10-25T03:29:40.940Z"
  },
  {
    "title": "About Lazy loading Ant Design Components overriding custom CSS",
    "slug": "about-lazy-loading-ant-design-components-overriding-custom-css-e1i-temp-slug-6597726",
    "created_at": "2018-12-02T17:44:44.450Z",
    "main_image": null,
    "description": "\n\nPhoto by [_Vlad Tchompalov](https://unsplash.com/photos/dQkXoqQLn40?utm_source=...",
    "published": false,
    "published_at": "2018-12-01T20:02:35.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003cem\u003e[_Vlad Tchompalov\u003c/em\u003e](\u003ca href=\"https://unsplash.com/photos/dQkXoqQLn40?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003ehttps://unsplash.com/photos/dQkXoqQLn40?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\u003c/a\u003e)\u003c/em\u003e on \u003cem\u003e[_Unsplash\u003c/em\u003e](\u003ca href=\"https://unsplash.com/?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003ehttps://unsplash.com/?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\u003c/a\u003e)\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--6PMNlNGF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f3b5.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--6PMNlNGF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f3b5.png\" alt=\"🎵\"\u003e\u003c/a\u003e _ \u003cstrong\u003eNote to self…\u003c/strong\u003e _\u003c/p\u003e\n\n\u003cp\u003eUpgraded \u003ca href=\"https://bunpkg.com/\"\u003eBunpkg\u003c/a\u003e React version to v16.6.x (actually v16.7.0-alpha2 to play around with \u003ca href=\"https://reactjs.org/hooks\"\u003eReact Hooks\u003c/a\u003e  \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--t0fao1mQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/2693.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--t0fao1mQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/2693.png\" alt=\"⚓\"\u003e\u003c/a\u003e as well \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--7LeiZERL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f600.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--7LeiZERL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f600.png\" alt=\"😀\"\u003e\u003c/a\u003e), which enables support for \u003ca href=\"https://reactjs.org/docs/code-splitting.html#reactlazy\"\u003eReact.lazy\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eBut lazy loading \u003ca href=\"https://ant.design/\"\u003eAnt Design\u003c/a\u003e (AntD, hereafter) components broke the custom CSS imported from the root component using CSS import.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TxF6dnRf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f914.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TxF6dnRf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f914.png\" alt=\"🤔\"\u003e\u003c/a\u003e Problem\u003c/p\u003e\n\n\u003cp\u003eCustom CSS styles applied on AntD components were not reflected after deploying the site on \u003ca href=\"https://bunpkg-hooks.netlify.com/\"\u003eNetlify\u003c/a\u003e even though it was working in development mode.\u003c/p\u003e\n\n\u003cp\u003eCustom \u003ca href=\"https://github.com/dance2die/bunpkg-client/blob/master/src/styles.css\"\u003estyles.css\u003c/a\u003e was loaded in the root component.\u003cbr\u003e\u003cbr\u003e\nAnd below is the custom CSS in \u003ca href=\"https://github.com/dance2die/bunpkg-client/commit/4ee940ea14269a9ac85aa6080d5405cf089504cc#diff-1fdf421c05c1140f6d71444ea2b27638\"\u003eindex.js\u003c/a\u003e was imported.\u003c/p\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/81217485264ccab442ad58026f245433\"\u003eView this gist on GitHub\u003c/a\u003e\n\n\u003cp\u003eAnd “*Step” components (for Wizard) were lazily imported as shown below.\u003c/p\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/ea0b127fd9a13a274f70b6a8b9afe952\"\u003eView this gist on GitHub\u003c/a\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Ivf0_qlO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/step-components.jpg%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Ivf0_qlO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/step-components.jpg%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003cfigcaption\u003eRendered Step Components\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--gd7glr-r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f4ca.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--gd7glr-r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f4ca.png\" alt=\"📊\"\u003e\u003c/a\u003e Analysis\u003c/p\u003e\n\n\u003cp\u003eThe reason for the different way of import was due to Ant Design’s \u003ca href=\"https://github.com/ant-design/babel-plugin-import\"\u003ebabel-plugin-import\u003c/a\u003e automatically optimizing CSS/Component imports.\u003c/p\u003e\n\n\u003cp\u003eAfter monitoring the rendered tree \u0026amp; network tab in Chrome devtool, I saw new CSS chunks were being loaded when accessing new Wizard step components.\u003c/p\u003e\n\n\u003cp\u003eWhat I realized is that AntD components had its own CSS-in-JS, thus lazily loading AntD components loaded CSS after my custom CSS in the head, overriding my style in result.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s---9LGDRV7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f477.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s---9LGDRV7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f477.png\" alt=\"👷\"\u003e\u003c/a\u003e What I did…\u003c/p\u003e\n\n\u003cp\u003eI am still researching but can’t figure out how to import CSS in React and keep it as the last style loaded.\u003c/p\u003e\n\n\u003cp\u003eSo the workaround I adopted was to move \u003ccode\u003estyles.css\u003c/code\u003e to a static file location (\u003ccode\u003epublic/\u003c/code\u003e) and imported it in the body (as CSS-in-JS chunks were loaded in the head).\u003c/p\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/7a47a15b719a3cf2b2a7979306b04ded\"\u003eView this gist on GitHub\u003c/a\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/12/01/about-lazy-loading-ant-design-components-overriding-custom-css/\"\u003eAbout Lazy loading Ant Design Components overriding custom CSS\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: About Lazy loading Ant Design Components overriding custom CSS\npublished: false\ntags: Problem Solving,Programming,React,Self Note\ncanonical_url: https://www.slightedgecoder.com/2018/12/01/about-lazy-loading-ant-design-components-overriding-custom-css/\n---\n\n_Photo by _[_Vlad Tchompalov_](https://unsplash.com/photos/dQkXoqQLn40?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_ on _[_Unsplash_](https://unsplash.com/?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)\n\n![🎵](https://s.w.org/images/core/emoji/11/72x72/1f3b5.png) _ **Note to self…** _\n\nUpgraded [Bunpkg](https://bunpkg.com/) React version to v16.6.x (actually v16.7.0-alpha2 to play around with [React Hooks](https://reactjs.org/hooks)  ![⚓](https://s.w.org/images/core/emoji/11/72x72/2693.png) as well ![😀](https://s.w.org/images/core/emoji/11/72x72/1f600.png)), which enables support for [React.lazy](https://reactjs.org/docs/code-splitting.html#reactlazy).\n\nBut lazy loading [Ant Design](https://ant.design/) (AntD, hereafter) components broke the custom CSS imported from the root component using CSS import.\n\n##   \n ![🤔](https://s.w.org/images/core/emoji/11/72x72/1f914.png) Problem\n\nCustom CSS styles applied on AntD components were not reflected after deploying the site on [Netlify](https://bunpkg-hooks.netlify.com/) even though it was working in development mode.\n\nCustom [styles.css](https://github.com/dance2die/bunpkg-client/blob/master/src/styles.css) was loaded in the root component.   \nAnd below is the custom CSS in [index.js](https://github.com/dance2die/bunpkg-client/commit/4ee940ea14269a9ac85aa6080d5405cf089504cc#diff-1fdf421c05c1140f6d71444ea2b27638) was imported.\n\n\u003cscript src=\"https://gist.github.com/dance2die/81217485264ccab442ad58026f245433.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/81217485264ccab442ad58026f245433\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\n\nAnd “\\*Step” components (for Wizard) were lazily imported as shown below.\n\n\u003cscript src=\"https://gist.github.com/dance2die/ea0b127fd9a13a274f70b6a8b9afe952.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/ea0b127fd9a13a274f70b6a8b9afe952\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/step-components.jpg?w=1170\u0026ssl=1)\u003cfigcaption\u003eRendered Step Components\u003c/figcaption\u003e\n\n##   \n ![📊](https://s.w.org/images/core/emoji/11/72x72/1f4ca.png) Analysis\n\nThe reason for the different way of import was due to Ant Design’s [babel-plugin-import](https://github.com/ant-design/babel-plugin-import) automatically optimizing CSS/Component imports.\n\nAfter monitoring the rendered tree \u0026 network tab in Chrome devtool, I saw new CSS chunks were being loaded when accessing new Wizard step components.\n\nWhat I realized is that AntD components had its own CSS-in-JS, thus lazily loading AntD components loaded CSS after my custom CSS in the head, overriding my style in result.\n\n##   \n ![👷](https://s.w.org/images/core/emoji/11/72x72/1f477.png) What I did…\n\nI am still researching but can’t figure out how to import CSS in React and keep it as the last style loaded.\n\nSo the workaround I adopted was to move `styles.css` to a static file location (`public/`) and imported it in the body (as CSS-in-JS chunks were loaded in the head).\n\n\u003cscript src=\"https://gist.github.com/dance2die/7a47a15b719a3cf2b2a7979306b04ded.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/7a47a15b719a3cf2b2a7979306b04ded\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\n\nThe post [About Lazy loading Ant Design Components overriding custom CSS](https://www.slightedgecoder.com/2018/12/01/about-lazy-loading-ant-design-components-overriding-custom-css/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/12/01/about-lazy-loading-ant-design-components-overriding-custom-css/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/12/01/about-lazy-loading-ant-design-components-overriding-custom-css/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": null,
    "cached_tag_list": "problemsolving, programming, react, selfnote",
    "path": "/dance2die/about-lazy-loading-ant-design-components-overriding-custom-css-e1i-temp-slug-6597726",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-12-01T20:02:35.000Z"
  },
  {
    "title": "Immutability makes tracking changes cheap",
    "slug": "immutability-makes-tracking-changes-cheap-4g19",
    "created_at": "2018-12-02T17:44:46.685Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/udvk79ovq50uuqjiyu0l.jpg",
    "description": "\n\nPhoto by Joeri Römer on Unsplash\n\nNote to self\n(Meaning, a bit sloppy \u0026amp; is ...",
    "published": true,
    "published_at": "2018-12-02T17:02:57.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/Xne1N4yZuOY?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eJoeri Römer\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/boulder?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003e\u003cstrong\u003eNote to self\u003c/strong\u003e\u003c/em\u003e\u003cbr\u003e\n(Meaning, a bit sloppy \u0026amp; is a note to myself but wanted to share still)\u003c/p\u003e\n\n\u003cp\u003eLast week’s Weekend Reads topic in \u003ca href=\"https://www.reddit.com/r/reactjs\"\u003er/reactjs\u003c/a\u003e was \u003ca href=\"https://reactjs.org/docs/optimizing-performance.html\"\u003eReact Docs on Optimizing Performance\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eAn ah-ha moment when reading the article regarding immutability.\u003c/p\u003e\n\n\u003cp\u003eSuppose that you have a component, \u003ccode\u003ePost\u003c/code\u003e that has to render a comment thread like this.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Qyv3Y8LH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/reddit-comments.jpg%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Qyv3Y8LH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/reddit-comments.jpg%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003cfigcaption\u003e\u003cem\u003eReddit Post:\u003c/em\u003e \u003ca href=\"https://www.reddit.com/r/AskReddit/comments/a26y06/whats_a_joke_thats_so_stupid_its_funny/\"\u003e\u003cem\u003eWhat’s a joke that’s so stupid it’s funny?\u003c/em\u003e\u003c/a\u003e\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eAnd the state tree would look like below.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--22bdoFQA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/comment-tree.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--22bdoFQA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/comment-tree.png%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003cfigcaption\u003ePost state tree\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eWhen JavaScript compares two values, primitive type (number, string, boolean, etc) comparisons shown in the state tree, such as \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003edate\u003c/code\u003e, \u003ccode\u003eauthor\u003c/code\u003e, are cheap.\u003c/p\u003e\n\n\u003cp\u003eWhen you have to compare object type states, a comparison is done \u003cem\u003e\u003cstrong\u003eby reference\u003c/strong\u003e\u003c/em\u003e. \u003c/p\u003e\n\n\u003cp\u003eSo if someone has modified one of the items in \u003ccode\u003ecomments\u003c/code\u003e array, you have to traverse every item in the comment to find out if anything has changed.\u003c/p\u003e\n\n\u003cp\u003e          It’s an \u003ccode\u003eO(n)\u003c/code\u003e operation process thus it’s slow 🦄.\u003c/p\u003e\n\n\u003cp\u003eBut if you had returned a new \u003ccode\u003ecomments\u003c/code\u003e array (using Object.assign or object spread, {…}) then reference has changed, thus you know that something has changed.\u003c/p\u003e\n\n\u003cp\u003e          Now it’s an \u003ccode\u003eO(1)\u003c/code\u003e operation, blazing fast 🏎.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"til\" href=\"#til\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  TIL\n\u003c/h2\u003e\n\n\u003cp\u003eIf your state is immutable, then React can reconcile which state to update cheaply.\u003c/p\u003e\n\n\u003cp\u003eYou can still override \u003ca href=\"https://reactjs.org/docs/react-component.html#shouldcomponentupdate\"\u003eshouldComponentUpdate\u003c/a\u003e if you need need more control.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"resources\" href=\"#resources\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Resources\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://reactjs.org/docs/optimizing-performance.html\"\u003eOptimizing Performance\u003c/a\u003e – Official React Documentation\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.reddit.com/r/reactjs/comments/a1y5ej/weekend_reads_react_docs_on_optimizing_performance/\"\u003e[Weekend Reads] React Docs on Optimizing Performance\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://vimeo.com/album/3953264/video/166790294\"\u003eImmutable User Interface\u003c/a\u003e – Lee Byron in Render 2018\n\n\u003cul\u003e\n\u003cli\u003eHaven’t finished watching it, yet\u003c/li\u003e\n\u003cli\u003eJust found it from \u003ca href=\"https://twitter.com/dan_abramov/status/735530699231531008\"\u003eDan’s tweet\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/12/02/immutability-makes-tracking-changes-cheap/\"\u003eImmutability makes tracking changes cheap\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: Immutability makes tracking changes cheap\r\npublished: true\r\ntags: react,selfnote, todayilearned\r\ncanonical_url: https://www.slightedgecoder.com/2018/12/02/immutability-makes-tracking-changes-cheap/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/udvk79ovq50uuqjiyu0l.jpg\r\n---\r\n\r\n_Photo by [Joeri Römer](https://unsplash.com/photos/Xne1N4yZuOY?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/boulder?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_\r\n\r\n_**Note to self**_\r\n(Meaning, a bit sloppy \u0026 is a note to myself but wanted to share still)\r\n\r\nLast week’s Weekend Reads topic in [r/reactjs](https://www.reddit.com/r/reactjs) was [React Docs on Optimizing Performance](https://reactjs.org/docs/optimizing-performance.html).\r\n\r\nAn ah-ha moment when reading the article regarding immutability.\r\n\r\nSuppose that you have a component, `Post` that has to render a comment thread like this.\r\n\r\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/reddit-comments.jpg?w=1170\u0026ssl=1)\u003cfigcaption\u003e_Reddit Post:_ [_What’s a joke that’s so stupid it’s funny?_](https://www.reddit.com/r/AskReddit/comments/a26y06/whats_a_joke_thats_so_stupid_its_funny/)\u003c/figcaption\u003e\r\n\r\nAnd the state tree would look like below.\r\n\r\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/comment-tree.png?w=1170\u0026ssl=1)\u003cfigcaption\u003ePost state tree\u003c/figcaption\u003e\r\n\r\nWhen JavaScript compares two values, primitive type (number, string, boolean, etc) comparisons shown in the state tree, such as `id`, `date`, `author`, are cheap.\r\n\r\nWhen you have to compare object type states, a comparison is done _**by reference**_. \r\n\r\nSo if someone has modified one of the items in `comments` array, you have to traverse every item in the comment to find out if anything has changed.\r\n\r\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;It’s an `O(n)` operation process thus it’s slow 🦄.\r\n\r\nBut if you had returned a new `comments` array (using Object.assign or object spread, {…}) then reference has changed, thus you know that something has changed.\r\n\r\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Now it’s an `O(1)` operation, blazing fast 🏎.\r\n\r\n## TIL\r\n\r\nIf your state is immutable, then React can reconcile which state to update cheaply.\r\n\r\nYou can still override [shouldComponentUpdate](https://reactjs.org/docs/react-component.html#shouldcomponentupdate) if you need need more control.\r\n\r\n## Resources\r\n\r\n- [Optimizing Performance](https://reactjs.org/docs/optimizing-performance.html) – Official React Documentation\r\n- [[Weekend Reads] React Docs on Optimizing Performance](https://www.reddit.com/r/reactjs/comments/a1y5ej/weekend_reads_react_docs_on_optimizing_performance/)\r\n- [Immutable User Interface](https://vimeo.com/album/3953264/video/166790294) – Lee Byron in Render 2018\r\n  - Haven’t finished watching it, yet\r\n  - Just found it from [Dan’s tweet](https://twitter.com/dan_abramov/status/735530699231531008).\r\n\r\n_The post [Immutability makes tracking changes cheap](https://www.slightedgecoder.com/2018/12/02/immutability-makes-tracking-changes-cheap/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com)._",
    "canonical_url": "https://www.slightedgecoder.com/2018/12/02/immutability-makes-tracking-changes-cheap/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 2,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/12/02/immutability-makes-tracking-changes-cheap/",
    "positive_reactions_count": 7,
    "edited_at": null,
    "crossposted_at": "2018-12-06T03:23:03.124Z",
    "language": null,
    "cached_tag_list": "react, selfnote, todayilearned",
    "path": "/dance2die/immutability-makes-tracking-changes-cheap-4g19",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-07-21T17:14:04.619Z"
  },
  {
    "title": "Setting React Hooks states in a sync-like manner?",
    "slug": "setting-react-hooks-states-in-a-sync-like-manner-2geg-temp-slug-1986684",
    "created_at": "2018-12-08T05:44:01.249Z",
    "main_image": null,
    "description": "\n\nPhoto by [_Martino Pietropoli](https://unsplash.com/photos/H8zix6ErdXg?utm_sour...",
    "published": false,
    "published_at": "2018-12-08T02:29:29.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003cem\u003e[_Martino Pietropoli\u003c/em\u003e](\u003ca href=\"https://unsplash.com/photos/H8zix6ErdXg?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003ehttps://unsplash.com/photos/H8zix6ErdXg?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\u003c/a\u003e)\u003c/em\u003e on \u003cem\u003e[_Unsplash\u003c/em\u003e](\u003ca href=\"https://unsplash.com/search/photos/serial?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003ehttps://unsplash.com/search/photos/serial?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\u003c/a\u003e)\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003e\u003cstrong\u003eNote \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--cKMmTKdW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f4dd.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--cKMmTKdW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f4dd.png\" alt=\"📝\"\u003e\u003c/a\u003e to self…\u003c/strong\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eWhen you have more than one states defined using \u003ccode\u003euseState\u003c/code\u003e and need to access updated state value sync-like manner…\u003c/p\u003e\n\n\u003cp\u003eI’ve asked \u003ca href=\"https://www.reddit.com/r/reactjs/comments/a2oxbv/beginners_thread_easy_questions_december_2018/eb06q9v/\"\u003ea question\u003c/a\u003e in r/reactjs about emulating a \u003ca href=\"https://reactjs.org/docs/react-component.html#setstate\"\u003ecallback of setState\u003c/a\u003e, which enables you to access updated state value.\u003c/p\u003e\n\n\u003cp\u003eShawn “\u003ca href=\"https://twitter.com/swyx\"\u003eswyx\u003c/a\u003e” Wang posted \u003ca href=\"https://www.reddit.com/r/reactjs/comments/a3y76f/react_hooks_setstate_gotcha/\"\u003eReact Hooks setState Gotcha\u003c/a\u003e, which addressed the same problem.\u003c/p\u003e\n\n\u003cp\u003eThe problem is that \u003ccode\u003euseState\u003c/code\u003e is an async method just like \u003ccode\u003esetState\u003c/code\u003e so that when you try to access a state value as shown below,\u003c/p\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/35416648292313d931c7bd6efb930fb8\"\u003eView this gist on GitHub\u003c/a\u003e\u003cfigcaption\u003eBuggy \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--cbDBvLK7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f41b.png\" alt=\"🐛\"\u003e one\u003cbr\u003e\u003c/figcaption\u003e\n\n\u003cp\u003e\u003cem\u003eTry it on\u003c/em\u003e \u003ca href=\"https://codesandbox.io/s/o2p0zpmyq\"\u003e\u003cem\u003eCodeSandbox\u003c/em\u003e\u003c/a\u003e\u003cem\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003emessage\u003c/code\u003e value will always contain a number differ by 1 from \u003ccode\u003ecount\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--i2sQKBdU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/2018-12-07_21-05-37.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--i2sQKBdU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/2018-12-07_21-05-37.gif%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003cfigcaption\u003eCount \u0026amp; message off by one\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eFirst Workaround\u003c/p\u003e\n\n\u003cp\u003eThe first workaround was to use \u003ccode\u003euseEffect\u003c/code\u003e to update the message.\u003c/p\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/a56bf566c110d0e74ac0696142ef8543\"\u003eView this gist on GitHub\u003c/a\u003e\u003cfigcaption\u003euseEffect\u003c/figcaption\u003e\n\n\u003cp\u003eBut Dan “gaeron” Abramov has \u003ca href=\"https://www.reddit.com/r/reactjs/comments/a3y76f/react_hooks_setstate_gotcha/ebaced5/\"\u003epointed out\u003c/a\u003e that\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis is unnecessary. Why add extra work like running an effect when you already know the next value? Instead, the recommended solution is to either use one variable instead of two (since one can be calculated from the other one, it seems), or to calculate next value first and update them both using it together. Or, if you’re ready to make the jump, \u003ccode\u003euseReducer\u003c/code\u003e helps avoid these pitfalls.\u003c/p\u003e\n\n\u003cp\u003e\u003ccite\u003eDan “gaeron” Abramov\u003c/cite\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe gist is that, \u003cstrong\u003e\u003cem\u003edon’t store calculated values\u003c/em\u003e\u003c/strong\u003e.\u003c/p\u003e\n\n\u003cp\u003e2nd Workaround\u003c/p\u003e\n\n\u003cp\u003eThe point of the Shawn \u0026amp; my problem was that we need to access the updated state value (kind of like in callback of \u003ccode\u003esetState\u003c/code\u003e).\u003c/p\u003e\n\n\u003cp\u003eSo I ended up created my own hook (don’t call it a “custom hook”), \u003ccode\u003euseAsyncState\u003c/code\u003e to mitigate the issue.\u003c/p\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/00383f3d98e62099b5ae1eefbd0913b8\"\u003eView this gist on GitHub\u003c/a\u003e\u003cfigcaption\u003euseAsyncState\u003c/figcaption\u003e\n\n\u003cp\u003e\u003cem\u003eTry it on\u003c/em\u003e \u003ca href=\"https://codesandbox.io/s/8y05v1vx3j\"\u003e\u003cem\u003eCodeSandbox\u003c/em\u003e\u003c/a\u003e\u003cem\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eI am using a promise, not accepting a callback as it makes code clunky possibly causing a callback hell.\u003c/p\u003e\n\n\u003cp\u003eAnd also with a setter promise, you can also use \u003ccode\u003easync/await\u003c/code\u003e syntax.\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/12/07/setting-react-hooks-states-in-a-sync-like-manner/\"\u003eSetting React Hooks states in a sync-like manner?\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Setting React Hooks states in a sync-like manner?\npublished: false\ntags: Problem Solving,Programming,React,Self Note\ncanonical_url: https://www.slightedgecoder.com/2018/12/07/setting-react-hooks-states-in-a-sync-like-manner/\n---\n\n_Photo by _[_Martino Pietropoli_](https://unsplash.com/photos/H8zix6ErdXg?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_ on _[_Unsplash_](https://unsplash.com/search/photos/serial?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)\n\n_**Note ![📝](https://s.w.org/images/core/emoji/11/72x72/1f4dd.png) to self…**_\n\nWhen you have more than one states defined using `useState` and need to access updated state value sync-like manner…\n\n \n\nI’ve asked [a question](https://www.reddit.com/r/reactjs/comments/a2oxbv/beginners_thread_easy_questions_december_2018/eb06q9v/) in r/reactjs about emulating a [callback of setState](https://reactjs.org/docs/react-component.html#setstate), which enables you to access updated state value.\n\nShawn “[swyx](https://twitter.com/swyx)” Wang posted [React Hooks setState Gotcha](https://www.reddit.com/r/reactjs/comments/a3y76f/react_hooks_setstate_gotcha/), which addressed the same problem.\n\nThe problem is that `useState` is an async method just like `setState` so that when you try to access a state value as shown below,\n\n\u003cscript src=\"https://gist.github.com/dance2die/35416648292313d931c7bd6efb930fb8.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/35416648292313d931c7bd6efb930fb8\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\u003cfigcaption\u003eBuggy \u003cimg src=\"https://s.w.org/images/core/emoji/11/72x72/1f41b.png\" alt=\"🐛\" style=\"height: 1em; max-height: 1em;\"\u003e one\u003cbr\u003e\u003c/figcaption\u003e\n\n_Try it on_ [_CodeSandbox_](https://codesandbox.io/s/o2p0zpmyq)_._\n\n`message` value will always contain a number differ by 1 from `count`.\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/2018-12-07_21-05-37.gif?w=1170\u0026ssl=1)\u003cfigcaption\u003eCount \u0026amp; message off by one\u003c/figcaption\u003e\n\n##   \nFirst Workaround\n\nThe first workaround was to use `useEffect` to update the message.\n\n\u003cscript src=\"https://gist.github.com/dance2die/a56bf566c110d0e74ac0696142ef8543.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/a56bf566c110d0e74ac0696142ef8543\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\u003cfigcaption\u003euseEffect\u003c/figcaption\u003e\n\nBut Dan “gaeron” Abramov has [pointed out](https://www.reddit.com/r/reactjs/comments/a3y76f/react_hooks_setstate_gotcha/ebaced5/) that\n\n\u003e This is unnecessary. Why add extra work like running an effect when you already know the next value? Instead, the recommended solution is to either use one variable instead of two (since one can be calculated from the other one, it seems), or to calculate next value first and update them both using it together. Or, if you’re ready to make the jump, `useReducer` helps avoid these pitfalls.\n\u003e \n\u003e \u003ccite\u003eDan “gaeron” Abramov\u003c/cite\u003e\n\nThe gist is that, **_don’t store calculated values_**.\n\n##   \n2nd Workaround\n\nThe point of the Shawn \u0026 my problem was that we need to access the updated state value (kind of like in callback of `setState`).\n\nSo I ended up created my own hook (don’t call it a “custom hook”), `useAsyncState` to mitigate the issue.\n\n\u003cscript src=\"https://gist.github.com/dance2die/00383f3d98e62099b5ae1eefbd0913b8.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/00383f3d98e62099b5ae1eefbd0913b8\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\u003cfigcaption\u003euseAsyncState\u003c/figcaption\u003e\n\n_Try it on_ [_CodeSandbox_](https://codesandbox.io/s/8y05v1vx3j)_._\n\nI am using a promise, not accepting a callback as it makes code clunky possibly causing a callback hell.\n\nAnd also with a setter promise, you can also use `async/await` syntax.\n\nThe post [Setting React Hooks states in a sync-like manner?](https://www.slightedgecoder.com/2018/12/07/setting-react-hooks-states-in-a-sync-like-manner/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/12/07/setting-react-hooks-states-in-a-sync-like-manner/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/12/07/setting-react-hooks-states-in-a-sync-like-manner/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": null,
    "cached_tag_list": "problemsolving, programming, react, selfnote",
    "path": "/dance2die/setting-react-hooks-states-in-a-sync-like-manner-2geg-temp-slug-1986684",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-12-08T02:29:29.000Z"
  },
  {
    "title": "React Podcast Episode 31 – “Hooks are Mixins” with Ryan Florence",
    "slug": "react-podcast-episode-31--hooks-are-mixins-with-ryan-florence-fon",
    "created_at": "2018-12-10T10:24:32.794Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/b5o9guvaowtpmc131dre.jpg",
    "description": "\n\n                                            Photo by Jakub Kapusnak on Unsplash...",
    "published": true,
    "published_at": "2018-12-09T21:40:06.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e                                            \u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/4f4YZfDMLeU?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eJakub Kapusnak\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/bibimbap?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eRyan Florence appeared on React Podcast episode #31 to talk about hooks and other new features coming in React.\u003c/p\u003e\n\n\u003cp\u003eThe podcast was recorded before the React Conf 2018 thus there are some time travelling involved 😁.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eDISCLAIMER\u003c/strong\u003e : I am not affiliated with podcast, just an avid listener 😛.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"acronyms\" href=\"#acronyms\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Acronyms\n\u003c/h2\u003e\n\n\u003cp\u003eI’ve used simplified names for React life cycle method names.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ecDU – comopnentDidUpdate\u003c/li\u003e\n\u003cli\u003ecDM – componentDidMount\u003c/li\u003e\n\u003cli\u003ecWU – componentWillUnmount\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"table-of-contents\" href=\"#table-of-contents\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  📃 Table of Contents\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#intro\"\u003eIntro\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#hooks\"\u003eHooks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#%E2%99%BB-90-cleaner-react\"\u003e90% Cleaner React\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#-suspense-resources-cache\"\u003eSuspense + Resources (Cache)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#directives\"\u003eDirectives?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#closing-comments\"\u003eClosing Comments\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#resources\"\u003eResources\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"intro\" href=\"#intro\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🏹 Intro\n\u003c/h2\u003e\n\n\u003cp\u003eRyan has felt that it’s “a little bit unfair” that people complaining about React getting too big.  \u003c/p\u003e\n\n\u003cp\u003eHis explanation was that the new React APIs will enable simpler and smaller code.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"framework-or-library\" href=\"#framework-or-library\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Framework or Library?\n\u003c/h4\u003e\n\n\u003cp\u003eRyan has stated that Ruby has always been a framework as “you hand top level components to ReactDOM.render \u0026amp; React calls all life cycle on it”.\u003c/p\u003e\n\n\u003cp\u003eHe has compared the process to frameworks such as Ruby on Rails \u0026amp; Ember frameworks (at 3:47).\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eBut later in the episode (35:11), Chantastic suggested that React still isn’t a framework as React doesn’t tell you to use hooks, suspense or resources.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"react-take-the-wheel\" href=\"#react-take-the-wheel\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 React take the wheel 🎡\n\u003c/h4\u003e\n\n\u003cp\u003eChantastic mentioned Ryan’s blog post \u003ca href=\"https://medium.com/@ryanflorence/react-context-and-re-renders-react-take-the-wheel-cd1d20663647\"\u003eReact take the wheel\u003c/a\u003e, in which Ryan talks about letting React take care of mutations.\u003c/p\u003e\n\n\u003cp\u003eIn the old (a better term than “legacy” as per Ryan) API of React, \u003cstrong\u003e\u003cem\u003eReact told us\u003c/em\u003e\u003c/strong\u003e what it was doing.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ecDM – I am going to mount\u003c/li\u003e\n\u003cli\u003ecDU – I updated this\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAnd we had to figure out what to do with it.\u003c/p\u003e\n\n\u003cp\u003eBut with new React API,\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003e\u003cem\u003eWe get to define\u003c/em\u003e\u003c/strong\u003e what we need with Suspense \u0026amp; Cache (resource)\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003e\u003cem\u003eReact tells us\u003c/em\u003e\u003c/strong\u003e what we need to do.\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003egetSnapshotBeforeUpdate\u003c/code\u003e \u0026amp; \u003ccode\u003egetDerivedStateFromProps\u003c/code\u003etells us what we need to do instead of what React is doing.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003e\u003cem\u003eWe have a control\u003c/em\u003e\u003c/strong\u003e over life cycle methods (\u003ccode\u003euseEffect\u003c/code\u003e).\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWe have more direct control over our code resulting in a simpler \u0026amp; readable code.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"hooks\" href=\"#hooks\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ⚓ Hooks\n\u003c/h2\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"what-are-hooks\" href=\"#what-are-hooks\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 What are hooks?\n\u003c/h4\u003e\n\n\u003cp\u003eBorrowing from an analogy in \u003ca href=\"https://youtu.be/V-QO-KO90iQ?t=3420\"\u003eDan’s presentation\u003c/a\u003e in React Conf 2018,\u003cbr\u003e\u003cbr\u003e\n\u003ccode\u003eAtom\u003c/code\u003e was thought to be the smallest unit of matter but electron was discovered, which has always been around.\u003c/p\u003e\n\n\u003cp\u003eHooks are the functionalities that have always been there in React spread out across over the class but now discovered and given a name.\u003c/p\u003e\n\n\u003cp\u003eIt’s a way to take everything we are doing across class, keeping our state (\u003ccode\u003euseState\u003c/code\u003e, \u003ccode\u003euseReducer\u003c/code\u003e, \u003ccode\u003euseContext\u003c/code\u003e) and manage life cycles (\u003ccode\u003euseEffect\u003c/code\u003e) within function components enabling high composability.\u003c/p\u003e\n\n\u003cp\u003eRyan has advised not to migrate everything over to use the new API.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eSame advice given by Jared Palmer in Ep 29, “\u003c/em\u003e\u003ca href=\"https://reactpodcast.simplecast.fm/29\"\u003e\u003cem\u003eDon’t Rewrite Your App for Hooks and Suspense with Jared Palmer\u003c/em\u003e\u003c/a\u003e\u003cem\u003e“\u003c/em\u003e\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"types-of-hooks\" href=\"#types-of-hooks\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Types of Hooks\n\u003c/h4\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://reactjs.org/docs/hooks-reference.html#usestate\"\u003euseState\u003c/a\u003e– replaces setState\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://reactjs.org/docs/hooks-reference.html#useeffect\"\u003euseEffect\u003c/a\u003e– replaces life cycle methods such as cDM, cDU, cWU.\n\n\u003cul\u003e\n\u003cli\u003e\u003cem\u003e\u003ccode\u003egetSnapshotBeforeUpdate\u003c/code\u003e and \u003ccode\u003ecomponentDidCatch\u003c/code\u003e \u003ca href=\"https://reactjs.org/docs/hooks-faq.html#do-hooks-cover-all-use-cases-for-classes\"\u003enot yet supported\u003c/a\u003e.\u003c/em\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://reactjs.org/docs/hooks-reference.html#usememo\"\u003euseMemo\u003c/a\u003e– to memoize value (data, components, etc).\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://reactjs.org/docs/hooks-reference.html#usereducer\"\u003euseReducer\u003c/a\u003e– to manage state with reducers by dispatching.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://reactjs.org/docs/hooks-reference.html#uselayouteffect\"\u003euseLayoutEffect\u003c/a\u003e– for some edge cases\n\n\u003cul\u003e\n\u003cli\u003e\u003cem\u003e\u003ccode\u003euseMutationEffect\u003c/code\u003e was also mentioned \u003ca href=\"https://github.com/facebook/react/pull/14336\"\u003ebut later removed\u003c/a\u003e.\u003c/em\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://reactjs.org/docs/hooks-reference.html#useref\"\u003euseRef\u003c/a\u003e– replaces \u003ca href=\"https://reactjs.org/docs/react-api.html#reactcreateref\"\u003eReact.createRef\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWith hooks, there is no need for an instance variable \u0026amp; use just local variables.\u003c/p\u003e\n\n\u003cp\u003ee.g.)\u003cbr\u003e\nInstead of setting up intervals and saving the ID in \u003ccode\u003ethis.ID\u003c/code\u003e in \u003ccode\u003ecDM\u003c/code\u003e, and clearing it in \u003ccode\u003ecWU\u003c/code\u003e using the instance variable, you can create a simple local variable to store the interval ID and clear it in the same hook, \u003ccode\u003euseEffect\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"hooks-are-analogies\" href=\"#hooks-are-analogies\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔹 Hooks are (analogies)\n\u003c/h4\u003e\n\n\u003col\u003e\n\u003cli\u003e“Mixins done right”\u003c/li\u003e\n\u003cli\u003e“Mixins that don’t suck for function components”.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003e                      \u003cem\u003eRefer to \u003ca href=\"https://reactjs.org/docs/react-without-es6.html#mixins\"\u003eMixins\u003c/a\u003e documentation.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eHooks solves the “false hierachy” (Ryan calls it a “syntax disaster”) of Render Props.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"%E2%99%BB-90-cleaner-react\" href=\"#%E2%99%BB-90-cleaner-react\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ♻ 90% Cleaner React\n\u003c/h2\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"1-hooks-let-us-colocate-single-concern-in-a-few-lines-of-code\" href=\"#1-hooks-let-us-colocate-single-concern-in-a-few-lines-of-code\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  1. Hooks let us co-locate single concern in a few lines of code\n\u003c/h4\u003e\n\n\u003cp\u003ee.g.) When you have a document title update code, and event subscription codes spread out across in life cycle methods, you can now separate each unrelated code (updating document title \u0026amp; un/subcribing events) in different piece of code (separate \u003ccode\u003euseEffect\u003c/code\u003e or your own hooks).\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"2-hooks-require-less-code-and-are-more-portable\" href=\"#2-hooks-require-less-code-and-are-more-portable\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  2. Hooks require less code and are more portable\n\u003c/h4\u003e\n\n\u003cp\u003eMaking it easy to refactor and extract logic to use it in other places.\u003c/p\u003e\n\n\u003cp\u003eAll states and effects are located next to each other so it’s easy to cut \u0026amp; paste (refactor).\u003c/p\u003e\n\n\u003cp\u003eReact looked simple (with devs only having to deal with components) on the surface but everything you deal with to get the simple task done (fetch/reading data \u0026amp; un/subscribing events), the code became big.\u003c/p\u003e\n\n\u003cp\u003e                      \u003ca href=\"https://youtu.be/wXLf18DsV-I\"\u003e\u003cem\u003e90% Cleaner React talk\u003c/em\u003e\u003c/a\u003e \u003cem\u003ein React Conf 2018\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"-suspense-resources-cache\" href=\"#-suspense-resources-cache\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🌉+ 💲 Suspense + Resources (Cache)\n\u003c/h2\u003e\n\n\u003cp\u003e\u003cstrong\u003eSuspense \u0026amp; Resources allows you to treat data like a synchronous value.\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eWhat’s the suitable way to handle hooks, suspense, and resources?\u003c/p\u003e\n\n\u003cp\u003eBefore we had just components but most apps also use Redux.\u003cbr\u003e\u003cbr\u003e\nSo use hooks to replace state and life cycles.\u003cbr\u003e\u003cbr\u003e\nMost of people use Redux as client-side cache, which can be replaced with Suspense and Cache.\u003c/p\u003e\n\n\u003cp\u003e                      \u003cem\u003eThus, React feels smaller (as previously pointed out at 3:10)\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"directives\" href=\"#directives\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👉Directives?\n\u003c/h2\u003e\n\n\u003cp\u003eDirectives are “just attributes you put on an element and add a behavior to it”.\u003c/p\u003e\n\n\u003cp\u003eHooks lets you add behaviors to elements without having to provide data to a component using Render Props.\u003c/p\u003e\n\n\u003cp\u003e                      \u003cem\u003eI’d need some example on this… kinda confused.\u003c/em\u003e\u003cbr\u003e\n                      \u003cem\u003eRefer to \u003ca href=\"https://www.reddit.com/r/reactjs/comments/a4p7e0/an_unofficial_show_note_for_react_podcast_episode/ebi8dcd/\"\u003ethis Reddit comment\u003c/a\u003e regarding the attributes explanation.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"closing-comments\" href=\"#closing-comments\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚪 Closing Comments\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eRyan is incredibly optimistic about React’s future as Jared Palmer was in \u003ca href=\"https://reactpodcast.simplecast.fm/29\"\u003eepisode #29\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eTake it (Hooks) fast.\u003c/li\u003e\n\u003cli\u003eHooks can be shared without transpilation.\n\n\u003cul\u003e\n\u003cli\u003eand “way easier to type because you are not typing a bunch of props” especially true for Render Props.\u003c/li\u003e\n\u003cli\u003eWith function components, props are just arguments to a function also making it easy to type\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eSubscribe to Chantastic’s \u003ca href=\"https://react.holiday/\"\u003eReact Holiday\u003c/a\u003e where he will cover new APIs mentioned in podcasts.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"resources\" href=\"#resources\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🗻 Resources\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eReact Podcast \u003ca href=\"https://reactpodcast.simplecast.fm/31\"\u003eEpisode #31\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eReact Podcast \u003ca href=\"https://reactpodcast.simplecast.fm/29\"\u003eEpisode #29\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://reactjs.org/hooks\"\u003eOfficial Hooks Documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://youtu.be/wXLf18DsV-I\"\u003e90% Cleaner React\u003c/a\u003e by Ryan Florence\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIf you want to know about how the \u003ca href=\"#table-of-contents\"\u003eTable of Contents\u003c/a\u003e was added, refer to the following announcement.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag__link\"\u003e\n        \u003ca href=\"/andy\" class=\"ltag__link__link\"\u003e\n          \u003cdiv class=\"ltag__link__pic\"\u003e\n            \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--QurmGVCz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--6P4PbPQd--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://thepracticaldev.s3.amazonaws.com/uploads/user/profile_image/13962/9ed4ae9e-9bff-4875-8c47-1b5a128bbe72.jpeg\" alt=\"andy image\"\u003e\n          \u003c/div\u003e\u003c/a\u003e\n          \u003ca href=\"/devteam/markdown-headers-are-now-anchored-18bg\" class=\"ltag__link__link\"\u003e\n            \u003cdiv class=\"ltag__link__content\"\u003e\n              \u003ch2\u003eMarkdown Headers Are Now Anchored!\u003c/h2\u003e\n              \u003ch3\u003eAndy Zhao\u003c/h3\u003e\n              \u003cdiv class=\"ltag__link__taglist\"\u003e\n\u003cspan class=\"ltag__link__tag\"\u003e#meta\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#changelog\u003c/span\u003e\n\u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/a\u003e\n      \u003c/div\u003e\n \n\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/12/09/react-podcast-episode-31-hooks-are-mixins-with-ryan-florence/\"\u003eReact Podcast Episode 31 – “Hooks are Mixins” with Ryan Florence\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: React Podcast Episode 31 – “Hooks are Mixins” with Ryan Florence\r\npublished: true\r\ntags: react, shownote, podcast\r\ncanonical_url: https://www.slightedgecoder.com/2018/12/09/react-podcast-episode-31-hooks-are-mixins-with-ryan-florence/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/b5o9guvaowtpmc131dre.jpg\r\nseries: React Podcast Show Notes\r\n---\r\n\r\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_Photo by [Jakub Kapusnak](https://unsplash.com/photos/4f4YZfDMLeU?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/bibimbap?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_\r\n\r\nRyan Florence appeared on React Podcast episode #31 to talk about hooks and other new features coming in React.\r\n\r\nThe podcast was recorded before the React Conf 2018 thus there are some time travelling involved 😁.\r\n\r\n**DISCLAIMER** : I am not affiliated with podcast, just an avid listener 😛.\r\n\r\n \r\n## Acronyms\r\n\r\nI’ve used simplified names for React life cycle method names.\r\n\r\n- cDU – comopnentDidUpdate\r\n- cDM – componentDidMount\r\n- cWU – componentWillUnmount\r\n\r\n## 📃 Table of Contents\r\n\r\n- [Intro](#intro)\r\n- [Hooks](#hooks)\r\n- [90% Cleaner React](#%E2%99%BB-90-cleaner-react)\r\n- [Suspense + Resources (Cache)](#-suspense-resources-cache)\r\n- [Directives?](#directives)\r\n- [Closing Comments](#closing-comments)\r\n- [Resources](#resources)\r\n\r\n## 🏹 Intro\r\n\r\nRyan has felt that it’s “a little bit unfair” that people complaining about React getting too big.  \r\n  \r\nHis explanation was that the new React APIs will enable simpler and smaller code.\r\n\r\n#### 🔹 Framework or Library?\r\n\r\nRyan has stated that Ruby has always been a framework as “you hand top level components to ReactDOM.render \u0026 React calls all life cycle on it”.\r\n\r\nHe has compared the process to frameworks such as Ruby on Rails \u0026 Ember frameworks (at 3:47).\r\n\r\n_But later in the episode (35:11), Chantastic suggested that React still isn’t a framework as React doesn’t tell you to use hooks, suspense or resources._\r\n\r\n#### 🔹 React take the wheel 🎡\r\n\r\nChantastic mentioned Ryan’s blog post [React take the wheel](https://medium.com/@ryanflorence/react-context-and-re-renders-react-take-the-wheel-cd1d20663647), in which Ryan talks about letting React take care of mutations.\r\n\r\nIn the old (a better term than “legacy” as per Ryan) API of React, **_React told us_** what it was doing.\r\n\r\n- cDM – I am going to mount\r\n- cDU – I updated this\r\n\r\nAnd we had to figure out what to do with it.\r\n\r\nBut with new React API,\r\n\r\n- **_We get to define_** what we need with Suspense \u0026 Cache (resource)\r\n- **_React tells us_** what we need to do.\r\n  - `getSnapshotBeforeUpdate` \u0026 `getDerivedStateFromProps`tells us what we need to do instead of what React is doing.\r\n- **_We have a control_** over life cycle methods (`useEffect`).\r\n\r\nWe have more direct control over our code resulting in a simpler \u0026 readable code.\r\n\r\n## ⚓ Hooks\r\n\r\n#### 🔹 What are hooks?\r\n\r\nBorrowing from an analogy in [Dan’s presentation](https://youtu.be/V-QO-KO90iQ?t=3420) in React Conf 2018,   \r\n`Atom` was thought to be the smallest unit of matter but electron was discovered, which has always been around.\r\n\r\nHooks are the functionalities that have always been there in React spread out across over the class but now discovered and given a name.\r\n\r\nIt’s a way to take everything we are doing across class, keeping our state (`useState`, `useReducer`, `useContext`) and manage life cycles (`useEffect`) within function components enabling high composability.\r\n\r\nRyan has advised not to migrate everything over to use the new API.\r\n\r\n_Same advice given by Jared Palmer in Ep 29, “_[_Don’t Rewrite Your App for Hooks and Suspense with Jared Palmer_](https://reactpodcast.simplecast.fm/29)_“_\r\n\r\n#### 🔹 Types of Hooks\r\n\r\n- [useState](https://reactjs.org/docs/hooks-reference.html#usestate)– replaces setState\r\n- [useEffect](https://reactjs.org/docs/hooks-reference.html#useeffect)– replaces life cycle methods such as cDM, cDU, cWU.\r\n  - _`getSnapshotBeforeUpdate` and `componentDidCatch` [not yet supported](https://reactjs.org/docs/hooks-faq.html#do-hooks-cover-all-use-cases-for-classes)._\r\n- [useMemo](https://reactjs.org/docs/hooks-reference.html#usememo)– to memoize value (data, components, etc).\r\n- [useReducer](https://reactjs.org/docs/hooks-reference.html#usereducer)– to manage state with reducers by dispatching.\r\n- [useLayoutEffect](https://reactjs.org/docs/hooks-reference.html#uselayouteffect)– for some edge cases\r\n  - _`useMutationEffect` was also mentioned [but later removed](https://github.com/facebook/react/pull/14336)._\r\n- [useRef](https://reactjs.org/docs/hooks-reference.html#useref)– replaces [React.createRef](https://reactjs.org/docs/react-api.html#reactcreateref).\r\n\r\nWith hooks, there is no need for an instance variable \u0026 use just local variables.\r\n\r\ne.g.)\r\nInstead of setting up intervals and saving the ID in `this.ID` in `cDM`, and clearing it in `cWU` using the instance variable, you can create a simple local variable to store the interval ID and clear it in the same hook, `useEffect`.\r\n\r\n#### 🔹 Hooks are (analogies)\r\n\r\n1. “Mixins done right”\r\n2. “Mixins that don’t suck for function components”.\r\n\r\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_Refer to [Mixins](https://reactjs.org/docs/react-without-es6.html#mixins) documentation._\r\n\r\nHooks solves the “false hierachy” (Ryan calls it a “syntax disaster”) of Render Props.\r\n\r\n## ♻ 90% Cleaner React\r\n\r\n#### 1. Hooks let us co-locate single concern in a few lines of code\r\n\r\ne.g.) When you have a document title update code, and event subscription codes spread out across in life cycle methods, you can now separate each unrelated code (updating document title \u0026 un/subcribing events) in different piece of code (separate `useEffect` or your own hooks).\r\n\r\n#### 2. Hooks require less code and are more portable\r\n\r\nMaking it easy to refactor and extract logic to use it in other places.\r\n\r\nAll states and effects are located next to each other so it’s easy to cut \u0026 paste (refactor).\r\n\r\nReact looked simple (with devs only having to deal with components) on the surface but everything you deal with to get the simple task done (fetch/reading data \u0026 un/subscribing events), the code became big.\r\n\r\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[_90% Cleaner React talk_](https://youtu.be/wXLf18DsV-I) _in React Conf 2018_\r\n\r\n## 🌉+ 💲 Suspense + Resources (Cache)\r\n\r\n**Suspense \u0026 Resources allows you to treat data like a synchronous value.**\r\n\r\nWhat’s the suitable way to handle hooks, suspense, and resources?\r\n\r\nBefore we had just components but most apps also use Redux.  \r\nSo use hooks to replace state and life cycles.  \r\nMost of people use Redux as client-side cache, which can be replaced with Suspense and Cache.\r\n\r\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_Thus, React feels smaller (as previously pointed out at 3:10)_\r\n\r\n## 👉Directives?\r\n\r\nDirectives are “just attributes you put on an element and add a behavior to it”.\r\n\r\nHooks lets you add behaviors to elements without having to provide data to a component using Render Props.\r\n\r\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_I’d need some example on this… kinda confused._\r\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_Refer to [this Reddit comment](https://www.reddit.com/r/reactjs/comments/a4p7e0/an_unofficial_show_note_for_react_podcast_episode/ebi8dcd/) regarding the attributes explanation._\r\n\r\n\r\n## 🚪 Closing Comments\r\n\r\n- Ryan is incredibly optimistic about React’s future as Jared Palmer was in [episode #29](https://reactpodcast.simplecast.fm/29).\r\n- Take it (Hooks) fast.\r\n- Hooks can be shared without transpilation.\r\n  - and “way easier to type because you are not typing a bunch of props” especially true for Render Props.\r\n  - With function components, props are just arguments to a function also making it easy to type\r\n\r\nSubscribe to Chantastic’s [React Holiday](https://react.holiday/) where he will cover new APIs mentioned in podcasts.\r\n\r\n## 🗻 Resources\r\n\r\n- React Podcast [Episode #31](https://reactpodcast.simplecast.fm/31).\r\n- React Podcast [Episode #29](https://reactpodcast.simplecast.fm/29).\r\n- [Official Hooks Documentation](https://reactjs.org/hooks)\r\n- [90% Cleaner React](https://youtu.be/wXLf18DsV-I) by Ryan Florence\r\n\r\nIf you want to know about how the [Table of Contents](#table-of-contents) was added, refer to the following announcement.\r\n\r\n{% link https://dev.to/devteam/markdown-headers-are-now-anchored-18bg %} \r\n\r\n_The post [React Podcast Episode 31 – “Hooks are Mixins” with Ryan Florence](https://www.slightedgecoder.com/2018/12/09/react-podcast-episode-31-hooks-are-mixins-with-ryan-florence/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com)._",
    "canonical_url": "https://www.slightedgecoder.com/2018/12/09/react-podcast-episode-31-hooks-are-mixins-with-ryan-florence/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/12/09/react-podcast-episode-31-hooks-are-mixins-with-ryan-florence/",
    "positive_reactions_count": 3,
    "edited_at": "2018-12-11T03:00:57.916Z",
    "crossposted_at": "2018-12-11T02:56:32.695Z",
    "language": null,
    "cached_tag_list": "react, shownote, podcast",
    "path": "/dance2die/react-podcast-episode-31--hooks-are-mixins-with-ryan-florence-fon",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-12-09T21:40:06.000Z"
  },
  {
    "title": "Page Not Found on Netlify with React Router",
    "slug": "page-not-found-on-netlify-with-react-router-58mc",
    "created_at": "2018-12-19T03:23:07.856Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/jnkd9is4mt0b7e3alc0p.jpg",
    "description": "\n\n                                Photo by Hello I’m Nik on Unsplash\n\nYou might r...",
    "published": true,
    "published_at": "2018-12-19T02:14:23.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e                                \u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/MAgPyHRO0AA?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eHello I’m Nik\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/direction?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eYou might run into the following error after deploying a single page React site using React Router to Netlify.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003ePage Not Found\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eLooks like you’ve followed a broken link or entered a URL that doesn’t exist on this site.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Mc8_iRD0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/page-not-found.jpg%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Mc8_iRD0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/page-not-found.jpg%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003cfigcaption\u003eError message on Netlify\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"how-did-the-error-occur\" href=\"#how-did-the-error-occur\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  How did the error occur?\n\u003c/h2\u003e\n\n\u003cp\u003eReact Router handles routing on the client side (browser) so when you visit non-root page (e.g. \u003ccode\u003ehttps://yoursite.netlify.com/else\u003c/code\u003e), Netlify (server-side) does not know how to handle the route.\u003cbr\u003e\u003cbr\u003e\n                                \u003cem\u003e(As your routes are set up in the root level).\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"error-code-amp-demo\" href=\"#error-code-amp-demo\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Error Code \u0026amp; Demo\n\u003c/h2\u003e\n\n\u003cp\u003eHere is the simplest code using React Router.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/fae8d963496b66dc2d23f5605d478976.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eAnd the error occurring on Netlify when you go to \u003ccode\u003ehttps://\u0026lt;netlify domain\u0026gt;/else\u003c/code\u003e directly.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--yCEg8LHp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/page-not-found.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--yCEg8LHp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/page-not-found.gif%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003cfigcaption\u003ePage Not Found Demo\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"how-can-we-fix-it\" href=\"#how-can-we-fix-it\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  How can we fix it?\n\u003c/h2\u003e\n\n\u003cp\u003eNetlify offers a special file, \u003ca href=\"https://www.netlify.com/docs/redirects/\"\u003e_redirects\u003c/a\u003e, which you can add to your code base and let Netlify handle how to handle the URL that is not handled on the client-side.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eNetlify documentation has a section,\u003c/em\u003e \u003ca href=\"https://www.netlify.com/docs/redirects/#history-pushstate-and-single-page-apps\"\u003e\u003cem\u003eHistory Pushstate and Single Page Apps\u003c/em\u003e\u003c/a\u003e\u003cem\u003e, which shows you how to redirect to the root of your SPA URL (but doesn’t mention React Router, as it applies to other client-side frameworks/libraries).\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSo to fix the issue, we need to create a file named \u003ccode\u003e_redirects\u003c/code\u003e to the root of your site with following content.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/acf9a148ec8025364bf0b6cf37367294.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--abSC-r50--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/redirect-on-CodeSandbox.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--abSC-r50--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/redirect-on-CodeSandbox.png%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003cfigcaption\u003e_redirect static file\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003e                                \u003cem\u003eChange \u003ccode\u003eindex.html\u003c/code\u003e accordingly to match the SPA root.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eHere is the \u003ca href=\"https://react-router-v4-to-deploy-to-netlify-with-redirects.netlify.com/else\"\u003eworking site\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--bXKfTrR---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/page-found.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--bXKfTrR---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/page-found.gif%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003cfigcaption\u003eNetlify successfully redirected to the SPA root\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eFor more ways \u0026amp; restrictions for redirect, check out\u003c/em\u003e \u003ca href=\"https://www.netlify.com/docs/redirects/\"\u003e\u003cem\u003ethe official Netlify documentation\u003c/em\u003e\u003c/a\u003e\u003cem\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"resources\" href=\"#resources\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Resources\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eWhere I found out the answer – \u003ca href=\"https://www.reddit.com/r/Frontend/comments/6h34h0/how_do_you_handle_frontend_routing_with_netlify/\"\u003eHow do you handle frontend routing with Netlify and React Router v4?\u003c/a\u003e on Reddit.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.netlify.com/docs/redirects/#history-pushstate-and-single-page-apps\"\u003e_redirects Netlify documentation\u003c/a\u003e for SPA.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://codesandbox.io/s/o5q81vvljz\"\u003eSource code\u003c/a\u003e with \u003ccode\u003e_redirects\u003c/code\u003e file.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://codesandbox.io/s/w2p29jj0jl\"\u003eSource code\u003c/a\u003e with \u003cstrong\u003eout\u003c/strong\u003e  \u003ccode\u003e_redirects\u003c/code\u003e file.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://react-router-v4-to-deploy-to-netlify-with-redirects.netlify.com/else\"\u003eNetlify site\u003c/a\u003e with _redirects file.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://react-router-v4-to-deploy-to-netlify-without-redirects.netlify.com/\"\u003eNetlify site\u003c/a\u003e with \u003cstrong\u003eout\u003c/strong\u003e _redirects file.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2018/12/18/page-not-found-on-netlify-with-react-router/\"\u003ePage Not Found on Netlify with React Router\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: Page Not Found on Netlify with React Router\r\npublished: true\r\ntags: react,netlify\r\ncanonical_url: https://www.slightedgecoder.com/2018/12/18/page-not-found-on-netlify-with-react-router/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/jnkd9is4mt0b7e3alc0p.jpg\r\n---\r\n\r\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_Photo by [Hello I’m Nik](https://unsplash.com/photos/MAgPyHRO0AA?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/direction?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_\r\n\r\nYou might run into the following error after deploying a single page React site using React Router to Netlify.\r\n\r\n\u003e **Page Not Found**\r\n\u003e \r\n\u003e Looks like you’ve followed a broken link or entered a URL that doesn’t exist on this site.\r\n\r\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/page-not-found.jpg?w=1170\u0026ssl=1)\u003cfigcaption\u003eError message on Netlify\u003c/figcaption\u003e\r\n\r\n \r\n## How did the error occur?\r\n\r\nReact Router handles routing on the client side (browser) so when you visit non-root page (e.g. `https://yoursite.netlify.com/else`), Netlify (server-side) does not know how to handle the route.  \r\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_(As your routes are set up in the root level)._\r\n\r\n## Error Code \u0026 Demo\r\n\r\nHere is the simplest code using React Router.\r\n\r\n{% gist https://gist.github.com/dance2die/fae8d963496b66dc2d23f5605d478976 %}\r\n\r\nAnd the error occurring on Netlify when you go to `https://\u003cnetlify domain\u003e/else` directly.\r\n\r\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/page-not-found.gif?w=1170\u0026ssl=1)\u003cfigcaption\u003ePage Not Found Demo\u003c/figcaption\u003e\r\n\r\n## How can we fix it?\r\n\r\nNetlify offers a special file, [\\_redirects](https://www.netlify.com/docs/redirects/), which you can add to your code base and let Netlify handle how to handle the URL that is not handled on the client-side.\r\n\r\n_Netlify documentation has a section,_ [_History Pushstate and Single Page Apps_](https://www.netlify.com/docs/redirects/#history-pushstate-and-single-page-apps)_, which shows you how to redirect to the root of your SPA URL (but doesn’t mention React Router, as it applies to other client-side frameworks/libraries)._\r\n\r\nSo to fix the issue, we need to create a file named `_redirects` to the root of your site with following content.\r\n\r\n{% gist https://gist.github.com/dance2die/acf9a148ec8025364bf0b6cf37367294 %}\r\n\r\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/redirect-on-CodeSandbox.png?w=1170\u0026ssl=1)\u003cfigcaption\u003e_redirect static file\u003c/figcaption\u003e\r\n\r\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_Change `index.html` accordingly to match the SPA root._\r\n\r\nHere is the [working site](https://react-router-v4-to-deploy-to-netlify-with-redirects.netlify.com/else).\r\n\r\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2018/12/page-found.gif?w=1170\u0026ssl=1)\u003cfigcaption\u003eNetlify successfully redirected to the SPA root\u003c/figcaption\u003e\r\n\r\n_For more ways \u0026 restrictions for redirect, check out_ [_the official Netlify documentation_](https://www.netlify.com/docs/redirects/)_._\r\n\r\n## Resources\r\n\r\n- Where I found out the answer – [How do you handle frontend routing with Netlify and React Router v4?](https://www.reddit.com/r/Frontend/comments/6h34h0/how_do_you_handle_frontend_routing_with_netlify/) on Reddit.\r\n- [\\_redirects Netlify documentation](https://www.netlify.com/docs/redirects/#history-pushstate-and-single-page-apps) for SPA.\r\n- [Source code](https://codesandbox.io/s/o5q81vvljz) with `_redirects` file.\r\n- [Source code](https://codesandbox.io/s/w2p29jj0jl) with **out**  `_redirects` file.\r\n- [Netlify site](https://react-router-v4-to-deploy-to-netlify-with-redirects.netlify.com/else) with \\_redirects file.\r\n- [Netlify site](https://react-router-v4-to-deploy-to-netlify-without-redirects.netlify.com/) with **out** \\_redirects file.\r\n\r\nThe post [Page Not Found on Netlify with React Router](https://www.slightedgecoder.com/2018/12/18/page-not-found-on-netlify-with-react-router/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2018/12/18/page-not-found-on-netlify-with-react-router/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2018/12/18/page-not-found-on-netlify-with-react-router/",
    "positive_reactions_count": 16,
    "edited_at": null,
    "crossposted_at": "2018-12-25T19:50:32.699Z",
    "language": null,
    "cached_tag_list": "react, netlify",
    "path": "/dance2die/page-not-found-on-netlify-with-react-router-58mc",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2018-12-19T02:14:23.000Z"
  },
  {
    "title": "How is your development experience on Windows?",
    "slug": "how-is-your-development-experience-on-windows-3cg1",
    "created_at": "2019-01-01T15:48:05.453Z",
    "main_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--_m6ImEy7--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/m7sct3rx8masf3slft2s.png",
    "description": "\n\nI've been using Windows only and as I wanted to contribute to open source proje...",
    "published": false,
    "published_at": "2019-01-01T16:25:02.940Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eI've been using Windows only and as I wanted to contribute to open source projects, I've run into some issues.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/reactjs/reactjs.org/pull/166\"\u003eMade changes on prettier \u0026amp; prettier:diff scripts in 'package.json` for Windows 10\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/devhubapp/devhub/issues/74\"\u003e\"yarn dev\" fails on Windows\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://github.com/CompuIves/codesandbox-client/pull/132\"\u003eAdd development support for people on Windows\u003c/a\u003e - someone else filed it.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003cem\u003e(There are many projects I didn't even bother to file issues for)\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eAnd someone even recommended me to use MacOS/Linux\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_github-liquid-tag\"\u003e \u003cdiv class=\"github-thread\"\u003e \u003cdiv class=\"timeline-comment-header\"\u003e \u003ca href=\"https://github.com/brunolemos\"\u003e \u003cimg class=\"github-liquid-tag-img\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--2gwDLY6L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars1.githubusercontent.com/u/619186%3Fv%3D4\" alt=\"brunolemos avatar\"\u003e \u003c/a\u003e \u003cspan class=\"arrow-left-outer\"\u003e\u003c/span\u003e \u003cspan class=\"arrow-left-inner\"\u003e\u003c/span\u003e \u003cdiv class=\"timeline-comment-header-text\"\u003e \u003cstrong\u003e \u003ca href=\"https://github.com/brunolemos\"\u003ebrunolemos\u003c/a\u003e \u003c/strong\u003e commented on \u003ca href=\"https://github.com/devhubapp/devhub/issues/74#issuecomment-450276099\"\u003eDec 28, 2018\u003c/a\u003e \u003cspan class=\"timestamp\"\u003e\u003c/span\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"ltag-github-body\"\u003e \u003cp\u003eI removed the \u003ccode\u003erm -rf\u003c/code\u003e command from the start script, so it should work for now.\u003c/p\u003e\n\n\u003cp\u003eSince macOS is my main machine and macOS/Linux are better environments for development, this may happen again in the future.\u003c/p\u003e\n\n\u003cp\u003eTo avoid that, I strongly recommend that you install Bash on your Windows 10. I've just added a note about this at the \u003ca href=\"https://github.com/devhubapp/devhub#running-it-locally\"\u003eREADME\u003c/a\u003e:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eOn Windows, you might need to install Bash commands (e.g. via \u003ca href=\"https://git-scm.com/downloads\" rel=\"nofollow\"\u003egit-scm\u003c/a\u003e or via \u003ca href=\"https://www.howtogeek.com/249966/how-to-install-and-use-the-linux-bash-shell-on-windows-10/\" rel=\"nofollow\"\u003elinux bash shell\u003c/a\u003e)\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cdel\u003eI could install third party packages to try to use the native commands on a cross-platform way, but I'm not sure it's worth it. It might cause other bugs, have security holes, etc.\u003c/del\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eEdit: Merged #76\u003c/em\u003e\u003c/p\u003e \u003c/div\u003e \u003cdiv class=\"gh-btn-container\"\u003e\u003ca class=\"gh-btn\" href=\"https://github.com/devhubapp/devhub/issues/74#issuecomment-450276099\"\u003eView on GitHub\u003c/a\u003e\u003c/div\u003e\n\u003c/div\u003e \u003c/div\u003e\n\n\u003cp\u003eScott just created this awesome article,\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag__link\"\u003e\n        \u003ca href=\"/spences10\" class=\"ltag__link__link\"\u003e\n          \u003cdiv class=\"ltag__link__pic\"\u003e\n            \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--q8jbTUE8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--0-yFBinm--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://thepracticaldev.s3.amazonaws.com/uploads/user/profile_image/1612/37e7870a-09c6-49a5-827e-bca96603ecbf.jpg\" alt=\"spences10 image\"\u003e\n          \u003c/div\u003e\u003c/a\u003e\n          \u003ca href=\"/spences10/from-scratch-to-create-react-app-on-windows-2b8h\" class=\"ltag__link__link\"\u003e\n            \u003cdiv class=\"ltag__link__content\"\u003e\n              \u003ch2\u003eFrom scratch to Create React App on Windows 10\u003c/h2\u003e\n              \u003ch3\u003eScott Spence\u003c/h3\u003e\n              \u003cdiv class=\"ltag__link__taglist\"\u003e\n\u003cspan class=\"ltag__link__tag\"\u003e#beginners\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#react\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#webdev\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#git\u003c/span\u003e\n\u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/a\u003e\n      \u003c/div\u003e\n\n\n\u003cp\u003eAnd Nick has also wrote,\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag__link\"\u003e\n        \u003ca href=\"/nickjj\" class=\"ltag__link__link\"\u003e\n          \u003cdiv class=\"ltag__link__pic\"\u003e\n            \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--HGRJ6pxP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Zz-Qi02k--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://thepracticaldev.s3.amazonaws.com/uploads/user/profile_image/68035/985891c3-d691-4fc3-8b42-0a1de8a82f8b.jpeg\" alt=\"nickjj image\"\u003e\n          \u003c/div\u003e\u003c/a\u003e\n          \u003ca href=\"/nickjj/using-wsl-and-mobaxterm-to-create-a-linux-dev-environment-on-windows-1omh\" class=\"ltag__link__link\"\u003e\n            \u003cdiv class=\"ltag__link__content\"\u003e\n              \u003ch2\u003eUsing WSL and MobaXterm to Create a Linux Dev Environment on Windows\u003c/h2\u003e\n              \u003ch3\u003eNick Janetakis\u003c/h3\u003e\n              \u003cdiv class=\"ltag__link__taglist\"\u003e\n\u003cspan class=\"ltag__link__tag\"\u003e#productivity\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#webdev\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#beginners\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#windows\u003c/span\u003e\n\u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/a\u003e\n      \u003c/div\u003e\n\n\n\u003cp\u003eto make Windows development environment work like that of Linux.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eHow's your development experience on Windows machine?\u003c/strong\u003e\u003cbr\u003e\n\u003cem\u003eI finally gave in and installed Ubuntu on my laptop\u003c/em\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "\nI've been using Windows only and as I wanted to contribute to open source projects, I've run into some issues.\n\n* [Made changes on prettier \u0026 prettier:diff scripts in 'package.json` for Windows 10](https://github.com/reactjs/reactjs.org/pull/166)\n* [\"yarn dev\" fails on Windows](https://github.com/devhubapp/devhub/issues/74)\n* [Add development support for people on Windows](https://github.com/CompuIves/codesandbox-client/pull/132) - someone else filed it.\n\n_(There are many projects I didn't even bother to file issues for)_\n\nAnd someone even recommended me to use MacOS/Linux\n\n{% github https://github.com/devhubapp/devhub/issues/74#issuecomment-450276099 %}\n\nScott just created this awesome article,\n\n{% link https://dev.to/spences10/from-scratch-to-create-react-app-on-windows-2b8h %}\n\nAnd Nick has also wrote,\n\n{% link https://dev.to/nickjj/using-wsl-and-mobaxterm-to-create-a-linux-dev-environment-on-windows-1omh %}\n\nto make Windows development environment work like that of Linux.\n\n**How's your development experience on Windows machine?**\n_I finally gave in and installed Ubuntu on my laptop_.\n\n",
    "canonical_url": null,
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": false,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": null,
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": null,
    "cached_tag_list": "discuss",
    "path": "/dance2die/how-is-your-development-experience-on-windows-3cg1",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-01-01T16:25:02.940Z"
  },
  {
    "title": "Living on the edge with “dangerous”",
    "slug": "living-on-the-edge-with-dangerous-3j63",
    "created_at": "2019-01-13T22:39:29.346Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/e76nhjx70cevhrjst8zg.jpg",
    "description": "\n\nAs I’ve been using Styled Components (SC hereafter) and been wondering about th...",
    "published": true,
    "published_at": "2019-01-13T22:31:38.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eAs I’ve been using \u003ca href=\"https://www.styled-components.com/\"\u003eStyled Components\u003c/a\u003e (SC hereafter) and been wondering about the magic behind it.\u003c/p\u003e\n\n\u003cp\u003eThankfully, Max Stoiber (a creator of SC) has written an article, \u003ca href=\"https://mxstbr.blog/2016/11/styled-components-magic-explained/\"\u003eThe magic behind styled-components\u003c/a\u003e on how Styled Components work with \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\"\u003eTagged Template Literals\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eAt the end of article, Max finished the article with following sentence.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eI’m very excited to see what other use cases for tagged template literals people come up with!\u003c/p\u003e\n\n\u003cp\u003e\u003ccite\u003eMax Stoiber\u003c/cite\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSo I created \u003ca href=\"https://www.npmjs.com/package/dangerous\"\u003edangerous\u003c/a\u003e, a tagged template literal function, which accepts a dangerous text (such as malicious user input) and sets inner HTML of a component in SC like style.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"prerequisite\" href=\"#prerequisite\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Prerequisite\n\u003c/h2\u003e\n\n\u003cp\u003eI will skip on what tagged template literal is or how it works as Max has\u003ca href=\"https://mxstbr.blog/2016/11/styled-components-magic-explained/\"\u003eexplained quite wel\u003c/a\u003el.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"%E2%98%A2-what-is-dangerous\" href=\"#%E2%98%A2-what-is-dangerous\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ☢ What is “dangerous”?\n\u003c/h2\u003e\n\n\u003cp\u003eWhen you pass a string to component, they are encoded to prevent malicious user input/scripts.\u003c/p\u003e\n\n\u003cp\u003eReact team has made it hard to set \u003ccode\u003einnerHTML\u003c/code\u003e of a component to help developers accidentally set malicious string to prevent \u003ca href=\"https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)\"\u003eXSS attacks\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eBut \u003ccode\u003edangerous\u003c/code\u003e makes it easy to set an \u003ccode\u003einnerHTML\u003c/code\u003e value and returns a component with the unsafe HTML string.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/e219cafdc2ffb319c37aea2ee994470d.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--VvBRDNPR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/01/demo.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--VvBRDNPR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/01/demo.gif%3Fw%3D1170%26ssl%3D1\" alt=\"demo\"\u003e\u003c/a\u003e\u003cfigcaption\u003eResult of DangerousApp.js\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eAs you can with SC, you can pass a component or an HTML tag to the \u003ccode\u003edangerous\u003c/code\u003e like or even wrap SC component and vice versa.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/ec603aaec1fe0bf7b735762ac58b9472.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003ciframe src=\"https://codesandbox.io/embed/14xvzn25lj\" style=\"width:100%; height:calc(300px + 8vw); border:0; border-radius: 4px; overflow:hidden;\" sandbox=\"allow-same-origin allow-scripts allow-forms allow-top-navigation-by-user-activation\u0026gt;\"\u003e\u003cbr\u003e\n                    \u003cem\u003eAlert will show on CodeSandbox only\u003c/em\u003e\u003c/iframe\u003e\u003c/p\u003e\n\n\u003cp\u003eSo if you need to style the dangerous component, either pass a SC component or wrap the dangerous component in SC component.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"why-did-you-create-it-then\" href=\"#why-did-you-create-it-then\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🤔 Why did you create it then?\n\u003c/h2\u003e\n\n\u003cp\u003eI will be frank. It’s quite useless in practice and promotes bad behavior.\u003c/p\u003e\n\n\u003cp\u003eIt was mostly an academic project to learn how tagged template literal works \u0026amp; get used to TypeScript.\u003c/p\u003e\n\n\u003cp\u003eAnd a plan to migrate to TypeScript for React, and learn how to test it.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"failures\" href=\"#failures\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  💀 Failures?\n\u003c/h2\u003e\n\n\u003cp\u003eI’ve implemented it on \u003ca href=\"https://codesandbox.io/s/o85m91j8z\"\u003eCodeSandbox\u003c/a\u003eusing vanilla JavaScript but wanted to try TypeScript.\u003c/p\u003e\n\n\u003cp\u003e                    \u003cem\u003eLike a kid with FOMO\u003c/em\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreating a JavaScript library with Webpack when using TypeScript wasn’t as easy as I had anticipated.\n\n\u003col\u003e\n\u003cli\u003eTrying to do/learn too many things at once (TypeScript, tagged template literal, CircleCI, etc) really made it worse.\u003c/li\u003e\n\u003cli\u003eI’ve given up on writing tests in the prev v1.0 release (currently it’s at 0.1.x).\u003c/li\u003e\n\u003cli\u003eI decided to hold off after finishing Kent C. Dodd’s Testing JavaScript course.\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eSo the easy way out was to use \u003ca href=\"https://github.com/rollup/rollup\"\u003eRollUp\u003c/a\u003e, which I’ve used before.\u003c/p\u003e\n\n\u003cp\u003e          \u003cem\u003eBut with TypeScript in play, it was harder as TypeScript has its own transpiler.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eI also ended up bloating up the library size and had to learn how to fix it.\u003c/p\u003e\n\n\u003cp\u003e          \u003cem\u003eFixed by marking react methods as external dependencies in tsconfig.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--KSYWJWY3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/01/bundle-phobia-size-comparison.jpg%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--KSYWJWY3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/01/bundle-phobia-size-comparison.jpg%3Fw%3D1170%26ssl%3D1\" alt=\"bundlephobia size comparison\"\u003e\u003c/a\u003e\u003cfigcaption\u003eSize comparison on BundlePhobia\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eI remember making the same mistake while first learning React, trying to learn Redux, Node, Express, and all other related technologies all at once and got no where after shaving the yak for months.\u003c/p\u003e\n\n\u003cp\u003eBut learning from these failures (try to use Rollup for simple libraries, don’t use new language [typescript] without understanding how it works first, etc) was a great lesson.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👋 Parting Words\n\u003c/h2\u003e\n\n\u003cp\u003eMany thanks to Max Stoiber to his \u003ca href=\"https://mxstbr.blog/2016/11/styled-components-magic-explained/\"\u003eblog\u003c/a\u003e \u0026amp; \u003ca href=\"https://github.com/styled-components/styled-components\"\u003eStyled Components\u003c/a\u003e for sharing his knowledge and code in public.\u003c/p\u003e\n\n\u003cp\u003eFrankly speaking, I’ve never had much need to use \u003ca href=\"https://reactjs.org/docs/dom-elements.html#dangerouslysetinnerhtml\"\u003edangerouslySetInnerHTML\u003c/a\u003e at all.\u003c/p\u003e\n\n\u003cp\u003ePlease don’t hesitate to give me \u003ca href=\"https://github.com/dance2die/dangerous/issues\"\u003eany feedback\u003c/a\u003e (good or harsh, both are welcome) or changes required.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"%F0%9F%8F%94-resources\" href=\"#%F0%9F%8F%94-resources\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🏔 Resources\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://mxstbr.blog/2016/11/styled-components-magic-explained/\"\u003eThe magic behind styled-components\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\"\u003eTemplate literals\u003c/a\u003e on MDN\u003c/li\u003e\n\u003cli\u003edangerous\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://github.com/dance2die/dangerous\"\u003eSource Code\u003c/a\u003e (MIT) on GitHub\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.npmjs.com/package/dangerous\"\u003eNPM\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://reactjs.org/docs/dom-elements.html#dangerouslysetinnerhtml\"\u003edangerouslySetInnerHTML\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.styled-components.com/\"\u003eStyled Components\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2019/01/13/living-on-the-edge-with-dangerous/\"\u003eLiving on the edge with “dangerous”\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: Living on the edge with “dangerous”\r\npublished: true\r\ntags: react, showdev\r\ncanonical_url: https://www.slightedgecoder.com/2019/01/13/living-on-the-edge-with-dangerous/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/e76nhjx70cevhrjst8zg.jpg\r\n---\r\n\r\nAs I’ve been using [Styled Components](https://www.styled-components.com/) (SC hereafter) and been wondering about the magic behind it.\r\n\r\nThankfully, Max Stoiber (a creator of SC) has written an article, [The magic behind styled-components](https://mxstbr.blog/2016/11/styled-components-magic-explained/) on how Styled Components work with [Tagged Template Literals](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals).\r\n\r\nAt the end of article, Max finished the article with following sentence.\r\n\r\n\u003e I’m very excited to see what other use cases for tagged template literals people come up with!\r\n\u003e \r\n\u003e \u003ccite\u003eMax Stoiber\u003c/cite\u003e\r\n\r\nSo I created [dangerous](https://www.npmjs.com/package/dangerous), a tagged template literal function, which accepts a dangerous text (such as malicious user input) and sets inner HTML of a component in SC like style.\r\n\r\n \r\n## Prerequisite\r\n\r\nI will skip on what tagged template literal is or how it works as Max has[explained quite wel](https://mxstbr.blog/2016/11/styled-components-magic-explained/)l.\r\n\r\n## ☢ What is “dangerous”?\r\n\r\nWhen you pass a string to component, they are encoded to prevent malicious user input/scripts.\r\n\r\nReact team has made it hard to set `innerHTML` of a component to help developers accidentally set malicious string to prevent [XSS attacks](https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)).\r\n\r\nBut `dangerous` makes it easy to set an `innerHTML` value and returns a component with the unsafe HTML string.\r\n\r\n{% gist https://gist.github.com/dance2die/e219cafdc2ffb319c37aea2ee994470d %}\r\n\r\n![demo](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/01/demo.gif?w=1170\u0026ssl=1)\u003cfigcaption\u003eResult of DangerousApp.js\u003c/figcaption\u003e\r\n\r\nAs you can with SC, you can pass a component or an HTML tag to the `dangerous` like or even wrap SC component and vice versa.\r\n\r\n{% gist https://gist.github.com/dance2die/ec603aaec1fe0bf7b735762ac58b9472 %}\r\n\r\n{% codesandbox 14xvzn25lj %}\r\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_Alert will show on CodeSandbox only_\r\n\r\nSo if you need to style the dangerous component, either pass a SC component or wrap the dangerous component in SC component.\r\n\r\n## 🤔 Why did you create it then?\r\n\r\nI will be frank. It’s quite useless in practice and promotes bad behavior.\r\n\r\nIt was mostly an academic project to learn how tagged template literal works \u0026 get used to TypeScript.\r\n\r\nAnd a plan to migrate to TypeScript for React, and learn how to test it.\r\n\r\n## 💀 Failures?\r\n\r\nI’ve implemented it on [CodeSandbox](https://codesandbox.io/s/o85m91j8z)using vanilla JavaScript but wanted to try TypeScript.\r\n\r\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_Like a kid with FOMO_\r\n\r\n- Creating a JavaScript library with Webpack when using TypeScript wasn’t as easy as I had anticipated.\r\n  1. Trying to do/learn too many things at once (TypeScript, tagged template literal, CircleCI, etc) really made it worse.\r\n  2. I’ve given up on writing tests in the prev v1.0 release (currently it’s at 0.1.x).\r\n  3. I decided to hold off after finishing Kent C. Dodd’s Testing JavaScript course.\r\n\r\nSo the easy way out was to use [RollUp](https://github.com/rollup/rollup), which I’ve used before.\r\n\r\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_But with TypeScript in play, it was harder as TypeScript has its own transpiler._\r\n\r\nI also ended up bloating up the library size and had to learn how to fix it.\r\n\r\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_Fixed by marking react methods as external dependencies in tsconfig._\r\n\r\n![bundlephobia size comparison](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/01/bundle-phobia-size-comparison.jpg?w=1170\u0026ssl=1)\u003cfigcaption\u003eSize comparison on BundlePhobia\u003c/figcaption\u003e\r\n\r\nI remember making the same mistake while first learning React, trying to learn Redux, Node, Express, and all other related technologies all at once and got no where after shaving the yak for months.\r\n\r\nBut learning from these failures (try to use Rollup for simple libraries, don’t use new language [typescript] without understanding how it works first, etc) was a great lesson.\r\n\r\n## 👋 Parting Words\r\n\r\nMany thanks to Max Stoiber to his [blog](https://mxstbr.blog/2016/11/styled-components-magic-explained/) \u0026 [Styled Components](https://github.com/styled-components/styled-components) for sharing his knowledge and code in public.\r\n\r\nFrankly speaking, I’ve never had much need to use [dangerouslySetInnerHTML](https://reactjs.org/docs/dom-elements.html#dangerouslysetinnerhtml) at all.\r\n\r\nPlease don’t hesitate to give me [any feedback](https://github.com/dance2die/dangerous/issues) (good or harsh, both are welcome) or changes required.\r\n\r\n## 🏔 Resources\r\n\r\n- [The magic behind styled-components](https://mxstbr.blog/2016/11/styled-components-magic-explained/)\r\n- [Template literals](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals) on MDN\r\n- dangerous\r\n  - [Source Code](https://github.com/dance2die/dangerous) (MIT) on GitHub\r\n  - [NPM](https://www.npmjs.com/package/dangerous)\r\n- [dangerouslySetInnerHTML](https://reactjs.org/docs/dom-elements.html#dangerouslysetinnerhtml)\r\n- [Styled Components](https://www.styled-components.com/)\r\n\r\nThe post [Living on the edge with “dangerous”](https://www.slightedgecoder.com/2019/01/13/living-on-the-edge-with-dangerous/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2019/01/13/living-on-the-edge-with-dangerous/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 2,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2019/01/13/living-on-the-edge-with-dangerous/",
    "positive_reactions_count": 17,
    "edited_at": "2019-01-14T00:47:56.047Z",
    "crossposted_at": "2019-01-14T00:45:30.607Z",
    "language": null,
    "cached_tag_list": "react, showdev",
    "path": "/dance2die/living-on-the-edge-with-dangerous-3j63",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-01-22T11:45:31.400Z"
  },
  {
    "title": "React + TypeScript with Parcel",
    "slug": "react--typescript-with-parcel-h73-temp-slug-5064577",
    "created_at": "2019-01-23T04:07:34.195Z",
    "main_image": null,
    "description": "\n\nPhoto by [_Kira auf der Heide](https://unsplash.com/photos/IPx7J1n_xUc?utm_sour...",
    "published": false,
    "published_at": "2019-01-23T03:46:32.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003cem\u003e[_Kira auf der Heide\u003c/em\u003e](\u003ca href=\"https://unsplash.com/photos/IPx7J1n_xUc?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003ehttps://unsplash.com/photos/IPx7J1n_xUc?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\u003c/a\u003e)\u003c/em\u003e on \u003cem\u003e[_Unsplash\u003c/em\u003e](\u003ca href=\"https://unsplash.com/search/photos/parcel?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003ehttps://unsplash.com/search/photos/parcel?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\u003c/a\u003e)\u003c/p\u003e\n\n\u003cp\u003eLearned today that it’s easy to create React + TypeScript site with Parcel without using CRA (create-react-app).\u003c/p\u003e\n\n\u003cp\u003eParcel Documentation has a whole (short but complete) section on how to use TypeScript file with Parcel.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://parceljs.org/typeScript.html\"\u003ehttps://parceljs.org/typeScript.html\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eJust include TypeScript file (either \u003ccode\u003e.ts\u003c/code\u003e or \u003ccode\u003e.tsx\u003c/code\u003e for React components) in an HTML file, and Parcel will know what to do with it.\u003c/p\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/18a5d6e192c3bab736b79f8abd437f7d\"\u003eView this gist on GitHub\u003c/a\u003e\u003cfigcaption\u003eincluding TypeScript file\u003c/figcaption\u003e\n\n\u003cp\u003eOne caveat is that you need to set a \u003ccode\u003ejsx\u003c/code\u003e option in \u003ccode\u003etsconfig.json\u003c/code\u003e to \u003ccode\u003ereact\u003c/code\u003e for it to work.\u003c/p\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/d3e4b01bbf49c09c82103be4137d31f2\"\u003eView this gist on GitHub\u003c/a\u003e\u003cfigcaption\u003ejsx option in tsconfig.json\u003c/figcaption\u003e\n\u003ch2\u003e\n  \u003ca name=\"resources\" href=\"#resources\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Resources\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://parceljs.org/typeScript.html\"\u003eParcel Documentation on TypeScript\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dance2die/demo.typescript-mobx-parcel\"\u003eReact + TypeScript with Parcel repo\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2019/01/22/react-typescript-with-parcel/\"\u003eReact + TypeScript with Parcel\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: React + TypeScript with Parcel\npublished: false\ntags: Programming,quick tip,React,Self Note\ncanonical_url: https://www.slightedgecoder.com/2019/01/22/react-typescript-with-parcel/\n---\n\n_Photo by _[_Kira auf der Heide_](https://unsplash.com/photos/IPx7J1n_xUc?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_ on _[_Unsplash_](https://unsplash.com/search/photos/parcel?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)\n\nLearned today that it’s easy to create React + TypeScript site with Parcel without using CRA (create-react-app).\n\nParcel Documentation has a whole (short but complete) section on how to use TypeScript file with Parcel.\n\n[https://parceljs.org/typeScript.html](https://parceljs.org/typeScript.html)\n\nJust include TypeScript file (either `.ts` or `.tsx` for React components) in an HTML file, and Parcel will know what to do with it.\n\n\u003cscript src=\"https://gist.github.com/dance2die/18a5d6e192c3bab736b79f8abd437f7d.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/18a5d6e192c3bab736b79f8abd437f7d\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\u003cfigcaption\u003eincluding TypeScript file\u003c/figcaption\u003e\n\nOne caveat is that you need to set a `jsx` option in `tsconfig.json` to `react` for it to work.\n\n\u003cscript src=\"https://gist.github.com/dance2die/d3e4b01bbf49c09c82103be4137d31f2.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/d3e4b01bbf49c09c82103be4137d31f2\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\u003cfigcaption\u003ejsx option in tsconfig.json\u003c/figcaption\u003e\n\n## Resources\n\n- [Parcel Documentation on TypeScript](https://parceljs.org/typeScript.html)\n- [React + TypeScript with Parcel repo](https://github.com/dance2die/demo.typescript-mobx-parcel)\n\nThe post [React + TypeScript with Parcel](https://www.slightedgecoder.com/2019/01/22/react-typescript-with-parcel/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2019/01/22/react-typescript-with-parcel/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2019/01/22/react-typescript-with-parcel/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": null,
    "cached_tag_list": "programming, quicktip, react, selfnote",
    "path": "/dance2die/react--typescript-with-parcel-h73-temp-slug-5064577",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-01-23T03:46:32.000Z"
  },
  {
    "title": "Default Class Access Modifier Differences between TypeScript \u0026 C#",
    "slug": "default-class-access-modifier-differences-between-typescript--c-5ah9-temp-slug-3827593",
    "created_at": "2019-01-25T01:25:25.126Z",
    "main_image": null,
    "description": "\n\nPhoto by Patrick Fore on Unsplash﻿\n\nNote to self…\n\nTypeScript’s class access mo...",
    "published": false,
    "published_at": "2019-01-25T01:14:23.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/iZGS8A1JV5Y?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003ePatrick Fore\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/surprised?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash﻿\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eNote to self…\u003c/p\u003e\n\n\u003cp\u003eTypeScript’s class access modifiers are \u003ca href=\"https://www.typescriptlang.org/docs/handbook/classes.html#public-private-and-protected-modifiers\"\u003epublic by default\u003c/a\u003e while it’s \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/access-modifiers#class-and-struct-accessibility\"\u003eprivate in C#\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eQuite a surprise as TypeScript was created by \u003ca href=\"https://en.wikipedia.org/wiki/Anders_Hejlsberg\"\u003eAnders Hejlsberg\u003c/a\u003e, who also created C#.\u003c/p\u003e\n\n\u003cp\u003eCan’t seem to find any articles/posts behind “why” they are public by default in TypeScript \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TxF6dnRf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f914.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TxF6dnRf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f914.png\" alt=\"🤔\"\u003e\u003c/a\u003e…\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2019/01/24/default-class-access-modifier-differences-between-typescript-c/\"\u003eDefault Class Access Modifier Differences between TypeScript \u0026amp; C#\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Default Class Access Modifier Differences between TypeScript \u0026 C#\npublished: false\ntags: Self Note,TIL,c#,class\ncanonical_url: https://www.slightedgecoder.com/2019/01/24/default-class-access-modifier-differences-between-typescript-c/\n---\n\nPhoto by [Patrick Fore](https://unsplash.com/photos/iZGS8A1JV5Y?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash﻿](https://unsplash.com/search/photos/surprised?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)\n\nNote to self…\n\nTypeScript’s class access modifiers are [public by default](https://www.typescriptlang.org/docs/handbook/classes.html#public-private-and-protected-modifiers) while it’s [private in C#](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/access-modifiers#class-and-struct-accessibility).\n\nQuite a surprise as TypeScript was created by [Anders Hejlsberg](https://en.wikipedia.org/wiki/Anders_Hejlsberg), who also created C#.\n\nCan’t seem to find any articles/posts behind “why” they are public by default in TypeScript ![🤔](https://s.w.org/images/core/emoji/11/72x72/1f914.png)…\n\nThe post [Default Class Access Modifier Differences between TypeScript \u0026 C#](https://www.slightedgecoder.com/2019/01/24/default-class-access-modifier-differences-between-typescript-c/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2019/01/24/default-class-access-modifier-differences-between-typescript-c/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2019/01/24/default-class-access-modifier-differences-between-typescript-c/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": null,
    "cached_tag_list": "selfnote, todayilearned, c, class",
    "path": "/dance2die/default-class-access-modifier-differences-between-typescript--c-5ah9-temp-slug-3827593",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-01-25T01:14:23.000Z"
  },
  {
    "title": "Dynamically build TypeScript string literal type",
    "slug": "dynamically-build-typescript-string-literal-type-1bc7",
    "created_at": "2019-02-02T19:24:27.085Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/nptzlj211vess2qyd0k6.jpg",
    "description": "\n\n                    Photo by Kevin Jarrett on Unsplash\n\nTypeScript has String L...",
    "published": true,
    "published_at": "2019-02-02T19:02:55.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e                    \u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/t3d22GqvUqs?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eKevin Jarrett\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/type-build?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eTypeScript has \u003ca href=\"https://www.typescriptlang.org/docs/handbook/advanced-types.html#string-literal-types\"\u003eString Literal Types\u003c/a\u003e, which lets you specify what string value is allowed for a variable.\u003cbr\u003e\u003cbr\u003e\nYou can specify the allowed literal values during type declaration.\u003c/p\u003e\n\n\u003cp\u003eWhen you have dozens of strings to allow with possibility to grow, adding it isn’t maintainable and error prone.\u003cbr\u003e\u003cbr\u003e\nTypeScript provides \u003ca href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html\"\u003ekeyof\u003c/a\u003e operator to extract keys of a type to restrict assignable values.\u003c/p\u003e\n\n\u003cp\u003eLet me show you how it can be used and a limitation thereof.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"intro\" href=\"#intro\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚀 Intro\n\u003c/h2\u003e\n\n\u003cp\u003eI’ve had an issue where I wanted to restrict an allowable value for a function to accept only DOM type values in an array.\u003c/p\u003e\n\n\u003cp\u003eThis post is a workaround found after \u003ca href=\"https://spectrum.chat/typescript/general/solved-is-there-a-way-to-create-type-from-an-array~2317e93b-0c66-4088-a4a6-9d6ebbd257ea\"\u003edays of frustration\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eI will show you how to create a type to allow only DOM type values.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"getting-started\" href=\"#getting-started\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🌠 Getting Started\n\u003c/h2\u003e\n\n\u003cp\u003eYou need to create an object (\u003cem\u003enot\u003c/em\u003e an array), which contains object keys you want to restrict a type with.\u003c/p\u003e\n\n\u003cp\u003e                    \u003cem\u003eI will show you why later why an array would not work.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSuppose that you have an object with DOM as keys.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/6360ef553f47a015a38964bbacd329af.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cfigcaption\u003e \u003cem\u003eLeft out rest of DOM types for brevity.\u003c/em\u003e\u003c/figcaption\u003e\n\n\u003cp\u003eIf you create a type like \u003ccode\u003etype DOMS = typeof doms;\u003c/code\u003e, then a variable of such type will have \u003ccode\u003ea\u003c/code\u003e \u003ccode\u003ediv\u003c/code\u003e, and \u003ccode\u003ep\u003c/code\u003e as properties.\u003c/p\u003e\n\n\u003cp\u003e                    \u003cem\u003eYou don’t want to restrict the value, not the property.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSo you need to extract keys from the \u003ccode\u003edoms\u003c/code\u003e to restrict allowable values, using \u003ccode\u003ekeyof\u003c/code\u003e operator.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/f6f5a0cfd672f2940c895594faff7bff.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cfigcaption\u003eDOMType declaration\u003c/figcaption\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--FW2MngWM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/assignment.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--FW2MngWM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/assignment.gif%3Fw%3D1170%26ssl%3D1\" alt=\"keyof\"\u003e\u003c/a\u003e\u003cfigcaption\u003eExample of leaving out “keyof”.\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eYou can see that \u003ccode\u003ea\u003c/code\u003e has \u003ccode\u003ea\u003c/code\u003e, \u003ccode\u003ediv\u003c/code\u003e, and \u003ccode\u003ep\u003c/code\u003e as properties while \u003ccode\u003eb\u003c/code\u003e is recognized as a string.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"example-usage\" href=\"#example-usage\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👾 Example Usage\n\u003c/h2\u003e\n\n\u003cp\u003eSuppose that you have a function that accepts a variable of type \u003ccode\u003eDOMType\u003c/code\u003e.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/e3b0dc753d6975d30ec328f41000cb74.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cfigcaption\u003eprintDOM\u003c/figcaption\u003e\n\n\u003cp\u003eWhen you pass values other than \u003ccode\u003ea\u003c/code\u003e, \u003ccode\u003ediv\u003c/code\u003e, \u003ccode\u003ep\u003c/code\u003e, you get an error message during compiler time.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"why-no-array\" href=\"#why-no-array\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🤔 Why no array?\n\u003c/h2\u003e\n\n\u003cp\u003eYou might have declared a list of values as an array.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/5ad09130defbd016a8b28afe00a5e030.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eBut the current version of TypeScript (3.3.1) doesn’t know how to infer types from an array passed as a variable.\u003c/p\u003e\n\n\u003cp\u003e                    \u003cem\u003eRefer to\u003c/em\u003e \u003ca href=\"https://stackoverflow.com/a/54061487/4035\"\u003e\u003cem\u003ethis Stack Overflow answer\u003c/em\u003e\u003c/a\u003e\u003cem\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eIn the demo below, you can see that `printDOMType” accepts any string without any errors.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://codesandbox.io/s/qrrq24k7q\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--pzpI10jk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codesandbox.io/static/img/play-codesandbox.svg\" alt=\"Edit TypeScript - Array to Literal - Doesn't work\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--VvAeZqIo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/array-literal.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--VvAeZqIo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/array-literal.png%3Fw%3D1170%26ssl%3D1\" alt=\"“printDOMType” accepts any string\"\u003e\u003c/a\u003e\u003cfigcaption\u003e“printDOMType” accepts any string\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eA change is underway to enable array value to be inferred to be used as string literals in version 3.4.\u003cbr\u003e\u003cbr\u003e\nFor now, you’d have to stick with an object.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🎉 Parting Words\n\u003c/h2\u003e\n\n\u003cp\u003eI’ve started diving into the world of TypeScript and figuring this out took me roughly four days.\u003c/p\u003e\n\n\u003cp\u003eTypeScript has been both good and bad and I consider this a part of learning process.\u003c/p\u003e\n\n\u003cp\u003eI hope you don’t go thru the same trouble with this issue.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"%F0%9F%8F%94-resources\" href=\"#%F0%9F%8F%94-resources\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🏔 Resources\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eOfficial TypeScript Documentation\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.typescriptlang.org/docs/handbook/advanced-types.html#string-literal-types\"\u003eString Literal Types\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html\"\u003ekeyof\u003c/a\u003e operator\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://spectrum.chat/typescript/general/solved-is-there-a-way-to-create-type-from-an-array~2317e93b-0c66-4088-a4a6-9d6ebbd257ea\"\u003eFour days of self-note\u003c/a\u003e in Spectrum\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://codesandbox.io/s/vj4w899q55\"\u003eCodeSandbox Demo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eStack Overflow Question – \u003ca href=\"https://stackoverflow.com/a/54061487/4035\"\u003earray to strin\u003c/a\u003e\u003ca href=\"https://stackoverflow.com/a/54061487/4035\"\u003eg\u003c/a\u003e\u003ca href=\"https://stackoverflow.com/a/54061487/4035\"\u003eliteral type\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: Dynamically build TypeScript string literal type\r\npublished: true\r\ntags: typescript\r\ncanonical_url: https://www.slightedgecoder.com/2019/02/02/dynamically-build-typescript-string-literal-type/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/nptzlj211vess2qyd0k6.jpg\r\n---\r\n\r\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_Photo by [Kevin Jarrett](https://unsplash.com/photos/t3d22GqvUqs?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/type-build?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_\r\n\r\nTypeScript has [String Literal Types](https://www.typescriptlang.org/docs/handbook/advanced-types.html#string-literal-types), which lets you specify what string value is allowed for a variable.  \r\nYou can specify the allowed literal values during type declaration.\r\n\r\nWhen you have dozens of strings to allow with possibility to grow, adding it isn’t maintainable and error prone.  \r\nTypeScript provides [keyof](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html) operator to extract keys of a type to restrict assignable values.\r\n\r\nLet me show you how it can be used and a limitation thereof.\r\n\r\n## 🚀 Intro\r\n\r\nI’ve had an issue where I wanted to restrict an allowable value for a function to accept only DOM type values in an array.\r\n\r\nThis post is a workaround found after [days of frustration](https://spectrum.chat/typescript/general/solved-is-there-a-way-to-create-type-from-an-array~2317e93b-0c66-4088-a4a6-9d6ebbd257ea).\r\n\r\nI will show you how to create a type to allow only DOM type values.\r\n\r\n## 🌠 Getting Started\r\n\r\nYou need to create an object (_not_ an array), which contains object keys you want to restrict a type with.\r\n\r\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_I will show you why later why an array would not work._\r\n\r\nSuppose that you have an object with DOM as keys.\r\n\r\n{% gist https://gist.github.com/dance2die/6360ef553f47a015a38964bbacd329af %}\r\n\u003cfigcaption\u003e \u003cem\u003eLeft out rest of DOM types for brevity.\u003c/em\u003e\u003c/figcaption\u003e\r\n\r\nIf you create a type like `type DOMS = typeof doms;`, then a variable of such type will have `a` `div`, and `p` as properties.\r\n\r\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_You don’t want to restrict the value, not the property._\r\n\r\nSo you need to extract keys from the `doms` to restrict allowable values, using `keyof` operator.\r\n\r\n{% gist https://gist.github.com/dance2die/f6f5a0cfd672f2940c895594faff7bff %}\r\n\u003cfigcaption\u003eDOMType declaration\u003c/figcaption\u003e\r\n\r\n![keyof](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/assignment.gif?w=1170\u0026ssl=1)\u003cfigcaption\u003eExample of leaving out “keyof”.\u003c/figcaption\u003e\r\n\r\nYou can see that `a` has `a`, `div`, and `p` as properties while `b` is recognized as a string.\r\n\r\n## 👾 Example Usage\r\n\r\nSuppose that you have a function that accepts a variable of type `DOMType`.\r\n\r\n{% gist https://gist.github.com/dance2die/e3b0dc753d6975d30ec328f41000cb74 %}\r\n\u003cfigcaption\u003eprintDOM\u003c/figcaption\u003e\r\n\r\nWhen you pass values other than `a`, `div`, `p`, you get an error message during compiler time.\r\n\r\n## 🤔 Why no array?\r\n\r\nYou might have declared a list of values as an array.\r\n\r\n{% gist https://gist.github.com/dance2die/5ad09130defbd016a8b28afe00a5e030 %}\r\n\r\nBut the current version of TypeScript (3.3.1) doesn’t know how to infer types from an array passed as a variable.\r\n\r\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_Refer to_ [_this Stack Overflow answer_](https://stackoverflow.com/a/54061487/4035)_._\r\n\r\nIn the demo below, you can see that `printDOMType” accepts any string without any errors.\r\n\r\n[![Edit TypeScript - Array to Literal - Doesn't work](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/qrrq24k7q)\r\n\r\n![“printDOMType” accepts any string](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/array-literal.png?w=1170\u0026ssl=1)\u003cfigcaption\u003e“printDOMType” accepts any string\u003c/figcaption\u003e\r\n\r\nA change is underway to enable array value to be inferred to be used as string literals in version 3.4.  \r\nFor now, you’d have to stick with an object.\r\n\r\n## 🎉 Parting Words\r\n\r\nI’ve started diving into the world of TypeScript and figuring this out took me roughly four days.\r\n\r\nTypeScript has been both good and bad and I consider this a part of learning process.\r\n\r\nI hope you don’t go thru the same trouble with this issue.\r\n\r\n## 🏔 Resources\r\n\r\n- Official TypeScript Documentation\r\n  - [String Literal Types](https://www.typescriptlang.org/docs/handbook/advanced-types.html#string-literal-types)\r\n  - [keyof](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html) operator\r\n- [Four days of self-note](https://spectrum.chat/typescript/general/solved-is-there-a-way-to-create-type-from-an-array~2317e93b-0c66-4088-a4a6-9d6ebbd257ea) in Spectrum\r\n- [CodeSandbox Demo](https://codesandbox.io/s/vj4w899q55)\r\n- Stack Overflow Question – [array to strin](https://stackoverflow.com/a/54061487/4035)[g](https://stackoverflow.com/a/54061487/4035)[literal type](https://stackoverflow.com/a/54061487/4035)\r\n",
    "canonical_url": "https://www.slightedgecoder.com/2019/02/02/dynamically-build-typescript-string-literal-type/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2019/02/02/dynamically-build-typescript-string-literal-type/",
    "positive_reactions_count": 25,
    "edited_at": "2019-02-02T20:16:13.441Z",
    "crossposted_at": "2019-02-02T20:14:32.807Z",
    "language": null,
    "cached_tag_list": "typescript",
    "path": "/dance2die/dynamically-build-typescript-string-literal-type-1bc7",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-02-02T19:02:55.000Z"
  },
  {
    "title": "Getting DOM content from Chrome Extension",
    "slug": "getting-dom-content-from-chrome-extension-ela-temp-slug-5175466",
    "created_at": "2019-02-10T20:04:25.445Z",
    "main_image": null,
    "description": "\n\nPhoto by [_Sai Kiran Anagani](https://unsplash.com/photos/5Ntkpxqt54Y?utm_sourc...",
    "published": false,
    "published_at": "2019-02-10T19:51:39.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003cem\u003e[_Sai Kiran Anagani\u003c/em\u003e](\u003ca href=\"https://unsplash.com/photos/5Ntkpxqt54Y?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003ehttps://unsplash.com/photos/5Ntkpxqt54Y?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\u003c/a\u003e)\u003c/em\u003e on \u003cem\u003e[_Unsplash\u003c/em\u003e](\u003ca href=\"https://unsplash.com/search/photos/execute-code?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003ehttps://unsplash.com/search/photos/execute-code?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\u003c/a\u003e)\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eNote to self on how to get DOM content from Chrome Extension\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eAs I was building a Chrome Extension, \u003ca href=\"https://github.com/dance2die/easy-github\"\u003eEasy GitHub\u003c/a\u003e to generate I had to get DOM content on a GitHub page to see if it’s a forked page or not.\u003c/p\u003e\n\n\u003cp\u003eEasy GitHub is to display initially a way to sync forked repository with the master repository.\u003c/p\u003e\n\n\u003cp\u003eReference \u003ca href=\"https://twitter.com/CodeSharePaul\"\u003ePaul Seal\u003c/a\u003e‘s blog – \u003ca href=\"https://codeshare.co.uk/blog/how-to-keep-your-fork-up-to-date-with-the-master-repository-in-github/\"\u003eHow to keep your fork up to date with the master repository in GitHub\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eFor forked GitHub page, GitHub page contains a meta tag named \u003ccode\u003eoctolytics-dimension-repository_parent_nwo\u003c/code\u003e , which contains the parent repository the current repository is forked from.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--0eQgeJ9l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/octolytics-dimension-repository_parent_nwo.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--0eQgeJ9l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/octolytics-dimension-repository_parent_nwo.png%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eBut if the current page is not a fork repo page, then it doesn’t have \u003ccode\u003eoctolytics-dimension-repository_parent_nwo\u003c/code\u003e but have to use \u003ccode\u003ego-import\u003c/code\u003e meta value.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--zrCIIy6j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/go-import.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--zrCIIy6j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/go-import.png%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAs a last resort, I needed to use \u003ccode\u003ewindow.location.href\u003c/code\u003e(or show a message that it’s not a repo page in Chrome Extension popup).\u003c/p\u003e\n\n\u003cp\u003eWhen using \u003ccode\u003edocument.getElementBy*\u003c/code\u003e or \u003ccode\u003edocument.querySelector*\u003c/code\u003e within Chrome Extension, it fetches DOM for the extension HTML files, not from the tab content.\u003c/p\u003e\n\n\u003cp\u003eSo to retrieve DOM content, one need to \u003ca href=\"https://developer.chrome.com/extensions/tabs#method-executeScript\"\u003eexecute\u003c/a\u003ea script within a tab by sending a query (\u003ccode\u003edocument.querySelector*\u003c/code\u003e or \u003ccode\u003edocument.getElement*\u003c/code\u003e) like following.\u003c/p\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/7c79a1e09b334da6d723bd07e2bb7682\"\u003eView this gist on GitHub\u003c/a\u003e\u003cfigcaption\u003eExecute Script within a Tab to extract DOM content\u003c/figcaption\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/dance2die/easy-github/blob/master/src/page_action/popup.js#L50\"\u003e\u003cem\u003eSource code\u003c/em\u003e\u003c/a\u003e \u003cem\u003eon GitHub.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eYou can see above that, you pass a \u003ccode\u003ecode\u003c/code\u003e to query DOM elements and extract URLs, which you can use to create a git command script.\u003c/p\u003e\n\n\u003cp\u003eYou can add a \u003ca href=\"https://developer.chrome.com/extensions/tabs\"\u003etabs permission\u003c/a\u003e to \u003ccode\u003eexecute\u003c/code\u003e the script but it can be too detrimental thus you can simply add URLs to allow script executions.\u003c/p\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/ff058d7fbc01103b1c3e8df4caae74dc\"\u003eView this gist on GitHub\u003c/a\u003e\u003cfigcaption\u003e“permissions” section in Chrome Extension manifest.json\u003c/figcaption\u003e\n\n\u003cp\u003e\u003cem\u003eReference – Stack Overflow –\u003c/em\u003e\u003ca href=\"https://stackoverflow.com/a/45601794/4035\"\u003e\u003cem\u003echrome.tabs.executeScript not working?\u003c/em\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2019/02/10/getting-dom-content-from-chrome-extension/\"\u003eGetting DOM content from Chrome Extension\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Getting DOM content from Chrome Extension\npublished: false\ntags: Programming,Self Note,chrome plugin,selfnote\ncanonical_url: https://www.slightedgecoder.com/2019/02/10/getting-dom-content-from-chrome-extension/\n---\n\n_Photo by _[_Sai Kiran Anagani_](https://unsplash.com/photos/5Ntkpxqt54Y?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_ on _[_Unsplash_](https://unsplash.com/search/photos/execute-code?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)\n\n_Note to self on how to get DOM content from Chrome Extension_\n\nAs I was building a Chrome Extension, [Easy GitHub](https://github.com/dance2die/easy-github) to generate I had to get DOM content on a GitHub page to see if it’s a forked page or not.\n\nEasy GitHub is to display initially a way to sync forked repository with the master repository.\n\nReference [Paul Seal](https://twitter.com/CodeSharePaul)‘s blog – [How to keep your fork up to date with the master repository in GitHub](https://codeshare.co.uk/blog/how-to-keep-your-fork-up-to-date-with-the-master-repository-in-github/)\n\n \n\nFor forked GitHub page, GitHub page contains a meta tag named `octolytics-dimension-repository_parent_nwo` , which contains the parent repository the current repository is forked from.\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/octolytics-dimension-repository_parent_nwo.png?w=1170\u0026ssl=1)\n\nBut if the current page is not a fork repo page, then it doesn’t have `octolytics-dimension-repository_parent_nwo` but have to use `go-import` meta value.\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/go-import.png?w=1170\u0026ssl=1)\n\nAs a last resort, I needed to use `window.location.href`(or show a message that it’s not a repo page in Chrome Extension popup).\n\nWhen using `document.getElementBy*` or `document.querySelector*` within Chrome Extension, it fetches DOM for the extension HTML files, not from the tab content.\n\nSo to retrieve DOM content, one need to [execute](https://developer.chrome.com/extensions/tabs#method-executeScript)a script within a tab by sending a query (`document.querySelector*` or `document.getElement*`) like following.\n\n\u003cscript src=\"https://gist.github.com/dance2die/7c79a1e09b334da6d723bd07e2bb7682.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/7c79a1e09b334da6d723bd07e2bb7682\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\u003cfigcaption\u003eExecute Script within a Tab to extract DOM content\u003c/figcaption\u003e\n\n[_Source code_](https://github.com/dance2die/easy-github/blob/master/src/page_action/popup.js#L50) _on GitHub._\n\nYou can see above that, you pass a `code` to query DOM elements and extract URLs, which you can use to create a git command script.\n\nYou can add a [tabs permission](https://developer.chrome.com/extensions/tabs) to `execute` the script but it can be too detrimental thus you can simply add URLs to allow script executions.\n\n\u003cscript src=\"https://gist.github.com/dance2die/ff058d7fbc01103b1c3e8df4caae74dc.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/ff058d7fbc01103b1c3e8df4caae74dc\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\u003cfigcaption\u003e“permissions” section in Chrome Extension manifest.json\u003c/figcaption\u003e\n\n_Reference – Stack Overflow –_[_chrome.tabs.executeScript not working?_](https://stackoverflow.com/a/45601794/4035)\n\nThe post [Getting DOM content from Chrome Extension](https://www.slightedgecoder.com/2019/02/10/getting-dom-content-from-chrome-extension/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2019/02/10/getting-dom-content-from-chrome-extension/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2019/02/10/getting-dom-content-from-chrome-extension/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": null,
    "cached_tag_list": "programming, selfnote, chromeplugin",
    "path": "/dance2die/getting-dom-content-from-chrome-extension-ela-temp-slug-5175466",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-02-10T19:51:39.000Z"
  },
  {
    "title": "Being explicit with your own React Hook + TypeScript return type",
    "slug": "being-explicit-with-your-own-react-hook--typescript-return-type-2oci-temp-slug-1801980",
    "created_at": "2019-02-10T20:43:52.980Z",
    "main_image": null,
    "description": "\n\nPhoto by [_Rafaela Biazi](https://unsplash.com/photos/4pJ9gO6NTAw?utm_source=un...",
    "published": false,
    "published_at": "2019-02-10T20:40:17.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003cem\u003e[_Rafaela Biazi\u003c/em\u003e](\u003ca href=\"https://unsplash.com/photos/4pJ9gO6NTAw?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003ehttps://unsplash.com/photos/4pJ9gO6NTAw?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\u003c/a\u003e)\u003c/em\u003e on \u003cem\u003e[_Unsplash\u003c/em\u003e](\u003ca href=\"https://unsplash.com/search/photos/typewriter-hooks?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003ehttps://unsplash.com/search/photos/typewriter-hooks?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\u003c/a\u003e)\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/TheAifam5\"\u003eTheAifam5\u003c/a\u003e graciously reported \u003ca href=\"https://github.com/dance2die/react-use-localstorage/issues/9\"\u003ean issue\u003c/a\u003e for \u003ca href=\"https://github.com/dance2die/react-use-localstorage\"\u003ereact-use-localstorage\u003c/a\u003e that even though it was written using TypeScript, it wasn’t distributing TypeScript type declaration file.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003ereact-use-localstorage\u003c/code\u003e is a React Hook that returns an array of Local Storage item and a way to set it\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eInitially written in JavaScript but recently converted to TypeScript to learn TypeScript.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eI followed TheAifam5’s instruction to generate a type file and distributed it.\u003c/p\u003e\n\n\u003cp\u003eBut when I tried to use the new distrubution within a React + TypeScript project, I was getting the following error.\u003c/p\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/2cb920c9166637535e0b44e867152042\"\u003eView this gist on GitHub\u003c/a\u003e\u003cfigcaption\u003eError Message\u003c/figcaption\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--blQSrcAn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/typescript-error-with-bad-typing.jpg%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--blQSrcAn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/typescript-error-with-bad-typing.jpg%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003cfigcaption\u003eError Message in VS Code\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eBelow is the full source code for \u003ccode\u003euseLocalStorage\u003c/code\u003e.\u003c/p\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/004c227bd94d574c313cde52868e9cf5\"\u003eView this gist on GitHub\u003c/a\u003e\u003cfigcaption\u003euseLocalStorage – react-use-localstorage on NPM\u003c/figcaption\u003e\n\n\u003cp\u003eAs you can see, \u003ccode\u003euseLocalStorage\u003c/code\u003e returns an array of \u003ccode\u003e[item, setItem]\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eWhen auto-generating a type file using \u003ccode\u003etsc\u003c/code\u003e, TypeScript generates following \u003ca href=\"https://github.com/dance2die/blog.typescript-typing-for-react-hooks/blob/implicit_return_typing/dist/index.d.ts\"\u003edefinition code\u003c/a\u003e.\u003c/p\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/9597d9483267c0a1df837f2119bdbd60\"\u003eView this gist on GitHub\u003c/a\u003e\u003cfigcaption\u003eBad return type\u003c/figcaption\u003e\n\n\u003cp\u003eTypeScript inferred the return type as \u003ccode\u003e(string | ((item: string) =\u0026gt; void))[]\u003c/code\u003e which is not right.\u003c/p\u003e\n\n\u003cp\u003eSo to fix it you need to explicitly declare the return type of \u003ccode\u003euseLocalStorage\u003c/code\u003e to generate a correct type definition.\u003c/p\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/eb06fd7002fe75ce7f948fdcc754df44\"\u003eView this gist on GitHub\u003c/a\u003e\u003cfigcaption\u003eReturn type specified explicitly\u003c/figcaption\u003e\n\n\u003cp\u003eYou can now see that TypeScript has generated the definition correctly.\u003c/p\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/92efeaee3c5be12a6bea18033fd09e2d\"\u003eView this gist on GitHub\u003c/a\u003e\u003cfigcaption\u003eGood return type\u003c/figcaption\u003e\n\n\u003cp\u003eAnd TypeScript is happy (in VS Code).\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--IS77G7hw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/good.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--IS77G7hw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/good.png%3Fw%3D1170%26ssl%3D1\" alt=\"\"\u003e\u003c/a\u003e\u003cfigcaption\u003eTypeScript is now \u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--DvXCaIjD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f642.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--DvXCaIjD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f642.png\" alt=\"🙂\"\u003e\u003c/a\u003e\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TxF6dnRf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f914.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TxF6dnRf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f914.png\" alt=\"🤔\"\u003e\u003c/a\u003e Question to readers\u003c/p\u003e\n\n\u003cp\u003eDoes anyone know why TypeScript wasn’t able to infer the return type correctly?\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--S2ZLeEs2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f3d4.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--S2ZLeEs2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s.w.org/images/core/emoji/11/72x72/1f3d4.png\" alt=\"🏔\"\u003e\u003c/a\u003e Resources\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eGitHub Issue – \u003ca href=\"https://github.com/dance2die/react-use-localstorage/issues/9\"\u003ePackage does not contains typings for Typescript development\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eDemo Codes\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://github.com/dance2die/blog.typescript-typing-for-react-hooks/blob/master/src/index.ts\"\u003euseLocalStorage with explicit return type\u003c/a\u003e \u0026amp; (good) \u003ca href=\"https://github.com/dance2die/blog.typescript-typing-for-react-hooks/blob/master/dist/index.d.ts\"\u003edeclaration file\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://github.com/dance2die/blog.typescript-typing-for-react-hooks/blob/implicit_return_typing/src/index.ts\"\u003euseLocalStorage with implicit return type\u003c/a\u003e \u0026amp; (bad) \u003ca href=\"https://github.com/dance2die/blog.typescript-typing-for-react-hooks/blob/implicit_return_typing/dist/index.d.ts\"\u003edeclaration file\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003ereact-use-localstorage\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dance2die/react-use-localstorage\"\u003eSource Code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.npmjs.com/package/react-use-localstorage\"\u003eNPM registry\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2019/02/10/being-explicit-with-your-own-react-hook-typescript-return-type/\"\u003eBeing explicit with your own React Hook + TypeScript return type\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Being explicit with your own React Hook + TypeScript return type\npublished: false\ntags: Blog Entry,Programming,React,TypeScript\ncanonical_url: https://www.slightedgecoder.com/2019/02/10/being-explicit-with-your-own-react-hook-typescript-return-type/\n---\n\n_Photo by _[_Rafaela Biazi_](https://unsplash.com/photos/4pJ9gO6NTAw?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_ on _[_Unsplash_](https://unsplash.com/search/photos/typewriter-hooks?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)\n\n[TheAifam5](https://github.com/TheAifam5) graciously reported [an issue](https://github.com/dance2die/react-use-localstorage/issues/9) for [react-use-localstorage](https://github.com/dance2die/react-use-localstorage) that even though it was written using TypeScript, it wasn’t distributing TypeScript type declaration file.\n\n`react-use-localstorage` is a React Hook that returns an array of Local Storage item and a way to set it\n\n_Initially written in JavaScript but recently converted to TypeScript to learn TypeScript._\n\nI followed TheAifam5’s instruction to generate a type file and distributed it.\n\nBut when I tried to use the new distrubution within a React + TypeScript project, I was getting the following error.\n\n\u003cscript src=\"https://gist.github.com/dance2die/2cb920c9166637535e0b44e867152042.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/2cb920c9166637535e0b44e867152042\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\u003cfigcaption\u003eError Message\u003c/figcaption\u003e\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/typescript-error-with-bad-typing.jpg?w=1170\u0026ssl=1)\u003cfigcaption\u003eError Message in VS Code\u003c/figcaption\u003e\n\nBelow is the full source code for `useLocalStorage`.\n\n\u003cscript src=\"https://gist.github.com/dance2die/004c227bd94d574c313cde52868e9cf5.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/004c227bd94d574c313cde52868e9cf5\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\u003cfigcaption\u003euseLocalStorage – react-use-localstorage on NPM\u003c/figcaption\u003e\n\nAs you can see, `useLocalStorage` returns an array of `[item, setItem]`.\n\nWhen auto-generating a type file using `tsc`, TypeScript generates following [definition code](https://github.com/dance2die/blog.typescript-typing-for-react-hooks/blob/implicit_return_typing/dist/index.d.ts).\n\n\u003cscript src=\"https://gist.github.com/dance2die/9597d9483267c0a1df837f2119bdbd60.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/9597d9483267c0a1df837f2119bdbd60\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\u003cfigcaption\u003eBad return type\u003c/figcaption\u003e\n\nTypeScript inferred the return type as `(string | ((item: string) =\u003e void))[]` which is not right.\n\nSo to fix it you need to explicitly declare the return type of `useLocalStorage` to generate a correct type definition.\n\n\u003cscript src=\"https://gist.github.com/dance2die/eb06fd7002fe75ce7f948fdcc754df44.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/eb06fd7002fe75ce7f948fdcc754df44\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\u003cfigcaption\u003eReturn type specified explicitly\u003c/figcaption\u003e\n\nYou can now see that TypeScript has generated the definition correctly.\n\n\u003cscript src=\"https://gist.github.com/dance2die/92efeaee3c5be12a6bea18033fd09e2d.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/92efeaee3c5be12a6bea18033fd09e2d\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\u003cfigcaption\u003eGood return type\u003c/figcaption\u003e\n\nAnd TypeScript is happy (in VS Code).\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/good.png?w=1170\u0026ssl=1)\u003cfigcaption\u003eTypeScript is now \u003cimg src=\"https://s.w.org/images/core/emoji/11/72x72/1f642.png\" alt=\"🙂\" style=\"height: 1em; max-height: 1em;\"\u003e\u003c/figcaption\u003e\n\n##    \n ![🤔](https://s.w.org/images/core/emoji/11/72x72/1f914.png) Question to readers\n\nDoes anyone know why TypeScript wasn’t able to infer the return type correctly?\n\n##    \n ![🏔](https://s.w.org/images/core/emoji/11/72x72/1f3d4.png) Resources\n\n- GitHub Issue – [Package does not contains typings for Typescript development](https://github.com/dance2die/react-use-localstorage/issues/9)\n- Demo Codes\n  - [useLocalStorage with explicit return type](https://github.com/dance2die/blog.typescript-typing-for-react-hooks/blob/master/src/index.ts) \u0026 (good) [declaration file](https://github.com/dance2die/blog.typescript-typing-for-react-hooks/blob/master/dist/index.d.ts)\n  - [useLocalStorage with implicit return type](https://github.com/dance2die/blog.typescript-typing-for-react-hooks/blob/implicit_return_typing/src/index.ts) \u0026 (bad) [declaration file](https://github.com/dance2die/blog.typescript-typing-for-react-hooks/blob/implicit_return_typing/dist/index.d.ts)\n- react-use-localstorage\n  - [Source Code](https://github.com/dance2die/react-use-localstorage)\n  - [NPM registry](https://www.npmjs.com/package/react-use-localstorage)\n\nThe post [Being explicit with your own React Hook + TypeScript return type](https://www.slightedgecoder.com/2019/02/10/being-explicit-with-your-own-react-hook-typescript-return-type/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2019/02/10/being-explicit-with-your-own-react-hook-typescript-return-type/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2019/02/10/being-explicit-with-your-own-react-hook-typescript-return-type/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, programming, react, typescript",
    "path": "/dance2die/being-explicit-with-your-own-react-hook--typescript-return-type-2oci-temp-slug-1801980",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-02-10T20:40:17.000Z"
  },
  {
    "title": "Emoji Error in Chrome Extension HTML",
    "slug": "emoji-error-in-chrome-extension-html-len",
    "created_at": "2019-02-17T06:13:50.816Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/zz88jgwzlbnk7syxg54m.jpg",
    "description": "\n\n                    Photo by Bernard Hermant on Unsplash\n\nI’ve had a problem wh...",
    "published": true,
    "published_at": "2019-02-17T06:08:13.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e                    \u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/bSpqe48INMg?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eBernard Hermant\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/emoji?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eI’ve had a problem where I was trying to display an Emoji in a Chrome Extension header of default popup HTML, \u003ccode\u003epage_action.html\u003c/code\u003e (specified by \u003ccode\u003epage_action -\u0026gt; default_popup\u003c/code\u003e in \u003ccode\u003emanifest.json\u003c/code\u003e).\u003c/p\u003e\n\n\u003cp\u003eBut got the jumbled up characters instead.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--O3t0Hxqh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/2019-02-16_23-00-15.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--O3t0Hxqh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/2019-02-16_23-00-15.png%3Fw%3D1170%26ssl%3D1\" alt=\"Emoji displayed as gobbledygook\"\u003e\u003c/a\u003e\u003cfigcaption\u003eEmoji displayed as gobbledygook\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eThe problem was that I had to instruct Chrome that I am using a unicode by adding a charset meta tag.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/ab0741ac11b3116d0020075d7d87c8bc.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cfigcaption\u003eCharacter Set set to UTF-8\u003cbr\u003e\u003c/figcaption\u003e\n\n\u003cp\u003eThis has fixed the issue and shows the cute 🐥 emoji correctly in the Chrome Extension popup.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--UcST6k_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/emoji-shown.jpg%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--UcST6k_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/emoji-shown.jpg%3Fw%3D1170%26ssl%3D1\" alt=\"You can now see the cute baby chick\"\u003e\u003c/a\u003e\u003cfigcaption\u003eYou can now see the cute baby chick 🐥\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2019/02/17/emoji-error-in-chrome-extension-html/\"\u003eEmoji Error in Chrome Extension HTML\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: Emoji Error in Chrome Extension HTML\r\npublished: true\r\ntags: html, unicode, emoji\r\ncanonical_url: https://www.slightedgecoder.com/2019/02/17/emoji-error-in-chrome-extension-html/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/zz88jgwzlbnk7syxg54m.jpg\r\n---\r\n\r\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_Photo by [Bernard Hermant](https://unsplash.com/photos/bSpqe48INMg?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/emoji?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_\r\n\r\nI’ve had a problem where I was trying to display an Emoji in a Chrome Extension header of default popup HTML, `page_action.html` (specified by `page_action -\u003e default_popup` in `manifest.json`).\r\n\r\nBut got the jumbled up characters instead.\r\n\r\n \r\n\r\n![Emoji displayed as gobbledygook](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/2019-02-16_23-00-15.png?w=1170\u0026ssl=1)\u003cfigcaption\u003eEmoji displayed as gobbledygook\u003c/figcaption\u003e\r\n\r\nThe problem was that I had to instruct Chrome that I am using a unicode by adding a charset meta tag.\r\n\r\n{% gist https://gist.github.com/dance2die/ab0741ac11b3116d0020075d7d87c8bc %}\r\n\u003cfigcaption\u003eCharacter Set set to UTF-8\u003cbr\u003e\u003c/figcaption\u003e\r\n\r\nThis has fixed the issue and shows the cute 🐥 emoji correctly in the Chrome Extension popup.\r\n\r\n![You can now see the cute baby chick](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/02/emoji-shown.jpg?w=1170\u0026ssl=1)\u003cfigcaption\u003eYou can now see the cute baby chick 🐥\u003c/figcaption\u003e\r\n\r\n_The post [Emoji Error in Chrome Extension HTML](https://www.slightedgecoder.com/2019/02/17/emoji-error-in-chrome-extension-html/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com)._",
    "canonical_url": "https://www.slightedgecoder.com/2019/02/17/emoji-error-in-chrome-extension-html/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2019/02/17/emoji-error-in-chrome-extension-html/",
    "positive_reactions_count": 3,
    "edited_at": null,
    "crossposted_at": "2019-02-21T03:28:52.934Z",
    "language": null,
    "cached_tag_list": "html, unicode, emoji",
    "path": "/dance2die/emoji-error-in-chrome-extension-html-len",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-02-17T06:08:13.000Z"
  },
  {
    "title": "@cshooks/usetrie, A React Hook for Typeahead/Autocomplete",
    "slug": "cshooksusetrie-a-react-hook-for-typeaheadautocomplete-4911",
    "created_at": "2019-03-23T19:23:59.175Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/5lg12g5mf1utrgdv2abu.jpg",
    "description": "\n\nPhoto by Jamie Street on Unsplash – “trie” is from “Retrieval” thus the cute 🐶 ...",
    "published": true,
    "published_at": "2019-03-23T19:09:37.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/MoDcnVRN5JU?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eJamie Street\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/retriever?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e – “trie” is from “\u003ca href=\"https://en.wikipedia.org/wiki/Trie#History_and_etymology\"\u003eRetrieval\u003c/a\u003e” thus the cute 🐶 “Retriever”\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eI’ve released \u003ca href=\"https://www.npmjs.com/package/@cshooks/usetrie\"\u003e@cshooks/usetrie\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eIt’s a React Hook for \u003ca href=\"https://en.wikipedia.org/wiki/Typeahead\"\u003eTypeahead\u003c/a\u003e/autocompletion.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://github.com/cshooks/hooks\"\u003e@cshooks/hooks\u003c/a\u003e will be the home 🏠 of Computer Science data structures/algorithms related hooks.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"why\" href=\"#why\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🤔 Why?\n\u003c/h2\u003e\n\n\u003cp\u003eWhen you have a list of texts you want to match by prefix, you have to match each text in an array one by one, which can be time consuming.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Trie\"\u003eTrie\u003c/a\u003e is a data structure, which stores text in a tree, which enables a fast prefix look up.\u003cbr\u003e\u003cbr\u003e\nAnd \u003ccode\u003euseTrie\u003c/code\u003e works as a \u003ca href=\"https://en.wikipedia.org/wiki/Facade_pattern\"\u003efacade\u003c/a\u003e to enable fast prefix search.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"how\" href=\"#how\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔧 How?\n\u003c/h2\u003e\n\n\u003cp\u003eCheck out the \u003ca href=\"https://github.com/cshooks/hooks/blob/master/packages/useTrie/README.md\"\u003eREADME\u003c/a\u003e file, which explains the usage in detail.\u003c/p\u003e\n\n\u003cp\u003eHere are some quick demo Sandboxes for the impatients.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://codesandbox.io/s/3jzy58wqq\"\u003eSimple demo add/remove texts\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://codesandbox.io/s/zz2mxlxzp\"\u003eString/object array \u0026amp; Reddit data demo\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--tZ104IvC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/03/2019-03-23_13-44-52.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--tZ104IvC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/03/2019-03-23_13-44-52.gif%3Fw%3D1170%26ssl%3D1\" alt=\"demos\"\u003e\u003c/a\u003e\u003cfigcaption\u003eDemos\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"additional-info\" href=\"#additional-info\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ➕ Additional Info\n\u003c/h2\u003e\n\n\u003cp\u003eI’ve created this initially for academic purposes to learn Trie data structure so \u003ccode\u003eTrie\u003c/code\u003e class is imperative and \u003ccode\u003euseTrie\u003c/code\u003e hook was forced to fit to work with declarative nature of React as shown below, which is not ideal.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/168fcb4c7e85fbe8573c160b32520250.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cfigcaption\u003eadd/remove returns a new instance\u003c/figcaption\u003e\n\n\u003cp\u003e\u003cem\u003e\u003ca href=\"https://github.com/cshooks/hooks/blob/master/packages/useTrie/src/index.ts#L191\"\u003ehttps://github.com/cshooks/hooks/blob/master/packages/useTrie/src/index.ts#L191\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eI’d really appreciate any feedback on how I can improve the code base.\u003c/p\u003e\n\n\u003cp\u003eI will share in the next post what I’ve learned and failures.\u003c/p\u003e\n\n\u003cp\u003eAnd I plan to add other hooks returning \u003ca href=\"https://github.com/cshooks/hooks/projects/1\"\u003eMin/Max heaps\u003c/a\u003e \u0026amp; \u003ca href=\"https://github.com/cshooks/hooks/projects/2\"\u003ePermutations\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"%F0%9F%8F%94-resources\" href=\"#%F0%9F%8F%94-resources\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🏔 Resources\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eNPM – \u003ca href=\"https://www.npmjs.com/package/@cshooks/usetrie\"\u003e@cshooks/usetrie\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://github.com/cshooks/hooks/tree/master/packages/useTrie\"\u003eSource Code\u003c/a\u003e on GitHub\u003c/li\u003e\n\u003cli\u003eLicense – \u003ca href=\"https://github.com/cshooks/hooks/blob/master/packages/useTrie/LICENSE\"\u003eMIT\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2019/03/23/cshooks-usetrie-a-react-hook-for-typeahead-autocomplete/\"\u003e@cshooks/usetrie, A React Hook for Typeahead/Autocomplete\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: @cshooks/usetrie, A React Hook for Typeahead/Autocomplete\r\npublished: true\r\ntags: react, javascript, npm, opensource\r\ncanonical_url: https://www.slightedgecoder.com/2019/03/23/cshooks-usetrie-a-react-hook-for-typeahead-autocomplete/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/5lg12g5mf1utrgdv2abu.jpg\r\n---\r\n\r\n_Photo by [Jamie Street](https://unsplash.com/photos/MoDcnVRN5JU?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/retriever?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) – “trie” is from “[Retrieval](https://en.wikipedia.org/wiki/Trie#History_and_etymology)” thus the cute 🐶 “Retriever”_\r\n\r\nI’ve released [@cshooks/usetrie](https://www.npmjs.com/package/@cshooks/usetrie).\r\n\r\nIt’s a React Hook for [Typeahead](https://en.wikipedia.org/wiki/Typeahead)/autocompletion.\r\n\r\n[@cshooks/hooks](https://github.com/cshooks/hooks) will be the home 🏠 of Computer Science data structures/algorithms related hooks.\r\n\r\n \r\n## 🤔 Why?\r\n\r\nWhen you have a list of texts you want to match by prefix, you have to match each text in an array one by one, which can be time consuming.\r\n\r\n[Trie](https://en.wikipedia.org/wiki/Trie) is a data structure, which stores text in a tree, which enables a fast prefix look up.   \r\nAnd `useTrie` works as a [facade](https://en.wikipedia.org/wiki/Facade_pattern) to enable fast prefix search.\r\n\r\n## 🔧 How?\r\n\r\nCheck out the [README](https://github.com/cshooks/hooks/blob/master/packages/useTrie/README.md) file, which explains the usage in detail.\r\n\r\nHere are some quick demo Sandboxes for the impatients.\r\n\r\n- [Simple demo add/remove texts](https://codesandbox.io/s/3jzy58wqq)\r\n- [String/object array \u0026 Reddit data demo](https://codesandbox.io/s/zz2mxlxzp)\r\n\r\n![demos](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/03/2019-03-23_13-44-52.gif?w=1170\u0026ssl=1)\u003cfigcaption\u003eDemos\u003c/figcaption\u003e\r\n\r\n## ➕ Additional Info\r\n\r\nI’ve created this initially for academic purposes to learn Trie data structure so `Trie` class is imperative and `useTrie` hook was forced to fit to work with declarative nature of React as shown below, which is not ideal.\r\n\r\n{% gist https://gist.github.com/dance2die/168fcb4c7e85fbe8573c160b32520250 %}\r\n\u003cfigcaption\u003eadd/remove returns a new instance\u003c/figcaption\u003e\r\n\r\n_[https://github.com/cshooks/hooks/blob/master/packages/useTrie/src/index.ts#L191](https://github.com/cshooks/hooks/blob/master/packages/useTrie/src/index.ts#L191)_\r\n\r\nI’d really appreciate any feedback on how I can improve the code base.\r\n\r\nI will share in the next post what I’ve learned and failures.\r\n\r\nAnd I plan to add other hooks returning [Min/Max heaps](https://github.com/cshooks/hooks/projects/1) \u0026 [Permutations](https://github.com/cshooks/hooks/projects/2).\r\n\r\n## 🏔 Resources\r\n\r\n- NPM – [@cshooks/usetrie](https://www.npmjs.com/package/@cshooks/usetrie)\r\n- [Source Code](https://github.com/cshooks/hooks/tree/master/packages/useTrie) on GitHub\r\n- License – [MIT](https://github.com/cshooks/hooks/blob/master/packages/useTrie/LICENSE)\r\n\r\nThe post [@cshooks/usetrie, A React Hook for Typeahead/Autocomplete](https://www.slightedgecoder.com/2019/03/23/cshooks-usetrie-a-react-hook-for-typeahead-autocomplete/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2019/03/23/cshooks-usetrie-a-react-hook-for-typeahead-autocomplete/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 7,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2019/03/23/cshooks-usetrie-a-react-hook-for-typeahead-autocomplete/",
    "positive_reactions_count": 16,
    "edited_at": null,
    "crossposted_at": "2019-03-23T19:46:49.975Z",
    "language": null,
    "cached_tag_list": "react, javascript, npm, opensource",
    "path": "/dance2die/cshooksusetrie-a-react-hook-for-typeaheadautocomplete-4911",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-03-25T02:34:43.937Z"
  },
  {
    "title": "Space-time tradeoff Emoji Note",
    "slug": "space-time-tradeoff-emoji-note-1n2j",
    "created_at": "2019-03-24T03:58:21.866Z",
    "main_image": null,
    "description": "Understanding Space-time tradeoff on Wikipedia using emojis",
    "published": true,
    "published_at": "2019-03-24T04:07:04.905Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003eAnthony has shared wonderful tips on interviewing at Google.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag__link\"\u003e\n        \u003ca href=\"/anthonydmays\" class=\"ltag__link__link\"\u003e\n          \u003cdiv class=\"ltag__link__pic\"\u003e\n            \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--WXBZ4Jqn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--S2uC26S---/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://thepracticaldev.s3.amazonaws.com/uploads/user/profile_image/148563/d4b96eaf-94ff-4f04-bb08-6671d3b0f31b.jpg\" alt=\"anthonydmays image\"\u003e\n          \u003c/div\u003e\u003c/a\u003e\n          \u003ca href=\"/anthonydmays/interviewing-at-google-heres-6-things-you-absolutely-need-to-do-22lo\" class=\"ltag__link__link\"\u003e\n            \u003cdiv class=\"ltag__link__content\"\u003e\n              \u003ch2\u003eInterviewing at Google? Here’s 6 Things You Absolutely Need To Do\u003c/h2\u003e\n              \u003ch3\u003eAnthony D. Mays\u003c/h3\u003e\n              \u003cdiv class=\"ltag__link__taglist\"\u003e\n\u003cspan class=\"ltag__link__tag\"\u003e#interview\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#whiteboarding\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#career\u003c/span\u003e\u003cspan class=\"ltag__link__tag\"\u003e#coding\u003c/span\u003e\n\u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/a\u003e\n      \u003c/div\u003e\n\n\n\u003cp\u003eWithin the fourth tip, \u003ca href=\"https://dev.to/anthonydmays/interviewing-at-google-heres-6-things-you-absolutely-need-to-do-22lo#4-brainstorm-solutions-and-their-timespace-complexity\"\u003eBrainstorm solutions and their time/space complexity\u003c/a\u003e, Anthony stressed on \"\u003ca href=\"https://en.wikipedia.org/wiki/Space%E2%80%93time_tradeoff\"\u003espace-time tradeoff\u003c/a\u003e principle\", which I was vaguely familiar with.\u003c/p\u003e\n\n\u003cp\u003eWhile attempting to understand it, I drew a \u003ca href=\"http://rohdesign.com/sketchnotes/\"\u003esketchnote\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--7ctRRkP7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/ufcmasbdnr5n89161fqu.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--7ctRRkP7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/ufcmasbdnr5n89161fqu.png\" alt=\"sketchnote\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAs it's not sharable, I came up with emoji version.\u003c/p\u003e\n\n\u003ch1\u003e\n  \u003ca name=\"spacetime-tradeoff-table\" href=\"#spacetime-tradeoff-table\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Space-time Tradeoff Table\n\u003c/h1\u003e\n\n\u003cdiv class=\"table-wrapper-paragraph\"\u003e\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e⏰🔽💽🔼\u003c/th\u003e\n\u003cth\u003e(faster + more space)\u003c/th\u003e\n\u003cth\u003evs\u003c/th\u003e\n\u003cth\u003e⏰🔼💽🔽\u003c/th\u003e\n\u003cth\u003e(slower + less space)\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e🙄📑\u003c/td\u003e\n\u003ctd\u003e(Lookup table)\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e🔃💻\u003c/td\u003e\n\u003ctd\u003e(Recalculation)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e💾 x 1\u003c/td\u003e\n\u003ctd\u003e(Uncompressed Data)\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e💾 x 0.5\u003c/td\u003e\n\u003ctd\u003e(Compressed Data)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e🏪🖼\u003c/td\u003e\n\u003ctd\u003e(Stored Image)\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e🔃📜\u003c/td\u003e\n\u003ctd\u003e(Re-render)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e➿➡➰\u003c/td\u003e\n\u003ctd\u003e(Loop Unrolling)\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e👨‍💻 x 0.5\u003c/td\u003e\n\u003ctd\u003e(Smaller code)\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\u003c/div\u003e\n\n\u003ch1\u003e\n  \u003ca name=\"gist-of-each-tradeoff\" href=\"#gist-of-each-tradeoff\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Gist of each tradeoff\n\u003c/h1\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003cp\u003e🙄📑(Lookup table) vs. 🔃💻 (Recalculation)\u003cbr\u003e\nSaving computed data in memory saves time but increases the space usage.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e💾 x 1 (Uncompressed Data) vs. 💾 x 0.5 (Compressed Data)\u003cbr\u003e\nFaster to access uncompressed data as no decompression step is needed but requires more space.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e🏪🖼 (Stored Image) vs. 🔃📜 (Re-render)\u003cbr\u003e\nStoring image in cache is faster than re-rendering but requires more space (in disk/memory).\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e➿➡➰ (Loop Unrolling) vs. 👨‍💻 x 0.5 (Smaller code)\u003cbr\u003e\n\u003ca href=\"https://en.wikipedia.org/wiki/Loop_unrolling\"\u003eLoop unrolling\u003c/a\u003e can optimize execution speed at the cost of increased binary size.\u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eIt might be a bit too much of emojis but helped me to understand a bit better what tradeoffs are available.\u003c/p\u003e\n\n\u003cp\u003eFeel free to share your version of table or sketchnote  🙂\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": "",
    "body_markdown": "---\r\ntitle: Space-time tradeoff Emoji Note\r\npublished: true\r\ndescription: Understanding Space-time tradeoff on Wikipedia using emojis\r\ntags: computerscience, emoji, beginners, sketchnotes\r\n---\r\n\r\nAnthony has shared wonderful tips on interviewing at Google.\r\n\r\n\r\n{% link https://dev.to/anthonydmays/interviewing-at-google-heres-6-things-you-absolutely-need-to-do-22lo %}\r\n\r\nWithin the fourth tip, [Brainstorm solutions and their time/space complexity](https://dev.to/anthonydmays/interviewing-at-google-heres-6-things-you-absolutely-need-to-do-22lo#4-brainstorm-solutions-and-their-timespace-complexity), Anthony stressed on \"[space-time tradeoff](https://en.wikipedia.org/wiki/Space%E2%80%93time_tradeoff) principle\", which I was vaguely familiar with.\r\n\r\nWhile attempting to understand it, I drew a [sketchnote](http://rohdesign.com/sketchnotes/).\r\n\r\n![sketchnote](https://thepracticaldev.s3.amazonaws.com/i/ufcmasbdnr5n89161fqu.png)\r\n\r\nAs it's not sharable, I came up with emoji version.\r\n\r\n# Space-time Tradeoff Table\r\n⏰🔽💽🔼 | (faster + more space) |  vs  |  ⏰🔼💽🔽   |  (slower + less space)\r\n---------|----|----|------|---------\r\n🙄📑|   (Lookup table)        |         | 🔃💻 | (Recalculation)\r\n💾 x 1|    (Uncompressed Data)  |          |  💾 x 0.5 |  (Compressed Data)\r\n🏪🖼|    (Stored Image)       |          | 🔃📜 | (Re-render)\r\n➿➡➰ |(Loop Unrolling)   |             | 👨‍💻 x 0.5 | (Smaller code)\r\n\r\n\r\n# Gist of each tradeoff\r\n\r\n1. 🙄📑(Lookup table) vs. 🔃💻 (Recalculation)\r\nSaving computed data in memory saves time but increases the space usage.\r\n\r\n1. 💾 x 1 (Uncompressed Data) vs. 💾 x 0.5 (Compressed Data)\r\nFaster to access uncompressed data as no decompression step is needed but requires more space.\r\n\r\n1. 🏪🖼 (Stored Image) vs. 🔃📜 (Re-render)\r\nStoring image in cache is faster than re-rendering but requires more space (in disk/memory).\r\n\r\n1. ➿➡➰ (Loop Unrolling) vs. 👨‍💻 x 0.5 (Smaller code)\r\n[Loop unrolling](https://en.wikipedia.org/wiki/Loop_unrolling) can optimize execution speed at the cost of increased binary size.\r\n\r\n\r\nIt might be a bit too much of emojis but helped me to understand a bit better what tradeoffs are available.\r\n\r\nFeel free to share your version of table or sketchnote  🙂",
    "canonical_url": null,
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": false,
    "comments_count": 4,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": null,
    "positive_reactions_count": 20,
    "edited_at": null,
    "crossposted_at": null,
    "language": null,
    "cached_tag_list": "computerscience, emoji, beginners, sketchnotes",
    "path": "/dance2die/space-time-tradeoff-emoji-note-1n2j",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-03-25T19:05:58.176Z"
  },
  {
    "title": "Spread syntax gotcha in JavaScript class methods",
    "slug": "spread-syntax-gotcha-in-javascript-class-methods-1jmb",
    "created_at": "2019-03-30T22:23:00.908Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/l19dkoi3biycx13q8tt2.jpg",
    "description": "\n\nPhoto by Jay on Unsplash – Don’t get caught\n\n\n  \n  \n  Watch out when exposing a...",
    "published": true,
    "published_at": "2019-03-30T22:02:02.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/dkFJST9zZZo?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eJay\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/pokeball?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e – Don’t get caught\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"watch-out-when-exposing-a-mutable-data-structure-with-react-hooks\" href=\"#watch-out-when-exposing-a-mutable-data-structure-with-react-hooks\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  \u003cem\u003eWatch out when exposing a mutable data structure with React Hooks\u003c/em\u003e\n\u003c/h2\u003e\n\n\u003cp\u003eWhen you spread an object instance of a class to expose methods, methods might not be copied over.\u003c/p\u003e\n\n\u003cp\u003eSuppose that you have a \u003ccode\u003eTrie\u003c/code\u003e class,\u003cbr\u003e\u003cbr\u003e\nwhich you want to make it immutable by returning a new object using syntax spread.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eNot a good idea! Explained later.\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/3107d7b0a3d3eeeb0dcad5886f5b1bf9.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003ePrinting out \u003ccode\u003etrie\u003c/code\u003e object instance returned from \u003ccode\u003euseTrie\u003c/code\u003e won’t show \u003ccode\u003ehas\u003c/code\u003e and an empty method is printed.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/4192b1bab9e70e046515b456c147baf8.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eLet’s see why and how to solve the issue.\u003c/p\u003e\n\u003ch2\u003e\n  \u003ca name=\"analysis\" href=\"#analysis\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔬 Analysis\n\u003c/h2\u003e\n\n\u003cp\u003eTo understand the problem, let’s see how the class is \u003ca href=\"https://www.typescriptlang.org/play/index.html#src=class%20Trie%20%7B%0D%0A%20%20has(word)%20%7B%20return%20true%3B%20%7D%0D%0A%7D%0D%0A%0D%0Aclass%20Trie2%20%7B%0D%0A%20%20has%20%3D%20(word)%20%3D%3E%20true%3B%0D%0A%7D%0D%0A\"\u003etranspiled using TypeScript compiler\u003c/a\u003e (the transpiled babel code does the same but verbose so using TypeScript compiler here).\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/7419342babb86cafb72aaae443cff2c2.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003ehas\u003c/code\u003e method was added to the prototype, not to an instance of \u003ccode\u003eTrie\u003c/code\u003e class.\u003cbr\u003e\u003cbr\u003e\nSo \u003ccode\u003ehas\u003c/code\u003e is still available when you do \u003ccode\u003econst t = new Trie(); t.has(); // true\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eReturning a new object using spread syntax didn’t copy \u003ccode\u003ehas\u003c/code\u003e\u003cbr\u003e\u003cbr\u003e\nbecause \u003ca href=\"https://dmitripavlutin.com/object-rest-spread-properties-javascript/#12ownproperties\"\u003espread syntax only copies own \u0026amp; enumerable properties\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eBut \u003ccode\u003eprototype\u003c/code\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/prototype\"\u003eis not enumerable\u003c/a\u003e so \u003ccode\u003ehas\u003c/code\u003e is not copied over.\u003c/p\u003e\n\u003ch2\u003e\n  \u003ca name=\"resolving-the-issue\" href=\"#resolving-the-issue\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🧙‍♂️ Resolving the Issue\n\u003c/h2\u003e\n\n\u003cp\u003eYou can resolve the issue in two ways.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"\u003eBinding\u003c/a\u003ethe method explicitly to \u003ccode\u003ethis\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eUsing an \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions\"\u003earrow function expression\u003c/a\u003e.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch4\u003e\n  \u003ca name=\"1-bind-explicitly\" href=\"#1-bind-explicitly\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  1. Bind Explicitly\n\u003c/h4\u003e\n\n\u003cp\u003eYou can explicitly bind \u003ccode\u003ethis\u003c/code\u003e to the method in the constructor.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/0e123ece5776d334bf5e7fe39d88410b.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e, which is TypeScript-transpiled as\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/8e5597304ea3246396d1c40506169736.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eAnd printing the \u003ccode\u003etrie\u003c/code\u003e instance returned from \u003ccode\u003euseTrie\u003c/code\u003e will now show \u003ccode\u003e.has\u003c/code\u003e method.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/95b8a2bbf71316895673148e56441f18.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003ehas\u003c/code\u003e is still added to the \u003ccode\u003eprototype\u003c/code\u003e, which might not be what you want and it’s increasing the file size.\u003c/p\u003e\n\n\u003cp\u003eSo this brings us to,\u003c/p\u003e\n\u003ch4\u003e\n  \u003ca name=\"2-using-an-arrow-function-expression\" href=\"#2-using-an-arrow-function-expression\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  2. Using an arrow function expression\n\u003c/h4\u003e\n\n\u003cp\u003eWhen you declare the \u003ccode\u003ehas\u003c/code\u003e method using an arrow syntax, it’s transpiled by Transcript as shown below.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/5c1a5a0252c3851fc22bb95f3da0b117.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eYou can see that it’s \u003ca href=\"https://gist.github.com/dance2die/8e5597304ea3246396d1c40506169736#file-transpiled-bound-trie-js\"\u003esame\u003c/a\u003e without \u003ccode\u003ehas\u003c/code\u003e being assigned to the \u003ccode\u003eprototype\u003c/code\u003e.\u003cbr\u003e\u003cbr\u003e\nAnd the console log will still show \u003ccode\u003ehas\u003c/code\u003e as part of the \u003ccode\u003etrie\u003c/code\u003e instance returned from \u003ccode\u003euseTrieUsingArrow\u003c/code\u003e.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/0d5a69a187ab07e9234bad36dbe72cad.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\u003ch2\u003e\n  \u003ca name=\"why-why-why\" href=\"#why-why-why\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🤦‍♂️ Why? Why? Why?\n\u003c/h2\u003e\n\n\u003cp\u003eI recently released a new package \u003ca href=\"https://www.npmjs.com/package/@cshooks/usetrie\"\u003e@cshooks/usetrie\u003c/a\u003e and \u003ca href=\"https://www.iamdeveloper.com/\"\u003eNick Taylor\u003c/a\u003e \u003c/p\u003e\n\n\n\u003cdiv class=\"ltag__user ltag__user__id__9597\" style=\"border-color:#312d45;box-shadow: 3px 3px 0px #312d45\"\u003e\n      \u003cstyle\u003e\n        .ltag__user__id__9597 .follow-action-button{\n          background-color: #38334E !important;\n          color: #CCC8FD !important;\n          border-color: #38334E !important;\n        }\n      \u003c/style\u003e\n      \u003ca href=\"/nickytonline\" class=\"ltag__user__link profile-image-link\"\u003e\n        \u003cdiv class=\"ltag__user__pic\"\u003e\n          \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--wsDCLFo5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--HhqKWFvW--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://thepracticaldev.s3.amazonaws.com/uploads/user/profile_image/9597/d1d224a1-9ad1-4bd4-90c3-57f88c6c9bf5.jpeg\" alt=\"nickytonline image\"\u003e\n        \u003c/div\u003e\n      \u003c/a\u003e\n        \u003cdiv class=\"ltag__user__content\"\u003e\n          \u003ch2\u003e\n\u003ca href=\"/nickytonline\" class=\"ltag__user__link\"\u003eNick Taylor\u003c/a\u003e \u003cbutton class=\"cta follow-action-button\" data-info='{\"id\":9597,\"className\":\"User\",\"style\":\"full\"}' data-follow-action-button=\"true\"\u003e\u003c/button\u003e\n\u003c/h2\u003e\n          \u003cdiv class=\"ltag__user__summary\"\u003e\n            \u003ca href=\"/nickytonline\" class=\"ltag__user__link\"\u003e\n              Just some dev on the Shotgun team #TypeScript #reactjs #JavaScript #nodejs, c#/asp.net once upon a time.\n            \u003c/a\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\n\n\u003cp\u003egenerously provided an educational \u0026amp; thorough PR on how the code-base can be improved.\u003c/p\u003e\n\n\u003cp\u003eBut not having a deep knowledge of TypeScript \u0026amp; Javascript, the \u003ca href=\"https://github.com/cshooks/hooks/pull/11#pullrequestreview-219222430\"\u003efollowing change\u003c/a\u003e caused an issue.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/13306ec6ab90419382e933434a131ad5.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eFYI – \u003ccode\u003euseTrie\u003c/code\u003e is implemented as shown below.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/043283084a0ae76b7a8bef2c86799fb6.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eI was retro-fitting a mutable data structure and exposing it as a hook.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eBut it’s not a good way as you can see between\u003c/em\u003e \u003ca href=\"https://twitter.com/PaulGrizzay\"\u003e\u003cem\u003ePaul Gray\u003c/em\u003e\u003c/a\u003e \u003cem\u003e\u0026amp;\u003c/em\u003e \u003ca href=\"https://twitter.com/dan_abramov\"\u003e\u003cem\u003eDan Abramov\u003c/em\u003e\u003c/a\u003e\u003cem\u003e‘s tweets.\u003c/em\u003e\u003c/p\u003e\n\n\n\u003cblockquote class=\"ltag__twitter-tweet\" data-url=\"https://twitter.com/paulgrizzay/status/1105941010344038401\"\u003e\u003cdiv class=\"ltag__twitter-tweet__main\" data-url=\"https://twitter.com/paulgrizzay/status/1105941010344038401\"\u003e\n\u003cdiv class=\"ltag__twitter-tweet__header\"\u003e\n\u003cimg class=\"ltag__twitter-tweet__profile-image\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--9IOZGnhH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1027217837029568512/SjADMpLS_normal.jpg\"\u003e\u003cdiv class=\"ltag__twitter-tweet__full-name\"\u003ePaul Gray\u003c/div\u003e\n\u003cdiv class=\"ltag__twitter-tweet__username\"\u003e@paulgrizzay\u003c/div\u003e\n\u003cdiv class=\"ltag__twitter-tweet__twitter-logo\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--kX-SksTr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-eb8b335b75231c6443385ac04fdfcaed8ca5423c3990e89dc0178a4090ac1908.svg\"\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"ltag__twitter-tweet__body\"\u003e\n\u003ca href=\"https://twitter.com/tannerlinsley\"\u003e@tannerlinsley\u003c/a\u003e \u003ca href=\"https://twitter.com/dan_abramov\"\u003e@dan_abramov\u003c/a\u003e You have to make sure your class does not have methods that mutate it's internal state. Of course if your class has no internal state, it's just a bunch of static methods in disguise. So, I think it's a bad pattern :)\u003c/div\u003e\n\u003cdiv class=\"ltag__twitter-tweet__date\"\u003e21:17 PM - 13 Mar 2019\u003c/div\u003e\n\u003cdiv class=\"ltag__twitter-tweet__actions\"\u003e\n\u003ca href=\"https://twitter.com/intent/tweet?in_reply_to=1105941010344038401\" class=\"ltag__twitter-tweet__actions__button\"\u003e\u003cimg src=\"/assets/twitter-reply-action.svg\" alt=\"Twitter reply action\"\u003e\u003c/a\u003e\u003ca href=\"https://twitter.com/intent/retweet?tweet_id=1105941010344038401\" class=\"ltag__twitter-tweet__actions__button\"\u003e\u003cimg src=\"/assets/twitter-retweet-action.svg\" alt=\"Twitter retweet action\"\u003e\u003c/a\u003e0\u003ca href=\"https://twitter.com/intent/like?tweet_id=1105941010344038401\" class=\"ltag__twitter-tweet__actions__button\"\u003e\u003cimg src=\"/assets/twitter-like-action.svg\" alt=\"Twitter like action\"\u003e\u003c/a\u003e1\u003c/div\u003e\n\u003c/div\u003e\u003c/blockquote\u003e\n\u003cbr\u003e\n\u003cblockquote class=\"ltag__twitter-tweet\" data-url=\"https://twitter.com/dan_abramov/status/1105946933955301377\"\u003e\u003cdiv class=\"ltag__twitter-tweet__main\" data-url=\"https://twitter.com/dan_abramov/status/1105946933955301377\"\u003e\n\u003cdiv class=\"ltag__twitter-tweet__header\"\u003e\n\u003cimg class=\"ltag__twitter-tweet__profile-image\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--kt_0YXsI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1096807971374448640/rVCDhxkG_normal.png\"\u003e\u003cdiv class=\"ltag__twitter-tweet__full-name\"\u003eDan Abramov\u003c/div\u003e\n\u003cdiv class=\"ltag__twitter-tweet__username\"\u003e@dan_abramov\u003c/div\u003e\n\u003cdiv class=\"ltag__twitter-tweet__twitter-logo\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--kX-SksTr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-eb8b335b75231c6443385ac04fdfcaed8ca5423c3990e89dc0178a4090ac1908.svg\"\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"ltag__twitter-tweet__body\"\u003e\n\u003ca href=\"https://twitter.com/PaulGrizzay\"\u003e@PaulGrizzay\u003c/a\u003e \u003ca href=\"https://twitter.com/tannerlinsley\"\u003e@tannerlinsley\u003c/a\u003e I think it’s legit for it to be stateful if you don’t read that state or use it for rendering. More like imperative things: conditional logging, debouncing API requests, managing d3 or similar objects.\u003c/div\u003e\n\u003cdiv class=\"ltag__twitter-tweet__date\"\u003e21:41 PM - 13 Mar 2019\u003c/div\u003e\n\u003cdiv class=\"ltag__twitter-tweet__actions\"\u003e\n\u003ca href=\"https://twitter.com/intent/tweet?in_reply_to=1105946933955301377\" class=\"ltag__twitter-tweet__actions__button\"\u003e\u003cimg src=\"/assets/twitter-reply-action.svg\" alt=\"Twitter reply action\"\u003e\u003c/a\u003e\u003ca href=\"https://twitter.com/intent/retweet?tweet_id=1105946933955301377\" class=\"ltag__twitter-tweet__actions__button\"\u003e\u003cimg src=\"/assets/twitter-retweet-action.svg\" alt=\"Twitter retweet action\"\u003e\u003c/a\u003e0\u003ca href=\"https://twitter.com/intent/like?tweet_id=1105946933955301377\" class=\"ltag__twitter-tweet__actions__button\"\u003e\u003cimg src=\"/assets/twitter-like-action.svg\" alt=\"Twitter like action\"\u003e\u003c/a\u003e7\u003c/div\u003e\n\u003c/div\u003e\u003c/blockquote\u003e\n\n\u003cp\u003eSo be aware of the issue discussed above when you are extracting an imperative logic out of React.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🎉 Parting Words\n\u003c/h2\u003e\n\n\u003cp\u003eI’ve paid handsomely for not following React way of doing things.\u003cbr\u003e\u003cbr\u003e\nI hope you the gotcha \u0026amp; the workaround helped you understand what’s going on behind the scenes.\u003c/p\u003e\n\n\u003cp\u003eYou can play around with the TypeScript transpiler on the \u003ca href=\"https://www.typescriptlang.org/play/index.html#src=class%20Trie%20%7B%0D%0A%20%20has(word)%20%7B%20return%20true%3B%20%7D%0D%0A%7D%0D%0A%0D%0Aclass%20Trie2%20%7B%0D%0A%20%20has%20%3D%20(word)%20%3D%3E%20true%3B%0D%0A%7D%0D%0A\"\u003ePlayground page\u003c/a\u003e\u003cbr\u003e\n\u0026amp; the console log results in the \u003ca href=\"https://codesandbox.io/s/xjm96w0wmp\"\u003eSandbox\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2019/03/30/spread-syntax-gotcha-in-javascript-class-methods/\"\u003eSpread syntax gotcha in JavaScript class methods\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: Spread syntax gotcha in JavaScript class methods\r\npublished: true\r\ntags: JavaScript,TypeScript,React,Hooks\r\ncanonical_url: https://www.slightedgecoder.com/2019/03/30/spread-syntax-gotcha-in-javascript-class-methods/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/l19dkoi3biycx13q8tt2.jpg\r\n---\r\n\r\n_Photo by [Jay](https://unsplash.com/photos/dkFJST9zZZo?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/pokeball?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) – Don’t get caught_\r\n\r\n## _Watch out when exposing a mutable data structure with React Hooks_\r\n\r\nWhen you spread an object instance of a class to expose methods, methods might not be copied over.\r\n\r\nSuppose that you have a `Trie` class,   \r\nwhich you want to make it immutable by returning a new object using syntax spread.\r\n\r\n**_Not a good idea! Explained later._**\r\n\r\n{% gist https://gist.github.com/dance2die/3107d7b0a3d3eeeb0dcad5886f5b1bf9 %}\r\n\r\nPrinting out `trie` object instance returned from `useTrie` won’t show `has` and an empty method is printed.\r\n\r\n{% gist https://gist.github.com/dance2die/4192b1bab9e70e046515b456c147baf8 %}\r\n\r\nLet’s see why and how to solve the issue.\r\n\r\n\r\n## 🔬 Analysis\r\n\r\nTo understand the problem, let’s see how the class is [transpiled using TypeScript compiler](https://www.typescriptlang.org/play/index.html#src=class%20Trie%20%7B%0D%0A%20%20has(word)%20%7B%20return%20true%3B%20%7D%0D%0A%7D%0D%0A%0D%0Aclass%20Trie2%20%7B%0D%0A%20%20has%20%3D%20(word)%20%3D%3E%20true%3B%0D%0A%7D%0D%0A) (the transpiled babel code does the same but verbose so using TypeScript compiler here).\r\n\r\n{% gist https://gist.github.com/dance2die/7419342babb86cafb72aaae443cff2c2 %}\r\n\r\n`has` method was added to the prototype, not to an instance of `Trie` class.  \r\nSo `has` is still available when you do `const t = new Trie(); t.has(); // true`.\r\n\r\nReturning a new object using spread syntax didn’t copy `has`   \r\nbecause [spread syntax only copies own \u0026 enumerable properties](https://dmitripavlutin.com/object-rest-spread-properties-javascript/#12ownproperties).\r\n\r\nBut `prototype`[is not enumerable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/prototype) so `has` is not copied over.\r\n\r\n## 🧙‍♂️ Resolving the Issue\r\n\r\nYou can resolve the issue in two ways.\r\n\r\n1. [Binding](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind)the method explicitly to `this`.\r\n2. Using an [arrow function expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions).\r\n\r\n#### 1. Bind Explicitly\r\n\r\nYou can explicitly bind `this` to the method in the constructor.\r\n\r\n{% gist https://gist.github.com/dance2die/0e123ece5776d334bf5e7fe39d88410b %}\r\n\r\n, which is TypeScript-transpiled as\r\n\r\n{% gist https://gist.github.com/dance2die/8e5597304ea3246396d1c40506169736 %}\r\n\r\nAnd printing the `trie` instance returned from `useTrie` will now show `.has` method.\r\n\r\n{% gist https://gist.github.com/dance2die/95b8a2bbf71316895673148e56441f18 %}\r\n\r\n`has` is still added to the `prototype`, which might not be what you want and it’s increasing the file size.\r\n\r\nSo this brings us to,\r\n\r\n#### 2. Using an arrow function expression\r\n\r\nWhen you declare the `has` method using an arrow syntax, it’s transpiled by Transcript as shown below.\r\n\r\n{% gist https://gist.github.com/dance2die/5c1a5a0252c3851fc22bb95f3da0b117 %}\r\n\r\nYou can see that it’s [same](https://gist.github.com/dance2die/8e5597304ea3246396d1c40506169736#file-transpiled-bound-trie-js) without `has` being assigned to the `prototype`.  \r\nAnd the console log will still show `has` as part of the `trie` instance returned from `useTrieUsingArrow`.\r\n\r\n{% gist https://gist.github.com/dance2die/0d5a69a187ab07e9234bad36dbe72cad %}\r\n\r\n## 🤦‍♂️ Why? Why? Why?\r\n\r\nI recently released a new package [@cshooks/usetrie](https://www.npmjs.com/package/@cshooks/usetrie) and [Nick Taylor](https://www.iamdeveloper.com/) \r\n\r\n{% user nickytonline %}\r\n\r\ngenerously provided an educational \u0026 thorough PR on how the code-base can be improved.\r\n\r\nBut not having a deep knowledge of TypeScript \u0026 Javascript, the [following change](https://github.com/cshooks/hooks/pull/11#pullrequestreview-219222430) caused an issue.\r\n\r\n{% gist https://gist.github.com/dance2die/13306ec6ab90419382e933434a131ad5 %}\r\n\r\nFYI – `useTrie` is implemented as shown below.\r\n\r\n{% gist https://gist.github.com/dance2die/043283084a0ae76b7a8bef2c86799fb6 %}\r\n\r\nI was retro-fitting a mutable data structure and exposing it as a hook.\r\n\r\n_But it’s not a good way as you can see between_ [_Paul Gray_](https://twitter.com/PaulGrizzay) _\u0026_ [_Dan Abramov_](https://twitter.com/dan_abramov)_‘s tweets._\r\n\r\n{% twitter 1105941010344038401 %}\r\n{% twitter 1105946933955301377 %}\r\n\r\n\r\nSo be aware of the issue discussed above when you are extracting an imperative logic out of React.\r\n\r\n## 🎉 Parting Words\r\n\r\nI’ve paid handsomely for not following React way of doing things.   \r\nI hope you the gotcha \u0026 the workaround helped you understand what’s going on behind the scenes.\r\n\r\nYou can play around with the TypeScript transpiler on the [Playground page](https://www.typescriptlang.org/play/index.html#src=class%20Trie%20%7B%0D%0A%20%20has(word)%20%7B%20return%20true%3B%20%7D%0D%0A%7D%0D%0A%0D%0Aclass%20Trie2%20%7B%0D%0A%20%20has%20%3D%20(word)%20%3D%3E%20true%3B%0D%0A%7D%0D%0A)\r\n\u0026 the console log results in the [Sandbox](https://codesandbox.io/s/xjm96w0wmp).\r\n\r\n_The post [Spread syntax gotcha in JavaScript class methods](https://www.slightedgecoder.com/2019/03/30/spread-syntax-gotcha-in-javascript-class-methods/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com)._",
    "canonical_url": "https://www.slightedgecoder.com/2019/03/30/spread-syntax-gotcha-in-javascript-class-methods/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 2,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2019/03/30/spread-syntax-gotcha-in-javascript-class-methods/",
    "positive_reactions_count": 8,
    "edited_at": "2019-03-31T01:20:49.260Z",
    "crossposted_at": "2019-03-31T00:28:13.946Z",
    "language": null,
    "cached_tag_list": "javascript, typescript, react, hooks",
    "path": "/dance2die/spread-syntax-gotcha-in-javascript-class-methods-1jmb",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-03-31T14:18:34.247Z"
  },
  {
    "title": "Adding numbers using Boolean operations in JavaScript",
    "slug": "adding-numbers-using-boolean-operations-in-javascript-2d04",
    "created_at": "2019-04-14T23:04:04.718Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/34h7b8q8gzw617gf1hxl.jpg",
    "description": "\n\nPhoto by Crissy Jarvis on Unsplash\n\nYou know how to add numbers progmatically, ...",
    "published": true,
    "published_at": "2019-04-14T22:39:47.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/gdL-UZfnD3I?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eCrissy Jarvis\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/abacus?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eYou know how to add numbers progmatically, right?\u003cbr\u003e\u003cbr\u003e\n\u003ccode\u003e1 + 1\u003c/code\u003e will basically give you 2.\u003c/p\u003e\n\n\u003cp\u003eNumbers are added in binary form down in machine level.\u003cbr\u003e\u003cbr\u003e\nBut how do numbers get added underneath the hood?\u003c/p\u003e\n\n\u003cp\u003eI will show how to add “positive” integers (no floating) using boolean operations.\u003c/p\u003e\n\u003ch2\u003e\n  \u003ca name=\"assumption\" href=\"#assumption\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  💭 Assumption\n\u003c/h2\u003e\n\n\u003cp\u003eI will assume the knowledge of \u003ca href=\"https://en.wikipedia.org/wiki/Binary_number\"\u003ebinary numbers\u003c/a\u003e and Boolean operations.\u003c/p\u003e\n\n\u003cp\u003eAnd you can follow along on \u003ca href=\"https://codesandbox.io/s/3vnqknj0o1\"\u003eCodeSandbox\u003c/a\u003e.\u003c/p\u003e\n\u003ch4\u003e\n  \u003ca name=\"and-amp-xor-truth-tables\" href=\"#and-amp-xor-truth-tables\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  📊 AND \u0026amp; XOR Truth Tables\n\u003c/h4\u003e\n\n\u003cp\u003eBelow is the truth table of all possible XOR \u0026amp; AND operations I will refer back to.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--G2TEF4pN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/truth-tables.jpg%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--G2TEF4pN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/truth-tables.jpg%3Fw%3D1170%26ssl%3D1\" alt=\"AND \u0026amp; XOR\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch2\u003e\n  \u003ca name=\"adding-one-bit\" href=\"#adding-one-bit\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  1️⃣ Adding one bit\n\u003c/h2\u003e\n\n\u003cp\u003eWhen you add two one-bit numbers, you get either 0 or 1 for the sum and 0 or 1 for the carry.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ztvc5kVP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/Adding-two-numbers.jpg%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ztvc5kVP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/Adding-two-numbers.jpg%3Fw%3D1170%26ssl%3D1\" alt=\"Adding one bit numbers\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eDid you notice that, \u003ccode\u003ecarry\u003c/code\u003e output looks the same as output of AND truth table, and sum equal to that of XOR?\u003c/p\u003e\n\n\u003cp\u003eThe operation can be represented using logical XOR \u0026amp; AND gates as shown here.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--JNiFQT0F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.slightedgecoder.com/wp-content/uploads/2019/04/Half_Adder.svg\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--JNiFQT0F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.slightedgecoder.com/wp-content/uploads/2019/04/Half_Adder.svg\" alt=\"Half-adder\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eA circuit formed that way is called \u003ca href=\"https://en.wikipedia.org/wiki/Adder_(electronics)#Half_adder\"\u003ehalf-adder\u003c/a\u003e.\u003cbr\u003e\u003cbr\u003e\nArmed with the knowledge and we can now implement the addition using XOR \u0026amp; AND.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/6a002c4d417703cc31c0c02f8bbfe067.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003exor\u003c/code\u003e returns true (or 1) when both input are different.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eand\u003c/code\u003e was used using built-in JavaScript \u003ccode\u003e\u0026amp;\u0026amp;\u003c/code\u003e operator.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003exorBit\u003c/code\u003e \u0026amp; \u003ccode\u003eandBit\u003c/code\u003e return 1 or 0 depending on whether result is true or false.\n\n\u003cul\u003e\n\u003cli\u003eThink of \u003ccode\u003eandBit\u003c/code\u003e as an AND gate and \u003ccode\u003exorBit\u003c/code\u003e as XOR gate in the Half-adder figure above.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e“s” refers to “sum”, while “c” means “carry”.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eWhen we run the half adder on combination of one bit addition, the result looks like below.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/562a0e63f8451de351ec3d3a4eb5c494.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eOK, that wasn’t interesting enough as we can’t do anything by adding just one bit.\u003cbr\u003e\u003cbr\u003e\nLet’s spice it up by adding two bits.\u003c/p\u003e\n\u003ch2\u003e\n  \u003ca name=\"adding-two-bits\" href=\"#adding-two-bits\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  2️⃣ Adding two bits\n\u003c/h2\u003e\n\n\u003cp\u003eWe got the carry from the half-adder but to calculate the next bit we need to pass the carry to the next adder.\u003cbr\u003e\u003cbr\u003e\nBut the problem is that, half-adder accepts only two inputs and doesn’t accept a carry.\u003c/p\u003e\n\n\u003cp\u003eWe can solve the problem by combining two half-adders, making it a \u003ca href=\"https://en.wikipedia.org/wiki/Adder_(electronics)#Full_adder\"\u003efull-adder\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eLogic looks like following.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eYou calculate the first (least significant) bit using the half-adder and feed the carry from it to the full adder.\u003c/li\u003e\n\u003cli\u003eThe full adder will calculate the 2nd bit and then sum again in the half adder with the carry as the input\u003c/li\u003e\n\u003cli\u003eLastly, output carry of the full adder is the OR of carries from two-half adders in the full-adder.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eSimply put, you perform two operations. One for the current bit, and another with the carry.\u003c/p\u003e\n\n\u003cp\u003eLet’s take a look at an example of adding 11 and 01 to get 100.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--dBSgmf4---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/full-adder-fixed.jpg%3Fw%3D979%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--dBSgmf4---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/full-adder-fixed.jpg%3Fw%3D979%26ssl%3D1\" alt=\"full-adder\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eI apologize for the 💩 illustration 😅.\u003cbr\u003e\u003cbr\u003e\nAnd thank you \u003ca href=\"https://www.reddit.com/user/MarkN_LP\"\u003e@MarkN_LP\u003c/a\u003e for \u003ca href=\"https://www.reddit.com/r/javascript/comments/bd8tyi/adding_numbers_using_boolean_operations_in/eky2njd/\"\u003ecatching the error\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eThe diagram shows the result of first carry being fed into the 2nd half-adder, which is used to calculate sum.\u003c/p\u003e\n\n\u003cp\u003eLet’s implement the full-adder \u0026amp; add two bit numbers.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/cee0a284dcf0be414a2974f567140e7d.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eFull-adder is implemented in line#4~8 using newly created \u003ccode\u003eorBit\u003c/code\u003e method to calculate the carry.\u003c/p\u003e\n\n\u003cp\u003eIt uses two half-adders and uses the carry from the “first” operation in the second half-adder.\u003cbr\u003e\u003cbr\u003e\n And the carry is the result of two carries in the two half-adders as shown in the diagram.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e11 + 01\u003c/code\u003e correctly returns \u003ccode\u003e{ c1: 1, b1: 0, b0: 0 }\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eStill useless right? Let’s add more bits.\u003c/p\u003e\n\u003ch2\u003e\n  \u003ca name=\"adding-nbits\" href=\"#adding-nbits\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  3️⃣ Adding N-bits\n\u003c/h2\u003e\n\n\u003cp\u003eWhen you add one bit, you need just a half-adder. For two bits, 1 half-adder \u0026amp; 1 full-adder.\u003cbr\u003e\u003cbr\u003e\nFor 3 bits, you would need 1 half-adder \u0026amp; 2 full-adders.\u003c/p\u003e\n\n\u003cp\u003eSo for N-bit addition, you need 1 half-adder \u0026amp; N-1 full-adders.\u003c/p\u003e\n\n\u003cp\u003eI could’ve shown 3-bit operation but decided to share a method that works on any N-bits instead (unlike how microprocessors are physically constrained).\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/3f11e90723410431aae22f18fb4b0124.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003cem\u003eThis code assumes that length of two digits have the same length.\u003c/em\u003e\u003cbr\u003e\u003cbr\u003e\n\u003cem\u003eI initially was going to \u003ca href=\"https://github.com/dance2die/throwaway.addDigits/blob/master/src/index.ts#L47\"\u003echange the length dynamically\u003c/a\u003e but it made the demo code too convoluted so left it out.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eLine #2 \u0026amp; #3 converts strings into array of numbers\u003cbr\u003e\u003cbr\u003e\nand #7 uses \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/ReduceRight\"\u003ereduceRight\u003c/a\u003e to start working on the least significant (right-most) bit.\u003c/p\u003e\n\n\u003cp\u003eOn first iteration, we calculate the sum using half-adder on line #14, and then we use the full-adder for the rest.\u003c/p\u003e\n\n\u003cp\u003eCarry passed to the full-adder is retrieved from the first item in the array because we are prepending new digit (\u003ccode\u003e[{c, s}, ...acc]\u003c/code\u003e) on each iteration.\u003c/p\u003e\n\n\u003cp\u003eLastly, we are returning a text representation of the sum for demo purpose only.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eSorry about abusing\u003c/em\u003e \u003ccode\u003e\u0026amp;\u0026amp;\u003c/code\u003e \u003cem\u003ethere 😜.\u003c/em\u003e\u003cbr\u003e\u003cbr\u003e\n\u003cem\u003eI got excited after reading “\u003ca href=\"https://blog.usejournal.com/mastering-javascripts-and-logical-operators-fd619b905c8f\"\u003e\u003cem\u003eMastering JavaScript’s \u0026amp;\u0026amp; and || logical operators\u003c/em\u003e\u003c/a\u003e” by \u003ca href=\"https://twitter.com/nicolasmarcora\"\u003eNicolas Marcora\u003c/a\u003e today. 🙂\u003c/em\u003e\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag__user ltag__user__id__84177\" style=\"border-color:#021e2f;box-shadow: 3px 3px 0px #021e2f\"\u003e\n      \u003cstyle\u003e\n        .ltag__user__id__84177 .follow-action-button{\n          background-color: #d7dee2 !important;\n          color: #022235 !important;\n          border-color: #d7dee2 !important;\n        }\n      \u003c/style\u003e\n      \u003ca href=\"/minimumviableperson\" class=\"ltag__user__link profile-image-link\"\u003e\n        \u003cdiv class=\"ltag__user__pic\"\u003e\n          \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--zKRDhrJb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--__EmiCC7--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://thepracticaldev.s3.amazonaws.com/uploads/user/profile_image/84177/8115cd25-4390-4157-a2e6-d40b5c6f7dcb.jpeg\" alt=\"minimumviableperson image\"\u003e\n        \u003c/div\u003e\n      \u003c/a\u003e\n        \u003cdiv class=\"ltag__user__content\"\u003e\n          \u003ch2\u003e\n\u003ca href=\"/minimumviableperson\" class=\"ltag__user__link\"\u003eNicolas Marcora\u003c/a\u003e \u003cbutton class=\"cta follow-action-button\" data-info='{\"id\":84177,\"className\":\"User\",\"style\":\"full\"}' data-follow-action-button=\"true\"\u003e\u003c/button\u003e\n\u003c/h2\u003e\n          \u003cdiv class=\"ltag__user__summary\"\u003e\n            \u003ca href=\"/minimumviableperson\" class=\"ltag__user__link\"\u003e\n              \n            \u003c/a\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\n\n\u003cp\u003eLet’s check out the demo result.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/0d9666493c1d634547d070419103721b.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eValues within parenthesis shows operations in base 10.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👋 Parting Words\n\u003c/h2\u003e\n\n\u003cp\u003eWe’ve looked at how positive numbers are added under the hood.\u003cbr\u003e\u003cbr\u003e\nI am also just learning about this thus the explanation might lack much.\u003c/p\u003e\n\n\u003cp\u003eThe source I am learning from is “\u003ca href=\"https://nostarch.com/microprocessors\"\u003eThe Manga Guide to Microprocessors\u003c/a\u003e“.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eI still haven’t finished the book but it has been delightful.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"%F0%9F%8F%94-resources\" href=\"#%F0%9F%8F%94-resources\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🏔 Resources\n\u003c/h2\u003e\n\n\u003cp\u003eIf you want to dig deeper, check out following resources.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://nostarch.com/microprocessors\"\u003eThe Manga Guide to Microprocessors\u003c/a\u003e – No Starch Press\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://en.wikipedia.org/wiki/Adder_(electronics)\"\u003eAdder\u003c/a\u003eWikipedia article\u003c/li\u003e\n\u003cli\u003eDiagram \u0026amp; Truth tables for\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://isweb.redwoods.edu/instruct/calderwoodd/diglogic/full.htm\"\u003eFull-adder\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://isweb.redwoods.edu/instruct/calderwoodd/diglogic/half-add.htm\"\u003eHalf-adder\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003eDemo program is available on \u003ca href=\"https://codesandbox.io/s/3vnqknj0o1\"\u003eCodeSandbox\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://docs.google.com/presentation/d/1TSDLBj7Zc2Y1mpUaQAeRb3cHJ8RLnROPXwDHRowQ3YQ/edit#slide=id.g565ce1f6b6_0_53\"\u003eFull-adder diagram on Google Slides\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://en.wikipedia.org/wiki/Adder_(electronics)#/media/File:Half_Adder.svg\"\u003eHalf-adder\u003c/a\u003e on Wikipedia.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2019/04/14/adding-numbers-using-boolean-operations-in-javascript/\"\u003eAdding numbers using Boolean operations in JavaScript\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: Adding numbers using Boolean operations in JavaScript\r\npublished: true\r\ntags: javascript, microprocessors\r\ncanonical_url: https://www.slightedgecoder.com/2019/04/14/adding-numbers-using-boolean-operations-in-javascript/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/34h7b8q8gzw617gf1hxl.jpg\r\n---\r\n\r\n_Photo by [Crissy Jarvis](https://unsplash.com/photos/gdL-UZfnD3I?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/abacus?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_\r\n\r\nYou know how to add numbers progmatically, right?   \r\n`1 + 1` will basically give you 2.\r\n\r\nNumbers are added in binary form down in machine level.   \r\nBut how do numbers get added underneath the hood?\r\n\r\nI will show how to add “positive” integers (no floating) using boolean operations.\r\n\r\n \r\n## 💭 Assumption\r\n\r\nI will assume the knowledge of [binary numbers](https://en.wikipedia.org/wiki/Binary_number) and Boolean operations.\r\n\r\nAnd you can follow along on [CodeSandbox](https://codesandbox.io/s/3vnqknj0o1).\r\n\r\n#### 📊 AND \u0026 XOR Truth Tables\r\n\r\nBelow is the truth table of all possible XOR \u0026 AND operations I will refer back to.\r\n\r\n![AND \u0026 XOR](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/truth-tables.jpg?w=1170\u0026ssl=1)\r\n\r\n## 1️⃣ Adding one bit\r\n\r\nWhen you add two one-bit numbers, you get either 0 or 1 for the sum and 0 or 1 for the carry.\r\n\r\n![Adding one bit numbers](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/Adding-two-numbers.jpg?w=1170\u0026ssl=1)\r\n\r\nDid you notice that, `carry` output looks the same as output of AND truth table, and sum equal to that of XOR?\r\n\r\nThe operation can be represented using logical XOR \u0026 AND gates as shown here.\r\n\r\n![Half-adder](https://www.slightedgecoder.com/wp-content/uploads/2019/04/Half_Adder.svg)\r\n\r\nA circuit formed that way is called [half-adder](https://en.wikipedia.org/wiki/Adder_(electronics)#Half_adder).  \r\nArmed with the knowledge and we can now implement the addition using XOR \u0026 AND.\r\n\r\n{% gist https://gist.github.com/dance2die/6a002c4d417703cc31c0c02f8bbfe067 %}\r\n\r\n- `xor` returns true (or 1) when both input are different.\r\n- `and` was used using built-in JavaScript `\u0026\u0026` operator.\r\n- `xorBit` \u0026 `andBit` return 1 or 0 depending on whether result is true or false.\r\n  - Think of `andBit` as an AND gate and `xorBit` as XOR gate in the Half-adder figure above.\r\n- “s” refers to “sum”, while “c” means “carry”.\r\n\r\nWhen we run the half adder on combination of one bit addition, the result looks like below.\r\n\r\n{% gist https://gist.github.com/dance2die/562a0e63f8451de351ec3d3a4eb5c494 %}\r\n\r\nOK, that wasn’t interesting enough as we can’t do anything by adding just one bit.   \r\nLet’s spice it up by adding two bits.\r\n\r\n## 2️⃣ Adding two bits\r\n\r\nWe got the carry from the half-adder but to calculate the next bit we need to pass the carry to the next adder.   \r\nBut the problem is that, half-adder accepts only two inputs and doesn’t accept a carry.\r\n\r\nWe can solve the problem by combining two half-adders, making it a [full-adder](https://en.wikipedia.org/wiki/Adder_(electronics)#Full_adder).\r\n\r\nLogic looks like following.\r\n\r\n1. You calculate the first (least significant) bit using the half-adder and feed the carry from it to the full adder.\r\n2. The full adder will calculate the 2nd bit and then sum again in the half adder with the carry as the input\r\n3. Lastly, output carry of the full adder is the OR of carries from two-half adders in the full-adder.\r\n\r\nSimply put, you perform two operations. One for the current bit, and another with the carry.\r\n\r\nLet’s take a look at an example of adding 11 and 01 to get 100.\r\n\r\n![full-adder](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/full-adder-fixed.jpg?w=979\u0026ssl=1)\r\n\r\n_I apologize for the 💩 illustration 😅.  \r\nAnd thank you [@MarkN_LP](https://www.reddit.com/user/MarkN_LP) for [catching the error](https://www.reddit.com/r/javascript/comments/bd8tyi/adding_numbers_using_boolean_operations_in/eky2njd/)._\r\n\r\nThe diagram shows the result of first carry being fed into the 2nd half-adder, which is used to calculate sum.\r\n\r\nLet’s implement the full-adder \u0026 add two bit numbers.\r\n\r\n{% gist https://gist.github.com/dance2die/cee0a284dcf0be414a2974f567140e7d %}\r\n\r\nFull-adder is implemented in line#4~8 using newly created `orBit` method to calculate the carry.\r\n\r\nIt uses two half-adders and uses the carry from the “first” operation in the second half-adder.  \r\n And the carry is the result of two carries in the two half-adders as shown in the diagram.\r\n\r\n`11 + 01` correctly returns `{ c1: 1, b1: 0, b0: 0 }`.\r\n\r\nStill useless right? Let’s add more bits.\r\n\r\n## 3️⃣ Adding N-bits\r\n\r\nWhen you add one bit, you need just a half-adder. For two bits, 1 half-adder \u0026 1 full-adder.   \r\nFor 3 bits, you would need 1 half-adder \u0026 2 full-adders.\r\n\r\nSo for N-bit addition, you need 1 half-adder \u0026 N-1 full-adders.\r\n\r\nI could’ve shown 3-bit operation but decided to share a method that works on any N-bits instead (unlike how microprocessors are physically constrained).\r\n\r\n{% gist https://gist.github.com/dance2die/3f11e90723410431aae22f18fb4b0124 %}\r\n\r\n\r\n_This code assumes that length of two digits have the same length._  \r\n_I initially was going to [change the length dynamically](https://github.com/dance2die/throwaway.addDigits/blob/master/src/index.ts#L47) but it made the demo code too convoluted so left it out._\r\n\r\nLine #2 \u0026 #3 converts strings into array of numbers   \r\nand #7 uses [reduceRight](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/ReduceRight) to start working on the least significant (right-most) bit.\r\n\r\nOn first iteration, we calculate the sum using half-adder on line #14, and then we use the full-adder for the rest.\r\n\r\nCarry passed to the full-adder is retrieved from the first item in the array because we are prepending new digit (`[{c, s}, ...acc]`) on each iteration.\r\n\r\nLastly, we are returning a text representation of the sum for demo purpose only.\r\n\r\n_Sorry about abusing_ `\u0026\u0026` _there 😜._  \r\n_I got excited after reading “[_Mastering JavaScript’s \u0026\u0026 and || logical operators_](https://blog.usejournal.com/mastering-javascripts-and-logical-operators-fd619b905c8f)” by [Nicolas Marcora](https://twitter.com/nicolasmarcora) today. 🙂_\r\n\r\n{% user minimumviableperson %}\r\n\r\nLet’s check out the demo result.\r\n\r\n{% gist https://gist.github.com/dance2die/0d9666493c1d634547d070419103721b %}\r\n\r\nValues within parenthesis shows operations in base 10.\r\n\r\n## 👋 Parting Words\r\n\r\nWe’ve looked at how positive numbers are added under the hood.   \r\nI am also just learning about this thus the explanation might lack much.\r\n\r\nThe source I am learning from is “[The Manga Guide to Microprocessors](https://nostarch.com/microprocessors)“.\r\n\r\n_I still haven’t finished the book but it has been delightful._\r\n\r\n## 🏔 Resources\r\n\r\nIf you want to dig deeper, check out following resources.\r\n\r\n- [The Manga Guide to Microprocessors](https://nostarch.com/microprocessors) – No Starch Press\r\n- [Adder](https://en.wikipedia.org/wiki/Adder_(electronics))Wikipedia article\r\n- Diagram \u0026 Truth tables for\r\n  - [Full-adder](http://isweb.redwoods.edu/instruct/calderwoodd/diglogic/full.htm)\r\n  - [Half-adder](http://isweb.redwoods.edu/instruct/calderwoodd/diglogic/half-add.htm)\r\n- Demo program is available on [CodeSandbox](https://codesandbox.io/s/3vnqknj0o1)\r\n- [Full-adder diagram on Google Slides](https://docs.google.com/presentation/d/1TSDLBj7Zc2Y1mpUaQAeRb3cHJ8RLnROPXwDHRowQ3YQ/edit#slide=id.g565ce1f6b6_0_53).\r\n- [Half-adder](https://en.wikipedia.org/wiki/Adder_(electronics)#/media/File:Half_Adder.svg) on Wikipedia.\r\n\r\nThe post [Adding numbers using Boolean operations in JavaScript](https://www.slightedgecoder.com/2019/04/14/adding-numbers-using-boolean-operations-in-javascript/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2019/04/14/adding-numbers-using-boolean-operations-in-javascript/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2019/04/14/adding-numbers-using-boolean-operations-in-javascript/",
    "positive_reactions_count": 43,
    "edited_at": "2019-04-16T12:59:37.490Z",
    "crossposted_at": "2019-04-14T23:14:32.129Z",
    "language": "en",
    "cached_tag_list": "javascript, microprocessors",
    "path": "/dance2die/adding-numbers-using-boolean-operations-in-javascript-2d04",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-04-14T22:39:47.000Z"
  },
  {
    "title": "Two gotchas in Chrome Developer Tool Console",
    "slug": "two-gotchas-in-chrome-developer-tool-console-11k3",
    "created_at": "2019-04-20T04:54:21.258Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/qoekmcozlo7xgybbeeht.jpg",
    "description": "\n\nPhoto by Jason Leung on Unsplash\n\nThere are two surprising behaviors on Chrome ...",
    "published": true,
    "published_at": "2019-04-20T04:29:25.000Z",
    "processed_html": "\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\u003e\n\u003chtml\u003e\u003cbody\u003e\n\u003cp\u003e\u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/ZV7lnfyQLmA?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eJason Leung\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/console?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eThere are two surprising behaviors on Chrome Developer Tool Console (“console” hereafter).\u003c/p\u003e\n\n\u003cp\u003eFirst one was pointed out by my friend \u003ca href=\"https://twitter.com/nicolasmarcora\"\u003eNicolas Marcora\u003c/a\u003e that you can await an async method, and second one being \u003ca href=\"https://developers.google.com/web/tools/chrome-devtools/console/utilities#queryselectorall\"\u003e$$\u003c/a\u003e (a short-cut for \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\"\u003edocument.querySelectorAll\u003c/a\u003e) returning an array, not a \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/NodeList\"\u003eNodeList\u003c/a\u003e object.\u003c/p\u003e\n\n\u003cp\u003eLet’s go over how they are different.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"await-in-console\" href=\"#await-in-console\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  1️⃣ Await in console\n\u003c/h2\u003e\n\n\u003cp\u003eWithin an editor (I am using a \u003ca href=\"https://developers.google.com/web/tools/chrome-devtools/javascript/snippets\"\u003eSnippets\u003c/a\u003e feature, which is like a scratchpad but works like an editor), \u003ccode\u003eawait\u003c/code\u003e does not work as it needs to be called within an async method.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--hLTyZEL_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/await-needs-to-be-wrapped-in-async-function.jpg%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--hLTyZEL_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/await-needs-to-be-wrapped-in-async-function.jpg%3Fw%3D1170%26ssl%3D1\" alt=\"error in snippet\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eTo get around the issue, you can wrap it in an async method (an async \u003ca href=\"https://developer.mozilla.org/en-US/docs/Glossary/IIFE\"\u003eIIFE\u003c/a\u003e in this case).\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--3JHWHXNf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/async-iife.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--3JHWHXNf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/async-iife.gif%3Fw%3D1170%26ssl%3D1\" alt=\"wrapped in async iife\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThis would be the normal behavior you are expecting but…\u003cbr\u003e\u003cbr\u003e\nYou can await in the console without wrapping the statement in an async method~\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--xeClGGrd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/await-works-in-console.jpg%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--xeClGGrd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/await-works-in-console.jpg%3Fw%3D1170%26ssl%3D1\" alt=\"works in console\"\u003e\u003c/a\u003e\u003cfigcaption\u003eIt’s Magic~~~\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eIt’s a behavior \u003ca href=\"https://developers.google.com/web/updates/2017/08/devtools-release-notes#await\"\u003eadded to Chrome Devtools since Chrome 62\u003c/a\u003e, released on year 2017.\u003c/p\u003e\n\n\u003cp\u003eSo this is a nice feature but you have to watch out as you can’t simply paste your code in your editor.\u003cbr\u003e\u003cbr\u003e\nIt needs to be wrapped inside an async method.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"-vs-documentqueryselectorall\" href=\"#-vs-documentqueryselectorall\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  2️⃣ $$ vs document.querySelectorAll\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://developers.google.com/web/tools/chrome-devtools/console/utilities#queryselectorall\"\u003e$$\u003c/a\u003e is a part of Console Utilities API, which is available only within the console and not part of either JavaScript or \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction\"\u003eDOM\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://developers.google.com/web/tools/chrome-devtools/console/utilities#queryselectorall\"\u003eGoogle document\u003c/a\u003e describes \u003ccode\u003e$$\u003c/code\u003e as\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003e$$(selector) returns an array of elements that match the given CSS selector. This command is equivalent to calling document.querySelectorAll().\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ccite\u003e\u003ca href=\"https://developers.google.com/web/tools/chrome-devtools/console/utilities#queryselectorall\"\u003ehttps://developers.google.com/web/tools/chrome-devtools/console/utilities#queryselectorall\u003c/a\u003e\u003c/cite\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe documentation says it’s equivalent to calling \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\"\u003edocument.querySelectorAll()\u003c/a\u003e but \u003ccode\u003e$$\u003c/code\u003e is differs\u003cbr\u003e\u003cbr\u003e\nwhere \u003ccode\u003edocument.querySelectorAll()\u003c/code\u003e returns a \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/NodeList\"\u003eNodeList\u003c/a\u003e object while \u003ccode\u003e$$\u003c/code\u003e returns an array.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--EGzPOM0V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/vs-qsa.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--EGzPOM0V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/vs-qsa.png%3Fw%3D1170%26ssl%3D1\" alt=\"nodelist result in cnosole\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eNodeList\u003c/code\u003e is an \u003ca href=\"http://speakingjs.com/es5/ch18.html#_pitfall_array_like_objects\"\u003earray-like object\u003c/a\u003e, whose prototype doesn’t inherit from \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/prototype\"\u003eArray.prototype\u003c/a\u003e. That means, a \u003ccode\u003eNodeList\u003c/code\u003e object instance doesn’t have access to methods such as \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"\u003eArray#map\u003c/a\u003e or \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\"\u003eArray#reduce\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--JaunEsNE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/nodelist.map-fails.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--JaunEsNE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/nodelist.map-fails.png%3Fw%3D1170%26ssl%3D1\" alt=\"Can’t map over NodeList object\"\u003e\u003c/a\u003e\u003cfigcaption\u003eCan’t map over NodeList object\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--36e6zwqc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/map.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--36e6zwqc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/map.png%3Fw%3D1170%26ssl%3D1\" alt=\"While you can map over $$\"\u003e\u003c/a\u003e\u003cfigcaption\u003eWhile you can map over $$\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eThis can cause a problem when you copy \u0026amp; paste code using \u003ccode\u003e$$\u003c/code\u003e selector and simply convert it to using \u003ccode\u003edocument.querySelectorAll()\u003c/code\u003e and try to call \u003ccode\u003eArray.prototype\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eYou can easily convert a NodeList object to an array using a\u003c/em\u003e \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax\"\u003e\u003cem\u003espread syntax\u003c/em\u003e\u003c/a\u003e \u003cem\u003eor\u003c/em\u003e \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"\u003e\u003cem\u003eArray.from\u003c/em\u003e\u003c/a\u003e \u003cem\u003eby the way.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--3G6AYVGm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/workaround.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--3G6AYVGm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/workaround.png%3Fw%3D1170%26ssl%3D1\" alt=\"workaround using spread and array from\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👋 Parting Words\n\u003c/h2\u003e\n\n\u003cp\u003eThe console can save you a lot of keystrokes but you might want to double check before copying \u0026amp; pasting the code from console to the editor.\u003c/p\u003e\n\n\u003cp\u003eIf you have more gotchas please let me know 🙂\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2019/04/19/two-gotchas-in-chrome-developer-tool-console/\"\u003eTwo gotchas in Chrome Developer Tool Console\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003c/body\u003e\u003c/html\u003e\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: Two gotchas in Chrome Developer Tool Console\r\npublished: true\r\ntags: JavaScript, Chrome, DevTools\r\ncanonical_url: https://www.slightedgecoder.com/2019/04/19/two-gotchas-in-chrome-developer-tool-console/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/qoekmcozlo7xgybbeeht.jpg\r\n---\r\n\r\n_Photo by [Jason Leung](https://unsplash.com/photos/ZV7lnfyQLmA?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/console?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_\r\n\r\nThere are two surprising behaviors on Chrome Developer Tool Console (“console” hereafter).\r\n\r\nFirst one was pointed out by my friend [Nicolas Marcora](https://twitter.com/nicolasmarcora) that you can await an async method, and second one being [$$](https://developers.google.com/web/tools/chrome-devtools/console/utilities#queryselectorall) (a short-cut for [document.querySelectorAll](https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll)) returning an array, not a [NodeList](https://developer.mozilla.org/en-US/docs/Web/API/NodeList) object.\r\n\r\nLet’s go over how they are different.\r\n\r\n \r\n## 1️⃣ Await in console\r\n\r\nWithin an editor (I am using a [Snippets](https://developers.google.com/web/tools/chrome-devtools/javascript/snippets) feature, which is like a scratchpad but works like an editor), `await` does not work as it needs to be called within an async method.\r\n\r\n![error in snippet](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/await-needs-to-be-wrapped-in-async-function.jpg?w=1170\u0026ssl=1)\r\n\r\nTo get around the issue, you can wrap it in an async method (an async [IIFE](https://developer.mozilla.org/en-US/docs/Glossary/IIFE) in this case).\r\n\r\n![wrapped in async iife](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/async-iife.gif?w=1170\u0026ssl=1)\r\n\r\nThis would be the normal behavior you are expecting but…  \r\nYou can await in the console without wrapping the statement in an async method~\r\n\r\n![works in console](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/await-works-in-console.jpg?w=1170\u0026ssl=1)\u003cfigcaption\u003eIt’s Magic~~~\u003c/figcaption\u003e\r\n\r\nIt’s a behavior [added to Chrome Devtools since Chrome 62](https://developers.google.com/web/updates/2017/08/devtools-release-notes#await), released on year 2017.\r\n\r\nSo this is a nice feature but you have to watch out as you can’t simply paste your code in your editor.  \r\nIt needs to be wrapped inside an async method.\r\n\r\n## 2️⃣ $$ vs document.querySelectorAll\r\n\r\n[$$](https://developers.google.com/web/tools/chrome-devtools/console/utilities#queryselectorall) is a part of Console Utilities API, which is available only within the console and not part of either JavaScript or [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction).\r\n\r\n[Google document](https://developers.google.com/web/tools/chrome-devtools/console/utilities#queryselectorall) describes `$$` as\r\n\r\n\u003e _$$(selector) returns an array of elements that match the given CSS selector. This command is equivalent to calling document.querySelectorAll()._\r\n\u003e \r\n\u003e \u003ccite\u003ehttps://developers.google.com/web/tools/chrome-devtools/console/utilities#queryselectorall\u003c/cite\u003e\r\n\r\nThe documentation says it’s equivalent to calling [document.querySelectorAll()](https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll) but `$$` is differs  \r\nwhere `document.querySelectorAll()` returns a [NodeList](https://developer.mozilla.org/en-US/docs/Web/API/NodeList) object while `$$` returns an array.\r\n\r\n![nodelist result in cnosole](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/vs-qsa.png?w=1170\u0026ssl=1)\r\n\r\n`NodeList` is an [array-like object](http://speakingjs.com/es5/ch18.html#_pitfall_array_like_objects), whose prototype doesn’t inherit from [Array.prototype](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/prototype). That means, a `NodeList` object instance doesn’t have access to methods such as [Array#map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) or [Array#reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce).\r\n\r\n![Can’t map over NodeList object](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/nodelist.map-fails.png?w=1170\u0026ssl=1)\u003cfigcaption\u003eCan’t map over NodeList object\u003c/figcaption\u003e\r\n\r\n![While you can map over $$](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/map.png?w=1170\u0026ssl=1)\u003cfigcaption\u003eWhile you can map over $$\u003c/figcaption\u003e\r\n\r\nThis can cause a problem when you copy \u0026 paste code using `$$` selector and simply convert it to using `document.querySelectorAll()` and try to call `Array.prototype`\r\n\r\n_You can easily convert a NodeList object to an array using a_ [_spread syntax_](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax) _or_ [_Array.from_](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from) _by the way._\r\n\r\n![workaround using spread and array from](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/04/workaround.png?w=1170\u0026ssl=1)\r\n\r\n## 👋 Parting Words\r\n\r\nThe console can save you a lot of keystrokes but you might want to double check before copying \u0026 pasting the code from console to the editor.\r\n\r\nIf you have more gotchas please let me know 🙂\r\n\r\n_The post [Two gotchas in Chrome Developer Tool Console](https://www.slightedgecoder.com/2019/04/19/two-gotchas-in-chrome-developer-tool-console/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com)._",
    "canonical_url": "https://www.slightedgecoder.com/2019/04/19/two-gotchas-in-chrome-developer-tool-console/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2019/04/19/two-gotchas-in-chrome-developer-tool-console/",
    "positive_reactions_count": 11,
    "edited_at": null,
    "crossposted_at": "2019-04-20T05:23:49.884Z",
    "language": "en",
    "cached_tag_list": "javascript, chrome, devtools",
    "path": "/dance2die/two-gotchas-in-chrome-developer-tool-console-11k3",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-04-20T04:29:25.000Z"
  },
  {
    "title": "Scrolling with Page Up/Down Keys in React-Window",
    "slug": "scrolling-with-page-up-down-keys-in-react-window-31ei",
    "created_at": "2019-05-08T03:05:54.954Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/ksnt4mzyfc3fti00ddol.jpg",
    "description": "                    Photo by Ruthie on Unsplash\n\nReact-Window is a React library ...",
    "published": true,
    "published_at": "2019-05-08T03:01:02.000Z",
    "processed_html": "\u003cp\u003e                    \u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/a6mfMjCFkII?utmsource=unsplash\u0026amp;utmmedium=referral\u0026amp;utmcontent=creditCopyText\"\u003eRuthie\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/paper-roll?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://react-window.now.sh/\"\u003eReact-Window\u003c/a\u003e is a React library by Brian Vaughn for rendering a massive amount of items in a list (or a grid but I will use “list” to keep the sentences simple as principle is the same for both) efficiently.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eBy rendering only visible items\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eBut the problem is that when you click on an item in a list, you can’t scroll up/down using keys.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003esuch as Page Up/Down, Arrow Up/Down, Home, or End keys.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eLet’s see how we can support scrolling in react-window with Page Up/Down.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"replicating-the-issue\" href=\"#replicating-the-issue\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Replicating the issue\n\u003c/h2\u003e\n\n\u003cp\u003eGo to an (any example) \u003ca href=\"https://react-window.now.sh/#/examples/list/scrolling-indicators\"\u003ereact-window example\u003c/a\u003e and scroll up/down with keyboard without selecting an item in the list.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eYou should be able to scroll with any keys.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eAnd then click on any item in the list and try to scroll with keyboard.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eAnd you will see that it will move just once and stop responding.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--y8CC_Q05--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/05/2019-05-07_21-23-43.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--y8CC_Q05--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/05/2019-05-07_21-23-43.gif%3Fw%3D1170%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-happened\" href=\"#what-happened\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  What happened?\n\u003c/h2\u003e\n\n\u003cp\u003eThe behavior isn’t implemented according to this GitHub issue, \u003ca href=\"https://github.com/bvaughn/react-window/issues/46\"\u003eSupport scrolling with Page Up / Page Down keys\u003c/a\u003e (, which is NOT created by me but by \u003ca href=\"https://github.com/steverandy\"\u003eSteve Randy Tantra\u003c/a\u003e).\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eAnd you are responsible to add a support for yourself.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eThankfully, Brian has provided \u003ca href=\"https://github.com/bvaughn/react-window/issues/46#issuecomment-416073707\"\u003ea way to implement it\u003c/a\u003e in the same thread.\u003c/p\u003e\n\n\u003cp\u003eLet’s Make that example list scrollable with Page Up/Down, Home and End keys.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"implementation\" href=\"#implementation\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Implementation\n\u003c/h2\u003e\n\n\u003cp\u003eYou can see the working implementation here and follow along.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cem\u003eUnfortunately, keyboards will scroll this current page up/down thus you’d have to open the editor in\u003c/em\u003e \u003ca href=\"https://codesandbox.io/s/5zrw4xz04x\"\u003e\u003cem\u003enew window\u003c/em\u003e\u003c/a\u003e\u003cem\u003e….\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"wrap-the-list-with-a-container-element\" href=\"#wrap-the-list-with-a-container-element\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Wrap the list with a container element\n\u003c/h2\u003e\n\n\u003cp\u003eFirst you need to wrap the list within a container element such as \u003ccode\u003ediv/section/main\u003c/code\u003e etc.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--U91ayFCS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/05/chrome_2019-05-07_21-54-17.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--U91ayFCS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/05/chrome_2019-05-07_21-54-17.png%3Fw%3D1170%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAnd then \u003ca href=\"https://stackoverflow.com/a/44434971/4035\"\u003eadd the tab index to capture the onKeyDown event\u003c/a\u003e.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/6a7e17fd60f77e2ba47ba4bb7fa599a5.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"add-references-to-the-list\" href=\"#add-references-to-the-list\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Add references to the list\n\u003c/h2\u003e\n\n\u003cp\u003eNext, we need to refer to the list to scroll so create two (you can create one but it’s more readable with two, I will show you why later) references to the List.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/831038fd5f895b0685fcce7fd8bf3bd0.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003eouterListRef\u003c/code\u003e is an outerRef refers to the \u003ccode\u003eList\u003c/code\u003e itself (the container property) while \u003ccode\u003einnerListRef\u003c/code\u003e is the dynamic container which updates as you scroll and contains the maximum content height.\u003c/p\u003e\n\n\u003cp\u003eYou can refer to \u003ca href=\"https://react-window.now.sh/#/api/FixedSizeList\"\u003ethe documentation\u003c/a\u003e on \u003ccode\u003einner/outerRef\u003c/code\u003es but found it a bit hard to grasp without looking at the code. So let’s take a look at what those two references actually refer to in rendered HTML.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--uP3Sb_iY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/05/explorer_2019-05-07_22-04-16-4.png%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--uP3Sb_iY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/05/explorer_2019-05-07_22-04-16-4.png%3Fw%3D1170%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eouterRef\u003c/code\u003e is the element we need to use \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo\"\u003escrollTo\u003c/a\u003e (\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo#Notes\"\u003escroll is the same\u003c/a\u003e)API with and the \u003ccode\u003einnerRef\u003c/code\u003e is the element we need to extract the maximum height from.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eWithout\u003c/em\u003e \u003ccode\u003einnerRef\u003c/code\u003e\u003cem\u003e, you refer to it as\u003c/em\u003e \u003ccode\u003eouterRef.current.firstElementChild\u003c/code\u003e \u003cem\u003eso\u003c/em\u003e \u003ccode\u003einnerRef\u003c/code\u003e \u003cem\u003eimproves readability.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"handling-onkeydown-event\" href=\"#handling-onkeydown-event\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Handling onKeyDown event\n\u003c/h2\u003e\n\n\u003cp\u003eLet’s add the \u003ccode\u003eonKeyDown\u003c/code\u003e event handler, which is fired whenever you hold down any keys.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/a1306474efb3c85e0b4f129084442b2d.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003ehandleKeyDown\u003c/code\u003e is given a keyboard event with a \u003ccode\u003ekeyCode\u003c/code\u003e property, which is destructured from the argument.\u003cbr\u003e\u003cbr\u003e\nAnd when the matching key is found from the \u003ccode\u003ekeys\u003c/code\u003e then we set the scroll offset (where we are currently in the list).\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003ekeys\u003c/code\u003e object(an essentially a map) holds a list of keys to be handled where\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003epageUp\u003c/code\u003e has keyCode value of 33\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003epageDown\u003c/code\u003e has keyCode value of 34\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eend\u003c/code\u003e has keyCode value of 36\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ehome\u003c/code\u003e has keyCode value of 35\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eSo whenever \u003ccode\u003epageUp/Down\u003c/code\u003e, \u003ccode\u003eend\u003c/code\u003e, or \u003ccode\u003ehome\u003c/code\u003e keys are pressed, we are updating the current position (scroll offset).\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003emaxHeight\u003c/code\u003e is retrieved using the \u003ccode\u003einnerRef\u003c/code\u003e‘s style height for convenience without using \u003ccode\u003eouterRef\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eminHeight\u003c/code\u003e is set to oddly 0.1 instead of 0. I really have no idea why setting it to 0 would not work with scroll API.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eWould anyone let me know why it is so?\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003e\n  \u003ca name=\"and-lets-rock-and-scroll\" href=\"#and-lets-rock-and-scroll\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  And let’s rock and scroll~\n\u003c/h2\u003e\n\n\u003cp\u003eAs react-window mutates the DOM while scrolling, we need to add it to the \u003ca href=\"https://reactjs.org/docs/hooks-reference.html#uselayouteffect\"\u003euseLayoutEffect\u003c/a\u003e because we need to scrolling to happen after it.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003e\u003cstrong\u003euseLayoutEffect\u003c/strong\u003e documentation says “it fires synchronously after all DOM mutations.”\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eWould anyone let me know if it’s a good approach? (because \u003ca href=\"https://reactjs.org/docs/hooks-reference.html#useeffect\"\u003euseEffect\u003c/a\u003e still worked fine.)\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--yJlQmxs0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/05/2019-05-07_22-33-23.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--yJlQmxs0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/05/2019-05-07_22-33-23.gif%3Fw%3D1170%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cfigcaption\u003eScrolling mutating the DOM\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eRefer to Kent C. Dodds’ post\u003c/em\u003e \u003ca href=\"https://kentcdodds.com/blog/useeffect-vs-uselayouteffect\"\u003e\u003cem\u003euseEffect vs useLayoutEffect\u003c/em\u003e\u003c/a\u003e \u003cem\u003efor difference between them.\u003c/em\u003e\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/f4ec9b5c449e63deccdf42973d27942d.js\"\u003e\u003c/script\u003e \u003c/div\u003e\n\n\u003cp\u003eIn the effect, we are basically calling scrollTo to update the current scroll position in the list.\u003c/p\u003e\n\n\u003cp\u003eWhen the behavior is set to \u003ccode\u003esmooth\u003c/code\u003e it was gliding, which I am not sure how to prevent from happening…😅\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eYet, again, I shameless ask why it’s happening and how to get around the issue 🙏\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--8YC_QBmv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/05/2019-05-07_22-40-13.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--8YC_QBmv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/05/2019-05-07_22-40-13.gif%3Fw%3D1170%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cfigcaption\u003eRoulette?\u003c/figcaption\u003e\u003c/p\u003e\n\u003ch2\u003e\n  \u003ca name=\"result\" href=\"#result\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Result\n\u003c/h2\u003e\n\n\u003cp\u003eNow you can scroll using Page Up/Down, Home, and End keys.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--O4TD5-uw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/05/2019-05-07_22-43-18.gif%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--O4TD5-uw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/05/2019-05-07_22-43-18.gif%3Fw%3D1170%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eHere is the link to the code again on CodeSandbox.\u003c/p\u003e\n\n\u003cp\u003e\u003ciframe src=\"https://codesandbox.io/embed/5zrw4xz04x\" style=\"width:100%; height:calc(300px + 8vw); border:0; border-radius: 4px; overflow:hidden;\" sandbox=\"allow-same-origin allow-scripts allow-forms allow-top-navigation-by-user-activation\"\u003e\n\u003c/iframe\u003e\n\u003c/p\u003e\n\n\u003cp\u003eI’ve had the problem implementing it for \u003ca href=\"https://github.com/dance2die/undraw/blob/master/src/components/Images/Images.js\"\u003eone of the pet projects\u003c/a\u003e and that \u003ca href=\"https://github.com/dance2die/undraw/blob/master/src/components/Images/Images.js\"\u003eGitHub issue\u003c/a\u003e and seemingly simple but yet helpful \u003ca href=\"https://github.com/bvaughn/react-window/issues/46#issuecomment-416073707\"\u003ereply by Brian\u003c/a\u003e saved the day. So I give thanks to Steve \u0026amp; Brian.\u003c/p\u003e\n\n\u003cp\u003eI’d appreciate it if anyone can provide me with feedbacks for questions I’ve asked above 🙂\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2019/05/07/scrolling-with-page-up-down-keys-in-react-window/\"\u003eScrolling with Page Up/Down Keys in React-Window\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n",
    "social_image": null,
    "body_markdown": "---\r\ntitle: Scrolling with Page Up/Down Keys in React-Window\r\npublished: true\r\ntags: react\r\ncanonical_url: https://www.slightedgecoder.com/2019/05/07/scrolling-with-page-up-down-keys-in-react-window/\r\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/ksnt4mzyfc3fti00ddol.jpg\r\n---\r\n\r\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_Photo by [Ruthie](https://unsplash.com/photos/a6mfMjCFkII?utmsource=unsplash\u0026utmmedium=referral\u0026utmcontent=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/paper-roll?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_\r\n\r\n[React-Window](https://react-window.now.sh/) is a React library by Brian Vaughn for rendering a massive amount of items in a list (or a grid but I will use “list” to keep the sentences simple as principle is the same for both) efficiently.\r\n\r\n_By rendering only visible items_\r\n\r\nBut the problem is that when you click on an item in a list, you can’t scroll up/down using keys.\r\n\r\n_such as Page Up/Down, Arrow Up/Down, Home, or End keys._\r\n\r\nLet’s see how we can support scrolling in react-window with Page Up/Down.\r\n\r\n \r\n## Replicating the issue\r\n\r\nGo to an (any example) [react-window example](https://react-window.now.sh/#/examples/list/scrolling-indicators) and scroll up/down with keyboard without selecting an item in the list.\r\n\r\n_You should be able to scroll with any keys._\r\n\r\nAnd then click on any item in the list and try to scroll with keyboard.\r\n\r\n_And you will see that it will move just once and stop responding._\r\n\r\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/05/2019-05-07_21-23-43.gif?w=1170\u0026ssl=1)\r\n\r\n## What happened?\r\n\r\nThe behavior isn’t implemented according to this GitHub issue, [Support scrolling with Page Up / Page Down keys](https://github.com/bvaughn/react-window/issues/46) (, which is NOT created by me but by [Steve Randy Tantra](https://github.com/steverandy)).\r\n\r\n_And you are responsible to add a support for yourself._\r\n\r\nThankfully, Brian has provided [a way to implement it](https://github.com/bvaughn/react-window/issues/46#issuecomment-416073707) in the same thread.\r\n\r\nLet’s Make that example list scrollable with Page Up/Down, Home and End keys.\r\n\r\n## Implementation\r\n\r\nYou can see the working implementation here and follow along.\r\n\r\n \u003ciframe src=\"https://codesandbox.io/embed/5zrw4xz04x?autoresize=1\u0026amp;codemirror=1\u0026amp;fontsize=14\" title=\"react-window: scrolling with page up/down\" style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\" sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\u003e\u003c/iframe\u003e\r\n\r\n_Unfortunately, keyboards will scroll this current page up/down thus you’d have to open the editor in_ [_new window_](https://codesandbox.io/s/5zrw4xz04x)_…._\r\n\r\n## Wrap the list with a container element\r\n\r\nFirst you need to wrap the list within a container element such as `div/section/main` etc.\r\n\r\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/05/chrome_2019-05-07_21-54-17.png?w=1170\u0026ssl=1)\r\n\r\nAnd then [add the tab index to capture the onKeyDown event](https://stackoverflow.com/a/44434971/4035).\r\n\r\n{% gist https://gist.github.com/dance2die/6a7e17fd60f77e2ba47ba4bb7fa599a5 %}\r\n\r\n\r\n## Add references to the list\r\n\r\nNext, we need to refer to the list to scroll so create two (you can create one but it’s more readable with two, I will show you why later) references to the List.\r\n\r\n{% gist https://gist.github.com/dance2die/831038fd5f895b0685fcce7fd8bf3bd0 %}\r\n\r\n`outerListRef` is an outerRef refers to the `List` itself (the container property) while `innerListRef` is the dynamic container which updates as you scroll and contains the maximum content height.\r\n\r\nYou can refer to [the documentation](https://react-window.now.sh/#/api/FixedSizeList) on `inner/outerRef`s but found it a bit hard to grasp without looking at the code. So let’s take a look at what those two references actually refer to in rendered HTML.\r\n\r\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/05/explorer_2019-05-07_22-04-16-4.png?w=1170\u0026ssl=1)\r\n\r\nThe `outerRef` is the element we need to use [scrollTo](https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo) ([scroll is the same](https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo#Notes))API with and the `innerRef` is the element we need to extract the maximum height from.\r\n\r\n_Without_ `innerRef`_, you refer to it as_ `outerRef.current.firstElementChild` _so_ `innerRef` _improves readability._\r\n\r\n## Handling onKeyDown event\r\n\r\nLet’s add the `onKeyDown` event handler, which is fired whenever you hold down any keys.\r\n\r\n{% gist https://gist.github.com/dance2die/a1306474efb3c85e0b4f129084442b2d %}\r\n\r\n`handleKeyDown` is given a keyboard event with a `keyCode` property, which is destructured from the argument.  \r\nAnd when the matching key is found from the `keys` then we set the scroll offset (where we are currently in the list).\r\n\r\n`keys` object(an essentially a map) holds a list of keys to be handled where\r\n\r\n- `pageUp` has keyCode value of 33\r\n- `pageDown` has keyCode value of 34\r\n- `end` has keyCode value of 36\r\n- `home` has keyCode value of 35\r\n\r\nSo whenever `pageUp/Down`, `end`, or `home` keys are pressed, we are updating the current position (scroll offset).\r\n\r\n`maxHeight` is retrieved using the `innerRef`‘s style height for convenience without using `outerRef`.\r\n\r\n`minHeight` is set to oddly 0.1 instead of 0. I really have no idea why setting it to 0 would not work with scroll API.\r\n\r\n_Would anyone let me know why it is so?_\r\n\r\n## And let’s rock and scroll~\r\n\r\nAs react-window mutates the DOM while scrolling, we need to add it to the [useLayoutEffect](https://reactjs.org/docs/hooks-reference.html#uselayouteffect) because we need to scrolling to happen after it.\r\n\r\n_**useLayoutEffect** documentation says “it fires synchronously after all DOM mutations.”_\r\n  \r\nWould anyone let me know if it’s a good approach? (because [useEffect](https://reactjs.org/docs/hooks-reference.html#useeffect) still worked fine.)\r\n\r\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/05/2019-05-07_22-33-23.gif?w=1170\u0026ssl=1)\u003cfigcaption\u003eScrolling mutating the DOM\u003c/figcaption\u003e\r\n\r\n_Refer to Kent C. Dodds’ post_ [_useEffect vs useLayoutEffect_](https://kentcdodds.com/blog/useeffect-vs-uselayouteffect) _for difference between them._\r\n\r\n{% gist https://gist.github.com/dance2die/f4ec9b5c449e63deccdf42973d27942d %}\r\n\r\nIn the effect, we are basically calling scrollTo to update the current scroll position in the list.\r\n\r\nWhen the behavior is set to `smooth` it was gliding, which I am not sure how to prevent from happening…😅\r\n\r\n_Yet, again, I shameless ask why it’s happening and how to get around the issue 🙏_\r\n\r\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/05/2019-05-07_22-40-13.gif?w=1170\u0026ssl=1)\u003cfigcaption\u003eRoulette?\u003c/figcaption\u003e\r\n\r\n## Result\r\n\r\nNow you can scroll using Page Up/Down, Home, and End keys.\r\n\r\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/05/2019-05-07_22-43-18.gif?w=1170\u0026ssl=1)\r\n\r\nHere is the link to the code again on CodeSandbox.\r\n\r\n{% codesandbox 5zrw4xz04x %}\r\n\r\nI’ve had the problem implementing it for [one of the pet projects](https://github.com/dance2die/undraw/blob/master/src/components/Images/Images.js) and that [GitHub issue](https://github.com/dance2die/undraw/blob/master/src/components/Images/Images.js) and seemingly simple but yet helpful [reply by Brian](https://github.com/bvaughn/react-window/issues/46#issuecomment-416073707) saved the day. So I give thanks to Steve \u0026 Brian.\r\n\r\nI’d appreciate it if anyone can provide me with feedbacks for questions I’ve asked above 🙂\r\n\r\n_The post [Scrolling with Page Up/Down Keys in React-Window](https://www.slightedgecoder.com/2019/05/07/scrolling-with-page-up-down-keys-in-react-window/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com)._",
    "canonical_url": "https://www.slightedgecoder.com/2019/05/07/scrolling-with-page-up-down-keys-in-react-window/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 4,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2019/05/07/scrolling-with-page-up-down-keys-in-react-window/",
    "positive_reactions_count": 9,
    "edited_at": null,
    "crossposted_at": "2019-05-11T18:22:53.321Z",
    "language": "en",
    "cached_tag_list": "react",
    "path": "/dance2die/scrolling-with-page-up-down-keys-in-react-window-31ei",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-05-15T14:57:04.198Z"
  },
  {
    "title": "Promise.race vs. Promise.any And Promise.all vs. Promise.allSettled",
    "slug": "promise-race-vs-promise-any-and-promise-all-vs-promise-allsettled-26if",
    "created_at": "2019-05-18T21:33:21.483Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/xdz4u4wdzfgg0xdrkw81.jpg",
    "description": "Photo by [_Ryan Franco](https://unsplash.com/photos/C6YVD4keMJY?utm_source=unspla...",
    "published": true,
    "published_at": "2019-05-18T21:32:46.000Z",
    "processed_html": "\u003cp\u003e                    \u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/photos/C6YVD4keMJY?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eRyan Franco\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/pinky-promise?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://www.youtube.com/watch?v=c0oy0vQKEZE\"\u003eWhat’s new in JavaScript (Google I/O ’19)\u003c/a\u003e on May 8, 2019 showed what’s coming/available for static Promise combinator methods, \u003ca href=\"https://github.com/tc39/proposal-promise-allSettled\"\u003ePromise.allSettled\u003c/a\u003e and \u003ca href=\"https://github.com/tc39/proposal-promise-any\"\u003ePromise.any\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThere are already two methods available in modern browsers, \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all\"\u003ePromise.all\u003c/a\u003e and \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/race\"\u003ePromise.race\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eLet’s take a look at differences and how each method works.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"prerequisite\" href=\"#prerequisite\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚀 Prerequisite\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"promise-definition\" href=\"#promise-definition\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔆 Promise Definition\n\u003c/h3\u003e\n\n\u003cp\u003eI will skip on what a promise is and jump straight into static methods and will discuss differences.\u003c/p\u003e\n\n\u003cp\u003eA gist is that, a promise is JavaScript’s way of promising you that a work will be done (or might fail if the work could not be completed).\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eIf you are familiar with C#, it’s analogous\u003c/em\u003e \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.task\"\u003e\u003cem\u003eTask\u003c/em\u003e\u003c/a\u003e \u003cem\u003eclass.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eFor more info, refer to following documentations.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"\u003ePromise – JavaScript\u003c/a\u003e on MDN\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://developers.google.com/web/fundamentals/primers/promises\"\u003eJavaScript Promises: an Introduction\u003c/a\u003e on Google Developers\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"promise-state-definitions\" href=\"#promise-state-definitions\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔆 Promise State Definitions\n\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eFulfilled\u003c/strong\u003e – When a promise is resolved successfully.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eRejected\u003c/strong\u003e – When a promise failed.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003ePending\u003c/strong\u003e – When a promise is “\u003ca href=\"https://github.com/domenic/promises-unwrapping/blob/master/docs/states-and-fates.md#states\"\u003eneither fulfilled nor rejected\u003c/a\u003e“.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eSettled\u003c/strong\u003e – Not really a state but an \u003cem\u003eumbrella term\u003c/em\u003e to describe that a promise is either fulfilled or rejected.\n\n\u003cul\u003e\n\u003cli\u003eThis term will be used to describe characteristics of new methods later.\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eFor more detailed explanation of states \u0026amp; fates, please refer to \u003ca href=\"https://github.com/domenic/promises-unwrapping/blob/master/docs/states-and-fates.md\"\u003eStates and Fates\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThere are other static Promise methods such as \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/reject\"\u003ePromise.reject\u003c/a\u003e, \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve\"\u003ePromise.resolve\u003c/a\u003e but I will cover only “combinator” methods, which takes in an iterable object as an argument.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"differences\" href=\"#differences\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚀 Differences\n\u003c/h2\u003e\n\n\u003cp\u003eLet’s first take a look at difference between existing \u0026amp; new combinator methods.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"promiseall-vs-promiseallsettled\" href=\"#promiseall-vs-promiseallsettled\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔅 Promise.all vs. Promise.allSettled\n\u003c/h3\u003e\n\n\u003cp\u003eBoth accepts an iterable object but\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003ePromise.all\u003c/code\u003e rejects as soon as a promise within the iterable object rejected.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ePromise.allSettled\u003c/code\u003e resolves regardless of rejected promise(s) within the iterable object.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"promiserace-vs-promiseany\" href=\"#promiserace-vs-promiseany\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔅 Promise.race vs. Promise.any\n\u003c/h3\u003e\n\n\u003cp\u003eBoth accepts an iterable object but\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003ePromise.race\u003c/code\u003e short-circuits on the first settled (fulfilled or rejected) promise within the iterable object.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ePromise.any\u003c/code\u003e short-circuits on the first fulfilled promise and continues to resolve regardless of rejected promises unless all within the iterable object reject.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"comparison-table\" href=\"#comparison-table\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚀 Comparison Table\n\u003c/h2\u003e\n\n\u003cp\u003eNow let’s take a look at existing/upcoming combinator methods.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/9d9f7531775efed3eca1ad70bfd17a73.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003cp\u003eNow let’s move on to learn more about each method.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eNote that all “Characteristics” are taken from TC39 proposal \u003ca href=\"https://github.com/tc39/proposal-promise-any/blob/master/README.md\"\u003eREADME\u003c/a\u003e.\u003c/strong\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"promiseall\" href=\"#promiseall\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚀 Promise.all\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eWhat is this?\u003c/strong\u003e Resolve all promises passed as an iterable object.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eIdiom\u003c/strong\u003e – One bad 🍏 spoils the bunch (“all”).\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eCharacteristic\u003c/strong\u003e – short-circuits when an input value is rejected\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"example\" href=\"#example\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔆 Example\n\u003c/h3\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/9ba18d739224d408af8a8f239cde9a2b.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003cp\u003eWhen \u003ccode\u003ePromise.all\u003c/code\u003e fulfilled(\u003ccode\u003epromisesWithoutReject\u003c/code\u003e), all apples are returned.\u003c/p\u003e\n\n\u003cp\u003eThe latter example using \u003ccode\u003epromisesWithOneReject\u003c/code\u003e shows that one rejected promise results in rejecting all promises.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"promiseallsettled\" href=\"#promiseallsettled\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚀 Promise.allSettled\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eWhat is this?\u003c/strong\u003e all promises regardless of settled (fulfilled/rejected) status.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eIdiom\u003c/strong\u003e – Let’s “wait and see” 🤔.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eCharacteristic\u003c/strong\u003e – Does not short-circuit unlike Promise.all/race\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eNote\u003c/strong\u003e – Available in \u003ca href=\"https://www.chromestatus.com/feature/5547381053456384\"\u003eChrome 76\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"example\" href=\"#example\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔆 Example\n\u003c/h3\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/e6f491a82eb10a28f3743f68f5c9d4fe.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003cp\u003eRegardless of settled (fulfilled or rejected) state, all promises resolve without short-circuiting to \u003ccode\u003ecatch\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eTo differentiate if resolved values were successful, they are returned as an array of objects of following shape.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cem\u003eFulfilled\u003c/em\u003e promise is returned as \u003ccode\u003e{status: 'fulfilled', value}\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cem\u003eRejected\u003c/em\u003e promise is returned as \u003ccode\u003e{status: 'rejected', reason}\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"promiserace\" href=\"#promiserace\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚀 Promise.race\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eWhat is this?\u003c/strong\u003e The first fulfilled promise or reject the whole promise when even one promise rejects.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eIdiom\u003c/strong\u003e – A race between Good 😇](\u003ca href=\"https://s.w.org/images/core/emoji/12.0.0-1/72x72/1f607.png\"\u003ehttps://s.w.org/images/core/emoji/12.0.0-1/72x72/1f607.png\u003c/a\u003e) (Fulfilled) and Evil ![😈 (Rejected)\n\n\u003cul\u003e\n\u003cli\u003eNot really an idiom though 😅\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eCharacteristic\u003c/strong\u003e – Short-circuits when an input value is settled\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"example\" href=\"#example\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔆 Example\n\u003c/h3\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/e59a0f90b6a0ea585520b994652bfb55.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003cp\u003eIn \u003ccode\u003epromiseWillFulfill\u003c/code\u003e example, the first promise \u003cem\u003efulfilled\u003c/em\u003e within 1 millisecond and thus the humanity survived.\u003c/p\u003e\n\n\u003cp\u003eBut the second example using \u003ccode\u003epromiseWillReject\u003c/code\u003e had a promise \u003cem\u003erejecting\u003c/em\u003e in 1 millisecond and thus the humanity is doomed.\u003c/p\u003e\n\n\u003cp\u003eAnd the last example (\u003ccode\u003epromisesWithOUTReject\u003c/code\u003e) fulfilled without rejection thus the first fulfilled promise value of ”\u003cbr\u003e\u003cbr\u003e\nthree” was returned.\u003c/p\u003e\n\n\u003cp\u003eFrom these examples, you can see that the first settled state (fulfilled or reject) short circuited the promise.\u003c/p\u003e\n\u003ch2\u003e\n  \u003ca name=\"promiseany\" href=\"#promiseany\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚀 Promise.any\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003cstrong\u003eWhat is this?\u003c/strong\u003e Returns the first fulfilled promise regardless of other rejected promises. If all promises reject, then reject by providing errors for all rejects.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eIdiom\u003c/strong\u003e – All’s well that ends well.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eCharacteristic\u003c/strong\u003e – Short-circuits when an input value is fulfilled.\u003c/li\u003e\n\u003cli\u003e\n\u003cstrong\u003eNote\u003c/strong\u003e – Not yet implemented in any browsers and it is in \u003ca href=\"https://tc39.github.io/proposal-promise-any/\"\u003eStage 1\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003e\n  \u003ca name=\"example\" href=\"#example\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🔆 Example\n\u003c/h3\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/992a1157c191eca2b277e1380b323e8b.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003cp\u003eFirst example has promises that rejects right away but did not short-circuit because of a fulfilled promise, thus you win at life.\u003c/p\u003e\n\n\u003cp\u003eSecond example has promises resolving after a certain period. The first fulfilled promise was resolved after a series of rejects but didn’t short-circuit. And you were able to get a job.\u003c/p\u003e\n\n\u003cp\u003eWhen all promises reject, then that’s when Promise.any rejects and you didn’t get any job offers.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👋 Conclusion\n\u003c/h2\u003e\n\n\u003cp\u003eHow I understood was that the new \u003ccode\u003ePromise.allSettled/any\u003c/code\u003e are introduced for Promise to try its best to resolve promises to fulfill unlike existing ones that fails on first encounter of reject.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003ePromise.all\u003c/code\u003e \u0026amp; \u003ccode\u003ePromise.race\u003c/code\u003e has been available in modern browsers (this exclude IE ;p) and \u003ccode\u003ePromise.allSettled\u003c/code\u003e will be available in Chrome 76.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003ePromise.any\u003c/code\u003e is still in \u003ca href=\"https://tc39.github.io/proposal-promise-any/\"\u003estage 1\u003c/a\u003e and not available in any browsers (but available in \u003ca href=\"http://bluebirdjs.com/docs/api/promise.any.html\"\u003eBluebird\u003c/a\u003e or using polyfills – for the demo I used \u003ca href=\"https://www.npmjs.com/package/promise-any\"\u003epromise-any\u003c/a\u003e NPM library for demo.)\u003c/p\u003e\n\n\u003cp\u003eI’d love to hear where you would (have) use(d) each method to solve a problem.\u003cbr\u003e\u003cbr\u003e\nAnd would you please kindly let me know if you find any mistakes and/or how I can improve the example?\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2019/05/18/promise-race-vs-promise-any-and-promise-all-vs-promise-allsettled/\"\u003ePromise.race vs. Promise.any And Promise.all vs. Promise.allSettled\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n",
    "social_image": "",
    "body_markdown": "---\ntitle: Promise.race vs. Promise.any And Promise.all vs. Promise.allSettled\npublished: true\ntags: javascript\ncanonical_url: https://www.slightedgecoder.com/2019/05/18/promise-race-vs-promise-any-and-promise-all-vs-promise-allsettled/\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/xdz4u4wdzfgg0xdrkw81.jpg\n---\n\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_Photo by [Ryan Franco](https://unsplash.com/photos/C6YVD4keMJY?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/pinky-promise?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_\n\n[What’s new in JavaScript (Google I/O ’19)](https://www.youtube.com/watch?v=c0oy0vQKEZE) on May 8, 2019 showed what’s coming/available for static Promise combinator methods, [Promise.allSettled](https://github.com/tc39/proposal-promise-allSettled) and [Promise.any](https://github.com/tc39/proposal-promise-any).\n\nThere are already two methods available in modern browsers, [Promise.all](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all) and [Promise.race](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/race).\n\nLet’s take a look at differences and how each method works.\n\n \n## 🚀 Prerequisite\n\n### 🔆 Promise Definition\n\nI will skip on what a promise is and jump straight into static methods and will discuss differences.\n\nA gist is that, a promise is JavaScript’s way of promising you that a work will be done (or might fail if the work could not be completed).\n\n_If you are familiar with C#, it’s analogous_ [_Task_](https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.task) _class._\n\nFor more info, refer to following documentations.\n\n- [Promise – JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) on MDN\n- [JavaScript Promises: an Introduction](https://developers.google.com/web/fundamentals/primers/promises) on Google Developers\n\n### 🔆 Promise State Definitions\n\n- **Fulfilled** – When a promise is resolved successfully.\n- **Rejected** – When a promise failed.\n- **Pending** – When a promise is “[neither fulfilled nor rejected](https://github.com/domenic/promises-unwrapping/blob/master/docs/states-and-fates.md#states)“.\n- **Settled** – Not really a state but an _umbrella term_ to describe that a promise is either fulfilled or rejected.\n  - This term will be used to describe characteristics of new methods later.\n\nFor more detailed explanation of states \u0026 fates, please refer to [States and Fates](https://github.com/domenic/promises-unwrapping/blob/master/docs/states-and-fates.md).\n\nThere are other static Promise methods such as [Promise.reject](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/reject), [Promise.resolve](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve) but I will cover only “combinator” methods, which takes in an iterable object as an argument.\n\n## 🚀 Differences\n\nLet’s first take a look at difference between existing \u0026 new combinator methods.\n\n### 🔅 Promise.all vs. Promise.allSettled\n\nBoth accepts an iterable object but\n\n- `Promise.all` rejects as soon as a promise within the iterable object rejected.\n- `Promise.allSettled` resolves regardless of rejected promise(s) within the iterable object.\n\n### 🔅 Promise.race vs. Promise.any\n\nBoth accepts an iterable object but\n\n- `Promise.race` short-circuits on the first settled (fulfilled or rejected) promise within the iterable object.\n- `Promise.any` short-circuits on the first fulfilled promise and continues to resolve regardless of rejected promises unless all within the iterable object reject.\n\n## 🚀 Comparison Table\n\nNow let’s take a look at existing/upcoming combinator methods.\n\n{% gist https://gist.github.com/dance2die/9d9f7531775efed3eca1ad70bfd17a73 %}\n\n\nNow let’s move on to learn more about each method.\n\n**Note that all “Characteristics” are taken from TC39 proposal [README](https://github.com/tc39/proposal-promise-any/blob/master/README.md).**\n\n## 🚀 Promise.all\n\n- **What is this?** Resolve all promises passed as an iterable object.\n- **Idiom** – One bad 🍏 spoils the bunch (“all”).\n- **Characteristic** – short-circuits when an input value is rejected\n\n### 🔆 Example\n\n{% gist https://gist.github.com/dance2die/9ba18d739224d408af8a8f239cde9a2b %}\n\nWhen `Promise.all` fulfilled(`promisesWithoutReject`), all apples are returned.\n\nThe latter example using `promisesWithOneReject` shows that one rejected promise results in rejecting all promises.\n\n## 🚀 Promise.allSettled\n\n- **What is this?** all promises regardless of settled (fulfilled/rejected) status.\n- **Idiom** – Let’s “wait and see” 🤔.\n- **Characteristic** – Does not short-circuit unlike Promise.all/race\n- **Note** – Available in [Chrome 76](https://www.chromestatus.com/feature/5547381053456384).\n\n### 🔆 Example\n\n{% gist https://gist.github.com/dance2die/e6f491a82eb10a28f3743f68f5c9d4fe %}\n\nRegardless of settled (fulfilled or rejected) state, all promises resolve without short-circuiting to `catch`.\n\nTo differentiate if resolved values were successful, they are returned as an array of objects of following shape.\n\n- _Fulfilled_ promise is returned as `{status: 'fulfilled', value}`\n- _Rejected_ promise is returned as `{status: 'rejected', reason}`\n\n## 🚀 Promise.race\n\n- **What is this?** The first fulfilled promise or reject the whole promise when even one promise rejects.\n- **Idiom** – A race between Good 😇](https://s.w.org/images/core/emoji/12.0.0-1/72x72/1f607.png) (Fulfilled) and Evil ![😈 (Rejected)\n  - Not really an idiom though 😅\n- **Characteristic** – Short-circuits when an input value is settled\n\n### 🔆 Example\n\n{% gist https://gist.github.com/dance2die/e59a0f90b6a0ea585520b994652bfb55 %}\n\nIn `promiseWillFulfill` example, the first promise _fulfilled_ within 1 millisecond and thus the humanity survived.\n\nBut the second example using `promiseWillReject` had a promise _rejecting_ in 1 millisecond and thus the humanity is doomed.\n\nAnd the last example (`promisesWithOUTReject`) fulfilled without rejection thus the first fulfilled promise value of ”   \nthree” was returned.\n\nFrom these examples, you can see that the first settled state (fulfilled or reject) short circuited the promise.\n\n## 🚀 Promise.any\n\n- **What is this?** Returns the first fulfilled promise regardless of other rejected promises. If all promises reject, then reject by providing errors for all rejects.\n- **Idiom** – All’s well that ends well.\n- **Characteristic** – Short-circuits when an input value is fulfilled.\n- **Note** – Not yet implemented in any browsers and it is in [Stage 1](https://tc39.github.io/proposal-promise-any/).\n\n### 🔆 Example\n\n{% gist https://gist.github.com/dance2die/992a1157c191eca2b277e1380b323e8b %}\n\nFirst example has promises that rejects right away but did not short-circuit because of a fulfilled promise, thus you win at life.\n\nSecond example has promises resolving after a certain period. The first fulfilled promise was resolved after a series of rejects but didn’t short-circuit. And you were able to get a job.\n\nWhen all promises reject, then that’s when Promise.any rejects and you didn’t get any job offers.\n\n## 👋 Conclusion\n\nHow I understood was that the new `Promise.allSettled/any` are introduced for Promise to try its best to resolve promises to fulfill unlike existing ones that fails on first encounter of reject.\n\n`Promise.all` \u0026 `Promise.race` has been available in modern browsers (this exclude IE ;p) and `Promise.allSettled` will be available in Chrome 76.\n\n`Promise.any` is still in [stage 1](https://tc39.github.io/proposal-promise-any/) and not available in any browsers (but available in [Bluebird](http://bluebirdjs.com/docs/api/promise.any.html) or using polyfills – for the demo I used [promise-any](https://www.npmjs.com/package/promise-any) NPM library for demo.)\n\nI’d love to hear where you would (have) use(d) each method to solve a problem.  \nAnd would you please kindly let me know if you find any mistakes and/or how I can improve the example?\n\nThe post [Promise.race vs. Promise.any And Promise.all vs. Promise.allSettled](https://www.slightedgecoder.com/2019/05/18/promise-race-vs-promise-any-and-promise-all-vs-promise-allsettled/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2019/05/18/promise-race-vs-promise-any-and-promise-all-vs-promise-allsettled/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 12,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2019/05/18/promise-race-vs-promise-any-and-promise-all-vs-promise-allsettled/",
    "positive_reactions_count": 167,
    "edited_at": null,
    "crossposted_at": "2019-05-18T21:58:03.333Z",
    "language": "en",
    "cached_tag_list": "javascript",
    "path": "/dance2die/promise-race-vs-promise-any-and-promise-all-vs-promise-allsettled-26if",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-10-16T04:10:04.115Z"
  },
  {
    "title": "How to use TSDX",
    "slug": "how-to-use-tsdx-315f",
    "created_at": "2019-06-17T01:36:24.068Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/qljz0a5o2tkwt7cal6bh.jpg",
    "description": "\n  \n  \n  A Zero-configuration CLI (command line interface) for creating a TypeScr...",
    "published": true,
    "published_at": "2019-06-17T01:32:32.000Z",
    "processed_html": "\u003ch2\u003e\n  \u003ca name=\"a-zeroconfiguration-cli-command-line-interface-for-creating-a-typescript-library\" href=\"#a-zeroconfiguration-cli-command-line-interface-for-creating-a-typescript-library\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  A Zero-configuration CLI (command line interface) for creating a TypeScript library\n\u003c/h2\u003e\n\n\u003cp\u003e          \u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/@solmaz67?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003esolmaz hatamian\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/typescript?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eAfter migrating \u003ca href=\"https://www.npmjs.com/package/react-use-localstorage\"\u003ereact-use-localstorage\u003c/a\u003e to \u003ca href=\"https://www.npmjs.com/package/tsdx\"\u003eTSDX\u003c/a\u003e, I wanted to share what TSDX is and how to use it.\u003c/p\u003e\n\n\u003cp\u003eIt’s pretty cool as it simplified the workflow \u0026amp; scripts within package.json.\u003c/p\u003e\n\n\u003cp\u003eInstead of writing a long-@$$ post, I decided to create a video instead.\u003c/p\u003e\n\n\u003cp\u003eI’d recommend to watch it at 1.0x+ speed as I was talking very slowly (making funny faces along the way 😨).\u003c/p\u003e\n\n\u003cp\u003e\u003ciframe width=\"710\" height=\"399\" src=\"https://www.youtube.com/embed/YfF39o7MR7A\" allowfullscreen\u003e\n\u003c/iframe\u003e\n\u003c/p\u003e\n\n\u003cp\u003eYou can find the MindMap used to show the steps here – \u003ca href=\"https://www.youtube.com/redirect?q=https%3A%2F%2Fmm.tt%2F1283868109%3Ft%3DFOjysY56kp\u0026amp;redir_token=8sngKKDyoQyb9khEhfB7Poq8HKR8MTU2MDgyMDU0OUAxNTYwNzM0MTQ5\u0026amp;v=YfF39o7MR7A\u0026amp;event=video_description\"\u003ehttps://mm.tt/1283868109?t=FOjysY56kp\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eI’d appreciate any feedbacks how I can improve the video recording as I haven’t recorded any videos for years 😉\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2019/06/16/how-to-use-tsdx/\"\u003eHow to use TSDX\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n",
    "social_image": null,
    "body_markdown": "---\ntitle: How to use TSDX\npublished: true\ntags: tsdx,React,TypeScript\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/qljz0a5o2tkwt7cal6bh.jpg\ncanonical_url: https://www.slightedgecoder.com/2019/06/16/how-to-use-tsdx/\n---\n\n## A Zero-configuration CLI (command line interface) for creating a TypeScript library\n\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_Photo by [solmaz hatamian](https://unsplash.com/@solmaz67?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/typescript?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_\n\nAfter migrating [react-use-localstorage](https://www.npmjs.com/package/react-use-localstorage) to [TSDX](https://www.npmjs.com/package/tsdx), I wanted to share what TSDX is and how to use it.\n\nIt’s pretty cool as it simplified the workflow \u0026 scripts within package.json.\n\nInstead of writing a long-@$$ post, I decided to create a video instead.\n\nI’d recommend to watch it at 1.0x+ speed as I was talking very slowly (making funny faces along the way 😨).\n\n{% youtube YfF39o7MR7A %}\n\nYou can find the MindMap used to show the steps here – [https://mm.tt/1283868109?t=FOjysY56kp](https://www.youtube.com/redirect?q=https%3A%2F%2Fmm.tt%2F1283868109%3Ft%3DFOjysY56kp\u0026redir_token=8sngKKDyoQyb9khEhfB7Poq8HKR8MTU2MDgyMDU0OUAxNTYwNzM0MTQ5\u0026v=YfF39o7MR7A\u0026event=video_description)\n\nI’d appreciate any feedbacks how I can improve the video recording as I haven’t recorded any videos for years 😉\n\nThe post [How to use TSDX](https://www.slightedgecoder.com/2019/06/16/how-to-use-tsdx/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).\n",
    "canonical_url": "https://www.slightedgecoder.com/2019/06/16/how-to-use-tsdx/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 2,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2019/06/16/how-to-use-tsdx/",
    "positive_reactions_count": 10,
    "edited_at": "2019-06-17T02:39:57.850Z",
    "crossposted_at": "2019-06-17T01:44:38.907Z",
    "language": "en",
    "cached_tag_list": "tsdx, react, typescript",
    "path": "/dance2die/how-to-use-tsdx-315f",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-06-17T02:44:03.385Z"
  },
  {
    "title": "Math.min returns Infinity?",
    "slug": "math-min-returns-infinity-1bi6",
    "created_at": "2019-06-23T03:03:35.962Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/dz85uli1kcrsvrob93tc.png",
    "description": "Why does Math.min return Infinity, not a negative Infinity?",
    "published": true,
    "published_at": "2019-06-23T03:03:35.950Z",
    "processed_html": "\u003ch1\u003e\n  \u003ca name=\"preface\" href=\"#preface\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Preface\n\u003c/h1\u003e\n\n\u003cp\u003eI was playing around with \"Math.\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/min\"\u003emin\u003c/a\u003e/\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/max\"\u003emax\u003c/a\u003e\" and the result of empty calls looked like it was backwards.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s---2B59Ibt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/dz85uli1kcrsvrob93tc.png\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s---2B59Ibt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/dz85uli1kcrsvrob93tc.png\" alt=\"empty math min max results\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n  \u003ca name=\"question\" href=\"#question\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Question\n\u003c/h1\u003e\n\n\u003cp\u003eShouldn't \u003ccode\u003eMath.min\u003c/code\u003e return \u003ccode\u003e-Infinity\u003c/code\u003e while \u003ccode\u003eMath.max\u003c/code\u003e, \u003ccode\u003eInfinity\u003c/code\u003e?\u003c/p\u003e\n\n\u003ch1\u003e\n  \u003ca name=\"mdn-documentations\" href=\"#mdn-documentations\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  MDN Documentations\n\u003c/h1\u003e\n\n\u003cp\u003eMDN documentation on \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/max#Description\"\u003eMath.max\u003c/a\u003e shows that\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIf no arguments are given, the result is -Infinity.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eAnd \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/min#Description\"\u003eMath.min\u003c/a\u003e documentation shows \u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIf no arguments are given, the result is Infinity.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch1\u003e\n  \u003ca name=\"but-why\" href=\"#but-why\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  But why? 🤔\n\u003c/h1\u003e\n\n\u003cp\u003eAfter some thinking, it made sense.\u003c/p\u003e\n\n\u003cp\u003eSuppose that you are passing one value to \u003ccode\u003eMath.min(3)\u003c/code\u003e. The minimum should \u003ccode\u003e3\u003c/code\u003e as it's the sole value pass to the function. \u003ccode\u003e3\u003c/code\u003e should be lower than whatever the minimum JavaScript has to compare.\u003c/p\u003e\n\n\u003cp\u003eAny value other than Infinity itself (\u003ccode\u003eInfinity === Infinity\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e) should be the minimum, and as \u003ccode\u003e3\u003c/code\u003e is smaller than \u003ccode\u003eInfinity\u003c/code\u003e, 3 is returned by \u003ccode\u003eMath.min\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eSame thing for \u003ccode\u003eMath.max\u003c/code\u003e. If you call \u003ccode\u003eMath.max(3)\u003c/code\u003e, \u003ccode\u003e3\u003c/code\u003e is bigger than \u003ccode\u003e-Infinity\u003c/code\u003e thus, \u003ccode\u003e3\u003c/code\u003e is returned.\u003c/p\u003e\n\n\u003ch1\u003e\n  \u003ca name=\"but\" href=\"#but\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  But...\n\u003c/h1\u003e\n\n\u003cp\u003eI am not exactly sure if my thought process is correct or not but at least it helps to understand what default values are returned when no argument is passed to \u003ccode\u003eMath.min/max\u003c/code\u003e functions.\u003c/p\u003e\n\n\u003cp\u003eWould anyone let me know if I understood the reason behind the return values?\u003c/p\u003e\n\n",
    "social_image": "",
    "body_markdown": "---\ntitle: Math.min returns Infinity?\npublished: true\ndescription: Why does Math.min return Infinity, not a negative Infinity?\ntags: javascript\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/dz85uli1kcrsvrob93tc.png\n---\n\n# Preface\n\nI was playing around with \"Math.[min](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/min)/[max](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/max)\" and the result of empty calls looked like it was backwards.\n\n![empty math min max results](https://thepracticaldev.s3.amazonaws.com/i/dz85uli1kcrsvrob93tc.png)\n\n# Question\n\nShouldn't `Math.min` return `-Infinity` while `Math.max`, `Infinity`?\n\n# MDN Documentations\n\nMDN documentation on [Math.max](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/max#Description) shows that\n\u003e If no arguments are given, the result is -Infinity.\n\nAnd [Math.min](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/min#Description) documentation shows \n\n\u003e If no arguments are given, the result is Infinity.\n\n# But why? 🤔\n\nAfter some thinking, it made sense.\n\nSuppose that you are passing one value to `Math.min(3)`. The minimum should `3` as it's the sole value pass to the function. `3` should be lower than whatever the minimum JavaScript has to compare.\n\nAny value other than Infinity itself (`Infinity === Infinity` is `true`) should be the minimum, and as `3` is smaller than `Infinity`, 3 is returned by `Math.min`.\n\nSame thing for `Math.max`. If you call `Math.max(3)`, `3` is bigger than `-Infinity` thus, `3` is returned.\n\n\n# But...\n\nI am not exactly sure if my thought process is correct or not but at least it helps to understand what default values are returned when no argument is passed to `Math.min/max` functions.\n\nWould anyone let me know if I understood the reason behind the return values?\n",
    "canonical_url": null,
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": false,
    "comments_count": 19,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": null,
    "positive_reactions_count": 47,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "javascript",
    "path": "/dance2die/math-min-returns-infinity-1bi6",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-07-20T03:42:18.327Z"
  },
  {
    "title": "“href” vs. “src” in HTML",
    "slug": "href-vs-src-in-html-10l7",
    "created_at": "2019-07-18T01:46:10.384Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/a86595fypnp8bws7b3em.jpg",
    "description": "Last night, I vented out my frustration on \u0026lt;link\u0026gt; requiring href to point t...",
    "published": true,
    "published_at": "2019-07-18T01:45:53.000Z",
    "processed_html": "\u003cp\u003eLast night, I \u003ca href=\"https://twitter.com/dance2die/status/1151286723122466816\"\u003evented out my frustration\u003c/a\u003e on \u003ccode\u003e\u0026lt;link\u0026gt;\u003c/code\u003e requiring \u003ccode\u003ehref\u003c/code\u003e to point to a CSS stylesheet instead of \u003ccode\u003esrc\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eI will share the help I received and the history provided by wonderful folks, \u003ca href=\"https://vuild.com/\"\u003eVuild\u003c/a\u003e, \u003ca href=\"https://brendaneich.com/\"\u003eBrendan Eich\u003c/a\u003e (creator of JavaScript), and \u003ca href=\"https://www.wiumlie.no/en.html\"\u003eHåkon Wium Lie\u003c/a\u003e (creator of CSS) on Twitter.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"tldr\" href=\"#tldr\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  TL;DR\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003ehref\u003c/code\u003e resources are loaded based on a trigger while \u003ccode\u003esrc\u003c/code\u003e resources are loaded automatically.\u003cbr\u003e\u003cbr\u003e\nNot 100% accurate because CSS files get loaded automatically.\u003cbr\u003e\u003cbr\u003e\nThe confusion between \u003ccode\u003ehref\u003c/code\u003e and \u003ccode\u003esrc\u003c/code\u003e is due to a historical reason in early web standards era.\u003c/p\u003e\n\u003ch2\u003e\n  \u003ca name=\"difference-between-href-amp-src\" href=\"#difference-between-href-amp-src\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Difference between “href” \u0026amp; “src”\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://twitter.com/vuildco\"\u003eVuild\u003c/a\u003e replied that \u003ccode\u003esrc\u003c/code\u003e is for a request while \u003ccode\u003ehref\u003c/code\u003e is for a link to a resource.\u003c/p\u003e\n\n\n\u003cblockquote class=\"ltag__twitter-tweet\" data-url=\"https://twitter.com/vuildco/status/1151288830860976128\"\u003e\n\n  \u003cdiv class=\"ltag__twitter-tweet__main\" data-url=\"https://twitter.com/vuildco/status/1151288830860976128\"\u003e\n    \u003cdiv class=\"ltag__twitter-tweet__header\"\u003e\n      \u003cimg class=\"ltag__twitter-tweet__profile-image\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--M89nNJu0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1147975610163191808/NlnTivha_normal.png\" alt=\"Vuild profile image\" loading=\"lazy\"\u003e\n      \u003cdiv class=\"ltag__twitter-tweet__full-name\"\u003e\n        Vuild\n      \u003c/div\u003e\n      \u003cdiv class=\"ltag__twitter-tweet__username\"\u003e\n        @vuildco\n      \u003c/div\u003e\n      \u003cdiv class=\"ltag__twitter-tweet__twitter-logo\"\u003e\n        \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--B8bbACBj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-99c56e7c338b4d5c17d78f658882ddf18b0bbde5b3f42f84e7964689e7e8fb15.svg\" alt=\"twitter logo\" loading=\"lazy\"\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"ltag__twitter-tweet__body\"\u003e\n      \u003ca href=\"https://twitter.com/dance2die\"\u003e@dance2die\u003c/a\u003e One is a link (pointing to a resource), one is a requesting a source.\u003cbr\u003e\u003cbr\u003e\u0026lt;a href=\"https://image.jpg\"\u0026gt;\u0026lt;img src=\"https://image.jpg\" /\u0026gt;\u0026lt;/a\u0026gt; will embed (request src) \u0026amp; link to it. They are different things.\u003cbr\u003e\u003cbr\u003eCSS is a src request.\u003cbr\u003e\u003cbr\u003eI am doing both here:\u003cbr\u003e\u003ca href=\"https://t.co/oq4TnIhLwL\"\u003evuild.com/face\u003c/a\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"ltag__twitter-tweet__date\"\u003e\n      00:33 AM - 17 Jul 2019\n    \u003c/div\u003e\n\n\n    \u003cdiv class=\"ltag__twitter-tweet__actions\"\u003e\n      \u003ca href=\"https://twitter.com/intent/tweet?in_reply_to=1151288830860976128\" class=\"ltag__twitter-tweet__actions__button\"\u003e\n        \u003cimg src=\"/assets/twitter-reply-action.svg\" alt=\"Twitter reply action\" loading=\"lazy\"\u003e\n      \u003c/a\u003e\n      \u003ca href=\"https://twitter.com/intent/retweet?tweet_id=1151288830860976128\" class=\"ltag__twitter-tweet__actions__button\"\u003e\n        \u003cimg src=\"/assets/twitter-retweet-action.svg\" alt=\"Twitter retweet action\" loading=\"lazy\"\u003e\n      \u003c/a\u003e\n      0\n      \u003ca href=\"https://twitter.com/intent/like?tweet_id=1151288830860976128\" class=\"ltag__twitter-tweet__actions__button\"\u003e\n        \u003cimg src=\"/assets/twitter-like-action.svg\" alt=\"Twitter like action\" loading=\"lazy\"\u003e\n      \u003c/a\u003e\n      2\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/blockquote\u003e\n\n\n\u003cp\u003eBeing unable to grasp the difference, I replied that “CSS” is a request to download/parse/apply, it should be using \u003ccode\u003esrc\u003c/code\u003e. As Vuild felt the same way, and he \u003ca href=\"https://mobile.twitter.com/vuildco/status/1151291872322760705\"\u003erequested\u003c/a\u003e \u003ca href=\"https://mobile.twitter.com/BrendanEich\"\u003eBrendan Eich\u003c/a\u003e, and \u003ca href=\"https://mobile.twitter.com/wiumlie\"\u003eHåkon Wium Lie\u003c/a\u003e for help.\u003c/p\u003e\n\n\u003cp\u003eBrendan Eich kindly replied that \u003ccode\u003esrc\u003c/code\u003e is for “auto inclusion” while \u003ccode\u003ehref\u003c/code\u003e‘ed resources are loaded after an action occurs.\u003c/p\u003e\n\n\n\u003cblockquote class=\"ltag__twitter-tweet\" data-url=\"https://twitter.com/brendaneich/status/1151317825908166656\"\u003e\n\n  \u003cdiv class=\"ltag__twitter-tweet__main\" data-url=\"https://twitter.com/brendaneich/status/1151317825908166656\"\u003e\n    \u003cdiv class=\"ltag__twitter-tweet__header\"\u003e\n      \u003cimg class=\"ltag__twitter-tweet__profile-image\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ki8YGwOK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/603270050556956672/T0mfRsil_normal.png\" alt=\"BrendanEich profile image\" loading=\"lazy\"\u003e\n      \u003cdiv class=\"ltag__twitter-tweet__full-name\"\u003e\n        BrendanEich\n      \u003c/div\u003e\n      \u003cdiv class=\"ltag__twitter-tweet__username\"\u003e\n        @brendaneich\n      \u003c/div\u003e\n      \u003cdiv class=\"ltag__twitter-tweet__twitter-logo\"\u003e\n        \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--B8bbACBj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-99c56e7c338b4d5c17d78f658882ddf18b0bbde5b3f42f84e7964689e7e8fb15.svg\" alt=\"twitter logo\" loading=\"lazy\"\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"ltag__twitter-tweet__body\"\u003e\n      \u003ca href=\"https://twitter.com/dance2die\"\u003e@dance2die\u003c/a\u003e \u003ca href=\"https://twitter.com/vuildco\"\u003e@vuildco\u003c/a\u003e \u003ca href=\"https://twitter.com/wiumlie\"\u003e@wiumlie\u003c/a\u003e \u003ca href=\"https://twitter.com/brave\"\u003e@brave\u003c/a\u003e src is on img too, it is for loading embedded; href is for hypertext ref, not loaded until user clicks on element\n    \u003c/div\u003e\n    \u003cdiv class=\"ltag__twitter-tweet__date\"\u003e\n      02:28 AM - 17 Jul 2019\n    \u003c/div\u003e\n\n\n    \u003cdiv class=\"ltag__twitter-tweet__actions\"\u003e\n      \u003ca href=\"https://twitter.com/intent/tweet?in_reply_to=1151317825908166656\" class=\"ltag__twitter-tweet__actions__button\"\u003e\n        \u003cimg src=\"/assets/twitter-reply-action.svg\" alt=\"Twitter reply action\" loading=\"lazy\"\u003e\n      \u003c/a\u003e\n      \u003ca href=\"https://twitter.com/intent/retweet?tweet_id=1151317825908166656\" class=\"ltag__twitter-tweet__actions__button\"\u003e\n        \u003cimg src=\"/assets/twitter-retweet-action.svg\" alt=\"Twitter retweet action\" loading=\"lazy\"\u003e\n      \u003c/a\u003e\n      0\n      \u003ca href=\"https://twitter.com/intent/like?tweet_id=1151317825908166656\" class=\"ltag__twitter-tweet__actions__button\"\u003e\n        \u003cimg src=\"/assets/twitter-like-action.svg\" alt=\"Twitter like action\" loading=\"lazy\"\u003e\n      \u003c/a\u003e\n      2\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/blockquote\u003e\n\u003cbr\u003e\n\u003cblockquote class=\"ltag__twitter-tweet\" data-url=\"https://twitter.com/brendaneich/status/1151323779131305984\"\u003e\n\n  \u003cdiv class=\"ltag__twitter-tweet__main\" data-url=\"https://twitter.com/brendaneich/status/1151323779131305984\"\u003e\n    \u003cdiv class=\"ltag__twitter-tweet__header\"\u003e\n      \u003cimg class=\"ltag__twitter-tweet__profile-image\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ki8YGwOK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/603270050556956672/T0mfRsil_normal.png\" alt=\"BrendanEich profile image\" loading=\"lazy\"\u003e\n      \u003cdiv class=\"ltag__twitter-tweet__full-name\"\u003e\n        BrendanEich\n      \u003c/div\u003e\n      \u003cdiv class=\"ltag__twitter-tweet__username\"\u003e\n        @brendaneich\n      \u003c/div\u003e\n      \u003cdiv class=\"ltag__twitter-tweet__twitter-logo\"\u003e\n        \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--B8bbACBj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-99c56e7c338b4d5c17d78f658882ddf18b0bbde5b3f42f84e7964689e7e8fb15.svg\" alt=\"twitter logo\" loading=\"lazy\"\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"ltag__twitter-tweet__body\"\u003e\n      \u003ca href=\"https://twitter.com/dance2die\"\u003e@dance2die\u003c/a\u003e \u003ca href=\"https://twitter.com/vuildco\"\u003e@vuildco\u003c/a\u003e \u003ca href=\"https://twitter.com/wiumlie\"\u003e@wiumlie\u003c/a\u003e \u003ca href=\"https://twitter.com/brave\"\u003e@brave\u003c/a\u003e My “embedded” refers to auto inclusion vs click to load, not inline via out of line which is roughly orthogonal as you note.\n    \u003c/div\u003e\n    \u003cdiv class=\"ltag__twitter-tweet__date\"\u003e\n      02:52 AM - 17 Jul 2019\n    \u003c/div\u003e\n\n\n    \u003cdiv class=\"ltag__twitter-tweet__actions\"\u003e\n      \u003ca href=\"https://twitter.com/intent/tweet?in_reply_to=1151323779131305984\" class=\"ltag__twitter-tweet__actions__button\"\u003e\n        \u003cimg src=\"/assets/twitter-reply-action.svg\" alt=\"Twitter reply action\" loading=\"lazy\"\u003e\n      \u003c/a\u003e\n      \u003ca href=\"https://twitter.com/intent/retweet?tweet_id=1151323779131305984\" class=\"ltag__twitter-tweet__actions__button\"\u003e\n        \u003cimg src=\"/assets/twitter-retweet-action.svg\" alt=\"Twitter retweet action\" loading=\"lazy\"\u003e\n      \u003c/a\u003e\n      0\n      \u003ca href=\"https://twitter.com/intent/like?tweet_id=1151323779131305984\" class=\"ltag__twitter-tweet__actions__button\"\u003e\n        \u003cimg src=\"/assets/twitter-like-action.svg\" alt=\"Twitter like action\" loading=\"lazy\"\u003e\n      \u003c/a\u003e\n      2\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/blockquote\u003e\n\u003cbr\u003e\n\u003cblockquote class=\"ltag__twitter-tweet\" data-url=\"https://twitter.com/brendaneich/status/1151326755749163008\"\u003e\n\n  \u003cdiv class=\"ltag__twitter-tweet__main\" data-url=\"https://twitter.com/brendaneich/status/1151326755749163008\"\u003e\n    \u003cdiv class=\"ltag__twitter-tweet__header\"\u003e\n      \u003cimg class=\"ltag__twitter-tweet__profile-image\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ki8YGwOK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/603270050556956672/T0mfRsil_normal.png\" alt=\"BrendanEich profile image\" loading=\"lazy\"\u003e\n      \u003cdiv class=\"ltag__twitter-tweet__full-name\"\u003e\n        BrendanEich\n      \u003c/div\u003e\n      \u003cdiv class=\"ltag__twitter-tweet__username\"\u003e\n        @brendaneich\n      \u003c/div\u003e\n      \u003cdiv class=\"ltag__twitter-tweet__twitter-logo\"\u003e\n        \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--B8bbACBj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-99c56e7c338b4d5c17d78f658882ddf18b0bbde5b3f42f84e7964689e7e8fb15.svg\" alt=\"twitter logo\" loading=\"lazy\"\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"ltag__twitter-tweet__body\"\u003e\n      \u003ca href=\"https://twitter.com/dance2die\"\u003e@dance2die\u003c/a\u003e \u003ca href=\"https://twitter.com/vuildco\"\u003e@vuildco\u003c/a\u003e \u003ca href=\"https://twitter.com/wiumlie\"\u003e@wiumlie\u003c/a\u003e \u003ca href=\"https://twitter.com/brave\"\u003e@brave\u003c/a\u003e (vs not via)\n    \u003c/div\u003e\n    \u003cdiv class=\"ltag__twitter-tweet__date\"\u003e\n      03:04 AM - 17 Jul 2019\n    \u003c/div\u003e\n\n\n    \u003cdiv class=\"ltag__twitter-tweet__actions\"\u003e\n      \u003ca href=\"https://twitter.com/intent/tweet?in_reply_to=1151326755749163008\" class=\"ltag__twitter-tweet__actions__button\"\u003e\n        \u003cimg src=\"/assets/twitter-reply-action.svg\" alt=\"Twitter reply action\" loading=\"lazy\"\u003e\n      \u003c/a\u003e\n      \u003ca href=\"https://twitter.com/intent/retweet?tweet_id=1151326755749163008\" class=\"ltag__twitter-tweet__actions__button\"\u003e\n        \u003cimg src=\"/assets/twitter-retweet-action.svg\" alt=\"Twitter retweet action\" loading=\"lazy\"\u003e\n      \u003c/a\u003e\n      0\n      \u003ca href=\"https://twitter.com/intent/like?tweet_id=1151326755749163008\" class=\"ltag__twitter-tweet__actions__button\"\u003e\n        \u003cimg src=\"/assets/twitter-like-action.svg\" alt=\"Twitter like action\" loading=\"lazy\"\u003e\n      \u003c/a\u003e\n      2\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/blockquote\u003e\n\n\n\u003cp\u003eBut as for CSS, he agreed that \u003ccode\u003ehref\u003c/code\u003e for CSS “\u003ca href=\"https://twitter.com/BrendanEich/status/1151324101157347328\"\u003eseems[ed] inconsistent\u003c/a\u003e“.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"link-href\" href=\"#link-href\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  link href\n\u003c/h2\u003e\n\n\u003cp\u003eHåkon Wium Lie kindly provided the history (how) and the rationale (why) behind it.\u003c/p\u003e\n\n\u003cp\u003eThe rationale was because the “HTML2 specification said so”.\u003c/p\u003e\n\n\n\u003cblockquote class=\"ltag__twitter-tweet\" data-url=\"https://twitter.com/wiumlie/status/1151458530567831553\"\u003e\n\n  \u003cdiv class=\"ltag__twitter-tweet__main\" data-url=\"https://twitter.com/wiumlie/status/1151458530567831553\"\u003e\n    \u003cdiv class=\"ltag__twitter-tweet__header\"\u003e\n      \u003cimg class=\"ltag__twitter-tweet__profile-image\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--NEJs6dXP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/681825796802113536/nzEoQF1Y_normal.jpg\" alt=\"Håkon Wium Lie profile image\" loading=\"lazy\"\u003e\n      \u003cdiv class=\"ltag__twitter-tweet__full-name\"\u003e\n        Håkon Wium Lie\n      \u003c/div\u003e\n      \u003cdiv class=\"ltag__twitter-tweet__username\"\u003e\n        @wiumlie\n      \u003c/div\u003e\n      \u003cdiv class=\"ltag__twitter-tweet__twitter-logo\"\u003e\n        \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--B8bbACBj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-99c56e7c338b4d5c17d78f658882ddf18b0bbde5b3f42f84e7964689e7e8fb15.svg\" alt=\"twitter logo\" loading=\"lazy\"\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"ltag__twitter-tweet__body\"\u003e\n      \u003ca href=\"https://twitter.com/vuildco\"\u003e@vuildco\u003c/a\u003e \u003ca href=\"https://twitter.com/dance2die\"\u003e@dance2die\u003c/a\u003e \u003ca href=\"https://twitter.com/BrendanEich\"\u003e@BrendanEich\u003c/a\u003e \u003ca href=\"https://twitter.com/brave\"\u003e@brave\u003c/a\u003e CSS uses \u0026lt;link href...\u0026gt; because the HTML2 specification said so. I also find myself typing src. We could have saved one byte there! \u003cbr\u003e\u003ca href=\"https://t.co/EGzCzgVALS\"\u003eietf.org/rfc/rfc1866.txt\u003c/a\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"ltag__twitter-tweet__date\"\u003e\n      11:48 AM - 17 Jul 2019\n    \u003c/div\u003e\n\n\n    \u003cdiv class=\"ltag__twitter-tweet__actions\"\u003e\n      \u003ca href=\"https://twitter.com/intent/tweet?in_reply_to=1151458530567831553\" class=\"ltag__twitter-tweet__actions__button\"\u003e\n        \u003cimg src=\"/assets/twitter-reply-action.svg\" alt=\"Twitter reply action\" loading=\"lazy\"\u003e\n      \u003c/a\u003e\n      \u003ca href=\"https://twitter.com/intent/retweet?tweet_id=1151458530567831553\" class=\"ltag__twitter-tweet__actions__button\"\u003e\n        \u003cimg src=\"/assets/twitter-retweet-action.svg\" alt=\"Twitter retweet action\" loading=\"lazy\"\u003e\n      \u003c/a\u003e\n      7\n      \u003ca href=\"https://twitter.com/intent/like?tweet_id=1151458530567831553\" class=\"ltag__twitter-tweet__actions__button\"\u003e\n        \u003cimg src=\"/assets/twitter-like-action.svg\" alt=\"Twitter like action\" loading=\"lazy\"\u003e\n      \u003c/a\u003e\n      22\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/blockquote\u003e\n\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003e“\u003c/em\u003e\u003ca href=\"https://twitter.com/vuildco/status/1151462988798464002\"\u003e\u003cem\u003eThere we have it, HTML2 spec.\u003c/em\u003e\u003c/a\u003e\u003cem\u003e” (Vuild took words out of my mouth😀).\u003c/em\u003e\u003cbr\u003e\u003cbr\u003e\n\u003cem\u003eNote that \u003ca href=\"https://twitter.com/wiumlie/status/1151576065934012422\"\u003eit’s the HTML2 spec not XHTML2\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"img-src\" href=\"#img-src\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  img src\n\u003c/h2\u003e\n\n\u003cp\u003eAnd then Håkon followed up with how and why \u003ccode\u003eimg\u003c/code\u003e uses \u003ccode\u003esrc\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eimg.src\u003c/code\u003e was \u003ca href=\"http://1997.webhistory.org/www.lists/www-talk.1993q1/0182.html\"\u003eproposed\u003c/a\u003e by \u003ca href=\"https://twitter.com/pmarca\"\u003eMarc Andreessen\u003c/a\u003e and \u003ca href=\"https://www.w3.org/People/Berners-Lee/\"\u003eSir Tim Berners-Lee\u003c/a\u003e (inventor of World Wide Web) favored using an anchor tag with \u003ccode\u003ehref\u003c/code\u003e!\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/7c9f90350985fbb2e2a2ba4405ce632f.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003cp\u003eAs you can see it’s more “convenient” to use \u003ccode\u003eimg.src\u003c/code\u003e thus that’s what’s implemented.\u003c/p\u003e\n\n\n\u003cblockquote class=\"ltag__twitter-tweet\" data-url=\"https://twitter.com/wiumlie/status/1151466527759224833\"\u003e\n\n  \u003cdiv class=\"ltag__twitter-tweet__main\" data-url=\"https://twitter.com/wiumlie/status/1151466527759224833\"\u003e\n    \u003cdiv class=\"ltag__twitter-tweet__header\"\u003e\n      \u003cimg class=\"ltag__twitter-tweet__profile-image\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--NEJs6dXP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/681825796802113536/nzEoQF1Y_normal.jpg\" alt=\"Håkon Wium Lie profile image\" loading=\"lazy\"\u003e\n      \u003cdiv class=\"ltag__twitter-tweet__full-name\"\u003e\n        Håkon Wium Lie\n      \u003c/div\u003e\n      \u003cdiv class=\"ltag__twitter-tweet__username\"\u003e\n        @wiumlie\n      \u003c/div\u003e\n      \u003cdiv class=\"ltag__twitter-tweet__twitter-logo\"\u003e\n        \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--B8bbACBj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-99c56e7c338b4d5c17d78f658882ddf18b0bbde5b3f42f84e7964689e7e8fb15.svg\" alt=\"twitter logo\" loading=\"lazy\"\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"ltag__twitter-tweet__body\"\u003e\n      \u003ca href=\"https://twitter.com/vuildco\"\u003e@vuildco\u003c/a\u003e \u003ca href=\"https://twitter.com/dance2die\"\u003e@dance2die\u003c/a\u003e \u003ca href=\"https://twitter.com/BrendanEich\"\u003e@BrendanEich\u003c/a\u003e \u003ca href=\"https://twitter.com/brave\"\u003e@brave\u003c/a\u003e So, href was favored but \u0026lt;IMG SRC..\u0026gt; was implemented and convenient. It was a mistake for IMG to be empty, though -- it took years and years for \u0026lt;figure\u0026gt;...\u0026lt;/figure\u0026gt; to finally fix this...\n    \u003c/div\u003e\n    \u003cdiv class=\"ltag__twitter-tweet__date\"\u003e\n      12:19 PM - 17 Jul 2019\n    \u003c/div\u003e\n\n\n    \u003cdiv class=\"ltag__twitter-tweet__actions\"\u003e\n      \u003ca href=\"https://twitter.com/intent/tweet?in_reply_to=1151466527759224833\" class=\"ltag__twitter-tweet__actions__button\"\u003e\n        \u003cimg src=\"/assets/twitter-reply-action.svg\" alt=\"Twitter reply action\" loading=\"lazy\"\u003e\n      \u003c/a\u003e\n      \u003ca href=\"https://twitter.com/intent/retweet?tweet_id=1151466527759224833\" class=\"ltag__twitter-tweet__actions__button\"\u003e\n        \u003cimg src=\"/assets/twitter-retweet-action.svg\" alt=\"Twitter retweet action\" loading=\"lazy\"\u003e\n      \u003c/a\u003e\n      0\n      \u003ca href=\"https://twitter.com/intent/like?tweet_id=1151466527759224833\" class=\"ltag__twitter-tweet__actions__button\"\u003e\n        \u003cimg src=\"/assets/twitter-like-action.svg\" alt=\"Twitter like action\" loading=\"lazy\"\u003e\n      \u003c/a\u003e\n      2\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/blockquote\u003e\n\n\n\u003cp\u003eThere you have it. The convenience factor has won over. 😃\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"additional-history-http-referer\" href=\"#additional-history-http-referer\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Additional History – HTTP Referer\n\u003c/h2\u003e\n\n\u003cp\u003eAfter sharing the Twitter thread in \u003ca href=\"https://usereact.nyc/\"\u003euseReactNYC\u003c/a\u003e (a React Meetup in NYC) slack workspace, \u003ca href=\"https://twitter.com/donavon\"\u003eDonavon\u003c/a\u003e (one of the useReactNYC hosts and an active React community educator who loves to {… 💖}) has shared a link on how an HTTP header \u003ccode\u003ereferer\u003c/code\u003e (note it’s not spelled as “referrer”, missing one “r”) \u003ca href=\"https://en.wikipedia.org/wiki/HTTP_referer\"\u003emisspelling came about\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003e\u003cstrong\u003eSPOILER\u003c/strong\u003e : An old spell checker didn’t catch it.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Parting Words\n\u003c/h2\u003e\n\n\u003cp\u003eMany thanks to \u003ca href=\"https://vuild.com/\"\u003eVuild\u003c/a\u003e, \u003ca href=\"https://brendaneich.com/\"\u003eBrendan Eich\u003c/a\u003e, and \u003ca href=\"https://www.wiumlie.no/en.html\"\u003eHåkon Wium Lie\u003c/a\u003e for the help and the hi/story.\u003c/p\u003e\n\n\u003cp\u003eIt was a great experience as they spared their time to teach and share the experience.\u003c/p\u003e\n\n\u003cp\u003eYou can check out \u003ca href=\"https://twitter.com/dance2die/status/1151286723122466816\"\u003ethe original thread\u003c/a\u003e (but be warned, it has many branches and thus could be hard to follow 😉).\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2019/07/17/href-vs-src-in-html/\"\u003e“href” vs. “src” in HTML\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n",
    "social_image": null,
    "body_markdown": "---\ntitle: “href” vs. “src” in HTML\npublished: true\ntags: html, css, javascript\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/a86595fypnp8bws7b3em.jpg\ncanonical_url: https://www.slightedgecoder.com/2019/07/17/href-vs-src-in-html/\n---\n\nLast night, I [vented out my frustration](https://twitter.com/dance2die/status/1151286723122466816) on `\u003clink\u003e` requiring `href` to point to a CSS stylesheet instead of `src`.\n\nI will share the help I received and the history provided by wonderful folks, [Vuild](https://vuild.com/), [Brendan Eich](https://brendaneich.com/) (creator of JavaScript), and [Håkon Wium Lie](https://www.wiumlie.no/en.html) (creator of CSS) on Twitter.\n\n## TL;DR\n\n`href` resources are loaded based on a trigger while `src` resources are loaded automatically.  \nNot 100% accurate because CSS files get loaded automatically.  \nThe confusion between `href` and `src` is due to a historical reason in early web standards era.\n\n## Difference between “href” \u0026 “src”\n\n[Vuild](https://twitter.com/vuildco) replied that `src` is for a request while `href` is for a link to a resource.\n\n{% twitter 1151288830860976128 %}\n\nBeing unable to grasp the difference, I replied that “CSS” is a request to download/parse/apply, it should be using `src`. As Vuild felt the same way, and he [requested](https://mobile.twitter.com/vuildco/status/1151291872322760705) [Brendan Eich](https://mobile.twitter.com/BrendanEich), and [Håkon Wium Lie](https://mobile.twitter.com/wiumlie) for help.\n\nBrendan Eich kindly replied that `src` is for “auto inclusion” while `href`‘ed resources are loaded after an action occurs.\n\n{% twitter 1151317825908166656 %}\n{% twitter 1151323779131305984 %}\n{% twitter 1151326755749163008 %}\n\nBut as for CSS, he agreed that `href` for CSS “[seems[ed] inconsistent](https://twitter.com/BrendanEich/status/1151324101157347328)“.\n\n## link href\n\nHåkon Wium Lie kindly provided the history (how) and the rationale (why) behind it.\n\nThe rationale was because the “HTML2 specification said so”.\n\n{% twitter 1151458530567831553 %}\n\n\u003e _“_[_There we have it, HTML2 spec._](https://twitter.com/vuildco/status/1151462988798464002)_” (Vuild took words out of my mouth😀)._  \n\u003e _Note that [it’s the HTML2 spec not XHTML2](https://twitter.com/wiumlie/status/1151576065934012422)._\n\n## img src\n\nAnd then Håkon followed up with how and why `img` uses `src`.\n\n`img.src` was [proposed](http://1997.webhistory.org/www.lists/www-talk.1993q1/0182.html) by [Marc Andreessen](https://twitter.com/pmarca) and [Sir Tim Berners-Lee](https://www.w3.org/People/Berners-Lee/) (inventor of World Wide Web) favored using an anchor tag with `href`!\n\n{% gist https://gist.github.com/dance2die/7c9f90350985fbb2e2a2ba4405ce632f %}\n\nAs you can see it’s more “convenient” to use `img.src` thus that’s what’s implemented.\n\n{% twitter 1151466527759224833 %}\n\nThere you have it. The convenience factor has won over. 😃\n\n## Additional History – HTTP Referer\n\nAfter sharing the Twitter thread in [useReactNYC](https://usereact.nyc/) (a React Meetup in NYC) slack workspace, [Donavon](https://twitter.com/donavon) (one of the useReactNYC hosts and an active React community educator who loves to {… 💖}) has shared a link on how an HTTP header `referer` (note it’s not spelled as “referrer”, missing one “r”) [misspelling came about](https://en.wikipedia.org/wiki/HTTP_referer).\n\n_**SPOILER** : An old spell checker didn’t catch it._\n\n## Parting Words\n\nMany thanks to [Vuild](https://vuild.com/), [Brendan Eich](https://brendaneich.com/), and [Håkon Wium Lie](https://www.wiumlie.no/en.html) for the help and the hi/story.\n\nIt was a great experience as they spared their time to teach and share the experience.\n\nYou can check out [the original thread](https://twitter.com/dance2die/status/1151286723122466816) (but be warned, it has many branches and thus could be hard to follow 😉).\n\nThe post [“href” vs. “src” in HTML](https://www.slightedgecoder.com/2019/07/17/href-vs-src-in-html/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).\n",
    "canonical_url": "https://www.slightedgecoder.com/2019/07/17/href-vs-src-in-html/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 37,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2019/07/17/href-vs-src-in-html/",
    "positive_reactions_count": 283,
    "edited_at": "2019-07-19T14:04:07.333Z",
    "crossposted_at": "2019-07-18T02:05:17.637Z",
    "language": "en",
    "cached_tag_list": "html, css, javascript",
    "path": "/dance2die/href-vs-src-in-html-10l7",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-08-03T07:24:15.091Z"
  },
  {
    "title": "Page Not Found on Netlify with MDX-Deck",
    "slug": "page-not-found-on-netlify-with-mdx-deck-4h9d",
    "created_at": "2019-07-26T01:19:13.243Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/ip82fdlmxgfx041f0mbl.png",
    "description": "Photo by [_Sora Sagano](https://unsplash.com/@s_sagano?utm_source=unsplash\u0026amp;ut...",
    "published": true,
    "published_at": "2019-07-26T01:04:03.000Z",
    "processed_html": "\u003cp\u003e\u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/@s_sagano?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eSora Sagano\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/deck?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eYou might run into the following error after deploying an \u003ca href=\"https://github.com/jxnblk/mdx-deck\"\u003eMDX-Deck\u003c/a\u003e presentation decks to Netlify.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003ePlease refer to my friend, \u003ca href=\"https://twitter.com/davefollett\"\u003eDave Follett\u003c/a\u003e‘s post on\u003c/em\u003e \u003ca href=\"https://dev.to/davefollett/learning-mdx-deck-deploy-to-netlify-5e78\"\u003e\u003cem\u003ehow to deploy to Netlify\u003c/em\u003e\u003c/a\u003e\u003cem\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eIf you are having trouble with React Router, check out\u003c/em\u003e \u003ca href=\"https://dev.to/dance2die/page-not-found-on-netlify-with-react-router-58mc\"\u003e\u003cem\u003ePage Not Found on Netlify with React Router\u003c/em\u003e\u003c/a\u003e\u003cem\u003e, instead.\u003c/em\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003ePage Not Found\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003e\nLooks like you’ve followed a broken link or entered a URL that doesn’t exist on this site.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--M0L8T4xQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/07/page-not-found.jpg%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--M0L8T4xQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/07/page-not-found.jpg%3Fw%3D1170%26ssl%3D1\" alt=\"Page Not Found\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"how-did-the-error-occur\" href=\"#how-did-the-error-occur\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  How did the error occur?\n\u003c/h2\u003e\n\n\u003cp\u003eMDX-Deck (version \u0026lt;= 2 is based on \u003ca href=\"https://facebook.github.io/create-react-app/\"\u003ecreate-react-app\u003c/a\u003e while v3 is based on \u003ca href=\"https://www.gatsbyjs.org/\"\u003eGatsby\u003c/a\u003e) routing is handled on client-side while Netlify (server-side) does not know how to handle the route.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"how-can-we-fix-it\" href=\"#how-can-we-fix-it\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  How can we fix it?\n\u003c/h2\u003e\n\n\u003cp\u003eNetlify offers a special file, \u003ca href=\"https://www.netlify.com/docs/redirects/\"\u003e_redirects\u003c/a\u003e, which you can add to your code base and let Netlify handle how to handle the URL that is not handled on the client-side.\u003c/p\u003e\n\n\u003cp\u003eBut the problem is that, when you build MDX-deck content, the top level \u003ccode\u003e_redirect\u003c/code\u003e file isn’t copied over to \u003ccode\u003epublic/\u003c/code\u003e distribution folder.\u003c/p\u003e\n\n\u003cp\u003eSo you can specify the same redirects rule as you would have done in _redirects file in \u003ca href=\"https://www.netlify.com/docs/netlify-toml-reference/\"\u003enetlify.toml\u003c/a\u003e file.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eNetlify TOML file contains an instruction for Netlify how to build \u0026amp; deploy your site\u003c/em\u003e\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/082d03441aa832ee65f80eb5e3c9f322.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003cp\u003e\u003ccode\u003e[build]\u003c/code\u003e contains instruction on how to deploy your site (found in Dave’s post above).\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e[[redirect]]\u003c/code\u003e has the same instruction that \u003ca href=\"https://dev.to/dance2die/page-not-found-on-netlify-with-react-router-58mc\"\u003eyou would have done for React Router\u003c/a\u003e but in \u003ca href=\"https://github.com/toml-lang/toml\"\u003eTOML\u003c/a\u003e format.\u003cbr\u003e\u003cbr\u003e\nYou are instructing Netlify to redirect all requests to \u003ccode\u003e/index.html\u003c/code\u003e, from which client-side router takes over.\u003c/p\u003e\n\n\u003cp\u003eNow when you go to any of following links, you won’t be faced with “Page Not Found” error page.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://angry-swanson-bba4f2.netlify.com/3\"\u003ehttps://angry-swanson-bba4f2.netlify.com/3\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://angry-swanson-bba4f2.netlify.com/2\"\u003ehttps://angry-swanson-bba4f2.netlify.com/2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://angry-swanson-bba4f2.netlify.com/1\"\u003ehttps://angry-swanson-bba4f2.netlify.com/1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://angry-swanson-bba4f2.netlify.com/0\"\u003ehttps://angry-swanson-bba4f2.netlify.com/0\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://angry-swanson-bba4f2.netlify.com/\"\u003ehttps://angry-swanson-bba4f2.netl\u003c/a\u003e\u003ca href=\"https://angry-swanson-bba4f2.netlify.com/\"\u003ei\u003c/a\u003e\u003ca href=\"https://angry-swanson-bba4f2.netlify.com/\"\u003efy.com/\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--G9QVy23M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/07/TaJjnUntZM.gif%3Ffit%3D1024%252C627%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--G9QVy23M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/07/TaJjnUntZM.gif%3Ffit%3D1024%252C627%26ssl%3D1\" alt=\"working demo\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"resources\" href=\"#resources\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Resources\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://www.netlify.com/docs/netlify-toml-reference/#getting-started\"\u003eNetlify TOML documentation\u003c/a\u003e – Look for \u003ccode\u003e[[redirect]]\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.netlify.com/docs/redirects/#history-pushstate-and-single-page-apps\"\u003e_redirects Netlify documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/davefollett/learning-mdx-deck-deploy-to-netlify-5e78\"\u003eLearning MDX Deck: Deploy To Netlify\u003c/a\u003e by \u003ca href=\"https://twitter.com/davefollett\"\u003eDave Follett\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/jxnblk/mdx-deck\"\u003eMDX-Deck\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eMDX-deck \u003ca href=\"https://github.com/dance2die/demo.mdx-error-on-windows10\"\u003esource code\u003c/a\u003e published to Netlify as demo.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e_The post \u003ca href=\"https://www.slightedgecoder.com/2019/07/25/page-not-found-on-netlify-with-mdx-deck/\"\u003ePage Not Found on Netlify with MDX-Deck\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003cbr\u003e\n_\u003c/p\u003e\n\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Page Not Found on Netlify with MDX-Deck\npublished: true\ntags: mdx, netlify, tips\ncanonical_url: https://www.slightedgecoder.com/2019/07/25/page-not-found-on-netlify-with-mdx-deck/\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/ip82fdlmxgfx041f0mbl.png\n---\n\n_Photo by [Sora Sagano](https://unsplash.com/@s_sagano?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/deck?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_\n\nYou might run into the following error after deploying an [MDX-Deck](https://github.com/jxnblk/mdx-deck) presentation decks to Netlify.\n\n_Please refer to my friend, [Dave Follett](https://twitter.com/davefollett)‘s post on_ [_how to deploy to Netlify_](https://dev.to/davefollett/learning-mdx-deck-deploy-to-netlify-5e78)_._\n\n_If you are having trouble with React Router, check out_ [_Page Not Found on Netlify with React Router_](https://dev.to/dance2die/page-not-found-on-netlify-with-react-router-58mc)_, instead._\n\n\u003e **Page Not Found**  \n\u003e Looks like you’ve followed a broken link or entered a URL that doesn’t exist on this site.\n\n![Page Not Found](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/07/page-not-found.jpg?w=1170\u0026ssl=1)\n\n## How did the error occur?\n\nMDX-Deck (version \\\u003c= 2 is based on [create-react-app](https://facebook.github.io/create-react-app/) while v3 is based on [Gatsby](https://www.gatsbyjs.org/)) routing is handled on client-side while Netlify (server-side) does not know how to handle the route.\n\n## How can we fix it?\n\nNetlify offers a special file, [\\_redirects](https://www.netlify.com/docs/redirects/), which you can add to your code base and let Netlify handle how to handle the URL that is not handled on the client-side.\n\nBut the problem is that, when you build MDX-deck content, the top level `_redirect` file isn’t copied over to `public/` distribution folder.\n\nSo you can specify the same redirects rule as you would have done in \\_redirects file in [netlify.toml](https://www.netlify.com/docs/netlify-toml-reference/) file.\n\n_Netlify TOML file contains an instruction for Netlify how to build \u0026 deploy your site_\n\n{% gist https://gist.github.com/dance2die/082d03441aa832ee65f80eb5e3c9f322 %}\n\n`[build]` contains instruction on how to deploy your site (found in Dave’s post above).\n\n`[[redirect]]` has the same instruction that [you would have done for React Router](https://dev.to/dance2die/page-not-found-on-netlify-with-react-router-58mc) but in [TOML](https://github.com/toml-lang/toml) format.  \nYou are instructing Netlify to redirect all requests to `/index.html`, from which client-side router takes over.\n\nNow when you go to any of following links, you won’t be faced with “Page Not Found” error page.\n\n- [https://angry-swanson-bba4f2.netlify.com/3](https://angry-swanson-bba4f2.netlify.com/3)\n- [https://angry-swanson-bba4f2.netlify.com/2](https://angry-swanson-bba4f2.netlify.com/2)\n- [https://angry-swanson-bba4f2.netlify.com/1](https://angry-swanson-bba4f2.netlify.com/1)\n- [https://angry-swanson-bba4f2.netlify.com/0](https://angry-swanson-bba4f2.netlify.com/0)\n- [https://angry-swanson-bba4f2.netl](https://angry-swanson-bba4f2.netlify.com/)[i](https://angry-swanson-bba4f2.netlify.com/)[fy.com/](https://angry-swanson-bba4f2.netlify.com/)\n\n![working demo](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/07/TaJjnUntZM.gif?fit=1024%2C627\u0026ssl=1)\n\n## Resources\n\n- [Netlify TOML documentation](https://www.netlify.com/docs/netlify-toml-reference/#getting-started) – Look for `[[redirect]]`\n- [\\_redirects Netlify documentation](https://www.netlify.com/docs/redirects/#history-pushstate-and-single-page-apps)\n- [Learning MDX Deck: Deploy To Netlify](https://dev.to/davefollett/learning-mdx-deck-deploy-to-netlify-5e78) by [Dave Follett](https://twitter.com/davefollett)\n- [MDX-Deck](https://github.com/jxnblk/mdx-deck)\n- MDX-deck [source code](https://github.com/dance2die/demo.mdx-error-on-windows10) published to Netlify as demo.\n\n_The post [Page Not Found on Netlify with MDX-Deck](https://www.slightedgecoder.com/2019/07/25/page-not-found-on-netlify-with-mdx-deck/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).\n_\n",
    "canonical_url": "https://www.slightedgecoder.com/2019/07/25/page-not-found-on-netlify-with-mdx-deck/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2019/07/25/page-not-found-on-netlify-with-mdx-deck/",
    "positive_reactions_count": 10,
    "edited_at": "2019-07-26T01:31:44.114Z",
    "crossposted_at": "2019-07-26T01:31:08.911Z",
    "language": "en",
    "cached_tag_list": "mdx, netlify, tips",
    "path": "/dance2die/page-not-found-on-netlify-with-mdx-deck-4h9d",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-07-26T01:04:03.000Z"
  },
  {
    "title": "Adding a Twitter Reply via Twitter API",
    "slug": "adding-a-twitter-reply-via-twitter-api-369j-temp-slug-572160",
    "created_at": "2019-07-28T22:55:28.936Z",
    "main_image": null,
    "description": "A quick note to self regarding adding a reply on Twitter using Twitter NPM librar...",
    "published": false,
    "published_at": "2019-07-28T22:45:07.000Z",
    "processed_html": "\u003cp\u003eA quick note to self regarding adding a reply on Twitter using \u003ca href=\"https://www.npmjs.com/package/twitter\"\u003eTwitter NPM library\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"post-statusesupdate\" href=\"#post-statusesupdate\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  POST statuses/update\n\u003c/h2\u003e\n\n\u003cp\u003ePOST statuses/update lets one “tweet” a status on Twitter.\u003c/p\u003e\n\n\u003cp\u003eBut when you want to add a reply the an existing twitter, you can set the \u003ccode\u003ein_reply_to_status_id\u003c/code\u003e to the tweet ID you want to reply to.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ca href=\"https://developer.twitter.com/en/docs/tweets/post-and-engage/api-reference/post-statuses-update#parameters\"\u003edocumentation for\u003c/a\u003e\u003ccode\u003ein_reply_to_status_id\u003c/code\u003e states that\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe ID of an existing status that the update is in reply to.  \u003cstrong\u003eNote:\u003c/strong\u003e  This parameter will be ignored unless the author of the Tweet this parameter references is mentioned within the status text. Therefore, you must include \u003ccode\u003e@username\u003c/code\u003e , where \u003ccode\u003eusername\u003c/code\u003e is the author of the referenced Tweet, within the update.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eEven though it says that it should be “mentioned within the status text”, but it doesn’t sound 100% correct as passing \u003ccode\u003eusername\u003c/code\u003e mentioned in the following sentence was enough to trigger the reply thread.\u003c/p\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/c4e463b8fa949d1fe7ae5761dd7ed3f9\"\u003eView this gist on GitHub\u003c/a\u003e\n\n\u003cp\u003eOn line #17, username is passed and that’s sufficient to make \u003ccode\u003ein_reply_to_status_id\u003c/code\u003e not to be ignored by Twitter.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ZydHiXpA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/07/brave_cVXnc4x2aJ.png%3Ffit%3D1024%252C837%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ZydHiXpA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/07/brave_cVXnc4x2aJ.png%3Ffit%3D1024%252C837%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cfigcaption\u003e \u003ca href=\"https://mobile.twitter.com/dance2die/status/1155604901558456321\"\u003e\u003c/a\u003e\u003ca href=\"https://mobile.twitter.com/dance2die/status/1155604901558456321\"\u003ehttps://mobile.twitter.com/dance2die/status/1155604901558456321\u003c/a\u003e\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2019/07/28/adding-a-twitter-reply-via-twitter-api/\"\u003eAdding a Twitter Reply via Twitter API\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Adding a Twitter Reply via Twitter API\npublished: false\ntags: Blog Entry,JavaScript,Programming,Self Note\ncanonical_url: https://www.slightedgecoder.com/2019/07/28/adding-a-twitter-reply-via-twitter-api/\n---\n\nA quick note to self regarding adding a reply on Twitter using [Twitter NPM library](https://www.npmjs.com/package/twitter).\n\n## POST statuses/update\n\nPOST statuses/update lets one “tweet” a status on Twitter.\n\nBut when you want to add a reply the an existing twitter, you can set the `in_reply_to_status_id` to the tweet ID you want to reply to.\n\nThe [documentation for](https://developer.twitter.com/en/docs/tweets/post-and-engage/api-reference/post-statuses-update#parameters)`in_reply_to_status_id` states that\n\n\u003e The ID of an existing status that the update is in reply to.  **Note:**  This parameter will be ignored unless the author of the Tweet this parameter references is mentioned within the status text. Therefore, you must include `@username` , where `username` is the author of the referenced Tweet, within the update.\n\nEven though it says that it should be “mentioned within the status text”, but it doesn’t sound 100% correct as passing `username` mentioned in the following sentence was enough to trigger the reply thread.\n\n\u003cscript src=\"https://gist.github.com/dance2die/c4e463b8fa949d1fe7ae5761dd7ed3f9.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/c4e463b8fa949d1fe7ae5761dd7ed3f9\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\n\nOn line #17, username is passed and that’s sufficient to make `in_reply_to_status_id` not to be ignored by Twitter.\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/07/brave_cVXnc4x2aJ.png?fit=1024%2C837\u0026ssl=1)\u003cfigcaption\u003e \u003ca href=\"https://mobile.twitter.com/dance2die/status/1155604901558456321\"\u003ehttps://mobile.twitter.com/dance2die/status/1155604901558456321\u003c/a\u003e\u003c/figcaption\u003e\n\nThe post [Adding a Twitter Reply via Twitter API](https://www.slightedgecoder.com/2019/07/28/adding-a-twitter-reply-via-twitter-api/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2019/07/28/adding-a-twitter-reply-via-twitter-api/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2019/07/28/adding-a-twitter-reply-via-twitter-api/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, javascript, programming, selfnote",
    "path": "/dance2die/adding-a-twitter-reply-via-twitter-api-369j-temp-slug-572160",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-07-28T22:45:07.000Z"
  },
  {
    "title": "React.Suspense doesn’t work with Gatsby (yet)",
    "slug": "react-suspense-doesn-t-work-with-gatsby-yet-22hi",
    "created_at": "2019-08-01T01:51:59.732Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/2tlz73n6d0saef5pfiys.jpg",
    "description": "Photo by [Егор Камелев_](https://unsplash.com/@ekamelev?utm_source=unsplash\u0026amp;u...",
    "published": true,
    "published_at": "2019-08-01T01:41:23.000Z",
    "processed_html": "\u003cp\u003e          \u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/@ekamelev?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eЕгор Камелев\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/spider?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003cbr\u003e\u003cbr\u003e\n          \u003cem\u003e(Image chosen cuz it’s a suspense-invoking cute lil’ creature 😅)\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eI was loading components dynamically on \u003ca href=\"https://www.gatsbyjs.org\"\u003eGatsby\u003c/a\u003e using \u003ca href=\"https://reactjs.org/docs/code-splitting.html#reactlazy\"\u003eReact.lazy\u003c/a\u003e, which required to use \u003ca href=\"https://reactjs.org/docs/code-splitting.html#suspense\"\u003eReact.Suspense\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eBut then I got the following message while building the site.\u003c/p\u003e\n\n\u003cp\u003e          \u003cem\u003eActually I found out while deploying it on Netlify first 😅 (then ran\u003c/em\u003e \u003ccode\u003egatsby build\u003c/code\u003e \u003cem\u003elocally)\u003c/em\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eWebpackError: Invariant Violation: Minified React error #294; visit \u003ca href=\"https://reactjs.org/docs/error-decoder.html?invariant=294\"\u003ehttps://reactjs.org/docs/error-decoder.html?invariant=294\u003c/a\u003e for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--rUIC-JwG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/07/build-error-1.jpg%3Ffit%3D1024%252C396%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--rUIC-JwG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/07/build-error-1.jpg%3Ffit%3D1024%252C396%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cfigcaption\u003eFonts look broken on local machine too by the way\u003c/figcaption\u003e\u003c/p\u003e\n\n\u003cp\u003eThe error message points you to \u003ca href=\"https://reactjs.org/docs/error-decoder.html?invariant=294\"\u003ehttps://reactjs.org/docs/error-decoder.html?invariant=294\u003c/a\u003e, which shows that\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eReactDOMServer does not yet support Suspense.\u003c/strong\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eNice clear message (no sarcasm intended).\u003c/p\u003e\n\n\u003cp\u003eGatsby \u003ca href=\"https://github.com/gatsbyjs/gatsby/blob/57390e8da2d89c6abd0ad235c7389f39d072a36f/docs/blog/2018-11-07-gatsby-for-apps/index.md#gatsby-is-for-applications\"\u003euses ReactDOMServer in the build process\u003c/a\u003e thus the error occurred.\u003c/p\u003e\n\u003ch2\u003e\n  \u003ca name=\"fixing-the-offending-code\" href=\"#fixing-the-offending-code\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Fixing the Offending Code\n\u003c/h2\u003e\n\n\u003cp\u003eBelow is the offending code using React.lazy causing the issue.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/57aef9fb69e78008c8e693b9487a0998.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003cfigcaption\u003eDon’t do this, yet as it’s not supported!\u003c/figcaption\u003e\n\n\u003cp\u003eComponents are loaded “lazily” on line #6, which caused React.Suspense wrap in the return statement at the bottom.\u003c/p\u003e\n\n\u003cp\u003e          \u003cem\u003eLines #28 ~ #30\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSo to remove \u003ccode\u003eSuspense\u003c/code\u003e, get rid of \u003ccode\u003eReact.lazy\u003c/code\u003e and replace it with a regular \u003ca href=\"https://v8.dev/features/dynamic-import\"\u003edynamic import()\u003c/a\u003e, and return a default module.\u003c/p\u003e\n\n\u003cp\u003eWe need to keep the components loaded in a state, so let’s use \u003ca href=\"https://reactjs.org/docs/hooks-reference.html#usestate\"\u003euseState\u003c/a\u003e and load it in the \u003ca href=\"https://reactjs.org/docs/hooks-reference.html#useeffect\"\u003euseEffect\u003c/a\u003e hook.\u003c/p\u003e\n\n\u003cp\u003e          \u003cem\u003eIf you want to use Class Components, refer to case #1 of my other post, \u003ca href=\"https://www.slightedgecoder.com/2017/12/03/loading-react-components-dynamically-demand/#case1\"\u003eLoading React Components Dynamically on Demand\u003c/a\u003e, which was written when Hooks weren’t available\u003c/em\u003e\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/93bb446d110045552177025bf9f9412d.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003cfigcaption\u003eThis now builds 🙂\u003c/figcaption\u003e\n\n\u003cp\u003e\u003ccode\u003eallDirectory\u003c/code\u003e is loaded via a static GraphQL query, and when the directories are loaded, it causes the \u003ccode\u003euseEffect\u003c/code\u003e to render.\u003cbr\u003e\u003cbr\u003e\nAnd \u003ccode\u003eloadComponents\u003c/code\u003e (aptly named, right? 😉) loads all components dynamically, and saves it to \u003ccode\u003ecomponents\u003c/code\u003e state, which is used within return statement to render.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eRegarding\u003c/em\u003e \u003ccode\u003ekey={Component}\u003c/code\u003e\u003cem\u003e, I was too “lazy” to come up with a unique key so used an object instead.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Parting Words\n\u003c/h2\u003e\n\n\u003cp\u003eAs the title shows, I just wanted to point out that \u003ccode\u003eSuspense\u003c/code\u003e isn’t working with Gatsby, yet.\u003cbr\u003e\u003cbr\u003e\nBut I ended up fixing the issue and wrote more soon after.\u003c/p\u003e\n\n\u003cp\u003eI am going to keep the “fix” part short as it’s already written about in the previous posts already.\u003c/p\u003e\n\n\u003cp\u003eIf you have a trouble with converting it into using Function Components with hooks, let me know~\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://dev.to/dance2die/loading-react-components-dynamically-on-demand-1a56\"\u003eLoading React Components Dynamically on Demand\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dev.to/dance2die/loading-react-components-dynamically-on-demand-using-reactlazy-40f4\"\u003eLoading React Components Dynamically on Demand using React.lazy\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2019/07/31/react-suspense-doesnt-work-with-gatsby-yet/\"\u003eReact.Suspense doesn’t work with Gatsby (yet)\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n",
    "social_image": null,
    "body_markdown": "---\ntitle: React.Suspense doesn’t work with Gatsby (yet)\npublished: true\ntags: react,gatsby\ncanonical_url: https://www.slightedgecoder.com/2019/07/31/react-suspense-doesnt-work-with-gatsby-yet/\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/2tlz73n6d0saef5pfiys.jpg\n---\n\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_Photo by [Егор Камелев](https://unsplash.com/@ekamelev?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/spider?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_  \n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_(Image chosen cuz it’s a suspense-invoking cute lil’ creature 😅)_\n\nI was loading components dynamically on [Gatsby](https://www.gatsbyjs.org) using [React.lazy](https://reactjs.org/docs/code-splitting.html#reactlazy), which required to use [React.Suspense](https://reactjs.org/docs/code-splitting.html#suspense).\n\nBut then I got the following message while building the site.\n\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_Actually I found out while deploying it on Netlify first 😅 (then ran_ `gatsby build` _locally)_\n\n\u003e WebpackError: Invariant Violation: Minified React error #294; visit https://reactjs.org/docs/error-decoder.html?invariant=294 for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/07/build-error-1.jpg?fit=1024%2C396\u0026ssl=1)\u003cfigcaption\u003eFonts look broken on local machine too by the way\u003c/figcaption\u003e\n\nThe error message points you to https://reactjs.org/docs/error-decoder.html?invariant=294, which shows that\n\n\u003e **ReactDOMServer does not yet support Suspense.**\n\nNice clear message (no sarcasm intended).\n\nGatsby [uses ReactDOMServer in the build process](https://github.com/gatsbyjs/gatsby/blob/57390e8da2d89c6abd0ad235c7389f39d072a36f/docs/blog/2018-11-07-gatsby-for-apps/index.md#gatsby-is-for-applications) thus the error occurred.\n\n## Fixing the Offending Code\n\nBelow is the offending code using React.lazy causing the issue.\n\n{% gist https://gist.github.com/dance2die/57aef9fb69e78008c8e693b9487a0998 %}\n\n\u003cfigcaption\u003eDon’t do this, yet as it’s not supported!\u003c/figcaption\u003e\n\nComponents are loaded “lazily” on line #6, which caused React.Suspense wrap in the return statement at the bottom.\n\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_Lines #28 ~ #30_\n\nSo to remove `Suspense`, get rid of `React.lazy` and replace it with a regular [dynamic import()](https://v8.dev/features/dynamic-import), and return a default module.\n\nWe need to keep the components loaded in a state, so let’s use [useState](https://reactjs.org/docs/hooks-reference.html#usestate) and load it in the [useEffect](https://reactjs.org/docs/hooks-reference.html#useeffect) hook.\n\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;_If you want to use Class Components, refer to case #1 of my other post, [Loading React Components Dynamically on Demand](https://www.slightedgecoder.com/2017/12/03/loading-react-components-dynamically-demand/#case1), which was written when Hooks weren’t available_\n\n{% gist https://gist.github.com/dance2die/93bb446d110045552177025bf9f9412d %}\n\n\u003cfigcaption\u003eThis now builds 🙂\u003c/figcaption\u003e\n\n`allDirectory` is loaded via a static GraphQL query, and when the directories are loaded, it causes the `useEffect` to render.  \nAnd `loadComponents` (aptly named, right? 😉) loads all components dynamically, and saves it to `components` state, which is used within return statement to render.\n\n_Regarding_ `key={Component}`_, I was too “lazy” to come up with a unique key so used an object instead._\n\n## Parting Words\n\nAs the title shows, I just wanted to point out that `Suspense` isn’t working with Gatsby, yet.  \nBut I ended up fixing the issue and wrote more soon after.\n\nI am going to keep the “fix” part short as it’s already written about in the previous posts already.\n\nIf you have a trouble with converting it into using Function Components with hooks, let me know~\n\n- [Loading React Components Dynamically on Demand](https://dev.to/dance2die/loading-react-components-dynamically-on-demand-1a56)\n- [Loading React Components Dynamically on Demand using React.lazy](https://dev.to/dance2die/loading-react-components-dynamically-on-demand-using-reactlazy-40f4)\n\nThe post [React.Suspense doesn’t work with Gatsby (yet)](https://www.slightedgecoder.com/2019/07/31/react-suspense-doesnt-work-with-gatsby-yet/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).\n",
    "canonical_url": "https://www.slightedgecoder.com/2019/07/31/react-suspense-doesnt-work-with-gatsby-yet/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 6,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2019/07/31/react-suspense-doesnt-work-with-gatsby-yet/",
    "positive_reactions_count": 38,
    "edited_at": "2019-08-01T01:57:29.696Z",
    "crossposted_at": "2019-08-01T01:57:07.436Z",
    "language": "en",
    "cached_tag_list": "react, gatsby",
    "path": "/dance2die/react-suspense-doesn-t-work-with-gatsby-yet-22hi",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-10-18T23:37:08.123Z"
  },
  {
    "title": "React Sticky Event with Intersection Observer",
    "slug": "react-sticky-event-with-intersection-observer-310h",
    "created_at": "2019-08-24T20:56:01.149Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/jpqevj8yxbfbaf34qggj.jpg",
    "description": "Photo by [_Kelly Sikkema](https://unsplash.com/@kellysikkema?utm_source=unsplash\u0026...",
    "published": true,
    "published_at": "2019-08-24T20:55:35.000Z",
    "processed_html": "\u003cp\u003e\u003cem\u003ePhoto by \u003ca href=\"https://unsplash.com/@kellysikkema?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eKelly Sikkema\u003c/a\u003e on \u003ca href=\"https://unsplash.com/search/photos/sticky-notes?utm_source=unsplash\u0026amp;utm_medium=referral\u0026amp;utm_content=creditCopyText\"\u003eUnsplash\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eThere isn’t a way to monitor stickiness of a component in CSS (\u003ccode\u003eposition: sticky\u003c/code\u003e).\u003c/p\u003e\n\n\u003cp\u003eThis nice article on Google, \u003ca href=\"https://developers.google.com/web/updates/2017/09/sticky-headers\"\u003eAn event for CSS position:sticky\u003c/a\u003e shows how to emulate sticky events in vanilla JavaScript without using scroll event but using \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver\"\u003eIntersectionObserver\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eI will show how to create React components to emulate the same behavior.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"table-of-contents\" href=\"#table-of-contents\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Table of Contents\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#prerequisite\"\u003ePrerequisite\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#what-we-are-building\"\u003eWhat we are building\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#here-is-the-working-sandbox\"\u003eHere is the working Sandbox\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#using-sticky-event-components\"\u003eUsing sticky event components\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#implementing-sticky-components\"\u003eImplementing Sticky Components\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003e⚛ \u003ca href=\"#%E2%9A%9B-stickyviewport\"\u003eStickyViewport\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e⚛ \u003ca href=\"#%E2%9A%9B-stickyprovider\"\u003eStickyProvier\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e⚛ \u003ca href=\"#%E2%9A%9B-stickyboundary\"\u003eStickyBoundary\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e🎣 \u003ca href=\"#usesentineloffsets\"\u003euseSentinelOffsets\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e🎣 \u003ca href=\"#useobservetopsentinels\"\u003euseObserveTopSentinels\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e🎣 \u003ca href=\"#useobservebottomsentinels\"\u003euseObserveBottomSentinels\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e⚛ \u003ca href=\"#%E2%9A%9B-sticky\"\u003eSticky\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#resources\"\u003eResources\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"prerequisite\" href=\"#prerequisite\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Prerequisite\n\u003c/h2\u003e\n\n\u003cp\u003eThis article is based on \u003ca href=\"https://developers.google.com/web/updates/2017/09/sticky-headers\"\u003eAn event for CSS position:sticky\u003c/a\u003e, which also provides a nice \u003ca href=\"https://ebidel.github.io/demos/sticky-position-event.html\"\u003edemo\u003c/a\u003e and explanation on how it was implemented as well as the \u003ca href=\"https://github.com/ebidel/demos/blob/master/sticky-position-event.html\"\u003esource code\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe basic idea is that, you add top \u0026amp; bottom sentinels around the sticky boundary, and observe those sentinels using \u003ccode\u003eIntersectionObserver\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eLeft is the terms used in the linked article above and the right is corresponding component name used here.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eScrolling Container -\u0026gt; \u003ccode\u003e\u0026lt;StickyViewport /\u0026gt;\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eHeaders -\u0026gt; \u003ccode\u003e\u0026lt;Sticky /\u0026gt;\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eSticky Sections -\u0026gt; \u003ccode\u003e\u0026lt;StickyBoundary /\u0026gt;\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--npETRpKS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/08/Sticky-Component-Overview.png%3Ffit%3D1024%252C760%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--npETRpKS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/08/Sticky-Component-Overview.png%3Ffit%3D1024%252C760%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-we-are-building\" href=\"#what-we-are-building\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  What we are building\n\u003c/h2\u003e\n\n\u003cp\u003eBefore moving on, let’s see what we are building.\u003c/p\u003e\n\n\u003cp\u003e\u003ciframe width=\"710\" height=\"399\" src=\"https://www.youtube.com/embed/Mq-g7bSEQvg\" allowfullscreen\u003e\n\u003c/iframe\u003e\n\u003c/p\u003e\n\n\u003cp\u003eSticky headers styles are changed as they stick and unstick without listening to \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/scroll_event\"\u003escroll event\u003c/a\u003e, which can cause site performance issue if not handled correctly.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"here-is-the-working-sandbox\" href=\"#here-is-the-working-sandbox\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Here is the working Sandbox.\n\u003c/h3\u003e\n\n\u003cp\u003e\u003ciframe src=\"https://codesandbox.io/embed/react-sticky-javascript-refactored-w8otj\" style=\"width:100%; height:calc(300px + 8vw); border:0; border-radius: 4px; overflow:hidden;\" sandbox=\"allow-same-origin allow-scripts allow-forms allow-top-navigation-by-user-activation\"\u003e\n\u003c/iframe\u003e\n\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eYou can click on \u003ccode\u003eToggle Debug\u003c/code\u003e button to show sentinels.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eYou can see that the sticky headers change the color and the box shadow styles.\u003cbr\u003e\u003cbr\u003e\nLet’s see the usage of sticky components.\u003c/p\u003e\n\u003ch2\u003e\n  \u003ca name=\"using-sticky-event-components\" href=\"#using-sticky-event-components\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Using sticky event components\n\u003c/h2\u003e\n\n\u003cp\u003eHere is the how one might use the component to observe un/stuck events.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/a39355c83f23f5e8c66747eb612c7c3a.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003col\u003e\n\u003cli\u003eSpecifies the viewport in which the IntersectionObserver should base on “threshold” with (\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/root\"\u003eroot\u003c/a\u003e). By default, IntersectionObserver’s root is set to the viewport. \u003ccode\u003eas\u003c/code\u003e specifies which element the DOM should be rendered as. It’s rendered as \u003ccode\u003emain\u003c/code\u003e in this case where default is \u003ccode\u003ediv\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eshows the section within which the sticky component sticks. (This is where “top/bottom” sentinels are added as shown in the Google doc)\u003c/li\u003e\n\u003cli\u003eThe boundary is where the un/stuck events can be subscribed via following props.\u003c/li\u003e\n\u003cli\u003eRender a sticky component as “h1” – This is the component that will stick within the \u003ccode\u003eStickyBoundary\u003c/code\u003e on scroll.\u003c/li\u003e\n\u003cli\u003eshows event handlers. \u003ccode\u003ehandleChange\u003c/code\u003e handler changes the background color and the box shadow depending on sticky component’s stickiness.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eNow let’s see how each component is implemented.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"implementing-sticky-components\" href=\"#implementing-sticky-components\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Implementing Sticky Components\n\u003c/h2\u003e\n\n\u003cp\u003eI will start from top components toward the bottom because I’ve actually written the rendered component (how the components should be used) before writing down implementations for them.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eI wasn’t even sure if it’d work but that’s how I wanted the components to work.\u003c/em\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"%E2%9A%9B-stickyviewport\" href=\"#%E2%9A%9B-stickyviewport\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ⚛ StickyViewport\n\u003c/h3\u003e\n\n\u003cp\u003eLet’s take a look at how it’s implemented.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/d2c410470a75b612ec38e94af3011126.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003col\u003e\n\u003cli\u003eIt’s basically a container to provide a context to be used within the Sticky component tree (“the tree” hereafter).\u003c/li\u003e\n\u003cli\u003eThe real implementation is within \u003ccode\u003eStickyRoot\u003c/code\u003e, which is not used (or made available via module export) in the usage above.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cul\u003e\n\u003cli\u003eWhile \u003ccode\u003eStickyViewport\u003c/code\u003e makes context available within the tree without rendering any element, \u003ccode\u003eStickyRoot\u003c/code\u003e is the actual “\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/root\"\u003eroot\u003c/a\u003e” (of IntersectionObserver option).\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003col\u003e\n\u003cli\u003eTo make the container ref available down in the tree, action dispatcher is retrieved from the custom hook, \u003ccode\u003euseStickyActions\u003c/code\u003e (,which is a \u003ccode\u003edispatch\u003c/code\u003e from \u003ccode\u003euseReducer\u003c/code\u003e) in the provider implementation.\u003c/li\u003e\n\u003cli\u003eUsing the \u003ccode\u003edispatcher.setContainerRef\u003c/code\u003e, we make the reference available in the tree for the child components.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eNow let’s see what state and actions \u003ccode\u003eStickyProvider\u003c/code\u003e provides in the tree.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"%E2%9A%9B-stickyprovider\" href=\"#%E2%9A%9B-stickyprovider\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ⚛ StickyProvider\n\u003c/h3\u003e\n\n\u003cp\u003eThe context is implemented using the pattern by Kent C. Dodd’s article, \u003ca href=\"https://kentcdodds.com/blog/how-to-use-react-context-effectively\"\u003eHow to use React Context effectively\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eBasically, you create two contexts, one for the state, another for dispatch and create hooks for each.\u003c/p\u003e\n\n\u003cp\u003eThe difference in \u003ccode\u003eStickyProvider\u003c/code\u003e is that, instead of exposing raw \u003ccode\u003edispatch\u003c/code\u003e from \u003ccode\u003euseReducer\u003c/code\u003e directly, I’ve encapsulated it into actions.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eI’d recommend reading Kent’s article before moving on.\u003c/em\u003e\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/07659aef6b54ed1305bb67f7fe88498d.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003col\u003e\n\u003cli\u003e\n\u003ccode\u003econtainerRef\u003c/code\u003e refers to the ref in \u003ccode\u003eStickyRoot\u003c/code\u003e, which is passed to the IntersectionObserver as the \u003ccode\u003eroot\u003c/code\u003e option while \u003ccode\u003estickyRefs\u003c/code\u003e refers to all \u003ccode\u003e\u0026lt;Sticky /\u0026gt;\u003c/code\u003e elements, which is the “target” passed to event handlers.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003esetContainerRef\u003c/code\u003e is called in the \u003ccode\u003eStickyRoot\u003c/code\u003e to pass to \u003ccode\u003eStickyBoundary\u003c/code\u003e while \u003ccode\u003eaddStickyRef\u003c/code\u003e associates TOP \u0026amp; BOTTOM sentinels with \u003ccode\u003e\u0026lt;Sticky /\u0026gt;\u003c/code\u003e element.\nWe are observing TOP \u0026amp; BOTTOM sentinels so when \u003ccode\u003e\u0026lt;StickyBoundary /\u0026gt;\u003c/code\u003e fires events, we can correctly retrieve the target sticky element.\u003c/li\u003e\n\u003cli\u003eI am not returning a new reference but updating the existing “state” using \u003ccode\u003eObject.assign(state,...)\u003c/code\u003e, not \u003ccode\u003eObject.assign({}, state, ...)\u003c/code\u003e.\nReturning a new state would infinitely run the effects, so only \u003ccode\u003estickRefs\u003c/code\u003e are updated as updating the state reference would cause \u003ccode\u003econtainerRef\u003c/code\u003e to be of a new reference, causing a cascading effect (an infinite loop).\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eStickyProvider\u003c/code\u003e simply provides states raw, and\u003c/li\u003e\n\u003cli\u003ecreates “actions” out of dispatch, which makes only allowable actions to be called.\u003c/li\u003e\n\u003cli\u003eand\u003c/li\u003e\n\u003cli\u003eare hooks for accessing state and actions (I decided not to provide a “Consumer”, which would cause a false hierarchy as render prop would.).\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eStickySectionContext\u003c/code\u003e is just another context to pass down TOP \u0026amp; BOTTOM sentinels down to \u003ccode\u003eSticky\u003c/code\u003e component, with which we can associate the sticky \u003ccode\u003etarget\u003c/code\u003e to pass to the event handlers for \u003ccode\u003eonChange, onUn/Stuck\u003c/code\u003e events.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eIt was necessary because we are observing TOP \u0026amp; BOTTOM sentinels and during the declaration, we don’t know which sticky element we are monitoring.\u003c/p\u003e\n\n\u003cp\u003eNow we have enough context with state \u0026amp; actions, let’s move on and see implementations of child components, \u003ccode\u003eStickyBoundary\u003c/code\u003e, and \u003ccode\u003eSticky\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"%E2%9A%9B-stickyboundary\" href=\"#%E2%9A%9B-stickyboundary\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ⚛ StickyBoundary\n\u003c/h3\u003e\n\n\u003cp\u003eThe outline of \u003ccode\u003eStickyBoundary\u003c/code\u003e looks as below.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/c494a38b8923f83f1e4ee4963817d14e.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003col\u003e\n\u003cli\u003eThe boundary is where you’d subscribe stickiness changes.\u003c/li\u003e\n\u003cli\u003eCreate TOP \u0026amp; BOTTOM sentinel references, with which, we observe the stickiness of sticky components.\u003c/li\u003e\n\u003cli\u003eCompute sentinel offsets.\u003c/li\u003e\n\u003cli\u003eThis hook observes top sentinel and fires events depending on the boundary calculation in relation to the viewport.\u003c/li\u003e\n\u003cli\u003eThis hook observes BOTTOM sentinel and fires events depending on the boundary calculation in relation to the viewport.\u003c/li\u003e\n\u003cli\u003eSaving the sentinel refs to associate with sticky component somewhere down in the tree.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eStickyBoundary\u003c/code\u003e simplys wraps the children with TOP \u0026amp; BOTTOM sentinels and applies computed offsets calculated in step 3.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eSo basically \u003ccode\u003eStickyBoundary\u003c/code\u003e wraps children with TOP \u0026amp; BOTTOM sentinels, with which we can tell whether a sticky component is stuck or unstuck.\u003c/p\u003e\n\n\u003cp\u003eNow let’s implement hooks.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"usesentineloffsets\" href=\"#usesentineloffsets\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🎣 useSentinelOffsets\n\u003c/h4\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/b334739cabccfc716d1b177f303af947.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003col\u003e\n\u003cli\u003eTOP margin \u0026amp; BOTTOM height calculation requires the top sentinel ref.\u003c/li\u003e\n\u003cli\u003eThis is where the calculation occurs whenever sticky elements, and top sentinel ref changes (\u003ccode\u003e[stickyRefs, topSentinelRef]\u003c/code\u003e).\u003c/li\u003e\n\u003cli\u003eWe’ve associated sticky elements with TOP \u0026amp; BOTTOM sentinels via context, so fetch the sticky node associated with the top sentinel.\u003c/li\u003e\n\u003cli\u003eGet the sticky element styles required for calculation.\u003c/li\u003e\n\u003cli\u003eCalculate the BOTTOM sentinel height.\u003c/li\u003e\n\u003cli\u003eWe make the calculated states available to the caller.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"useobservetopsentinels\" href=\"#useobservetopsentinels\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🎣 useObserveTopSentinels\n\u003c/h4\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/f26f7b64094d635ae8de5498c3ac4cb1.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003cp\u003eOK, this is now where it gets messy a bit. I’ve followed the logic in \u003ca href=\"https://developers.google.com/web/updates/2017/09/sticky-headers\"\u003ethe Google doc\u003c/a\u003e so will be brief and explain only relevant React codes.\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eThese are the events to be triggered depending on the TOP sentinel position.\u003c/li\u003e\n\u003cli\u003eWe have saved the references via context actions. Retrieve the container root (viewport) and the stick refs associated with each TOP sentinel.\u003c/li\u003e\n\u003cli\u003eThis is where observation side effect starts.\u003c/li\u003e\n\u003cli\u003eThe logic was “taken” from the Google doc, thus will skip on how it works but focus on events.\u003c/li\u003e\n\u003cli\u003eAs the TOP sentinel is moved up, we fire the “stuck” event here.\u003c/li\u003e\n\u003cli\u003eAnd when the TOP sentinel is visible, it means the sticky element is “unstuck”.\u003c/li\u003e\n\u003cli\u003eWe fire whenever either unstuck or stuck is even fired.\u003c/li\u003e\n\u003cli\u003eObserve all TOP sentinels that are registered.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"useobservebottomsentinels\" href=\"#useobservebottomsentinels\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🎣 useObserveBottomSentinels\n\u003c/h4\u003e\n\n\u003cp\u003eThe structure is about the same as \u003ccode\u003euseObserveTopSentinels\u003c/code\u003e so will be skipping over the details.\u003c/p\u003e\n\n\u003cp\u003eThe only difference is the logic to calculate when to fire the un/stuck event depending on the position of BOTTOM sentinel, which was discussed in the Google doc.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/f813bd90dcf680bf67fdde163dca3a89.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003cp\u003eNow time for the last component, \u003ccode\u003eSticky\u003c/code\u003e, which will “stick” the child component and how it works in conjunction with aforementioned components.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"%E2%9A%9B-sticky\" href=\"#%E2%9A%9B-sticky\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ⚛ Sticky\n\u003c/h3\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/4483589c5ff5ed9cc9a6fc9ecd2588be.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003col\u003e\n\u003cli\u003eFirst we get the TOP \u0026amp; BOTTOM sentinels to associate with\u003c/li\u003e\n\u003cli\u003eso that we can retrieve correct child target element from either a top sentinel or a bottom sentinel.\u003c/li\u003e\n\u003cli\u003eWe simply wrap the children and apply \u003ccode\u003eposition: sticky\u003c/code\u003e around it using a class module (not shown here).\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eLet’s take a look at the working demo one more time.\u003c/p\u003e\n\n\u003cp\u003e\u003ciframe src=\"https://codesandbox.io/embed/react-sticky-javascript-refactored-w8otj\" style=\"width:100%; height:calc(300px + 8vw); border:0; border-radius: 4px; overflow:hidden;\" sandbox=\"allow-same-origin allow-scripts allow-forms allow-top-navigation-by-user-activation\"\u003e\n\u003c/iframe\u003e\n\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"resources\" href=\"#resources\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Resources\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eGoogle Documentation\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developers.google.com/web/updates/2017/09/sticky-headers\"\u003eAn event for CSS position:sticky\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://ebidel.github.io/demos/sticky-position-event.html\"\u003eDemo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/ebidel/demos/blob/master/sticky-position-event.html\"\u003eSource Code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developers.google.com/web/updates/2016/04/intersectionobserver\"\u003eIntersectionObserver’s Coming into View\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003eMDN\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver\"\u003eIntersectionObserver\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eIntersectionObserver \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/root\"\u003eroot\u003c/a\u003e option\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://codesandbox.io/s/react-sticky-javascript-refactored-w8otj\"\u003eSandbox\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2019/08/24/react-sticky-event-with-intersection-observer/\"\u003eReact Sticky Event with Intersection Observer\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n",
    "social_image": "",
    "body_markdown": "---\ntitle: React Sticky Event with Intersection Observer\npublished: true\ntags: react, css\ncanonical_url: https://www.slightedgecoder.com/2019/08/24/react-sticky-event-with-intersection-observer/\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/jpqevj8yxbfbaf34qggj.jpg\n---\n\n_Photo by [Kelly Sikkema](https://unsplash.com/@kellysikkema?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText) on [Unsplash](https://unsplash.com/search/photos/sticky-notes?utm_source=unsplash\u0026utm_medium=referral\u0026utm_content=creditCopyText)_\n\nThere isn’t a way to monitor stickiness of a component in CSS (`position: sticky`).\n\nThis nice article on Google, [An event for CSS position:sticky](https://developers.google.com/web/updates/2017/09/sticky-headers) shows how to emulate sticky events in vanilla JavaScript without using scroll event but using [IntersectionObserver](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver).\n\nI will show how to create React components to emulate the same behavior.\n\n## Table of Contents\n\n- [Prerequisite](#prerequisite)\n- [What we are building](#what-we-are-building)\n  - [Here is the working Sandbox](#here-is-the-working-sandbox)\n- [Using sticky event components](#using-sticky-event-components)\n- [Implementing Sticky Components](#implementing-sticky-components)\n  - ⚛ [StickyViewport](#%E2%9A%9B-stickyviewport)\n  - ⚛ [StickyProvier](#%E2%9A%9B-stickyprovider)\n  - ⚛ [StickyBoundary](#%E2%9A%9B-stickyboundary)\n    - 🎣 [useSentinelOffsets](#usesentineloffsets)\n    - 🎣 [useObserveTopSentinels](#useobservetopsentinels)\n    - 🎣 [useObserveBottomSentinels](#useobservebottomsentinels)\n  - ⚛ [Sticky](#%E2%9A%9B-sticky)\n- [Resources](#resources)\n\n## Prerequisite\n\nThis article is based on [An event for CSS position:sticky](https://developers.google.com/web/updates/2017/09/sticky-headers), which also provides a nice [demo](https://ebidel.github.io/demos/sticky-position-event.html) and explanation on how it was implemented as well as the [source code](https://github.com/ebidel/demos/blob/master/sticky-position-event.html).\n\nThe basic idea is that, you add top \u0026 bottom sentinels around the sticky boundary, and observe those sentinels using `IntersectionObserver`.\n\nLeft is the terms used in the linked article above and the right is corresponding component name used here.\n\n- Scrolling Container -\u003e `\u003cStickyViewport /\u003e`\n- Headers -\u003e `\u003cSticky /\u003e`\n- Sticky Sections -\u003e `\u003cStickyBoundary /\u003e`\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/08/Sticky-Component-Overview.png?fit=1024%2C760\u0026ssl=1)\n\n## What we are building\n\nBefore moving on, let’s see what we are building.\n\n{% youtube Mq-g7bSEQvg %}\n\nSticky headers styles are changed as they stick and unstick without listening to [scroll event](https://developer.mozilla.org/en-US/docs/Web/API/Document/scroll_event), which can cause site performance issue if not handled correctly.\n\n### Here is the working Sandbox.\n\n{% codesandbox react-sticky-javascript-refactored-w8otj %}\n\n_You can click on `Toggle Debug` button to show sentinels._\n\nYou can see that the sticky headers change the color and the box shadow styles.  \nLet’s see the usage of sticky components.\n\n## Using sticky event components\n\nHere is the how one might use the component to observe un/stuck events.\n\n{% gist https://gist.github.com/dance2die/a39355c83f23f5e8c66747eb612c7c3a %}\n\n1. Specifies the viewport in which the IntersectionObserver should base on “threshold” with ([root](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/root)). By default, IntersectionObserver’s root is set to the viewport. `as` specifies which element the DOM should be rendered as. It’s rendered as `main` in this case where default is `div`.\n2. shows the section within which the sticky component sticks. (This is where “top/bottom” sentinels are added as shown in the Google doc)\n3. The boundary is where the un/stuck events can be subscribed via following props.\n4. Render a sticky component as “h1” – This is the component that will stick within the `StickyBoundary` on scroll.\n5. shows event handlers. `handleChange` handler changes the background color and the box shadow depending on sticky component’s stickiness.\n\nNow let’s see how each component is implemented.\n\n## Implementing Sticky Components\n\nI will start from top components toward the bottom because I’ve actually written the rendered component (how the components should be used) before writing down implementations for them.\n\n_I wasn’t even sure if it’d work but that’s how I wanted the components to work._\n\n### ⚛ StickyViewport\n\nLet’s take a look at how it’s implemented.\n\n{% gist https://gist.github.com/dance2die/d2c410470a75b612ec38e94af3011126 %}\n\n1. It’s basically a container to provide a context to be used within the Sticky component tree (“the tree” hereafter).\n2. The real implementation is within `StickyRoot`, which is not used (or made available via module export) in the usage above.\n\n- While `StickyViewport` makes context available within the tree without rendering any element, `StickyRoot` is the actual “[root](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/root)” (of IntersectionObserver option).\n\n3. To make the container ref available down in the tree, action dispatcher is retrieved from the custom hook, `useStickyActions` (,which is a `dispatch` from `useReducer`) in the provider implementation.\n4. Using the `dispatcher.setContainerRef`, we make the reference available in the tree for the child components.\n\nNow let’s see what state and actions `StickyProvider` provides in the tree.\n\n### ⚛ StickyProvider\n\nThe context is implemented using the pattern by Kent C. Dodd’s article, [How to use React Context effectively](https://kentcdodds.com/blog/how-to-use-react-context-effectively).\n\nBasically, you create two contexts, one for the state, another for dispatch and create hooks for each.\n\nThe difference in `StickyProvider` is that, instead of exposing raw `dispatch` from `useReducer` directly, I’ve encapsulated it into actions.\n\n_I’d recommend reading Kent’s article before moving on._\n\n{% gist https://gist.github.com/dance2die/07659aef6b54ed1305bb67f7fe88498d %}\n\n1. `containerRef` refers to the ref in `StickyRoot`, which is passed to the IntersectionObserver as the `root` option while `stickyRefs` refers to all `\u003cSticky /\u003e` elements, which is the “target” passed to event handlers.\n2. `setContainerRef` is called in the `StickyRoot` to pass to `StickyBoundary` while `addStickyRef` associates TOP \u0026 BOTTOM sentinels with `\u003cSticky /\u003e` element.  \n   We are observing TOP \u0026 BOTTOM sentinels so when `\u003cStickyBoundary /\u003e` fires events, we can correctly retrieve the target sticky element.\n3. I am not returning a new reference but updating the existing “state” using `Object.assign(state,...)`, not `Object.assign({}, state, ...)`.  \n   Returning a new state would infinitely run the effects, so only `stickRefs` are updated as updating the state reference would cause `containerRef` to be of a new reference, causing a cascading effect (an infinite loop).\n4. `StickyProvider` simply provides states raw, and\n5. creates “actions” out of dispatch, which makes only allowable actions to be called.\n6. and\n7. are hooks for accessing state and actions (I decided not to provide a “Consumer”, which would cause a false hierarchy as render prop would.).\n8. `StickySectionContext` is just another context to pass down TOP \u0026 BOTTOM sentinels down to `Sticky` component, with which we can associate the sticky `target` to pass to the event handlers for `onChange, onUn/Stuck` events.\n\nIt was necessary because we are observing TOP \u0026 BOTTOM sentinels and during the declaration, we don’t know which sticky element we are monitoring.\n\nNow we have enough context with state \u0026 actions, let’s move on and see implementations of child components, `StickyBoundary`, and `Sticky`.\n\n### ⚛ StickyBoundary\n\nThe outline of `StickyBoundary` looks as below.\n\n{% gist https://gist.github.com/dance2die/c494a38b8923f83f1e4ee4963817d14e %}\n\n1. The boundary is where you’d subscribe stickiness changes.\n2. Create TOP \u0026 BOTTOM sentinel references, with which, we observe the stickiness of sticky components.\n3. Compute sentinel offsets.\n4. This hook observes top sentinel and fires events depending on the boundary calculation in relation to the viewport.\n5. This hook observes BOTTOM sentinel and fires events depending on the boundary calculation in relation to the viewport.\n6. Saving the sentinel refs to associate with sticky component somewhere down in the tree.\n7. `StickyBoundary` simplys wraps the children with TOP \u0026 BOTTOM sentinels and applies computed offsets calculated in step 3.\n\nSo basically `StickyBoundary` wraps children with TOP \u0026 BOTTOM sentinels, with which we can tell whether a sticky component is stuck or unstuck.\n\nNow let’s implement hooks.\n\n#### 🎣 useSentinelOffsets\n\n{% gist https://gist.github.com/dance2die/b334739cabccfc716d1b177f303af947 %}\n\n1. TOP margin \u0026 BOTTOM height calculation requires the top sentinel ref.\n2. This is where the calculation occurs whenever sticky elements, and top sentinel ref changes (`[stickyRefs, topSentinelRef]`).\n3. We’ve associated sticky elements with TOP \u0026 BOTTOM sentinels via context, so fetch the sticky node associated with the top sentinel.\n4. Get the sticky element styles required for calculation.\n5. Calculate the BOTTOM sentinel height.\n6. We make the calculated states available to the caller.\n\n#### 🎣 useObserveTopSentinels\n\n{% gist https://gist.github.com/dance2die/f26f7b64094d635ae8de5498c3ac4cb1 %}\n\nOK, this is now where it gets messy a bit. I’ve followed the logic in [the Google doc](https://developers.google.com/web/updates/2017/09/sticky-headers) so will be brief and explain only relevant React codes.\n\n1. These are the events to be triggered depending on the TOP sentinel position.\n2. We have saved the references via context actions. Retrieve the container root (viewport) and the stick refs associated with each TOP sentinel.\n3. This is where observation side effect starts.\n4. The logic was “taken” from the Google doc, thus will skip on how it works but focus on events.\n5. As the TOP sentinel is moved up, we fire the “stuck” event here.\n6. And when the TOP sentinel is visible, it means the sticky element is “unstuck”.\n7. We fire whenever either unstuck or stuck is even fired.\n8. Observe all TOP sentinels that are registered.\n\n#### 🎣 useObserveBottomSentinels\n\nThe structure is about the same as `useObserveTopSentinels` so will be skipping over the details.\n\nThe only difference is the logic to calculate when to fire the un/stuck event depending on the position of BOTTOM sentinel, which was discussed in the Google doc.\n\n{% gist https://gist.github.com/dance2die/f813bd90dcf680bf67fdde163dca3a89 %}\n\nNow time for the last component, `Sticky`, which will “stick” the child component and how it works in conjunction with aforementioned components.\n\n### ⚛ Sticky\n\n{% gist https://gist.github.com/dance2die/4483589c5ff5ed9cc9a6fc9ecd2588be %}\n\n1. First we get the TOP \u0026 BOTTOM sentinels to associate with\n2. so that we can retrieve correct child target element from either a top sentinel or a bottom sentinel.\n3. We simply wrap the children and apply `position: sticky` around it using a class module (not shown here).\n\nLet’s take a look at the working demo one more time.\n\n{% codesandbox react-sticky-javascript-refactored-w8otj %}\n\n## Resources\n\n- Google Documentation\n  - [An event for CSS position:sticky](https://developers.google.com/web/updates/2017/09/sticky-headers)\n    - [Demo](https://ebidel.github.io/demos/sticky-position-event.html)\n    - [Source Code](https://github.com/ebidel/demos/blob/master/sticky-position-event.html)\n  - [IntersectionObserver’s Coming into View](https://developers.google.com/web/updates/2016/04/intersectionobserver)\n- MDN\n  - [IntersectionObserver](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver)\n  - IntersectionObserver [root](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/root) option\n- [Sandbox](https://codesandbox.io/s/react-sticky-javascript-refactored-w8otj)\n\nThe post [React Sticky Event with Intersection Observer](https://www.slightedgecoder.com/2019/08/24/react-sticky-event-with-intersection-observer/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).\n",
    "canonical_url": "https://www.slightedgecoder.com/2019/08/24/react-sticky-event-with-intersection-observer/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 4,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2019/08/24/react-sticky-event-with-intersection-observer/",
    "positive_reactions_count": 73,
    "edited_at": "2019-08-25T17:10:55.628Z",
    "crossposted_at": "2019-08-24T21:21:46.313Z",
    "language": "en",
    "cached_tag_list": "react, css",
    "path": "/dance2die/react-sticky-event-with-intersection-observer-310h",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-09-18T11:40:25.236Z"
  },
  {
    "title": "Installing Dokku on Kubuntu",
    "slug": "installing-dokku-on-kubuntu-ng0",
    "created_at": "2019-09-29T03:14:36.935Z",
    "main_image": "https://thepracticaldev.s3.amazonaws.com/i/vhsbg3ic2yjxw1q5ix0a.jpg",
    "description": "Image by StockSnap from Pixabay\n\nAs I was looking for ways to deploy a node \u0026amp;...",
    "published": true,
    "published_at": "2019-09-29T02:55:42.000Z",
    "processed_html": "\u003cp\u003e\u003cem\u003eImage by\u003c/em\u003e \u003ca href=\"https://pixabay.com/users/StockSnap-894430/?utm_source=link-attribution\u0026amp;utm_medium=referral\u0026amp;utm_campaign=image\u0026amp;utm_content=923554\"\u003e\u003cem\u003eStockSnap\u003c/em\u003e\u003c/a\u003e \u003cem\u003efrom\u003c/em\u003e \u003ca href=\"https://pixabay.com/?utm_source=link-attribution\u0026amp;utm_medium=referral\u0026amp;utm_campaign=image\u0026amp;utm_content=923554\"\u003e\u003cem\u003ePixabay\u003c/em\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAs I was looking for ways to deploy a node \u0026amp; react site for intranet, I was looking for a self-hosted PaaS (Platform as a Service) I can deploy internally.\u003c/p\u003e\n\n\u003cp\u003eAfter I was reading\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag__link\"\u003e\n  \u003ca href=\"/mskog\" class=\"ltag__link__link\"\u003e\n    \u003cdiv class=\"ltag__link__pic\"\u003e\n      \u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--MXoOSfww--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--zdD53q7j--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://thepracticaldev.s3.amazonaws.com/uploads/user/profile_image/100362/369227dd-1dc2-441f-8d76-cb31bbef67cc.jpeg\" alt=\"mskog image\" loading=\"lazy\"\u003e\n    \u003c/div\u003e\n  \u003c/a\u003e\n  \u003ca href=\"/mskog/heroku-vs-self-hosted-paas-2bk1\" class=\"ltag__link__link\"\u003e\n    \u003cdiv class=\"ltag__link__content\"\u003e\n      \u003ch2\u003eHeroku vs self-hosted PaaS\u003c/h2\u003e\n      \u003ch3\u003eMagnus Skog ・ Jul 18 ・ 13 min read\u003c/h3\u003e\n      \u003cdiv class=\"ltag__link__taglist\"\u003e\n        \u003cspan class=\"ltag__link__tag\"\u003e#heroku\u003c/span\u003e\n        \u003cspan class=\"ltag__link__tag\"\u003e#hosting\u003c/span\u003e\n        \u003cspan class=\"ltag__link__tag\"\u003e#selfhosting\u003c/span\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  \u003c/a\u003e\n\u003c/div\u003e\n\n\n\u003cp\u003e, I decided to go with \u003ca href=\"http://dokku.viewdocs.io/dokku/\"\u003eDokku\u003c/a\u003e (even though \u003ca href=\"https://github.com/caprover/caprover\"\u003eCapRover\u003c/a\u003e looked quite appealing as well) because I don’t need to scale up to multiple servers for intranet pages.\u003c/p\u003e\n\n\u003cp\u003eI will show you how to install Dokku on \u003ca href=\"https://kubuntu.org\"\u003eKubuntu\u003c/a\u003e (Ubuntu but with \u003ca href=\"https://kde.org/plasma-desktop\"\u003eKDE Plasma\u003c/a\u003e Desktop Environment instead of Gnome) running on Windows Hyper-V.\u003c/p\u003e\n\n\u003cp\u003eMy linux skill is lacking so will be using KDE to configure some Dokku features. You don’t need Hyper-V to follow but can also use linux (even though Dokku recommends installing it on a VM) or use Linux VM such as \u003ca href=\"https://www.linux-kvm.org/page/Main_Page\"\u003eKVM\u003c/a\u003e or \u003ca href=\"https://www.virtualbox.org/wiki/Linux_Downloads\"\u003eVirtual Box\u003c/a\u003e, etc.\u003c/p\u003e\n\n\u003cp\u003eBe warned. I am just writing down these steps for me to come back so it might not be an optimal/recommended to follow these steps.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003ebut please don’t hesitate to let me know how to improve the flow (especially without using KDE).\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"table-of-contents\" href=\"#table-of-contents\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Table of Contents\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#what-we-are-building\"\u003eWhat we are building\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#prerequisite\"\u003ePrerequisite\u003c/a\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#%E2%97%BC-download-kubuntu\"\u003eDownload Kubuntu\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#%E2%97%BC-create-a-vm\"\u003eCreate a VM\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#%E2%97%BC-install-kubuntu\"\u003eInstall Kubuntu\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#install-dokku\"\u003eInstall Dokku\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#deploy-a-node-app\"\u003eDeploy a Node app\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#check-the-deployed-app\"\u003eCheck the deployed app\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#parting-words\"\u003eParting Words\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#%F0%9F%8F%94-resources\"\u003eResources\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"what-we-are-building\" href=\"#what-we-are-building\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚀 What we are building\n\u003c/h2\u003e\n\n\u003cp\u003eThis is basically what everything comes down to; Deploying a site to Dokku and open it outside VM.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--BYK3vwgL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/20-accessing-outside-VM.jpg%3Ffit%3D1024%252C576%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--BYK3vwgL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/20-accessing-outside-VM.jpg%3Ffit%3D1024%252C576%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eNow you know how the result looks like, let’s start with creating a VM (virtual machine).\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"prerequisite\" href=\"#prerequisite\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚀 Prerequisite\n\u003c/h2\u003e\n\n\u003cp\u003eIf you already has a VM with a linux on it, you can skip this part.\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"%E2%97%BC-download-kubuntu\" href=\"#%E2%97%BC-download-kubuntu\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ◼ \u003cstrong\u003eDownload Kubuntu\u003c/strong\u003e\n\u003c/h4\u003e\n\n\u003cp\u003eGo to the \u003ca href=\"https://kubuntu.org/getkubuntu/\"\u003eKubuntu download page\u003c/a\u003e and download “64-bit” version of ” Kubuntu 18.04.3 LTS”.\u003c/p\u003e\n\n\u003cp\u003eEmphasis on “64-bit” because\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eDokku supports “A fresh installation of Ubuntu x64 – Any currently supported release, Debian 8.2 x64 or CentOS 7 x64 (experimental) with the FQDN set [1]” so you’d need 64-bit image.\u003c/p\u003e\n\n\u003cp\u003e\u003ccite\u003e\u003ca href=\"http://dokku.viewdocs.io/dokku/getting-started/installation/#what-is-dokku\"\u003ehttp://dokku.viewdocs.io/dokku/getting-started/installation/#what-is-dokku\u003c/a\u003e\u003c/cite\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"%E2%97%BC-create-a-vm\" href=\"#%E2%97%BC-create-a-vm\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ◼ \u003cstrong\u003eCreate a VM\u003c/strong\u003e\n\u003c/h4\u003e\n\n\u003cp\u003eYou can create a VM manually or using a Wizard (“Quick Create”) but as it’s a prerequisite, let’s create it using a Wizard. (At work, I will delegate this task to a ops manager as I am not so familiar with this frankly 😅).\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--CLjroLhJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/01-Hyper-V-create-options-1.jpg%3Fresize%3D1024%252C439\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--CLjroLhJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/01-Hyper-V-create-options-1.jpg%3Fresize%3D1024%252C439\" alt=\"01-Hyper-V-create-options-1\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThis pops up a modal and select the Kubuntu ISO downloaded from the previous step. (If you are familiar with regular Ubuntu, you don’t have to download Kubuntu at all…).\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e⚠\u003c/strong\u003e \u003cem\u003eMake sure to turn off “\u003cstrong\u003eThis Virtual Machine will run Windows (enables secure boot)\u003c/strong\u003e“.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eLastly “Create Virtual Machine” and you are done.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jlOcjPkE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/02-Hyper-V-setup.gif%3Fresize%3D1024%252C604\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jlOcjPkE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/02-Hyper-V-setup.gif%3Fresize%3D1024%252C604\" alt=\"02-Hyper-V-setup\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eBy default the VM name is”New Virtual Machine”. (I renamed it to “Kubuntu 18.04 LTS x64 for Dokku” by right clicking on it and choose “rename”).\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--M-ItyPIs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/03-Hyper-V-rename.jpg%3Fresize%3D1024%252C736\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--M-ItyPIs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/03-Hyper-V-rename.jpg%3Fresize%3D1024%252C736\" alt=\"rename VM\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eYou’d need to start the VM as it’s off by default as well.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--hpIL51bl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/04-Hyper-V-start.jpg%3Fw%3D1170\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--hpIL51bl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/04-Hyper-V-start.jpg%3Fw%3D1170\" alt=\"Connect and start VM\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003ch4\u003e\n  \u003ca name=\"%E2%97%BC-install-kubuntu\" href=\"#%E2%97%BC-install-kubuntu\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  ◼ Install Kubuntu\n\u003c/h4\u003e\n\n\u003cp\u003eOn connecting to VM, click on “start” to fire up a Kubuntu installation wizard (by default, the VM is in “Off” state as shown in the previous image).\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--bJV8rjKx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/05-Hyper-V-connect-and-start.gif%3Fresize%3D1024%252C539\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--bJV8rjKx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/05-Hyper-V-connect-and-start.gif%3Fresize%3D1024%252C539\" alt=\"Connect and start\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eClick on “Installation Kubuntu” to start the process.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--gkBOSx2R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/06-Install-Kubuntu.jpg%3Fresize%3D1024%252C854\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--gkBOSx2R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/06-Install-Kubuntu.jpg%3Fresize%3D1024%252C854\" alt=\"Install Kubuntu\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eSet up the language, keyboard, timezone, etc and the user account (clicking next, next, next…).\u003c/p\u003e\n\n\u003cp\u003e\u003ciframe width=\"710\" height=\"399\" src=\"https://www.youtube.com/embed/DDK6Xvu-ST0\" allowfullscreen\u003e\n\u003c/iframe\u003e\n\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eIt might take a while, so let’s go and grab a cup of coffee ☕ and come back…\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eAfter installation has finished, restart Kubuntu (not the VM).\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--baM_vKzW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/07-restart-Kubuntu.jpg%3Fw%3D1170\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--baM_vKzW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/07-restart-Kubuntu.jpg%3Fw%3D1170\" alt=\"Restart Kubuntu\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eLastly, log into Kubuntu and start a console.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ik5suvWF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/08-start-Konsole.jpg%3Fw%3D1170%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ik5suvWF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/08-start-Konsole.jpg%3Fw%3D1170%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eWe are all ready to set up Dokku, finally!\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"install-dokku\" href=\"#install-dokku\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚀 Install Dokku\n\u003c/h2\u003e\n\n\u003cp\u003eLet’s take a look at the \u003ca href=\"http://dokku.viewdocs.io/dokku/#install-apt\"\u003eDokku installation instructions\u003c/a\u003e for \u003ccode\u003eapt\u003c/code\u003e. (It’s a bit more involved than it looks).\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/949189aeda689828203ab9b256d3c829.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003cp\u003e\u003cem\u003eIt’s slightly different because the need to run some commands as a root using \u003ccode\u003esudo\u003c/code\u003e.\u003c/em\u003e\u003cbr\u003e\u003cbr\u003e\n \u003cem\u003eThe instruction is straight-forward (other than using sudo) I will leave out the output.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eAfter you are done with the last instruction, \u003ccode\u003esudo dokku plugin:install-dependencies --core\u003c/code\u003e, you will be greeted with a message whether to enable web-based configuration. Click “yes”.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--QTnqHYAC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/09-Enable-Web-Config.jpg%3Fw%3D1170\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--QTnqHYAC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/09-Enable-Web-Config.jpg%3Fw%3D1170\" alt=\"Enable web-based configuration\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe last part of the instruction, \u003ccode\u003e# go to your server's IP and follow the web installer\u003c/code\u003e shows to open a web page to continue the installation.\u003c/p\u003e\n\n\u003cp\u003eYou can get the current machine’s name with \u003ccode\u003ehostname\u003c/code\u003e and open the web page on FireFox (installed even with Minimal Installation).\u003c/p\u003e\n\n\u003cp\u003eFire up FireFox and go to \u003ccode\u003ehttp://\u0026lt;\u0026lt;your host name\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eIn my case, \u003ccode\u003ehostname\u003c/code\u003e was set up as \u003ccode\u003edokku\u003c/code\u003e, so \u003ccode\u003ehttp://dokku\u003c/code\u003e shows the following set up page.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aM3JucBu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/10-web-installation.jpg%3Fresize%3D1024%252C854\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aM3JucBu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/10-web-installation.jpg%3Fresize%3D1024%252C854\" alt=\"Dokku Web Installation\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eI am not well-versed with Linux administration so I went and generated one by following Digital Ocean’s article, “\u003ca href=\"https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-on-ubuntu-1804#step-1-%E2%80%94-create-the-rsa-key-pair\"\u003eHow to Set Up SSH Keys on Ubuntu 18.04 – Step 1 — Create the RSA Key Pair\u003c/a\u003e“.\u003c/p\u003e\n\n\u003cp\u003eOpen the public key (I used \u003ccode\u003eKate\u003c/code\u003e, which is like “notepad” on Windows) by typing \u003ccode\u003ekate ~/.ssh/id_rsa.pub\u003c/code\u003e (“.pub” for “public”) and copy the public key.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Piq--k62--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/11-Copy-SSH-Public-key.jpg%3Fresize%3D1024%252C473\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Piq--k62--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/11-Copy-SSH-Public-key.jpg%3Fresize%3D1024%252C473\" alt=\"Copy public SSH key from Kate\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003ePaste the public key on the web configuration.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--qGm4NFCu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/12-Paste-SSH-Public-Key.jpg%3Fresize%3D1024%252C552\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--qGm4NFCu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/12-Paste-SSH-Public-Key.jpg%3Fresize%3D1024%252C552\" alt=\"Paste SSH public key\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eSet the host name to the one returned by \u003ccode\u003ehostname\u003c/code\u003e command from Konsole.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003eMake sure to get the correct name with \u003ccode\u003ehostname\u003c/code\u003e or else , you’d have to manually change it later! (or access with an IP).\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003eI will leave the “Use virtualhost naming for apps” turned \u003cstrong\u003eoff\u003c/strong\u003e as turning it on would use port 80 and use app-name for the host name.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eCheck out the output when checked off. (leave this off though)\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--k6z6y71f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/14-Use-virtual-naming.jpg%3Fresize%3D1024%252C655\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--k6z6y71f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/14-Use-virtual-naming.jpg%3Fresize%3D1024%252C655\" alt=\"Use virtualhost name\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eWhen you click “Finish Setup”, you will be directed to “\u003ca href=\"http://dokku.viewdocs.io/dokku~v0.18.3/deployment/application-deployment/\"\u003eDeploying to Dokku\u003c/a\u003e” page.\u003c/p\u003e\n\u003ch2\u003e\n  \u003ca name=\"deploy-a-node-app\" href=\"#deploy-a-node-app\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚀 Deploy a Node app\n\u003c/h2\u003e\n\n\u003cp\u003e“Deploying to Dokku” shows how to deploy a Ruby on Rails app but as I am not familiar with it at all, I will deploy a Node app (an Express server). And this also enables me not having to install postgres and other dependent services, making it simpler to demonstrate the deploy process.\u003c/p\u003e\n\n\u003cp\u003eLet’s create \u003ccode\u003e~/src\u003c/code\u003e folder (not to pollute the home directly, \u003ccode\u003e~\u003c/code\u003e) and clone “\u003ca href=\"https://github.com/heroku/node-js-getting-started\"\u003enode-js-getting-started\u003c/a\u003e” repository (repo, hereafter) from GitHub.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003egit clone https://github.com/heroku/node-js-getting-started.git\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eYou might be wondering, “You are pasting code? You suck”. Yes I know. But explaining how to create a Dokku deployable source with \u003ca href=\"https://devcenter.heroku.com/articles/procfile\"\u003eProcfile\u003c/a\u003e would be better left in another post as this post is titled “Installing Dokku on Kubuntu”.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eFor now, you don’t have to install packages as publishing to Dokku will take care of it automatically.\u003c/p\u003e\n\n\u003cp\u003eYou need to create an application on where Dokku is hosted. (You can do so by SSH’ing to the host or just run it in Konsole within VM).\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003edokku apps:create node-js-getting-started\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eYou will be asked to enter the root password.\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eThen a message will be shown that an app has been created successfully.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--IKHJfaPc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/15-create-dokku-app.jpg%3Fresize%3D1024%252C129\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--IKHJfaPc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/15-create-dokku-app.jpg%3Fresize%3D1024%252C129\" alt=\"Dokku app created\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eDokku is compatible with Heroku and works similiarly. That means the deployment can be done via \u003ccode\u003egit\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eSo let’s add a remote git repo to deploy to.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/d79734e714a5dee8aef0684c506b8233.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003cp\u003e1️⃣ is the remote name\u003cbr\u003e\n2️⃣ is the remote username\u003cbr\u003e\n3️⃣ is the host name the Dokku instance is running on\u003cbr\u003e\n4️⃣ is the app that you created in the previous step\u003c/p\u003e\n\n\u003cp\u003eWhen you try to deploy the Node app to Dokku by pushing it to remote \u003ccode\u003edokku\u003c/code\u003e repo, you will get a “ssh: connect to host 192.168.22.242 port 22: Connection refused” error.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--HHgtd3zo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/17-Install-SSH-server-and-client.jpg%3Ffit%3D1024%252C244%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--HHgtd3zo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/17-Install-SSH-server-and-client.jpg%3Ffit%3D1024%252C244%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eWe need to install SSH server \u0026amp; client as well as opening the port 22 (using \u003ca href=\"https://help.ubuntu.com/community/UFW\"\u003eufw\u003c/a\u003e, “Uncomplicated Firewall”). Let’s push it again while at it.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/a90d9f00caa4179421ee3ce8e87c3990.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003cp\u003e\u003cem\u003eI am not familiar with this concept so had to google and found \u003ca href=\"https://community.atlassian.com/t5/Bitbucket-questions/How-to-rectify-SSH-error-Authenticity-of-host-can-t-be/qaq-p/212541\"\u003ethis reply\u003c/a\u003e(it’s for bitbucket but the concept applies).\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eIf you are attempting to push the second time, you will be prompted to enter the password you entered when generating the SSH key. The result of deploy looks like following.\u003c/p\u003e\n\n\n\u003cdiv class=\"ltag_gist-liquid-tag\"\u003e\n  \u003cscript id=\"gist-ltag\" src=\"https://gist.github.com/dance2die/41cda5218a98e00b2e11719f64e0a3d5.js\"\u003e\u003c/script\u003e\n\u003c/div\u003e\n\n\n\u003ch2\u003e\n  \u003ca name=\"check-the-deployed-app\" href=\"#check-the-deployed-app\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🚀 Check the deployed app\n\u003c/h2\u003e\n\n\u003cp\u003eAt the bottom of the deployment log, you will see the deployment URL.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--oJrw8RIe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/19-Deploy-url.jpg%3Fresize%3D1024%252C226\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--oJrw8RIe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/19-Deploy-url.jpg%3Fresize%3D1024%252C226\" alt=\"Deploy URL\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eI am not sure how to expose VM hostname outside, so browser inside VM uses \u003ccode\u003ehttp://dokku:PORT\u003c/code\u003e to access while outside VM, it is using the IP.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--a2H1XrJc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/20-accessing-outside-VM-1.jpg%3Ffit%3D1024%252C576%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--a2H1XrJc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/20-accessing-outside-VM-1.jpg%3Ffit%3D1024%252C576%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003ePlease let me know if you know of a way to access the VM hostname outside the VM… 🙏\u003c/em\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"parting-words\" href=\"#parting-words\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  👋 Parting Words\n\u003c/h2\u003e\n\n\u003cp\u003eAs mentioned in the opening, I wrote this as more of a self-note and is a learning process (for Dokku, VM, Linux, etc.).\u003c/p\u003e\n\n\u003cp\u003eThere should be many steps that I am doing, either unnecessary, or plain out wrong.\u003c/p\u003e\n\n\u003cp\u003ePlease let me know how I can improve the process or leave comment on what is just dead right wrong.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"%F0%9F%8F%94-resources\" href=\"#%F0%9F%8F%94-resources\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  🏔 Resources\n\u003c/h2\u003e\n\n\u003cp\u003eBelow are resources mentioned in this post.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://dev.to/mskog/heroku-vs-self-hosted-paas-2bk1\"\u003eHeroku vs self-hosted PaaS\u003c/a\u003e post by \u003ca href=\"https://dev.to/mskog\"\u003eMagnus Skog\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"http://dokku.viewdocs.io/dokku/\"\u003eDokku\u003c/a\u003e \u0026amp; \u003ca href=\"https://github.com/caprover/caprover\"\u003eCapRover\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://dokku.viewdocs.io/dokku/#install-apt\"\u003eDokku apt installation instruction\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://kubuntu.org/\"\u003eKubuntu\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://kde.org/plasma-desktop\"\u003eKDE Plasma\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-on-ubuntu-1804#step-1-%E2%80%94-create-the-rsa-key-pair\"\u003eHow to Set Up SSH Keys on Ubuntu 18.04 – Step 1 — Create the RSA Key Pair\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.linux-kvm.org/page/Main_Page\"\u003eKVM\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.virtualbox.org/wiki/Linux_Downloads\"\u003eVirtual Box\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2019/09/28/installing-dokku-on-kubuntu/\"\u003eInstalling Dokku on Kubuntu\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n",
    "social_image": null,
    "body_markdown": "---\n\ntitle: Installing Dokku on Kubuntu\npublished: true\ntags: dokku, ubuntu, kubuntu, node\ncanonical_url: https://www.slightedgecoder.com/2019/09/28/installing-dokku-on-kubuntu/\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/vhsbg3ic2yjxw1q5ix0a.jpg\n\n---\n\n_Image by_ [_StockSnap_](https://pixabay.com/users/StockSnap-894430/?utm_source=link-attribution\u0026utm_medium=referral\u0026utm_campaign=image\u0026utm_content=923554) _from_ [_Pixabay_](https://pixabay.com/?utm_source=link-attribution\u0026utm_medium=referral\u0026utm_campaign=image\u0026utm_content=923554)\n\nAs I was looking for ways to deploy a node \u0026 react site for intranet, I was looking for a self-hosted PaaS (Platform as a Service) I can deploy internally.\n\nAfter I was reading\n\n{% link https://dev.to/mskog/heroku-vs-self-hosted-paas-2bk1 %}\n\n, I decided to go with [Dokku](http://dokku.viewdocs.io/dokku/) (even though [CapRover](https://github.com/caprover/caprover) looked quite appealing as well) because I don’t need to scale up to multiple servers for intranet pages.\n\nI will show you how to install Dokku on [Kubuntu](https://kubuntu.org) (Ubuntu but with [KDE Plasma](https://kde.org/plasma-desktop) Desktop Environment instead of Gnome) running on Windows Hyper-V.\n\nMy linux skill is lacking so will be using KDE to configure some Dokku features. You don’t need Hyper-V to follow but can also use linux (even though Dokku recommends installing it on a VM) or use Linux VM such as [KVM](https://www.linux-kvm.org/page/Main_Page) or [Virtual Box](https://www.virtualbox.org/wiki/Linux_Downloads), etc.\n\nBe warned. I am just writing down these steps for me to come back so it might not be an optimal/recommended to follow these steps.\n\n_but please don’t hesitate to let me know how to improve the flow (especially without using KDE)._\n\n## Table of Contents\n\n- [What we are building](#what-we-are-building)\n- [Prerequisite](#prerequisite)\n  - [Download Kubuntu](#◼-download-kubuntu)\n  - [Create a VM](#◼-create-a-vm)\n  - [Install Kubuntu](#◼-install-kubuntu)\n- [Install Dokku](#install-dokku)\n- [Deploy a Node app](#deploy-a-node-app)\n- [Check the deployed app](#check-the-deployed-app)\n- [Parting Words](#parting-words)\n- [Resources](#🏔-resources)\n\n## 🚀 What we are building\n\nThis is basically what everything comes down to; Deploying a site to Dokku and open it outside VM.\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/20-accessing-outside-VM.jpg?fit=1024%2C576\u0026ssl=1)\n\nNow you know how the result looks like, let’s start with creating a VM (virtual machine).\n\n## 🚀 Prerequisite\n\nIf you already has a VM with a linux on it, you can skip this part.\n\n#### ◼ **Download Kubuntu**\n\nGo to the [Kubuntu download page](https://kubuntu.org/getkubuntu/) and download “64-bit” version of ” Kubuntu 18.04.3 LTS”.\n\nEmphasis on “64-bit” because\n\n\u003e Dokku supports “A fresh installation of Ubuntu x64 – Any currently supported release, Debian 8.2 x64 or CentOS 7 x64 (experimental) with the FQDN set [1]” so you’d need 64-bit image.\n\u003e\n\u003e \u003ccite\u003ehttp://dokku.viewdocs.io/dokku/getting-started/installation/#what-is-dokku\u003c/cite\u003e\n\n#### ◼ **Create a VM**\n\nYou can create a VM manually or using a Wizard (“Quick Create”) but as it’s a prerequisite, let’s create it using a Wizard. (At work, I will delegate this task to a ops manager as I am not so familiar with this frankly 😅).\n\n![01-Hyper-V-create-options-1](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/01-Hyper-V-create-options-1.jpg?resize=1024%2C439)\n\nThis pops up a modal and select the Kubuntu ISO downloaded from the previous step. (If you are familiar with regular Ubuntu, you don’t have to download Kubuntu at all…).\n\n**⚠** _Make sure to turn off “**This Virtual Machine will run Windows (enables secure boot)**“._\n\nLastly “Create Virtual Machine” and you are done.\n\n![02-Hyper-V-setup](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/02-Hyper-V-setup.gif?resize=1024%2C604)\n\nBy default the VM name is”New Virtual Machine”. (I renamed it to “Kubuntu 18.04 LTS x64 for Dokku” by right clicking on it and choose “rename”).\n\n![rename VM](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/03-Hyper-V-rename.jpg?resize=1024%2C736)\n\nYou’d need to start the VM as it’s off by default as well.\n\n![Connect and start VM](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/04-Hyper-V-start.jpg?w=1170)\n\n#### ◼ Install Kubuntu\n\nOn connecting to VM, click on “start” to fire up a Kubuntu installation wizard (by default, the VM is in “Off” state as shown in the previous image).\n\n![Connect and start](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/05-Hyper-V-connect-and-start.gif?resize=1024%2C539)\n\nClick on “Installation Kubuntu” to start the process.\n\n![Install Kubuntu](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/06-Install-Kubuntu.jpg?resize=1024%2C854)\n\nSet up the language, keyboard, timezone, etc and the user account (clicking next, next, next…).\n\n{% youtube DDK6Xvu-ST0 %}\n\n_It might take a while, so let’s go and grab a cup of coffee ☕ and come back…_\n\nAfter installation has finished, restart Kubuntu (not the VM).\n\n![Restart Kubuntu](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/07-restart-Kubuntu.jpg?w=1170)\n\nLastly, log into Kubuntu and start a console.\n\n![](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/08-start-Konsole.jpg?w=1170\u0026ssl=1)\n\nWe are all ready to set up Dokku, finally!\n\n## 🚀 Install Dokku\n\nLet’s take a look at the [Dokku installation instructions](http://dokku.viewdocs.io/dokku/#install-apt) for `apt`. (It’s a bit more involved than it looks).\n\n{% gist https://gist.github.com/dance2die/949189aeda689828203ab9b256d3c829 %}\n\n_It’s slightly different because the need to run some commands as a root using `sudo`._  \n _The instruction is straight-forward (other than using sudo) I will leave out the output._\n\nAfter you are done with the last instruction, `sudo dokku plugin:install-dependencies --core`, you will be greeted with a message whether to enable web-based configuration. Click “yes”.\n\n![Enable web-based configuration](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/09-Enable-Web-Config.jpg?w=1170)\n\nThe last part of the instruction, `# go to your server's IP and follow the web installer` shows to open a web page to continue the installation.\n\nYou can get the current machine’s name with `hostname` and open the web page on FireFox (installed even with Minimal Installation).\n\nFire up FireFox and go to `http://\u003c\u003cyour host name\u003e`.\n\nIn my case, `hostname` was set up as `dokku`, so `http://dokku` shows the following set up page.\n\n![Dokku Web Installation](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/10-web-installation.jpg?resize=1024%2C854)\n\nI am not well-versed with Linux administration so I went and generated one by following Digital Ocean’s article, “[How to Set Up SSH Keys on Ubuntu 18.04 – Step 1 — Create the RSA Key Pair](https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-on-ubuntu-1804#step-1-%E2%80%94-create-the-rsa-key-pair)“.\n\nOpen the public key (I used `Kate`, which is like “notepad” on Windows) by typing `kate ~/.ssh/id_rsa.pub` (“.pub” for “public”) and copy the public key.\n\n![Copy public SSH key from Kate](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/11-Copy-SSH-Public-key.jpg?resize=1024%2C473)\n\nPaste the public key on the web configuration.\n\n![Paste SSH public key](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/12-Paste-SSH-Public-Key.jpg?resize=1024%2C552)\n\nSet the host name to the one returned by `hostname` command from Konsole.\n\n**_Make sure to get the correct name with `hostname` or else , you’d have to manually change it later! (or access with an IP)._**\n\nI will leave the “Use virtualhost naming for apps” turned **off** as turning it on would use port 80 and use app-name for the host name.\n\n_Check out the output when checked off. (leave this off though)_\n\n![Use virtualhost name](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/14-Use-virtual-naming.jpg?resize=1024%2C655)\n\nWhen you click “Finish Setup”, you will be directed to “[Deploying to Dokku](http://dokku.viewdocs.io/dokku~v0.18.3/deployment/application-deployment/)” page.\n\n## 🚀 Deploy a Node app\n\n“Deploying to Dokku” shows how to deploy a Ruby on Rails app but as I am not familiar with it at all, I will deploy a Node app (an Express server). And this also enables me not having to install postgres and other dependent services, making it simpler to demonstrate the deploy process.\n\nLet’s create `~/src` folder (not to pollute the home directly, `~`) and clone “[node-js-getting-started](https://github.com/heroku/node-js-getting-started)” repository (repo, hereafter) from GitHub.\n\n`git clone https://github.com/heroku/node-js-getting-started.git`\n\n_You might be wondering, “You are pasting code? You suck”. Yes I know. But explaining how to create a Dokku deployable source with [Procfile](https://devcenter.heroku.com/articles/procfile) would be better left in another post as this post is titled “Installing Dokku on Kubuntu”._\n\nFor now, you don’t have to install packages as publishing to Dokku will take care of it automatically.\n\nYou need to create an application on where Dokku is hosted. (You can do so by SSH’ing to the host or just run it in Konsole within VM).\n\n`dokku apps:create node-js-getting-started`\n\n_You will be asked to enter the root password._\n\nThen a message will be shown that an app has been created successfully.\n\n![Dokku app created](https://i0.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/15-create-dokku-app.jpg?resize=1024%2C129)\n\nDokku is compatible with Heroku and works similiarly. That means the deployment can be done via `git`.\n\nSo let’s add a remote git repo to deploy to.\n\n{% gist https://gist.github.com/dance2die/d79734e714a5dee8aef0684c506b8233 %}\n\n1️⃣ is the remote name\n2️⃣ is the remote username\n3️⃣ is the host name the Dokku instance is running on\n4️⃣ is the app that you created in the previous step\n\nWhen you try to deploy the Node app to Dokku by pushing it to remote `dokku` repo, you will get a “ssh: connect to host 192.168.22.242 port 22: Connection refused” error.\n\n![](https://i1.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/17-Install-SSH-server-and-client.jpg?fit=1024%2C244\u0026ssl=1)\n\nWe need to install SSH server \u0026 client as well as opening the port 22 (using [ufw](https://help.ubuntu.com/community/UFW), “Uncomplicated Firewall”). Let’s push it again while at it.\n\n{% gist https://gist.github.com/dance2die/a90d9f00caa4179421ee3ce8e87c3990 %}\n\n_I am not familiar with this concept so had to google and found [this reply](https://community.atlassian.com/t5/Bitbucket-questions/How-to-rectify-SSH-error-Authenticity-of-host-can-t-be/qaq-p/212541)(it’s for bitbucket but the concept applies)._\n\nIf you are attempting to push the second time, you will be prompted to enter the password you entered when generating the SSH key. The result of deploy looks like following.\n\n{% gist https://gist.github.com/dance2die/41cda5218a98e00b2e11719f64e0a3d5 %}\n\n## 🚀 Check the deployed app\n\nAt the bottom of the deployment log, you will see the deployment URL.\n\n![Deploy URL](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/19-Deploy-url.jpg?resize=1024%2C226)\n\nI am not sure how to expose VM hostname outside, so browser inside VM uses `http://dokku:PORT` to access while outside VM, it is using the IP.\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/09/20-accessing-outside-VM-1.jpg?fit=1024%2C576\u0026ssl=1)\n\n_Please let me know if you know of a way to access the VM hostname outside the VM… 🙏_\n\n## 👋 Parting Words\n\nAs mentioned in the opening, I wrote this as more of a self-note and is a learning process (for Dokku, VM, Linux, etc.).\n\nThere should be many steps that I am doing, either unnecessary, or plain out wrong.\n\nPlease let me know how I can improve the process or leave comment on what is just dead right wrong.\n\n## 🏔 Resources\n\nBelow are resources mentioned in this post.\n\n- [Heroku vs self-hosted PaaS](https://dev.to/mskog/heroku-vs-self-hosted-paas-2bk1) post by [Magnus Skog](https://dev.to/mskog)\n- [Dokku](http://dokku.viewdocs.io/dokku/) \u0026 [CapRover](https://github.com/caprover/caprover)\n- [Dokku apt installation instruction](http://dokku.viewdocs.io/dokku/#install-apt)\n- [Kubuntu](https://kubuntu.org/)\n- [KDE Plasma](https://kde.org/plasma-desktop)\n- [How to Set Up SSH Keys on Ubuntu 18.04 – Step 1 — Create the RSA Key Pair](https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-on-ubuntu-1804#step-1-%E2%80%94-create-the-rsa-key-pair)\n- [KVM](https://www.linux-kvm.org/page/Main_Page)\n- [Virtual Box](https://www.virtualbox.org/wiki/Linux_Downloads)\n\nThe post [Installing Dokku on Kubuntu](https://www.slightedgecoder.com/2019/09/28/installing-dokku-on-kubuntu/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).\n",
    "canonical_url": "https://www.slightedgecoder.com/2019/09/28/installing-dokku-on-kubuntu/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2019/09/28/installing-dokku-on-kubuntu/",
    "positive_reactions_count": 16,
    "edited_at": "2019-09-30T02:14:17.668Z",
    "crossposted_at": "2019-09-29T15:39:52.005Z",
    "language": "en",
    "cached_tag_list": "dokku, ubuntu, kubuntu, node",
    "path": "/dance2die/installing-dokku-on-kubuntu-ng0",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-09-29T02:55:42.000Z"
  },
  {
    "title": "Preventing multiple observables from firing from Redux-Observable",
    "slug": "preventing-multiple-observables-from-firing-from-redux-observable-1fl6-temp-slug-3763423",
    "created_at": "2019-10-19T00:42:58.082Z",
    "main_image": null,
    "description": "Image by Brett Hondow from Pixabay\n\nI’ve recently finished a basic course on RxJS...",
    "published": false,
    "published_at": null,
    "processed_html": "\u003cp\u003e\u003cem\u003eImage by\u003c/em\u003e \u003ca href=\"https://pixabay.com/users/Brett_Hondow-49958/?utm_source=link-attribution\u0026amp;utm_medium=referral\u0026amp;utm_campaign=image\u0026amp;utm_content=1205609\"\u003e\u003cem\u003eBrett Hondow\u003c/em\u003e\u003c/a\u003e \u003cem\u003efrom\u003c/em\u003e \u003ca href=\"https://pixabay.com/?utm_source=link-attribution\u0026amp;utm_medium=referral\u0026amp;utm_campaign=image\u0026amp;utm_content=1205609\"\u003e\u003cem\u003ePixabay\u003c/em\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eI’ve recently finished a basic course on RxJS. The main reason was to use \u003ca href=\"https://redux-observable.js.org/\"\u003eRedux-Observable\u003c/a\u003e after watching this video, “\u003ca href=\"https://www.youtube.com/watch?v=AslncyG8whg\"\u003eNetflix JavaScript Talks – RxJS + Redux + React = Amazing!\u003c/a\u003e” referred to by \u003ca href=\"https://twitter.com/nicolasmarcora\"\u003eNicolas Marcora\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://redux-observable.js.org/docs/basics/Epics.html#a-basic-example\"\u003eA basic example\u003c/a\u003e shows how to do “ping/pong”, which was simple to implement.\u003cbr\u003e\u003cbr\u003e\nBut the problem is that, when you ping more than once, multiple observables are created.\u003c/p\u003e\n\n\u003cp\u003eAfter hours of struggle, I asked on the official Gitter page for Redux-Observable.\u003c/p\u003e\n\n\u003cp\u003eI will share what’s done in public (\u003ca href=\"https://www.swyx.io/writing/learn-in-public/\"\u003eLearn in Public\u003c/a\u003e) as the Gitter conversation is private.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"error-demo\" href=\"#error-demo\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Error Demo\n\u003c/h2\u003e\n\n\u003cp\u003eBelow shows multiple “ping/pong” actions being dispatched as you click on “PING” button.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--S8F9oqff--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/10/01-multiple-observables-dispatched.gif%3Ffit%3D1024%252C999%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003e\u003cimg src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--S8F9oqff--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/10/01-multiple-observables-dispatched.gif%3Ffit%3D1024%252C999%26ssl%3D1\" alt=\"\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eThe code that generated the mess above is shown below.\u003c/p\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/dc5105212fb76aa64fb0c41cc3389eec\"\u003eView this gist on GitHub\u003c/a\u003e\n\n\u003cp\u003eFor being a new RxJS (, which is a prerequisite for \u003ccode\u003eredux-observable\u003c/code\u003e) user, I couldn’t figure it after hours of reading documentation and playing around.\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://kevinghadyani.info/\"\u003eKevin Ghadyani\u003c/a\u003e generously spent time to review the code and provide a solution for the issue.\u003c/p\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/236f83b3e9777089f51fdb88bee0a1a9\"\u003eView this gist on GitHub\u003c/a\u003e\n\n\u003cp\u003e1️⃣ uses \u003ca href=\"https://rxjs.dev/api/operators/switchMap\"\u003eswitchMap\u003c/a\u003e, which implicitly cancels previous observable. So when \u003ccode\u003ePING\u003c/code\u003e button is clicked while the \u003ccode\u003ePING\u003c/code\u003e action is already dispatched, previous timer observable is canceled and a new one is started.\u003c/p\u003e\n\n\u003cp\u003eKevin’s forked Sandbox shows the fix.\u003c/p\u003e\n\n\n\n\u003cp\u003eKevin also shows how to accomplish the same task using \u003ca href=\"https://rxjs.dev/api/operators/takeUntil\"\u003etakeUntil\u003c/a\u003e.\u003c/p\u003e\n\n\n\u003ca href=\"https://gist.github.com/dance2die/3eecf3ac350c6470ab64078bb6b1e783\"\u003eView this gist on GitHub\u003c/a\u003e\n\n\u003cp\u003eThe post \u003ca href=\"https://www.slightedgecoder.com/2019/10/18/preventing-multiple-observables-from-firing-from-redux-observable/\"\u003ePreventing multiple observables from firing from Redux-Observable\u003c/a\u003e appeared first on \u003ca href=\"https://www.slightedgecoder.com\"\u003eSung's Technical Blog\u003c/a\u003e.\u003c/p\u003e\n\n",
    "social_image": null,
    "body_markdown": "---\ntitle: Preventing multiple observables from firing from Redux-Observable\npublished: false\ndate: 2019-10-19 00:36:32 UTC\ntags: Blog Entry,JavaScript,Self Note,TIL\ncanonical_url: https://www.slightedgecoder.com/2019/10/18/preventing-multiple-observables-from-firing-from-redux-observable/\n---\n\n_Image by_ [_Brett Hondow_](https://pixabay.com/users/Brett_Hondow-49958/?utm_source=link-attribution\u0026utm_medium=referral\u0026utm_campaign=image\u0026utm_content=1205609) _from_ [_Pixabay_](https://pixabay.com/?utm_source=link-attribution\u0026utm_medium=referral\u0026utm_campaign=image\u0026utm_content=1205609)\n\nI’ve recently finished a basic course on RxJS. The main reason was to use [Redux-Observable](https://redux-observable.js.org/) after watching this video, “[Netflix JavaScript Talks – RxJS + Redux + React = Amazing!](https://www.youtube.com/watch?v=AslncyG8whg)” referred to by [Nicolas Marcora](https://twitter.com/nicolasmarcora).\n\n[A basic example](https://redux-observable.js.org/docs/basics/Epics.html#a-basic-example) shows how to do “ping/pong”, which was simple to implement.  \nBut the problem is that, when you ping more than once, multiple observables are created.\n\nAfter hours of struggle, I asked on the official Gitter page for Redux-Observable.\n\nI will share what’s done in public ([Learn in Public](https://www.swyx.io/writing/learn-in-public/)) as the Gitter conversation is private.\n\n \n## Error Demo\n\nBelow shows multiple “ping/pong” actions being dispatched as you click on “PING” button.\n\n![](https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/10/01-multiple-observables-dispatched.gif?fit=1024%2C999\u0026ssl=1)\n\nThe code that generated the mess above is shown below.\n\n\u003cscript src=\"https://gist.github.com/dance2die/dc5105212fb76aa64fb0c41cc3389eec.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/dc5105212fb76aa64fb0c41cc3389eec\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\n\nFor being a new RxJS (, which is a prerequisite for `redux-observable`) user, I couldn’t figure it after hours of reading documentation and playing around.\n\n[Kevin Ghadyani](http://kevinghadyani.info/) generously spent time to review the code and provide a solution for the issue.\n\n\u003cscript src=\"https://gist.github.com/dance2die/236f83b3e9777089f51fdb88bee0a1a9.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/236f83b3e9777089f51fdb88bee0a1a9\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\n\n1️⃣ uses [switchMap](https://rxjs.dev/api/operators/switchMap), which implicitly cancels previous observable. So when `PING` button is clicked while the `PING` action is already dispatched, previous timer observable is canceled and a new one is started.\n\nKevin’s forked Sandbox shows the fix.\n\n \u003ciframe title=\"basic example\" sandbox=\"allow-scripts\" security=\"restricted\" width=\"1170\" height=\"1000\" src=\"https://codesandbox.io/embed/basic-example-kgq57#?secret=yrhQjBG0ht\" data-secret=\"yrhQjBG0ht\"\u003e\u003c/iframe\u003e\n\nKevin also shows how to accomplish the same task using [takeUntil](https://rxjs.dev/api/operators/takeUntil).\n\n\u003cscript src=\"https://gist.github.com/dance2die/3eecf3ac350c6470ab64078bb6b1e783.js\"\u003e\u003c/script\u003e\u003cnoscript\u003e\u003ca href=\"https://gist.github.com/dance2die/3eecf3ac350c6470ab64078bb6b1e783\"\u003eView this gist on GitHub\u003c/a\u003e\u003c/noscript\u003e\n\nThe post [Preventing multiple observables from firing from Redux-Observable](https://www.slightedgecoder.com/2019/10/18/preventing-multiple-observables-from-firing-from-redux-observable/) appeared first on [Sung's Technical Blog](https://www.slightedgecoder.com).",
    "canonical_url": "https://www.slightedgecoder.com/2019/10/18/preventing-multiple-observables-from-firing-from-redux-observable/",
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": true,
    "comments_count": 0,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": "https://www.slightedgecoder.com/2019/10/18/preventing-multiple-observables-from-firing-from-redux-observable/",
    "positive_reactions_count": 0,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "blogentry, javascript, selfnote, todayilearned",
    "path": "/dance2die/preventing-multiple-observables-from-firing-from-redux-observable-1fl6-temp-slug-3763423",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2017-01-01T05:00:00.000Z"
  },
  {
    "title": "React Conf 2019 Live stream",
    "slug": "react-conf-2019-live-stream-15p9",
    "created_at": "2019-10-24T16:50:40.362Z",
    "main_image": null,
    "description": "Links to React Conf 2019 live stream",
    "published": true,
    "published_at": "2019-10-24T16:53:10.161Z",
    "processed_html": "\u003cp\u003e\u003ca href=\"https://conf.reactjs.org/index.html\"\u003eReact Conf\u003c/a\u003e is an official React conference held annually.\u003c/p\u003e\n\n\u003cp\u003eIf you couldn't make it to \"React Conf 2019\", check out the live stream video on their home page, or on YouTube directly.\u003c/p\u003e\n\n\u003cp\u003eReact Conf will be held today (2019-10-24) until tomorrow (2019-10-25).\u003c/p\u003e\n\n\u003cp\u003eIt's live now~\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eHome: \u003ca href=\"https://conf.reactjs.org/index.html\"\u003ehttps://conf.reactjs.org/index.html\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"day-1\" href=\"#day-1\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Day 1\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://youtu.be/RCiccdQObpo\"\u003ehttps://youtu.be/RCiccdQObpo\u003c/a\u003e\u003cbr\u003e\n\u003ciframe width=\"710\" height=\"399\" src=\"https://www.youtube.com/embed/RCiccdQObpo\" allowfullscreen\u003e\n\u003c/iframe\u003e\n\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"day-2\" href=\"#day-2\" class=\"anchor\"\u003e\n  \u003c/a\u003e\n  Day 2\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://youtu.be/JDDxR1a15Yo\"\u003ehttps://youtu.be/JDDxR1a15Yo\u003c/a\u003e\u003cbr\u003e\n\u003ciframe width=\"710\" height=\"399\" src=\"https://www.youtube.com/embed/JDDxR1a15Yo\" allowfullscreen\u003e\n\u003c/iframe\u003e\n\u003c/p\u003e\n\n",
    "social_image": null,
    "body_markdown": "---\ntitle: React Conf 2019 Live stream\npublished: true\ndescription: Links to React Conf 2019 live stream\ntags: react, announcement\n---\n\n[React Conf](https://conf.reactjs.org/index.html) is an official React conference held annually.\n\nIf you couldn't make it to \"React Conf 2019\", check out the live stream video on their home page, or on YouTube directly.\n\nReact Conf will be held today (2019-10-24) until tomorrow (2019-10-25).\n\nIt's live now~\n\n- Home: https://conf.reactjs.org/index.html\n\n## Day 1\n\nhttps://youtu.be/RCiccdQObpo\n{% youtube RCiccdQObpo %}\n\n## Day 2\n\nhttps://youtu.be/JDDxR1a15Yo\n{% youtube JDDxR1a15Yo %}\n\n",
    "canonical_url": null,
    "show_comments": true,
    "main_image_background_hex_color": "#dddddd",
    "published_from_feed": false,
    "comments_count": 4,
    "video": null,
    "video_code": null,
    "video_source_url": null,
    "video_thumbnail_url": null,
    "video_closed_caption_track_url": null,
    "feed_source_url": null,
    "positive_reactions_count": 40,
    "edited_at": null,
    "crossposted_at": null,
    "language": "en",
    "cached_tag_list": "react, announcement",
    "path": "/dance2die/react-conf-2019-live-stream-15p9",
    "cached_user_name": "Sung M. Kim",
    "cached_user_username": "dance2die",
    "last_comment_at": "2019-10-25T15:05:25.696Z"
  }
]
